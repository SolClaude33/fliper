{"version":3,"file":"static/js/main.c90215b5.js","mappings":"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ACRP,KAAM,yBACNE,KAAM,SAER,CACEK,OAAQ,GACRP,KAAM,wBACNE,KAAM,SAER,CACE69G,WAAW,EACXx9G,OAAQ,CACN,CACEsG,SAAS,EACTk5C,aAAc,UACd//C,KAAM,OACNE,KAAM,YAGVF,KAAM,UACNE,KAAM,SAER,CACE69G,WAAW,EACXx9G,OAAQ,CACN,CACEsG,SAAS,EACTk5C,aAAc,UACd//C,KAAM,SACNE,KAAM,YAGVF,KAAM,YACNE,KAAM,SAER,CACE69G,WAAW,EACXx9G,OAAQ,CACN,CACEsG,SAAS,EACTk5C,aAAc,UACd//C,KAAM,YACNE,KAAM,YAGVF,KAAM,qBACNE,KAAM,SAER,CACE69G,WAAW,EACXx9G,OAAQ,GACRP,KAAM,sBACNE,KAAM,SAER,CACE69G,WAAW,EACXx9G,OAAQ,GACRP,KAAM,UACNE,KAAM,SAER,CACE69G,WAAW,EACXx9G,OAAQ,CACN,CACEsG,SAAS,EACTk5C,aAAc,SACd//C,KAAM,UACNE,KAAM,WAGVF,KAAM,cACNE,KAAM,SAER,CACE69G,WAAW,EACXx9G,OAAQ,CACN,CACEsG,SAAS,EACTk5C,aAAc,UACd//C,KAAM,OACNE,KAAM,YAGVF,KAAM,aACNE,KAAM,SAER,CACE69G,WAAW,EACXx9G,OAAQ,CACN,CACEsG,SAAS,EACTk5C,aAAc,UACd//C,KAAM,YACNE,KAAM,YAGVF,KAAM,iBACNE,KAAM,SAER,CACE69G,WAAW,EACXx9G,OAAQ,CACN,CACEsG,SAAS,EACTk5C,aAAc,UACd//C,KAAM,OACNE,KAAM,YAGVF,KAAM,gBACNE,KAAM,SAER,CACE69G,WAAW,EACXx9G,OAAQ,CACN,CACEsG,SAAS,EACTk5C,aAAc,UACd//C,KAAM,YACNE,KAAM,YAGVF,KAAM,oBACNE,KAAM,SAER,CACE69G,WAAW,EACXx9G,OAAQ,CACN,CACEsG,SAAS,EACTk5C,aAAc,QACd//C,KAAM,SACNE,KAAM,UAGVF,KAAM,aACNE,KAAM,SAER,CACE69G,WAAW,EACXx9G,OAAQ,CACN,CACEsG,SAAS,EACTk5C,aAAc,UACd//C,KAAM,YACNE,KAAM,YAGVF,KAAM,iBACNE,KAAM,SAER,CACE69G,WAAW,EACXx9G,OAAQ,CACN,CACEsG,SAAS,EACTk5C,aAAc,QACd//C,KAAM,SACNE,KAAM,UAGVF,KAAM,gBACNE,KAAM,SAER,CACE69G,WAAW,EACXx9G,OAAQ,CACN,CACEsG,SAAS,EACTk5C,aAAc,UACd//C,KAAM,YACNE,KAAM,YAGVF,KAAM,oBACNE,KAAM,SAER,CACE69G,WAAW,EACXx9G,OAAQ,CACN,CACEsG,SAAS,EACTk5C,aAAc,UACd//C,KAAM,OACNE,KAAM,YAGVF,KAAM,aACNE,KAAM,SAER,CACE69G,WAAW,EACXx9G,OAAQ,CACN,CACEsG,SAAS,EACTk5C,aAAc,UACd//C,KAAM,SACNE,KAAM,YAGVF,KAAM,eACNE,KAAM,SAER,CACE69G,WAAW,EACXx9G,OAAQ,CACN,CACEsG,SAAS,EACTk5C,aAAc,UACd//C,KAAM,YACNE,KAAM,YAGVF,KAAM,wBACNE,KAAM,SAER,CACE69G,WAAW,EACXx9G,OAAQ,GACRP,KAAM,cACNE,KAAM,SAER,CACE69G,WAAW,EACXx9G,OAAQ,CACN,CACEsG,SAAS,EACTk5C,aAAc,UACd//C,KAAM,oBACNE,KAAM,WAER,CACE2G,SAAS,EACTk5C,aAAc,UACd//C,KAAM,oBACNE,KAAM,YAGVF,KAAM,WACNE,KAAM,SAER,CACEmZ,gBAAiB,UACjBnZ,KAAM,YAER,CACEK,OAAQ,GACRP,KAAM,UACNkC,QAAS,CACP,CACE69C,aAAc,UACd//C,KAAM,GACNE,KAAM,YAGVmZ,gBAAiB,OACjBnZ,KAAM,YAER,CACEK,OAAQ,CACN,CACEw/C,aAAc,QACd//C,KAAM,cACNE,KAAM,SAER,CACE6/C,aAAc,OACd//C,KAAM,eACNE,KAAM,SAGVF,KAAM,UACNkC,QAAS,GACTmX,gBAAiB,aACjBnZ,KAAM,YAER,CACEK,OAAQ,CACN,CACEw/C,aAAc,QACd//C,KAAM,gBACNE,KAAM,UAGVF,KAAM,YACNkC,QAAS,GACTmX,gBAAiB,aACjBnZ,KAAM,YAER,CACEK,OAAQ,CACN,CACEw/C,aAAc,UACd//C,KAAM,YACNE,KAAM,WAER,CACE6/C,aAAc,QACd//C,KAAM,8BACNE,KAAM,UAGVF,KAAM,qBACNkC,QAAS,GACTmX,gBAAiB,aACjBnZ,KAAM,YAER,CACEK,OAAQ,CACN,CACEoG,WAAY,CACV,CACEo5C,aAAc,UACd//C,KAAM,SACNE,KAAM,WAER,CACE6/C,aAAc,OACd//C,KAAM,eACNE,KAAM,QAER,CACE6/C,aAAc,UACd//C,KAAM,QACNE,KAAM,WAER,CACE6/C,aAAc,QACd//C,KAAM,WACNE,KAAM,UAGV6/C,aAAc,gBACd//C,KAAM,SACNE,KAAM,YAGVF,KAAM,YACNkC,QAAS,GACTmX,gBAAiB,UACjBnZ,KAAM,YAER,CACEK,OAAQ,GACRP,KAAM,qBACNkC,QAAS,CACP,CACE69C,aAAc,UACd//C,KAAM,GACNE,KAAM,YAGVmZ,gBAAiB,OACjBnZ,KAAM,YAER,CACEK,OAAQ,CACN,CACEoG,WAAY,CACV,CACEo5C,aAAc,UACd//C,KAAM,SACNE,KAAM,WAER,CACE6/C,aAAc,OACd//C,KAAM,eACNE,KAAM,QAER,CACE6/C,aAAc,UACd//C,KAAM,QACNE,KAAM,WAER,CACE6/C,aAAc,QACd//C,KAAM,WACNE,KAAM,UAGV6/C,aAAc,gBACd//C,KAAM,SACNE,KAAM,YAGVF,KAAM,YACNkC,QAAS,GACTmX,gBAAiB,UACjBnZ,KAAM,YAER,CACEK,OAAQ,GACRP,KAAM,eACNkC,QAAS,CACP,CACE69C,aAAc,SACd//C,KAAM,SACNE,KAAM,UAER,CACE6/C,aAAc,SACd//C,KAAM,OACNE,KAAM,UAER,CACE6/C,aAAc,SACd//C,KAAM,UACNE,KAAM,UAER,CACE6/C,aAAc,UACd//C,KAAM,UACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,oBACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,OACNE,KAAM,WAER,CACE6/C,aAAc,YACd//C,KAAM,aACNE,KAAM,cAGVmZ,gBAAiB,OACjBnZ,KAAM,YAER,CACEK,OAAQ,CACN,CACEw/C,aAAc,UACd//C,KAAM,KACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,QACNE,KAAM,WAER,CACE6/C,aAAc,QACd//C,KAAM,OACNE,KAAM,UAGVF,KAAM,oBACNkC,QAAS,GACTmX,gBAAiB,aACjBnZ,KAAM,YAER,CACEK,OAAQ,CACN,CACEw/C,aAAc,UACd//C,KAAM,GACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,GACNE,KAAM,WAER,CACEyG,WAAY,CACV,CACEo5C,aAAc,UACd//C,KAAM,SACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,OACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,KACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,WACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,yBACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,eACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,uBACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,YACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,QACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,QACNE,KAAM,WAER,CACE6/C,aAAc,aACd//C,KAAM,WACNE,KAAM,cAER,CACE6/C,aAAc,QACd//C,KAAM,OACNE,KAAM,SAER,CACE6/C,aAAc,QACd//C,KAAM,YACNE,KAAM,SAER,CACE6/C,aAAc,YACd//C,KAAM,cACNE,KAAM,aAER,CACE6/C,aAAc,QACd//C,KAAM,iBACNE,KAAM,SAER,CACE6/C,aAAc,QACd//C,KAAM,kBACNE,KAAM,UAGV6/C,aAAc,qBACd//C,KAAM,cACNE,KAAM,UAGVF,KAAM,qBACNkC,QAAS,GACTmX,gBAAiB,UACjBnZ,KAAM,YAER,CACEK,OAAQ,CACN,CACEoG,WAAY,CACV,CACEo5C,aAAc,UACd//C,KAAM,SACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,OACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,KACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,WACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,yBACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,eACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,uBACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,YACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,QACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,QACNE,KAAM,WAER,CACE6/C,aAAc,aACd//C,KAAM,WACNE,KAAM,cAER,CACE6/C,aAAc,QACd//C,KAAM,OACNE,KAAM,SAER,CACE6/C,aAAc,QACd//C,KAAM,YACNE,KAAM,SAER,CACE6/C,aAAc,YACd//C,KAAM,cACNE,KAAM,aAER,CACE6/C,aAAc,QACd//C,KAAM,iBACNE,KAAM,SAER,CACE6/C,aAAc,QACd//C,KAAM,kBACNE,KAAM,UAGV6/C,aAAc,qBACd//C,KAAM,cACNE,KAAM,UAGVF,KAAM,gCACNkC,QAAS,GACTmX,gBAAiB,UACjBnZ,KAAM,YAER,CACEK,OAAQ,CACN,CACEoG,WAAY,CACV,CACEo5C,aAAc,UACd//C,KAAM,aACNE,KAAM,YAGV6/C,aAAc,mCACd//C,KAAM,aACNE,KAAM,UAGVF,KAAM,gBACNkC,QAAS,CACP,CACE69C,aAAc,UACd//C,KAAM,GACNE,KAAM,YAGVmZ,gBAAiB,OACjBnZ,KAAM,YAER,CACEK,OAAQ,CACN,CACEw/C,aAAc,UACd//C,KAAM,OACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,MACNE,KAAM,YAGVF,KAAM,cACNkC,QAAS,CACP,CACE69C,aAAc,QACd//C,KAAM,GACNE,KAAM,UAGVmZ,gBAAiB,OACjBnZ,KAAM,YAER,CACEK,OAAQ,GACRP,KAAM,wBACNkC,QAAS,CACP,CACE69C,aAAc,UACd//C,KAAM,GACNE,KAAM,YAGVmZ,gBAAiB,OACjBnZ,KAAM,YAER,CACEK,OAAQ,CACN,CAC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,KAAM,GACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,GACNE,KAAM,WAER,CACE6/C,aAAc,YACd//C,KAAM,GACNE,KAAM,aAER,CACE6/C,aAAc,YACd//C,KAAM,GACNE,KAAM,aAER,CACE6/C,aAAc,QACd//C,KAAM,GACNE,KAAM,UAGVF,KAAM,yBACNkC,QAAS,CACP,CACE69C,aAAc,SACd//C,KAAM,GACNE,KAAM,WAGVmZ,gBAAiB,OACjBnZ,KAAM,YAER,CACEK,OAAQ,CACN,CACEw/C,aAAc,UACd//C,KAAM,GACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,GACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,GACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,GACNE,KAAM,WAER,CACE6/C,aAAc,QACd//C,KAAM,GACNE,KAAM,UAGVF,KAAM,oBACNkC,QAAS,CACP,CACE69C,aAAc,SACd//C,KAAM,GACNE,KAAM,WAGVmZ,gBAAiB,OACjBnZ,KAAM,YAER,CACEK,OAAQ,CACN,CACEw/C,aAAc,UACd//C,KAAM,GACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,GACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,GACNE,KAAM,WAER,CACE6/C,aAAc,QACd//C,KAAM,GACNE,KAAM,UAGVF,KAAM,mBACNkC,QAAS,CACP,CACE69C,aAAc,SACd//C,KAAM,GACNE,KAAM,WAGVmZ,gBAAiB,OACjBnZ,KAAM,YAER,CACEK,OAAQ,CACN,CACEw/C,aAAc,UACd//C,KAAM,GACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,GACNE,KAAM,WAER,CACEyG,WAAY,CACV,CACEo5C,aAAc,UACd//C,KAAM,SACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,OACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,KACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,WACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,yBACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,eACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,uBACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,YACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,QACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,QACNE,KAAM,WAER,CACE6/C,aAAc,aACd//C,KAAM,WACNE,KAAM,cAER,CACE6/C,aAAc,QACd//C,KAAM,OACNE,KAAM,SAER,CACE6/C,aAAc,QACd//C,KAAM,YACNE,KAAM,SAER,CACE6/C,aAAc,YACd//C,KAAM,cACNE,KAAM,aAER,CACE6/C,aAAc,QACd//C,KAAM,iBACNE,KAAM,SAER,CACE6/C,aAAc,QACd//C,KAAM,kBACNE,KAAM,UAGV6/C,aAAc,qBACd//C,KAAM,cACNE,KAAM,UAGVF,KAAM,oBACNkC,QAAS,GACTmX,gBAAiB,UACjBnZ,KAAM,YAER,CACEK,OAAQ,CACN,CACEw/C,aAAc,UACd//C,KAAM,GACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,GACNE,KAAM,WAER,CACEyG,WAAY,CACV,CACEo5C,aAAc,UACd//C,KAAM,SACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,OACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,KACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,WACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,yBACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,eACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,uBACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,YACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,QACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,QACNE,KAAM,WAER,CACE6/C,aAAc,aACd//C,KAAM,WACNE,KAAM,cAER,CACE6/C,aAAc,QACd//C,KAAM,OACNE,KAAM,SAER,CACE6/C,aAAc,QAC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,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,eACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,uBACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,YACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,QACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,QACNE,KAAM,WAER,CACE6/C,aAAc,aACd//C,KAAM,WACNE,KAAM,cAER,CACE6/C,aAAc,QACd//C,KAAM,OACNE,KAAM,SAER,CACE6/C,aAAc,QACd//C,KAAM,YACNE,KAAM,SAER,CACE6/C,aAAc,YACd//C,KAAM,cACNE,KAAM,aAER,CACE6/C,aAAc,QACd//C,KAAM,iBACNE,KAAM,SAER,CACE6/C,aAAc,QACd//C,KAAM,kBACNE,KAAM,UAGV6/C,aAAc,qBACd//C,KAAM,cACNE,KAAM,UAGVF,KAAM,sBACNkC,QAAS,CACP,CACE69C,aAAc,SACd//C,KAAM,QACNE,KAAM,WAGVmZ,gBAAiB,UACjBnZ,KAAM,YAER,CACEmZ,gBAAiB,UACjBnZ,KAAM,YC7yDGs/G,GAAyB,CACpC,CACEzB,WAAW,EACXx9G,OAAQ,CACN,CACEsG,SAAS,EACTk5C,aAAc,UACd//C,KAAM,UACNE,KAAM,YAGVF,KAAM,WACNE,KAAM,SAER,CACE69G,WAAW,EACXx9G,OAAQ,CACN,CACEsG,SAAS,EACTk5C,aAAc,UACd//C,KAAM,UACNE,KAAM,YAGVF,KAAM,SACNE,KAAM,SAER,CACE69G,WAAW,EACXx9G,OAAQ,CACN,CACEsG,SAAS,EACTk5C,aAAc,UACd//C,KAAM,UACNE,KAAM,WAER,CACE2G,SAAS,EACTk5C,aAAc,UACd//C,KAAM,cACNE,KAAM,WAER,CACEyG,WAAY,CACV,CACEo5C,aAAc,UACd//C,KAAM,SACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,YACNE,KAAM,WAER,CACEyG,WAAY,CACV,CACEo5C,aAAc,4BACd//C,KAAM,YACNE,KAAM,SAER,CACE6/C,aAAc,UACd//C,KAAM,QACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,SACNE,KAAM,YAGV6/C,aAAc,+BACd//C,KAAM,WACNE,KAAM,SAER,CACEyG,WAAY,CACV,CACEo5C,aAAc,UACd//C,KAAM,SACNE,KAAM,WAER,CACE6/C,aAAc,SACd//C,KAAM,WACNE,KAAM,UAER,CACE6/C,aAAc,UACd//C,KAAM,iBACNE,KAAM,WAER,CACEyG,WAAY,CACV,CACEo5C,aAAc,4BACd//C,KAAM,YACNE,KAAM,SAER,CACE6/C,aAAc,UACd//C,KAAM,QACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,SACNE,KAAM,YAGV6/C,aAAc,+BACd//C,KAAM,aACNE,KAAM,SAER,CACEyG,WAAY,CACV,CACEo5C,aAAc,4BACd//C,KAAM,YACNE,KAAM,SAER,CACE6/C,aAAc,SACd//C,KAAM,QACNE,KAAM,UAER,CACE6/C,aAAc,UACd//C,KAAM,WACNE,KAAM,WAER,CACEyG,WAAY,CACV,CACEo5C,aAAc,4BACd//C,KAAM,YACNE,KAAM,SAER,CACE6/C,aAAc,UACd//C,KAAM,QACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,SACNE,KAAM,YAGV6/C,aAAc,+BACd//C,KAAM,QACNE,KAAM,UAGV6/C,aAAc,iCACd//C,KAAM,cACNE,KAAM,YAGV6/C,aAAc,+BACd//C,KAAM,eACNE,KAAM,WAER,CACEyG,WAAY,CACV,CACEo5C,aAAc,UACd//C,KAAM,SACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,iBACNE,KAAM,WAER,CACEyG,WAAY,CACV,CACEo5C,aAAc,4BACd//C,KAAM,YACNE,KAAM,SAER,CACE6/C,aAAc,UACd//C,KAAM,QACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,SACNE,KAAM,YAGV6/C,aAAc,+BACd//C,KAAM,aACNE,KAAM,UAGV6/C,aAAc,mCACd//C,KAAM,mBACNE,KAAM,YAGV2G,SAAS,EACTk5C,aAAc,gCACd//C,KAAM,cACNE,KAAM,UAGVF,KAAM,iBACNE,KAAM,SAER,CACE69G,WAAW,EACXx9G,OAAQ,CACN,CACEsG,SAAS,EACTk5C,aAAc,UACd//C,KAAM,UACNE,KAAM,WAER,CACE2G,SAAS,EACTk5C,aAAc,UACd//C,KAAM,cACNE,KAAM,YAGVF,KAAM,iBACNE,KAAM,SAER,CACEK,OAAQ,CACN,CACEw/C,aAAc,QACd//C,KAAM,cACNE,KAAM,UAGVF,KAAM,mBACNkC,QAAS,CACP,CACE69C,aAAc,OACd//C,KAAM,GACNE,KAAM,SAGVmZ,gBAAiB,aACjBnZ,KAAM,YAER,CACEK,OAAQ,CACN,CACEoG,WAAY,CACV,CACEo5C,aAAc,UACd//C,KAAM,SACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,YACNE,KAAM,WAER,CACEyG,WAAY,CACV,CACEo5C,aAAc,4BACd//C,KAAM,YACNE,KAAM,SAER,CACE6/C,aAAc,UACd//C,KAAM,QACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,SACNE,KAAM,YAGV6/C,aAAc,+BACd//C,KAAM,WACNE,KAAM,SAER,CACEyG,WAAY,CACV,CACEo5C,aAAc,UACd//C,KAAM,SACNE,KAAM,WAER,CACE6/C,aAAc,SACd//C,KAAM,WACNE,KAAM,UAER,CACE6/C,aAAc,UACd//C,KAAM,iBACNE,KAAM,WAER,CACEyG,WAAY,CACV,CACEo5C,aAAc,4BACd//C,KAAM,YACNE,KAAM,SAER,CACE6/C,aAAc,UACd//C,KAAM,QACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,SACNE,KAAM,YAGV6/C,aAAc,+BACd//C,KAAM,aACNE,KAAM,SAER,CACEyG,WAAY,CACV,CACEo5C,aAAc,4BACd//C,KAAM,YACNE,KAAM,SAER,CACE6/C,aAAc,SACd//C,KAAM,QACNE,KAAM,UAER,CACE6/C,aAAc,UACd//C,KAAM,WACNE,KAAM,WAER,CACEyG,WAAY,CACV,CACEo5C,aAAc,4BACd//C,KAAM,YACNE,KAAM,SAER,CACE6/C,aAAc,UACd//C,KAAM,QACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,SACNE,KAAM,YAGV6/C,aAAc,+BACd//C,KAAM,QACNE,KAAM,UAGV6/C,aAAc,iCACd//C,KAAM,cACNE,KAAM,YAGV6/C,aAAc,+BACd//C,KAAM,eACNE,KAAM,WAER,CACEyG,WAAY,CACV,CACEo5C,aAAc,UACd//C,KAAM,SACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,iBACNE,KAAM,WAER,CACEyG,WAAY,CACV,CACEo5C,aAAc,4BACd//C,KAAM,YACNE,KAAM,SAER,CACE6/C,aAAc,UACd//C,KAAM,QACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,SACNE,KAAM,YAGV6/C,aAAc,+BACd//C,KAAM,aACNE,KAAM,UAGV6/C,aAAc,mCACd//C,KAAM,mBACNE,KAAM,YAGV6/C,aAAc,gCACd//C,KAAM,cACNE,KAAM,UAGVF,KAAM,gBACNkC,QAAS,GACTmX,gBAAiB,aACjBnZ,KAAM,YAER,CACEK,OAAQ,GACRP,KAAM,UACNkC,QAAS,GACTmX,gBAAiB,aACjBnZ,KAAM,YAER,CACEK,OAAQ,CACN,CACEw/C,aAAc,qBACd//C,KAAM,gBACNE,KAAM,SAER,CACE6/C,aAAc,UACd//C,KAAM,aACNE,KAAM,WAER,CACE6/C,aAAc,QACd//C,KAAM,YACNE,KAAM,UAGVF,KAAM,mBACNkC,QAAS,CACP,CACE69C,aAAc,OACd//C,KAAM,GACNE,KAAM,SAGVmZ,gBAAiB,OACjBnZ,KAAM,YAER,CACEK,OAAQ,CACN,CACEw/C,aAAc,QACd//C,KAAM,OACNE,KAAM,UAGVF,KAAM,OACNkC,QAAS,GACTmX,gBAAiB,aACjBnZ,KAAM,YAER,CACEK,OAAQ,CACN,CACEw/C,aAAc,UACd//C,KAAM,eACNE,KAAM,YAGVF,KAAM,WACNkC,QAAS,CACP,CACE69C,aAAc,OACd//C,KAAM,GACNE,KAAM,SAGVmZ,gBAAiB,OACjBnZ,KAAM,YAER,CACEK,OAAQ,GACRP,KAAM,OACNkC,QAAS,CACP,CACE69C,aAAc,SACd//C,KAAM,GACNE,KAAM,WAGVmZ,gBAAiB,OACjBnZ,KAAM,YAER,CACEK,OAAQ,CACN,CACEw/C,aAAc,UACd//C,KAAM,cACNE,KAAM,YAGVF,KAAM,YACNkC,QAAS,GACTmX,gBAAiB,aACjBnZ,KAAM,YAER,CACEK,OAAQ,CACN,CACEw/C,aAAc,YACd//C,KAAM,gBACNE,KAAM,cAGVF,KAAM,aACNkC,QAAS,GACTmX,gBAAiB,aACjBnZ,KAAM,YAER,CACEK,OAAQ,CACN,CACEw/C,aAAc,UACd//C,KAAM,UACNE,KAAM,WAER,CACEyG,WAAY,CACV,CACEo5C,aAAc,UACd//C,KAAM,SACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,YACNE,KAAM,WAER,CACEyG,WAAY,CACV,CACEo5C,aAAc,4BACd//C,KAAM,YACNE,KAAM,SAER,CACE6/C,aAAc,UACd//C,KAAM,QACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,SACNE,KAAM,YAGV6/C,aAAc,+BACd//C,KAAM,WACNE,KAAM,SAER,CACEyG,WAAY,CACV,CACEo5C,aAAc,UACd//C,KAAM,SACNE,KAAM,WAER,CACE6/C,aAAc,SACd//C,KAAM,WACNE,KAAM,UAER,CACE6/C,aAAc,UACd//C,KAAM,iBACNE,KAAM,WAER,CACEyG,WAAY,CACV,CACEo5C,aAAc,4BACd//C,KAAM,YACNE,KAAM,SAER,CACE6/C,aAAc,UACd//C,KAAM,QACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,SACNE,KAAM,YAGV6/C,aAAc,+BACd//C,KAAM,aACNE,KAAM,SAER,CACEyG,WAAY,CACV,CACEo5C,aAAc,4BACd//C,KAAM,YACNE,KAAM,SAER,CACE6/C,aAAc,SACd//C,KAAM,QACNE,KAAM,UAER,CACE6/C,aAAc,UACd//C,KAAM,WACNE,KAAM,WAER,CACEyG,WAAY,CACV,CACEo5C,aAAc,4BACd//C,KAAM,YACNE,KAAM,SAER,CACE6/C,aAAc,UACd//C,KAAM,QACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,SACNE,KAAM,YAGV6/C,aAAc,+BACd//C,KAAM,QACNE,KAAM,UAGV6/C,aAAc,iCACd//C,KAAM,cACNE,KAAM,YAGV6/C,aAAc,+BACd//C,KAAM,eACNE,KAAM,WAER,CACEyG,WAAY,CACV,CACEo5C,aAAc,UACd//C,KAAM,SACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,iBACNE,KAAM,WAER,CACEyG,WAAY,CACV,CACEo5C,aAAc,4BACd//C,KAAM,YACNE,KAAM,SAER,CACE6/C,aAAc,UACd//C,KAAM,QACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,SACNE,KAAM,YAGV6/C,aAAc,+BACd//C,KAAM,aACNE,KAAM,UAGV6/C,aAAc,mCACd//C,KAAM,mBACNE,KAAM,YAGV6/C,aAAc,gCACd//C,KAAM,OACNE,KAAM,UAGVF,KAAM,eACNkC,QAAS,CACP,CACEyE,WAAY,CACV,CACEo5C,aAAc,UACd//C,KAAM,YACNE,KAAM,WAER,CACE6/C,aAAc,yBACd//C,KAAM,SACNE,KAAM,SAER,CACE6/C,aAAc,UACd//C,KAAM,gBACNE,KAAM,WAER,CACEyG,WAAY,CACV,CACEo5C,aAAc,UACd//C,KAAM,YACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,SACNE,KAAM,WAER,CACE6/C,aAAc,SACd//C,KAAM,WACNE,KAAM,UAER,CACE6/C,aAAc,UACd//C,KAAM,QACNE,KAAM,YAGV6/C,aAAc,iCACd//C,KAAM,gBACNE,KAAM,WAER,CACEyG,WAAY,CACV,CACEo5C,aAAc,UACd//C,KAAM,YACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,SACNE,KAAM,WAER,CACE6/C,aAAc,SACd//C,KAAM,WACNE,KAAM,UAER,CACE6/C,aAAc,UACd//C,KAAM,QACNE,KAAM,YAGV6/C,aAAc,iCACd//C,KAAM,YACNE,KAAM,WAER,CACEyG,WAAY,CACV,CACEo5C,aAAc,UACd//C,KAAM,YACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,SACNE,KAAM,WAER,CACE6/C,aAAc,SACd//C,KAAM,WACNE,KAAM,UAER,CACE6/C,aAAc,UACd//C,KAAM,QACNE,KAAM,YAGV6/C,aAAc,iCACd//C,KAAM,aACNE,KAAM,YAGV6/C,aAAc,iCACd//C,KAAM,GACNE,KAAM,UAGVmZ,gBAAiB,OACjBnZ,KAAM,YAER,CACEK,OAAQ,CACN,CACEw/C,aAAc,UACd//C,KAAM,UACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,cACNE,KAAM,YAGVF,KAAM,gBACNkC,QAAS,CACP,CACE69C,aAAc,yBACd//C,KAAM,GACNE,KAAM,UAGVmZ,gBAAiB,OACjBnZ,KAAM,YAER,CACEK,OAAQ,CACN,CACEw/C,aAAc,SACd//C,KAAM,cACNE,KAAM,WAGVF,KAAM,oBACNkC,QAAS,CACP,CACE69C,aAAc,OACd//C,KAAM,GACNE,KAAM,SAGVmZ,gBAAiB,OACjBnZ,KAAM,YAER,CACEK,OAAQ,CACN,CACEw/C,aAAc,UACd//C,KAAM,aACNE,KAAM,WAER,CACEyG,WAAY,CACV,CACEo5C,aAAc,UACd//C,KAAM,SACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,OACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,KACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,WACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,yBACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,eACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,uBACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,YACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,QACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,QACNE,KAAM,WAER,CACE6/C,aAAc,aACd//C,KAAM,WACNE,KAAM,cAER,CACE6/C,aAAc,QACd//C,KAAM,OACNE,KAAM,SAER,CACE6/C,aAAc,QACd//C,KAAM,YACNE,KAAM,SAER,CACE6/C,aAAc,YACd//C,KAAM,cACNE,KAAM,aAER,CACE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ACEK,OAAQ,CACN,CACEw/C,aAAc,UACd//C,KAAM,QACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,gBACNE,KAAM,WAER,CACE6/C,aAAc,QACd//C,KAAM,SACNE,KAAM,SAER,CACE6/C,aAAc,mDACd//C,KAAM,aACNE,KAAM,UAGVF,KAAM,iBACNkC,QAAS,CACP,CACE69C,aAAc,UACd//C,KAAM,GACNE,KAAM,YAGVmZ,gBAAiB,UACjBnZ,KAAM,YAER,CACEK,OAAQ,CACN,CACEw/C,aAAc,UACd//C,KAAM,GACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,gBACNE,KAAM,WAER,CACE6/C,aAAc,QACd//C,KAAM,SACNE,KAAM,SAER,CACE6/C,aAAc,mDACd//C,KAAM,aACNE,KAAM,UAGVF,KAAM,gBACNkC,QAAS,CACP,CACE69C,aAAc,UACd//C,KAAM,GACNE,KAAM,YAGVmZ,gBAAiB,UACjBnZ,KAAM,YAER,CACEK,OAAQ,CACN,CACEw/C,aAAc,UACd//C,KAAM,WACNE,KAAM,YAGVF,KAAM,yBACNkC,QAAS,CACP,CACE69C,aAAc,mDACd//C,KAAM,GACNE,KAAM,UAGVmZ,gBAAiB,OACjBnZ,KAAM,YAER,CACEK,OAAQ,CACN,CACEw/C,aAAc,UACd//C,KAAM,yBACNE,KAAM,YAGVF,KAAM,uBACNkC,QAAS,GACTmX,gBAAiB,UACjBnZ,KAAM,YAER,CACEK,OAAQ,CACN,CACEoG,WAAY,CACV,CACEo5C,aAAc,UACd//C,KAAM,eACNE,KAAM,WAER,CACE6/C,aAAc,UACd//C,KAAM,aACNE,KAAM,WAER,CACE6/C,aAAc,OACd//C,KAAM,kBACNE,KAAM,QAER,CACE6/C,aAAc,UACd//C,KAAM,QACNE,KAAM,WAER,CACE6/C,aAAc,QACd//C,KAAM,QACNE,KAAM,UAGV6/C,aAAc,0CACd//C,KAAM,cACNE,KAAM,SAER,CACE6/C,aAAc,UACd//C,KAAM,UACNE,KAAM,YAGVF,KAAM,uBACNkC,QAAS,GACTmX,gBAAiB,UACjBnZ,KAAM,YAER,CACEK,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S,EACTk5C,aAAc,cACd//C,KAAM,SACNE,KAAM,UAGVF,KAAM,sBACNE,KAAM,SAER,CACE69G,WAAW,EACXx9G,OAAQ,CACN,CACEsG,SAAS,EACTk5C,aAAc,UACd//C,KAAM,OACNE,KAAM,WAER,CACE2G,SAAS,EACTk5C,aAAc,UACd//C,KAAM,oBACNE,KAAM,WAER,CACE2G,SAAS,EACTk5C,aAAc,UACd//C,KAAM,eACNE,KAAM,YAGVF,KAAM,mBACNE,KAAM,SAER,CACE69G,WAAW,EACXx9G,OAAQ,CACN,CACEsG,SAAS,EACTk5C,aAAc,UACd//C,KAAM,OACNE,KAAM,WAER,CACE2G,SAAS,EACTk5C,aAAc,UACd//C,KAAM,UACNE,KAAM,WAER,CACE2G,SAAS,EACTk5C,aAAc,UACd//C,KAAM,SACNE,KAAM,YAGVF,KAAM,cACNE,KAAM,SAER,CACE69G,WAAW,EACXx9G,OAAQ,CACN,CACEsG,SAAS,EACTk5C,aAAc,UACd//C,KAAM,OACNE,KAAM,WAER,CACE2G,SAAS,EACTk5C,aAAc,UACd//C,KAAM,UACNE,KAAM,WAER,CACE2G,SAAS,EACTk5C,aAAc,UACd//C,KAAM,SACNE,KAAM,YAGVF,KAAM,cACNE,KAAM,SAER,CACE69G,WAAW,EACXx9G,OAAQ,CACN,CACEsG,SAAS,EACTk5C,aAAc,UACd//C,KAAM,iBACNE,KAAM,YAGVF,KAAM,WACNE,KAAM,SAER,CACEK,OAAQ,GACRP,KAAM,qBACNkC,QAAS,CACP,CACE69C,aAAc,UACd//C,KAAM,GACNE,KAAM,YAGVmZ,gBAAiB,OACjBnZ,KAAM,YAER,CACEK,OAAQ,GACRP,KAAM,eACNkC,QAAS,CACP,CACE69C,aAAc,UACd//C,KAAM,GACNE,KAAM,YAGVmZ,gBAAiB,OACjBnZ,KAAM,YAER,CACEK,OAAQ,GACRP,KAAM,4BACNkC,QAAS,CACP,CACE69C,aAAc,SACd//C,KAAM,GACNE,KAAM,WAGVmZ,gBAAiB,OACjBnZ,KAAM,YAER,CACEK,OAAQ,CACN,CACEw/C,aAAc,UACd//C,KAAM,QACNE,KAAM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","sources":["../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/viem/utils/hash/toEventSelector.ts","../node_modules/viem/utils/unit/formatUnits.ts","../node_modules/@noble/hashes/src/sha3.ts","../node_modules/ox/core/Withdrawal.ts","../node_modules/ox/core/BlockOverrides.ts","../node_modules/react/jsx-runtime.js","../node_modules/viem/utils/abi/encodeErrorResult.ts","../node_modules/viem/utils/abi/encodeFunctionResult.ts","../node_modules/viem/utils/ens/localBatchGatewayRequest.ts","../node_modules/viem/utils/cursor.ts","../node_modules/abitype/src/human-readable/formatAbiParameter.ts","../node_modules/abitype/src/human-readable/formatAbiParameters.ts","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/@noble/hashes/src/crypto.ts","../node_modules/@noble/hashes/src/utils.ts","../node_modules/viem/errors/utils.ts","../node_modules/viem/utils/unit/formatEther.ts","../node_modules/@noble/hashes/src/_u64.ts","../node_modules/viem/utils/abi/decodeFunctionResult.ts","../node_modules/viem/utils/abi/encodeAbiParameters.ts","../node_modules/abitype/src/human-readable/errors/abiItem.ts","../node_modules/viem/utils/data/isHex.ts","../node_modules/viem/errors/stateOverride.ts","../node_modules/viem/errors/version.ts","../node_modules/viem/errors/base.ts","../node_modules/viem/utils/abi/encodeDeployData.ts","../node_modules/viem/utils/regex.ts","../node_modules/viem/utils/chain/getChainContractAddress.ts","../node_modules/viem/utils/formatters/extract.ts","../node_modules/viem/utils/data/size.ts","../node_modules/viem/utils/abi/getAbiItem.ts","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.js","../node_modules/viem/errors/node.ts","../node_modules/viem/errors/request.ts","../node_modules/abitype/src/human-readable/formatAbiItem.ts","../node_modules/viem/utils/data/concat.ts","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/viem/constants/abis.ts","../node_modules/abitype/src/human-readable/errors/struct.ts","../node_modules/abitype/src/human-readable/runtime/structs.ts","../node_modules/ox/core/internal/hex.ts","../node_modules/viem/utils/transaction/assertRequest.ts","../node_modules/viem/errors/transaction.ts","../node_modules/viem/utils/address/getAddress.ts","../node_modules/@noble/hashes/src/hmac.ts","../node_modules/@noble/curves/src/abstract/utils.ts","../node_modules/@noble/curves/src/abstract/modular.ts","../node_modules/@noble/curves/src/abstract/curve.ts","../node_modules/@noble/curves/src/abstract/weierstrass.ts","../node_modules/@noble/curves/src/secp256k1.ts","../node_modules/@noble/curves/src/_shortw_utils.ts","../node_modules/viem/errors/encoding.ts","../node_modules/viem/errors/address.ts","../node_modules/viem/utils/stringify.ts","../node_modules/abitype/src/human-readable/errors/signature.ts","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/wrapRegExp.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/viem/utils/hash/hashSignature.ts","../node_modules/viem/utils/hash/toSignature.ts","../node_modules/viem/utils/hash/normalizeSignature.ts","../node_modules/viem/utils/hash/toSignatureHash.ts","../node_modules/abitype/src/human-readable/errors/abiParameter.ts","../node_modules/viem/utils/stateOverride.ts","../node_modules/viem/utils/hash/toFunctionSelector.ts","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/viem/accounts/utils/parseAccount.ts","../node_modules/viem/utils/address/isAddress.ts","../node_modules/viem/utils/encoding/toHex.ts","../node_modules/react/cjs/react.production.min.js","../node_modules/react-dom/client.js","../node_modules/base64-js/index.js","../node_modules/viem/utils/unit/formatGwei.ts","../node_modules/viem/errors/data.ts","../node_modules/@noble/hashes/src/_md.ts","../node_modules/@noble/hashes/src/sha2.ts","../node_modules/viem/utils/abi/decodeErrorResult.ts","../node_modules/abitype/src/human-readable/parseAbi.ts","../node_modules/viem/constants/contract.ts","../node_modules/viem/actions/public/call.ts","../node_modules/ox/core/Errors.ts","../node_modules/ox/core/version.ts","../node_modules/viem/utils/hash/keccak256.ts","../node_modules/react/index.js","../node_modules/abitype/src/human-readable/errors/splitParameters.ts","../node_modules/abitype/src/human-readable/runtime/cache.ts","../node_modules/abitype/src/human-readable/runtime/utils.ts","../node_modules/viem/utils/data/slice.ts","../node_modules/viem/errors/chain.ts","../node_modules/viem/utils/errors/getCallError.ts","../node_modules/viem/constants/contracts.ts","../node_modules/buffer/index.js","../node_modules/viem/utils/abi/decodeAbiParameters.ts","../node_modules/viem/utils/promise/createBatchScheduler.ts","../node_modules/ox/core/Json.ts","../node_modules/viem/utils/errors/getNodeError.ts","../node_modules/abitype/src/errors.ts","../node_modules/abitype/src/version.ts","../node_modules/viem/utils/formatters/transactionRequest.ts","../node_modules/viem/utils/address/isAddressEqual.ts","../node_modules/viem/utils/lru.ts","../node_modules/abitype/src/human-readable/runtime/signatures.ts","../node_modules/ieee754/index.js","../node_modules/viem/utils/encoding/fromBytes.ts","../node_modules/viem/utils/encoding/toBytes.ts","../node_modules/viem/utils/data/pad.ts","../node_modules/viem/utils/formatters/formatter.ts","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/eventemitter3/index.js","../node_modules/viem/utils/abi/prepareEncodeFunctionData.ts","../node_modules/viem/utils/abi/encodeFunctionData.ts","../node_modules/viem/utils/abi/formatAbiItemWithArgs.ts","../node_modules/viem/errors/contract.ts","../node_modules/react-dom/index.js","../node_modules/viem/utils/encoding/fromHex.ts","../node_modules/viem/errors/abi.ts","../node_modules/viem/utils/abi/decodeFunctionData.ts","../node_modules/abitype/src/regex.ts","../node_modules/use-sync-external-store/shim/with-selector.js","../node_modules/viem/utils/data/trim.ts","../node_modules/viem/utils/promise/withResolvers.ts","../node_modules/scheduler/index.js","../node_modules/ox/core/Hex.ts","../node_modules/viem/constants/solidity.ts","../node_modules/viem/utils/abi/formatAbiItem.ts","../node_modules/use-sync-external-store/shim/index.js","../node_modules/viem/constants/number.ts","../node_modules/viem/errors/cursor.ts","../node_modules/viem/constants/unit.ts","../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.js","../webpack/bootstrap","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","../node_modules/viem/errors/transport.ts","../node_modules/viem/utils/promise/withTimeout.ts","../node_modules/viem/utils/rpc/id.ts","../node_modules/viem/errors/rpc.ts","../node_modules/viem/utils/promise/withDedupe.ts","../node_modules/viem/utils/wait.ts","../node_modules/viem/utils/promise/withRetry.ts","../node_modules/viem/utils/buildRequest.ts","../node_modules/viem/utils/uid.ts","../node_modules/viem/clients/transports/createTransport.ts","../node_modules/viem/clients/transports/http.ts","../node_modules/viem/utils/rpc/http.ts","../node_modules/viem/clients/createClient.ts","../node_modules/viem/utils/ens/errors.ts","../node_modules/viem/utils/ens/encodedLabelToLabelhash.ts","../node_modules/viem/utils/ens/namehash.ts","../node_modules/viem/utils/ens/encodeLabelhash.ts","../node_modules/viem/utils/ens/labelhash.ts","../node_modules/viem/utils/ens/packetToBytes.ts","../node_modules/viem/utils/getAction.ts","../node_modules/viem/utils/errors/getContractError.ts","../node_modules/viem/actions/public/readContract.ts","../node_modules/viem/errors/ens.ts","../node_modules/viem/utils/ens/avatar/utils.ts","../node_modules/viem/utils/ens/avatar/parseAvatarRecord.ts","../node_modules/viem/actions/ens/getEnsText.ts","../node_modules/viem/actions/public/createAccessList.ts","../node_modules/viem/utils/filters/createFilterRequestScope.ts","../node_modules/viem/errors/log.ts","../node_modules/viem/utils/abi/encodeEventTopics.ts","../node_modules/viem/actions/public/createContractEventFilter.ts","../node_modules/viem/actions/public/createEventFilter.ts","../node_modules/viem/actions/public/createPendingTransactionFilter.ts","../node_modules/viem/utils/signature/recoverPublicKey.ts","../node_modules/viem/utils/signature/recoverAddress.ts","../node_modules/viem/accounts/utils/publicKeyToAddress.ts","../node_modules/viem/utils/encoding/toRlp.ts","../node_modules/viem/utils/authorization/hashAuthorization.ts","../node_modules/viem/utils/authorization/recoverAuthorizationAddress.ts","../node_modules/viem/errors/estimateGas.ts","../node_modules/viem/errors/fee.ts","../node_modules/viem/errors/block.ts","../node_modules/viem/utils/formatters/transaction.ts","../node_modules/viem/utils/formatters/block.ts","../node_modules/viem/actions/public/getBlock.ts","../node_modules/viem/actions/public/getGasPrice.ts","../node_modules/viem/actions/public/estimateMaxPriorityFeePerGas.ts","../node_modules/viem/actions/public/estimateFeesPerGas.ts","../node_modules/viem/actions/public/getTransactionCount.ts","../node_modules/viem/utils/blob/blobsToCommitments.ts","../node_modules/viem/utils/blob/blobsToProofs.ts","../node_modules/@noble/hashes/src/sha256.ts","../node_modules/viem/utils/hash/sha256.ts","../node_modules/viem/utils/blob/commitmentToVersionedHash.ts","../node_modules/viem/utils/blob/commitmentsToVersionedHashes.ts","../node_modules/viem/constants/blob.ts","../node_modules/viem/errors/blob.ts","../node_modules/viem/constants/kzg.ts","../node_modules/viem/utils/blob/toBlobSidecars.ts","../node_modules/viem/utils/blob/toBlobs.ts","../node_modules/viem/utils/transaction/getTransactionType.ts","../node_modules/viem/actions/public/getChainId.ts","../node_modules/viem/actions/wallet/prepareTransactionRequest.ts","../node_modules/viem/actions/public/getBalance.ts","../node_modules/viem/actions/public/estimateGas.ts","../node_modules/viem/utils/errors/getEstimateGasError.ts","../node_modules/viem/utils/promise/withCache.ts","../node_modules/viem/actions/public/getBlockNumber.ts","../node_modules/viem/actions/public/getCode.ts","../node_modules/viem/utils/abi/decodeEventLog.ts","../node_modules/viem/utils/abi/parseEventLogs.ts","../node_modules/viem/utils/formatters/log.ts","../node_modules/viem/actions/public/getLogs.ts","../node_modules/viem/actions/public/getContractEvents.ts","../node_modules/viem/errors/eip712.ts","../node_modules/viem/actions/public/getEip712Domain.ts","../node_modules/viem/actions/public/getFeeHistory.ts","../node_modules/viem/utils/formatters/feeHistory.ts","../node_modules/viem/actions/public/getFilterChanges.ts","../node_modules/viem/actions/public/getProof.ts","../node_modules/viem/utils/formatters/proof.ts","../node_modules/viem/actions/public/getTransaction.ts","../node_modules/viem/utils/formatters/transactionReceipt.ts","../node_modules/viem/actions/public/getTransactionReceipt.ts","../node_modules/viem/actions/public/simulateBlocks.ts","../node_modules/abitype/src/human-readable/parseAbiItem.ts","../node_modules/ox/core/internal/bytes.ts","../node_modules/ox/core/Bytes.ts","../node_modules/ox/core/Hash.ts","../node_modules/ox/core/internal/lru.ts","../node_modules/ox/core/Caches.ts","../node_modules/ox/core/Address.ts","../node_modules/ox/core/internal/abiItem.ts","../node_modules/ox/core/AbiItem.ts","../node_modules/abitype/src/human-readable/parseAbiParameters.ts","../node_modules/ox/core/Solidity.ts","../node_modules/ox/core/internal/abiParameters.ts","../node_modules/ox/core/internal/cursor.ts","../node_modules/ox/core/AbiParameters.ts","../node_modules/ox/core/AbiFunction.ts","../node_modules/viem/constants/address.ts","../node_modules/viem/actions/public/simulateCalls.ts","../node_modules/ox/core/AbiConstructor.ts","../node_modules/viem/actions/public/uninstallFilter.ts","../node_modules/ox/erc6492/SignatureErc6492.ts","../node_modules/ox/core/Signature.ts","../node_modules/ox/core/Authorization.ts","../node_modules/ox/erc8010/SignatureErc8010.ts","../node_modules/viem/actions/public/verifyHash.ts","../node_modules/viem/utils/signature/serializeSignature.ts","../node_modules/viem/utils/authorization/verifyAuthorization.ts","../node_modules/viem/utils/signature/hashMessage.ts","../node_modules/viem/utils/signature/toPrefixedMessage.ts","../node_modules/viem/constants/strings.ts","../node_modules/viem/errors/typedData.ts","../node_modules/viem/utils/typedData.ts","../node_modules/viem/utils/signature/hashTypedData.ts","../node_modules/viem/utils/observe.ts","../node_modules/viem/utils/poll.ts","../node_modules/viem/actions/public/watchBlockNumber.ts","../node_modules/viem/utils/siwe/parseSiweMessage.ts","../node_modules/viem/actions/siwe/verifySiweMessage.ts","../node_modules/viem/utils/siwe/validateSiweMessage.ts","../node_modules/viem/actions/wallet/sendRawTransaction.ts","../node_modules/viem/clients/decorators/public.ts","../node_modules/viem/actions/public/createBlockFilter.ts","../node_modules/viem/actions/public/estimateContractGas.ts","../node_modules/viem/actions/public/getBlobBaseFee.ts","../node_modules/viem/actions/public/getBlockTransactionCount.ts","../node_modules/viem/actions/ens/getEnsAddress.ts","../node_modules/viem/actions/ens/getEnsAvatar.ts","../node_modules/viem/actions/ens/getEnsName.ts","../node_modules/viem/actions/ens/getEnsResolver.ts","../node_modules/viem/actions/public/getFilterLogs.ts","../node_modules/viem/actions/public/getStorageAt.ts","../node_modules/viem/actions/public/getTransactionConfirmations.ts","../node_modules/viem/actions/public/multicall.ts","../node_modules/viem/actions/public/simulateContract.ts","../node_modules/viem/actions/public/verifyMessage.ts","../node_modules/viem/actions/public/verifyTypedData.ts","../node_modules/viem/actions/public/waitForTransactionReceipt.ts","../node_modules/viem/actions/public/watchBlocks.ts","../node_modules/viem/actions/public/watchContractEvent.ts","../node_modules/viem/actions/public/watchEvent.ts","../node_modules/viem/actions/public/watchPendingTransactions.ts","../node_modules/viem/clients/createPublicClient.ts","../node_modules/viem/errors/account.ts","../node_modules/viem/utils/chain/assertCurrentChain.ts","../node_modules/viem/utils/errors/getTransactionError.ts","../node_modules/viem/actions/wallet/sendTransaction.ts","../node_modules/viem/actions/wallet/sendCalls.ts","../node_modules/viem/actions/wallet/getCallsStatus.ts","../node_modules/viem/actions/wallet/prepareAuthorization.ts","../node_modules/viem/actions/wallet/signTypedData.ts","../node_modules/viem/errors/calls.ts","../node_modules/viem/actions/wallet/waitForCallsStatus.ts","../node_modules/viem/actions/wallet/writeContract.ts","../node_modules/viem/clients/decorators/wallet.ts","../node_modules/viem/actions/wallet/addChain.ts","../node_modules/viem/actions/wallet/deployContract.ts","../node_modules/viem/actions/wallet/getAddresses.ts","../node_modules/viem/actions/wallet/getCapabilities.ts","../node_modules/viem/actions/wallet/getPermissions.ts","../node_modules/viem/actions/wallet/requestAddresses.ts","../node_modules/viem/actions/wallet/requestPermissions.ts","../node_modules/viem/actions/wallet/showCallsStatus.ts","../node_modules/viem/actions/wallet/signAuthorization.ts","../node_modules/viem/actions/wallet/signMessage.ts","../node_modules/viem/actions/wallet/signTransaction.ts","../node_modules/viem/actions/wallet/switchChain.ts","../node_modules/viem/actions/wallet/watchAsset.ts","../node_modules/viem/clients/createWalletClient.ts","../node_modules/viem/accounts/toAccount.ts","../node_modules/viem/utils/chain/defineChain.ts","../node_modules/viem/zksync/constants/number.ts","../node_modules/viem/zksync/formatters.ts","../node_modules/viem/utils/transaction/assertTransaction.ts","../node_modules/viem/utils/transaction/serializeAccessList.ts","../node_modules/viem/utils/transaction/serializeTransaction.ts","../node_modules/viem/utils/authorization/serializeAuthorizationList.ts","../node_modules/viem/zksync/errors/transaction.ts","../node_modules/viem/zksync/utils/isEip712Transaction.ts","../node_modules/viem/zksync/utils/assertEip712Transaction.ts","../node_modules/viem/zksync/serializers.ts","../node_modules/viem/zksync/errors/bytecode.ts","../node_modules/viem/zksync/utils/hashBytecode.ts","../node_modules/viem/zksync/chainConfig.ts","../node_modules/viem/zksync/utils/getEip712Domain.ts","../node_modules/viem/chains/definitions/abstractTestnet.ts","../node_modules/viem/chains/definitions/abstract.ts","../node_modules/viem/chains/definitions/zksync.ts","../node_modules/viem/chains/definitions/zksyncSepoliaTestnet.ts","../node_modules/@abstract-foundation/agw-client/src/abis/AccountFactory.ts","../node_modules/@abstract-foundation/agw-client/src/constants.ts","../node_modules/@abstract-foundation/agw-client/src/errors/eip712.ts","../node_modules/@abstract-foundation/agw-client/src/eip712.ts","../node_modules/@abstract-foundation/agw-client/src/utils.ts","../node_modules/@abstract-foundation/agw-client/src/abis/AGWAccount.ts","../node_modules/@abstract-foundation/agw-client/src/abis/SessionKeyValidator.ts","../node_modules/@abstract-foundation/agw-client/src/sessions.ts","../node_modules/@abstract-foundation/agw-client/src/actions/createSession.ts","../node_modules/viem/constants/bytes.ts","../node_modules/viem/zksync/constants/abis.ts","../node_modules/viem/zksync/utils/abi/encodeDeployData.ts","../node_modules/viem/zksync/constants/contract.ts","../node_modules/@abstract-foundation/agw-client/src/errors/insufficientBalance.ts","../node_modules/@abstract-foundation/agw-client/src/replaceBigInts.ts","../node_modules/@abstract-foundation/agw-client/src/actions/sendPrivyTransaction.ts","../node_modules/@abstract-foundation/agw-client/src/errors/account.ts","../node_modules/@abstract-foundation/agw-client/src/abis/BridgeHubAbi.ts","../node_modules/@abstract-foundation/agw-client/src/abis/ExclusiveDelegateResolver.ts","../node_modules/viem/clients/transports/custom.ts","../node_modules/@abstract-foundation/agw-client/src/sessionClient.ts","../node_modules/@abstract-foundation/agw-client/src/walletActions.ts","../node_modules/@abstract-foundation/agw-client/src/actions/writeContractForSession.ts","../node_modules/@abstract-foundation/agw-client/src/actions/signTransactionForSession.ts","../node_modules/@abstract-foundation/agw-client/src/actions/signTypedData.ts","../node_modules/@abstract-foundation/agw-client/src/actions/prepareTransaction.ts","../node_modules/@abstract-foundation/agw-client/src/abis/SessionKeyPolicyRegistry.ts","../node_modules/@abstract-foundation/agw-client/src/sessionValidator.ts","../node_modules/@abstract-foundation/agw-client/src/actions/signTransaction.ts","../node_modules/@abstract-foundation/agw-client/src/actions/sendTransactionInternal.ts","../node_modules/@abstract-foundation/agw-client/src/actions/sendTransaction.ts","../node_modules/@abstract-foundation/agw-client/src/actions/deployContract.ts","../node_modules/@abstract-foundation/agw-client/src/actions/getLinkedAccounts.ts","../node_modules/@abstract-foundation/agw-client/src/actions/getLinkedAgw.ts","../node_modules/@abstract-foundation/agw-client/src/actions/getSessionStatus.ts","../node_modules/@abstract-foundation/agw-client/src/actions/revokeSessions.ts","../node_modules/@abstract-foundation/agw-client/src/actions/sendTransactionBatch.ts","../node_modules/@abstract-foundation/agw-client/src/actions/sendTransactionForSession.ts","../node_modules/@abstract-foundation/agw-client/src/getAgwTypedSignature.ts","../node_modules/viem/utils/signature/serializeErc6492Signature.ts","../node_modules/viem/utils/encoding/fromRlp.ts","../node_modules/@abstract-foundation/agw-client/src/actions/signMessage.ts","../node_modules/@abstract-foundation/agw-client/src/actions/signTransactionBatch.ts","../node_modules/@abstract-foundation/agw-client/src/actions/writeContract.ts","../node_modules/@abstract-foundation/agw-client/src/abstractClient.ts","../node_modules/@abstract-foundation/agw-client/src/eip5792.ts","../node_modules/@abstract-foundation/agw-client/src/transformEIP1193Provider.ts","../node_modules/@babel/runtime/helpers/esm/checkPrivateRedeclaration.js","../node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js","../node_modules/@babel/runtime/helpers/esm/assertClassBrand.js","../node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet2.js","../node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet2.js","../node_modules/@tanstack/query-core/src/timeoutManager.ts","../node_modules/@tanstack/query-core/src/utils.ts","../node_modules/@babel/runtime/helpers/esm/classPrivateMethodInitSpec.js","../node_modules/@tanstack/query-core/src/notifyManager.ts","../node_modules/@tanstack/query-core/src/subscribable.ts","../node_modules/@tanstack/query-core/src/focusManager.ts","../node_modules/@tanstack/query-core/src/onlineManager.ts","../node_modules/@tanstack/query-core/src/thenable.ts","../node_modules/@tanstack/query-core/src/retryer.ts","../node_modules/@tanstack/query-core/src/removable.ts","../node_modules/@tanstack/query-core/src/query.ts","../node_modules/@tanstack/query-core/src/queryCache.ts","../node_modules/@tanstack/query-core/src/mutation.ts","../node_modules/@tanstack/query-core/src/mutationCache.ts","../node_modules/@tanstack/query-core/src/infiniteQueryBehavior.ts","../node_modules/@tanstack/query-core/src/queryClient.ts","../node_modules/@tanstack/react-query/src/QueryClientProvider.tsx","../node_modules/mipd/src/store.ts","../node_modules/mipd/src/utils.ts","../node_modules/@wagmi/core/node_modules/zustand/esm/middleware.mjs","../node_modules/@wagmi/core/node_modules/zustand/esm/vanilla.mjs","../node_modules/@wagmi/core/src/version.ts","../node_modules/@wagmi/core/src/errors/base.ts","../node_modules/@wagmi/core/src/utils/getVersion.ts","../node_modules/@wagmi/core/src/errors/config.ts","../node_modules/@wagmi/core/src/errors/connector.ts","../node_modules/@wagmi/core/src/connectors/injected.ts","../node_modules/@wagmi/core/src/createEmitter.ts","../node_modules/@wagmi/core/src/utils/deserialize.ts","../node_modules/@wagmi/core/src/utils/serialize.ts","../node_modules/@wagmi/core/src/createStorage.ts","../node_modules/@wagmi/core/src/utils/uid.ts","../node_modules/@wagmi/core/src/createConfig.ts","../node_modules/@wagmi/core/src/actions/reconnect.ts","../node_modules/@wagmi/core/src/hydrate.ts","../node_modules/wagmi/src/hydrate.ts","../node_modules/wagmi/src/context.ts","../node_modules/@privy-io/cross-app-connect/node_modules/@scure/base/index.ts","../node_modules/fflate/esm/browser.js","../node_modules/@privy-io/cross-app-connect/dist/esm/crypto.mjs","../node_modules/@privy-io/cross-app-connect/dist/esm/triggerPopup.mjs","../node_modules/@privy-io/cross-app-connect/dist/esm/request.mjs","../node_modules/@privy-io/cross-app-connect/dist/esm/sendConnectionRequestToPopup.mjs","../node_modules/@privy-io/cross-app-connect/dist/esm/storage.mjs","../node_modules/@privy-io/cross-app-connect/dist/esm/client.mjs","../node_modules/@privy-io/cross-app-connect/dist/esm/getCrossAppProviderDetails.mjs","../node_modules/@privy-io/cross-app-connect/dist/esm/provider.mjs","../node_modules/@abstract-foundation/agw-react/src/abstractWalletConnector.ts","../node_modules/@privy-io/cross-app-connect/dist/esm/connector.mjs","../node_modules/@abstract-foundation/agw-react/src/constants.ts","../node_modules/@abstract-foundation/agw-react/src/agwProvider.tsx","../node_modules/@tanstack/query-core/src/queryObserver.ts","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/@tanstack/react-query/src/QueryErrorResetBoundary.tsx","../node_modules/@tanstack/react-query/src/IsRestoringProvider.ts","../node_modules/@tanstack/react-query/src/suspense.ts","../node_modules/@tanstack/react-query/src/useBaseQuery.ts","../node_modules/@tanstack/react-query/src/errorBoundaryUtils.ts","../node_modules/@tanstack/react-query/src/useQuery.ts","../node_modules/@wagmi/core/src/utils/deepEqual.ts","../node_modules/@wagmi/core/src/actions/getChains.ts","../node_modules/wagmi/src/errors/base.ts","../node_modules/wagmi/src/utils/getVersion.ts","../node_modules/wagmi/src/version.ts","../node_modules/wagmi/src/errors/context.ts","../node_modules/wagmi/src/hooks/useConfig.ts","../node_modules/@wagmi/core/src/actions/getWalletClient.ts","../node_modules/@wagmi/core/src/actions/getConnectorClient.ts","../node_modules/@wagmi/core/src/query/utils.ts","../node_modules/@wagmi/core/src/query/getWalletClient.ts","../node_modules/@wagmi/core/src/actions/getAccount.ts","../node_modules/wagmi/src/hooks/useSyncExternalStoreWithTracked.ts","../node_modules/wagmi/src/hooks/useAccount.ts","../node_modules/@wagmi/core/src/actions/watchAccount.ts","../node_modules/@wagmi/core/src/actions/getChainId.ts","../node_modules/wagmi/src/hooks/useWalletClient.ts","../node_modules/wagmi/src/hooks/useChainId.ts","../node_modules/@wagmi/core/src/actions/watchChainId.ts","../node_modules/wagmi/src/utils/query.ts","../node_modules/@abstract-foundation/agw-react/src/hooks/useGlobalWalletSignerClient.ts","../node_modules/@abstract-foundation/agw-react/src/hooks/useGlobalWalletSignerAccount.ts","../node_modules/@abstract-foundation/agw-react/src/hooks/useAbstractClient.ts","../node_modules/wagmi/src/hooks/useChains.ts","../node_modules/@wagmi/core/src/actions/watchChains.ts","../node_modules/@tanstack/query-core/src/mutationObserver.ts","../node_modules/@tanstack/react-query/src/useMutation.ts","../node_modules/@wagmi/core/src/query/connect.ts","../node_modules/@wagmi/core/src/actions/connect.ts","../node_modules/@wagmi/core/src/actions/getConnectors.ts","../node_modules/wagmi/src/hooks/useConnectors.ts","../node_modules/@wagmi/core/src/actions/watchConnectors.ts","../node_modules/wagmi/src/hooks/useConnect.ts","../node_modules/@wagmi/core/src/query/disconnect.ts","../node_modules/@wagmi/core/src/actions/disconnect.ts","../node_modules/@wagmi/core/src/actions/getConnections.ts","../node_modules/wagmi/src/hooks/useConnections.ts","../node_modules/@wagmi/core/src/actions/watchConnections.ts","../node_modules/wagmi/src/hooks/useDisconnect.ts","../node_modules/@abstract-foundation/agw-react/src/hooks/useLoginWithAbstract.ts","../node_modules/viem/errors/unit.ts","../node_modules/viem/utils/unit/parseEther.ts","../node_modules/viem/utils/unit/parseUnits.ts","components/Coinflip.js","components/WalletConnect.js","App.js","index.js"],"sourcesContent":["import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nexport { _objectSpread2 as default };","import type { ErrorType } from '../../errors/utils.js'\nimport {\n  type ToSignatureHashErrorType,\n  toSignatureHash,\n} from './toSignatureHash.js'\n\nexport type ToEventSelectorErrorType = ToSignatureHashErrorType | ErrorType\n\n/**\n * Returns the event selector for a given event definition.\n *\n * @example\n * const selector = toEventSelector('Transfer(address indexed from, address indexed to, uint256 amount)')\n * // 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n */\nexport const toEventSelector = toSignatureHash\n","import type { ErrorType } from '../../errors/utils.js'\n\nexport type FormatUnitsErrorType = ErrorType\n\n/**\n *  Divides a number by a given exponent of base 10 (10exponent), and formats it into a string representation of the number..\n *\n * - Docs: https://viem.sh/docs/utilities/formatUnits\n *\n * @example\n * import { formatUnits } from 'viem'\n *\n * formatUnits(420000000000n, 9)\n * // '420'\n */\nexport function formatUnits(value: bigint, decimals: number) {\n  let display = value.toString()\n\n  const negative = display.startsWith('-')\n  if (negative) display = display.slice(1)\n\n  display = display.padStart(decimals, '0')\n\n  let [integer, fraction] = [\n    display.slice(0, display.length - decimals),\n    display.slice(display.length - decimals),\n  ]\n  fraction = fraction.replace(/(0+)$/, '')\n  return `${negative ? '-' : ''}${integer || '0'}${\n    fraction ? `.${fraction}` : ''\n  }`\n}\n","/**\n * SHA3 (keccak) hash function, based on a new \"Sponge function\" design.\n * Different from older hashes, the internal state is bigger than output size.\n *\n * Check out [FIPS-202](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf),\n * [Website](https://keccak.team/keccak.html),\n * [the differences between SHA-3 and Keccak](https://crypto.stackexchange.com/questions/15727/what-are-the-key-differences-between-the-draft-sha-3-standard-and-the-keccak-sub).\n *\n * Check out `sha3-addons` module for cSHAKE, k12, and others.\n * @module\n */\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.ts';\n// prettier-ignore\nimport {\n  abytes, aexists, anumber, aoutput,\n  clean, createHasher, createXOFer, Hash,\n  swap32IfBE,\n  toBytes, u32,\n  type CHash, type CHashXO, type HashXOF, type Input\n} from './utils.ts';\n\n// No __PURE__ annotations in sha3 header:\n// EVERYTHING is in fact used on every export.\n// Various per round constants calculations\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nconst SHA3_PI: number[] = [];\nconst SHA3_ROTL: number[] = [];\nconst _SHA3_IOTA: bigint[] = [];\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n  // Pi\n  [x, y] = [y, (2 * x + 3 * y) % 5];\n  SHA3_PI.push(2 * (5 * y + x));\n  // Rotational\n  SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n  // Iota\n  let t = _0n;\n  for (let j = 0; j < 7; j++) {\n    R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n    if (R & _2n) t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n  }\n  _SHA3_IOTA.push(t);\n}\nconst IOTAS = split(_SHA3_IOTA, true);\nconst SHA3_IOTA_H = IOTAS[0];\nconst SHA3_IOTA_L = IOTAS[1];\n\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h: number, l: number, s: number) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h: number, l: number, s: number) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n\n/** `keccakf1600` internal function, additionally allows to adjust round count. */\nexport function keccakP(s: Uint32Array, rounds: number = 24): void {\n  const B = new Uint32Array(5 * 2);\n  // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n  for (let round = 24 - rounds; round < 24; round++) {\n    // Theta θ\n    for (let x = 0; x < 10; x++) B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n    for (let x = 0; x < 10; x += 2) {\n      const idx1 = (x + 8) % 10;\n      const idx0 = (x + 2) % 10;\n      const B0 = B[idx0];\n      const B1 = B[idx0 + 1];\n      const Th = rotlH(B0, B1, 1) ^ B[idx1];\n      const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n      for (let y = 0; y < 50; y += 10) {\n        s[x + y] ^= Th;\n        s[x + y + 1] ^= Tl;\n      }\n    }\n    // Rho (ρ) and Pi (π)\n    let curH = s[2];\n    let curL = s[3];\n    for (let t = 0; t < 24; t++) {\n      const shift = SHA3_ROTL[t];\n      const Th = rotlH(curH, curL, shift);\n      const Tl = rotlL(curH, curL, shift);\n      const PI = SHA3_PI[t];\n      curH = s[PI];\n      curL = s[PI + 1];\n      s[PI] = Th;\n      s[PI + 1] = Tl;\n    }\n    // Chi (χ)\n    for (let y = 0; y < 50; y += 10) {\n      for (let x = 0; x < 10; x++) B[x] = s[y + x];\n      for (let x = 0; x < 10; x++) s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n    }\n    // Iota (ι)\n    s[0] ^= SHA3_IOTA_H[round];\n    s[1] ^= SHA3_IOTA_L[round];\n  }\n  clean(B);\n}\n\n/** Keccak sponge function. */\nexport class Keccak extends Hash<Keccak> implements HashXOF<Keccak> {\n  protected state: Uint8Array;\n  protected pos = 0;\n  protected posOut = 0;\n  protected finished = false;\n  protected state32: Uint32Array;\n  protected destroyed = false;\n\n  public blockLen: number;\n  public suffix: number;\n  public outputLen: number;\n  protected enableXOF = false;\n  protected rounds: number;\n\n  // NOTE: we accept arguments in bytes instead of bits here.\n  constructor(\n    blockLen: number,\n    suffix: number,\n    outputLen: number,\n    enableXOF = false,\n    rounds: number = 24\n  ) {\n    super();\n    this.blockLen = blockLen;\n    this.suffix = suffix;\n    this.outputLen = outputLen;\n    this.enableXOF = enableXOF;\n    this.rounds = rounds;\n    // Can be passed from user as dkLen\n    anumber(outputLen);\n    // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n    // 0 < blockLen < 200\n    if (!(0 < blockLen && blockLen < 200))\n      throw new Error('only keccak-f1600 function is supported');\n    this.state = new Uint8Array(200);\n    this.state32 = u32(this.state);\n  }\n  clone(): Keccak {\n    return this._cloneInto();\n  }\n  protected keccak(): void {\n    swap32IfBE(this.state32);\n    keccakP(this.state32, this.rounds);\n    swap32IfBE(this.state32);\n    this.posOut = 0;\n    this.pos = 0;\n  }\n  update(data: Input): this {\n    aexists(this);\n    data = toBytes(data);\n    abytes(data);\n    const { blockLen, state } = this;\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      for (let i = 0; i < take; i++) state[this.pos++] ^= data[pos++];\n      if (this.pos === blockLen) this.keccak();\n    }\n    return this;\n  }\n  protected finish(): void {\n    if (this.finished) return;\n    this.finished = true;\n    const { state, suffix, pos, blockLen } = this;\n    // Do the padding\n    state[pos] ^= suffix;\n    if ((suffix & 0x80) !== 0 && pos === blockLen - 1) this.keccak();\n    state[blockLen - 1] ^= 0x80;\n    this.keccak();\n  }\n  protected writeInto(out: Uint8Array): Uint8Array {\n    aexists(this, false);\n    abytes(out);\n    this.finish();\n    const bufferOut = this.state;\n    const { blockLen } = this;\n    for (let pos = 0, len = out.length; pos < len; ) {\n      if (this.posOut >= blockLen) this.keccak();\n      const take = Math.min(blockLen - this.posOut, len - pos);\n      out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n      this.posOut += take;\n      pos += take;\n    }\n    return out;\n  }\n  xofInto(out: Uint8Array): Uint8Array {\n    // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n    if (!this.enableXOF) throw new Error('XOF is not possible for this instance');\n    return this.writeInto(out);\n  }\n  xof(bytes: number): Uint8Array {\n    anumber(bytes);\n    return this.xofInto(new Uint8Array(bytes));\n  }\n  digestInto(out: Uint8Array): Uint8Array {\n    aoutput(out, this);\n    if (this.finished) throw new Error('digest() was already called');\n    this.writeInto(out);\n    this.destroy();\n    return out;\n  }\n  digest(): Uint8Array {\n    return this.digestInto(new Uint8Array(this.outputLen));\n  }\n  destroy(): void {\n    this.destroyed = true;\n    clean(this.state);\n  }\n  _cloneInto(to?: Keccak): Keccak {\n    const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n    to ||= new Keccak(blockLen, suffix, outputLen, enableXOF, rounds);\n    to.state32.set(this.state32);\n    to.pos = this.pos;\n    to.posOut = this.posOut;\n    to.finished = this.finished;\n    to.rounds = rounds;\n    // Suffix can change in cSHAKE\n    to.suffix = suffix;\n    to.outputLen = outputLen;\n    to.enableXOF = enableXOF;\n    to.destroyed = this.destroyed;\n    return to;\n  }\n}\n\nconst gen = (suffix: number, blockLen: number, outputLen: number) =>\n  createHasher(() => new Keccak(blockLen, suffix, outputLen));\n\n/** SHA3-224 hash function. */\nexport const sha3_224: CHash = /* @__PURE__ */ (() => gen(0x06, 144, 224 / 8))();\n/** SHA3-256 hash function. Different from keccak-256. */\nexport const sha3_256: CHash = /* @__PURE__ */ (() => gen(0x06, 136, 256 / 8))();\n/** SHA3-384 hash function. */\nexport const sha3_384: CHash = /* @__PURE__ */ (() => gen(0x06, 104, 384 / 8))();\n/** SHA3-512 hash function. */\nexport const sha3_512: CHash = /* @__PURE__ */ (() => gen(0x06, 72, 512 / 8))();\n\n/** keccak-224 hash function. */\nexport const keccak_224: CHash = /* @__PURE__ */ (() => gen(0x01, 144, 224 / 8))();\n/** keccak-256 hash function. Different from SHA3-256. */\nexport const keccak_256: CHash = /* @__PURE__ */ (() => gen(0x01, 136, 256 / 8))();\n/** keccak-384 hash function. */\nexport const keccak_384: CHash = /* @__PURE__ */ (() => gen(0x01, 104, 384 / 8))();\n/** keccak-512 hash function. */\nexport const keccak_512: CHash = /* @__PURE__ */ (() => gen(0x01, 72, 512 / 8))();\n\nexport type ShakeOpts = { dkLen?: number };\n\nconst genShake = (suffix: number, blockLen: number, outputLen: number) =>\n  createXOFer<HashXOF<Keccak>, ShakeOpts>(\n    (opts: ShakeOpts = {}) =>\n      new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true)\n  );\n\n/** SHAKE128 XOF with 128-bit security. */\nexport const shake128: CHashXO = /* @__PURE__ */ (() => genShake(0x1f, 168, 128 / 8))();\n/** SHAKE256 XOF with 256-bit security. */\nexport const shake256: CHashXO = /* @__PURE__ */ (() => genShake(0x1f, 136, 256 / 8))();\n","import type * as Errors from './Errors.js'\nimport * as Hex from './Hex.js'\n\n/** A Withdrawal as defined in the [Execution API specification](https://github.com/ethereum/execution-apis/blob/main/src/schemas/withdrawal.yaml). */\nexport type Withdrawal<bigintType = bigint, numberType = number> = {\n  address: Hex.Hex\n  amount: bigintType\n  index: numberType\n  validatorIndex: numberType\n}\n\n/** An RPC Withdrawal as defined in the [Execution API specification](https://github.com/ethereum/execution-apis/blob/main/src/schemas/withdrawal.yaml). */\nexport type Rpc = Withdrawal<Hex.Hex, Hex.Hex>\n\n/**\n * Converts a {@link ox#Withdrawal.Rpc} to an {@link ox#Withdrawal.Withdrawal}.\n *\n * @example\n * ```ts twoslash\n * import { Withdrawal } from 'ox'\n *\n * const withdrawal = Withdrawal.fromRpc({\n *   address: '0x00000000219ab540356cBB839Cbe05303d7705Fa',\n *   amount: '0x620323',\n *   index: '0x0',\n *   validatorIndex: '0x1',\n * })\n * // @log: {\n * // @log:   address: '0x00000000219ab540356cBB839Cbe05303d7705Fa',\n * // @log:   amount: 6423331n,\n * // @log:   index: 0,\n * // @log:   validatorIndex: 1\n * // @log: }\n * ```\n *\n * @param withdrawal - The RPC withdrawal to convert.\n * @returns An instantiated {@link ox#Withdrawal.Withdrawal}.\n */\nexport function fromRpc(withdrawal: Rpc): Withdrawal {\n  return {\n    ...withdrawal,\n    amount: BigInt(withdrawal.amount),\n    index: Number(withdrawal.index),\n    validatorIndex: Number(withdrawal.validatorIndex),\n  }\n}\n\nexport declare namespace fromRpc {\n  export type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Converts a {@link ox#Withdrawal.Withdrawal} to an {@link ox#Withdrawal.Rpc}.\n *\n * @example\n * ```ts twoslash\n * import { Withdrawal } from 'ox'\n *\n * const withdrawal = Withdrawal.toRpc({\n *   address: '0x00000000219ab540356cBB839Cbe05303d7705Fa',\n *   amount: 6423331n,\n *   index: 0,\n *   validatorIndex: 1,\n * })\n * // @log: {\n * // @log:   address: '0x00000000219ab540356cBB839Cbe05303d7705Fa',\n * // @log:   amount: '0x620323',\n * // @log:   index: '0x0',\n * // @log:   validatorIndex: '0x1',\n * // @log: }\n * ```\n *\n * @param withdrawal - The Withdrawal to convert.\n * @returns An RPC Withdrawal.\n */\nexport function toRpc(withdrawal: Withdrawal): Rpc {\n  return {\n    address: withdrawal.address,\n    amount: Hex.fromNumber(withdrawal.amount),\n    index: Hex.fromNumber(withdrawal.index),\n    validatorIndex: Hex.fromNumber(withdrawal.validatorIndex),\n  }\n}\n\nexport declare namespace toRpc {\n  export type ErrorType = Errors.GlobalErrorType\n}\n","import type * as Address from './Address.js'\nimport * as Hex from './Hex.js'\nimport * as Withdrawal from './Withdrawal.js'\n\n/**\n * Block overrides.\n */\nexport type BlockOverrides<bigintType = bigint, numberType = number> = {\n  /** Base fee per gas. */\n  baseFeePerGas?: bigintType | undefined\n  /** Blob base fee. */\n  blobBaseFee?: bigintType | undefined\n  /** Fee recipient (also known as coinbase). */\n  feeRecipient?: Address.Address | undefined\n  /** Gas limit. */\n  gasLimit?: bigintType | undefined\n  /** Block number. */\n  number?: bigintType | undefined\n  /** The previous value of randomness beacon. */\n  prevRandao?: bigintType | undefined\n  /** Block timestamp. */\n  time?: bigintType | undefined\n  /** Withdrawals made by validators. */\n  withdrawals?: Withdrawal.Withdrawal<bigintType, numberType>[] | undefined\n}\n\n/**\n * RPC block overrides.\n */\nexport type Rpc = BlockOverrides<Hex.Hex, Hex.Hex>\n\n/**\n * Converts an {@link ox#BlockOverrides.Rpc} to an {@link ox#BlockOverrides.BlockOverrides}.\n *\n * @example\n * ```ts twoslash\n * import { BlockOverrides } from 'ox'\n *\n * const blockOverrides = BlockOverrides.fromRpc({\n *   baseFeePerGas: '0x1',\n *   blobBaseFee: '0x2',\n *   feeRecipient: '0x0000000000000000000000000000000000000000',\n *   gasLimit: '0x4',\n *   number: '0x5',\n *   prevRandao: '0x6',\n *   time: '0x1234567890',\n *   withdrawals: [\n *     {\n *       address: '0x0000000000000000000000000000000000000000',\n *       amount: '0x1',\n *       index: '0x0',\n *       validatorIndex: '0x1',\n *     },\n *   ],\n * })\n * ```\n *\n * @param rpcBlockOverrides - The RPC block overrides to convert.\n * @returns An instantiated {@link ox#BlockOverrides.BlockOverrides}.\n */\nexport function fromRpc(rpcBlockOverrides: Rpc): BlockOverrides {\n  return {\n    ...(rpcBlockOverrides.baseFeePerGas && {\n      baseFeePerGas: BigInt(rpcBlockOverrides.baseFeePerGas),\n    }),\n    ...(rpcBlockOverrides.blobBaseFee && {\n      blobBaseFee: BigInt(rpcBlockOverrides.blobBaseFee),\n    }),\n    ...(rpcBlockOverrides.feeRecipient && {\n      feeRecipient: rpcBlockOverrides.feeRecipient,\n    }),\n    ...(rpcBlockOverrides.gasLimit && {\n      gasLimit: BigInt(rpcBlockOverrides.gasLimit),\n    }),\n    ...(rpcBlockOverrides.number && {\n      number: BigInt(rpcBlockOverrides.number),\n    }),\n    ...(rpcBlockOverrides.prevRandao && {\n      prevRandao: BigInt(rpcBlockOverrides.prevRandao),\n    }),\n    ...(rpcBlockOverrides.time && {\n      time: BigInt(rpcBlockOverrides.time),\n    }),\n    ...(rpcBlockOverrides.withdrawals && {\n      withdrawals: rpcBlockOverrides.withdrawals.map(Withdrawal.fromRpc),\n    }),\n  }\n}\n\n/**\n * Converts an {@link ox#BlockOverrides.BlockOverrides} to an {@link ox#BlockOverrides.Rpc}.\n *\n * @example\n * ```ts twoslash\n * import { BlockOverrides } from 'ox'\n *\n * const blockOverrides = BlockOverrides.toRpc({\n *   baseFeePerGas: 1n,\n *   blobBaseFee: 2n,\n *   feeRecipient: '0x0000000000000000000000000000000000000000',\n *   gasLimit: 4n,\n *   number: 5n,\n *   prevRandao: 6n,\n *   time: 78187493520n,\n *   withdrawals: [\n *     {\n *       address: '0x0000000000000000000000000000000000000000',\n *       amount: 1n,\n *       index: 0,\n *       validatorIndex: 1,\n *     },\n *   ],\n * })\n * ```\n *\n * @param blockOverrides - The block overrides to convert.\n * @returns An instantiated {@link ox#BlockOverrides.Rpc}.\n */\nexport function toRpc(blockOverrides: BlockOverrides): Rpc {\n  return {\n    ...(typeof blockOverrides.baseFeePerGas === 'bigint' && {\n      baseFeePerGas: Hex.fromNumber(blockOverrides.baseFeePerGas),\n    }),\n    ...(typeof blockOverrides.blobBaseFee === 'bigint' && {\n      blobBaseFee: Hex.fromNumber(blockOverrides.blobBaseFee),\n    }),\n    ...(typeof blockOverrides.feeRecipient === 'string' && {\n      feeRecipient: blockOverrides.feeRecipient,\n    }),\n    ...(typeof blockOverrides.gasLimit === 'bigint' && {\n      gasLimit: Hex.fromNumber(blockOverrides.gasLimit),\n    }),\n    ...(typeof blockOverrides.number === 'bigint' && {\n      number: Hex.fromNumber(blockOverrides.number),\n    }),\n    ...(typeof blockOverrides.prevRandao === 'bigint' && {\n      prevRandao: Hex.fromNumber(blockOverrides.prevRandao),\n    }),\n    ...(typeof blockOverrides.time === 'bigint' && {\n      time: Hex.fromNumber(blockOverrides.time),\n    }),\n    ...(blockOverrides.withdrawals && {\n      withdrawals: blockOverrides.withdrawals.map(Withdrawal.toRpc),\n    }),\n  }\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","import type { Abi, ExtractAbiErrors } from 'abitype'\n\nimport {\n  AbiErrorInputsNotFoundError,\n  AbiErrorNotFoundError,\n} from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  ContractErrorArgs,\n  ContractErrorName,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { IsNarrowable, UnionEvaluate } from '../../types/utils.js'\nimport { type ConcatHexErrorType, concatHex } from '../data/concat.js'\nimport {\n  type ToFunctionSelectorErrorType,\n  toFunctionSelector,\n} from '../hash/toFunctionSelector.js'\nimport {\n  type EncodeAbiParametersErrorType,\n  encodeAbiParameters,\n} from './encodeAbiParameters.js'\nimport { type FormatAbiItemErrorType, formatAbiItem } from './formatAbiItem.js'\nimport { type GetAbiItemErrorType, getAbiItem } from './getAbiItem.js'\n\nconst docsPath = '/docs/contract/encodeErrorResult'\n\nexport type EncodeErrorResultParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  errorName extends ContractErrorName<abi> | undefined = ContractErrorName<abi>,\n  ///\n  hasErrors = abi extends Abi\n    ? Abi extends abi\n      ? true\n      : [ExtractAbiErrors<abi>] extends [never]\n        ? false\n        : true\n    : true,\n  allArgs = ContractErrorArgs<\n    abi,\n    errorName extends ContractErrorName<abi>\n      ? errorName\n      : ContractErrorName<abi>\n  >,\n  allErrorNames = ContractErrorName<abi>,\n> = {\n  abi: abi\n  args?: allArgs | undefined\n} & UnionEvaluate<\n  IsNarrowable<abi, Abi> extends true\n    ? abi['length'] extends 1\n      ? { errorName?: errorName | allErrorNames | undefined }\n      : { errorName: errorName | allErrorNames }\n    : { errorName?: errorName | allErrorNames | undefined }\n> &\n  (hasErrors extends true ? unknown : never)\n\nexport type EncodeErrorResultReturnType = Hex\n\nexport type EncodeErrorResultErrorType =\n  | GetAbiItemErrorType\n  | FormatAbiItemErrorType\n  | ToFunctionSelectorErrorType\n  | EncodeAbiParametersErrorType\n  | ConcatHexErrorType\n  | ErrorType\n\nexport function encodeErrorResult<\n  const abi extends Abi | readonly unknown[],\n  errorName extends ContractErrorName<abi> | undefined = undefined,\n>(\n  parameters: EncodeErrorResultParameters<abi, errorName>,\n): EncodeErrorResultReturnType {\n  const { abi, errorName, args } = parameters as EncodeErrorResultParameters\n\n  let abiItem = abi[0]\n  if (errorName) {\n    const item = getAbiItem({ abi, args, name: errorName })\n    if (!item) throw new AbiErrorNotFoundError(errorName, { docsPath })\n    abiItem = item\n  }\n\n  if (abiItem.type !== 'error')\n    throw new AbiErrorNotFoundError(undefined, { docsPath })\n\n  const definition = formatAbiItem(abiItem)\n  const signature = toFunctionSelector(definition)\n\n  let data: Hex = '0x'\n  if (args && args.length > 0) {\n    if (!abiItem.inputs)\n      throw new AbiErrorInputsNotFoundError(abiItem.name, { docsPath })\n    data = encodeAbiParameters(abiItem.inputs, args)\n  }\n  return concatHex([signature, data])\n}\n","import type { Abi, AbiStateMutability, ExtractAbiFunctions } from 'abitype'\n\nimport {\n  AbiFunctionNotFoundError,\n  AbiFunctionOutputsNotFoundError,\n  InvalidArrayError,\n} from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  ContractFunctionName,\n  ContractFunctionReturnType,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { IsNarrowable, UnionEvaluate } from '../../types/utils.js'\nimport {\n  type EncodeAbiParametersErrorType,\n  encodeAbiParameters,\n} from './encodeAbiParameters.js'\nimport { type GetAbiItemErrorType, getAbiItem } from './getAbiItem.js'\n\nconst docsPath = '/docs/contract/encodeFunctionResult'\n\nexport type EncodeFunctionResultParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  functionName extends\n    | ContractFunctionName<abi>\n    | undefined = ContractFunctionName<abi>,\n  ///\n  hasFunctions = abi extends Abi\n    ? Abi extends abi\n      ? true\n      : [ExtractAbiFunctions<abi>] extends [never]\n        ? false\n        : true\n    : true,\n  allFunctionNames = ContractFunctionName<abi>,\n> = {\n  abi: abi\n  result?:\n    | ContractFunctionReturnType<\n        abi,\n        AbiStateMutability,\n        functionName extends ContractFunctionName<abi>\n          ? functionName\n          : ContractFunctionName<abi>,\n        never // allow all args. required for overloads to work.\n      >\n    | undefined\n} & UnionEvaluate<\n  IsNarrowable<abi, Abi> extends true\n    ? abi['length'] extends 1\n      ? { functionName?: functionName | allFunctionNames | undefined }\n      : { functionName: functionName | allFunctionNames }\n    : { functionName?: functionName | allFunctionNames | undefined }\n> &\n  (hasFunctions extends true ? unknown : never)\n\nexport type EncodeFunctionResultReturnType = Hex\n\nexport type EncodeFunctionResultErrorType =\n  | AbiFunctionOutputsNotFoundError\n  | AbiFunctionNotFoundError\n  | EncodeAbiParametersErrorType\n  | GetAbiItemErrorType\n  | ErrorType\n\nexport function encodeFunctionResult<\n  const abi extends Abi | readonly unknown[],\n  functionName extends ContractFunctionName<abi> | undefined = undefined,\n>(\n  parameters: EncodeFunctionResultParameters<abi, functionName>,\n): EncodeFunctionResultReturnType {\n  const { abi, functionName, result } =\n    parameters as EncodeFunctionResultParameters\n\n  let abiItem = abi[0]\n  if (functionName) {\n    const item = getAbiItem({ abi, name: functionName })\n    if (!item) throw new AbiFunctionNotFoundError(functionName, { docsPath })\n    abiItem = item\n  }\n\n  if (abiItem.type !== 'function')\n    throw new AbiFunctionNotFoundError(undefined, { docsPath })\n\n  if (!abiItem.outputs)\n    throw new AbiFunctionOutputsNotFoundError(abiItem.name, { docsPath })\n\n  const values = (() => {\n    if (abiItem.outputs.length === 0) return []\n    if (abiItem.outputs.length === 1) return [result]\n    if (Array.isArray(result)) return result\n    throw new InvalidArrayError(result)\n  })()\n\n  return encodeAbiParameters(abiItem.outputs, values)\n}\n","import { batchGatewayAbi } from '../../constants/abis.js'\nimport { solidityError } from '../../constants/solidity.js'\nimport type { Hex } from '../../types/misc.js'\nimport { decodeFunctionData } from '../abi/decodeFunctionData.js'\nimport { encodeErrorResult } from '../abi/encodeErrorResult.js'\nimport { encodeFunctionResult } from '../abi/encodeFunctionResult.js'\nimport type {\n  CcipRequestErrorType,\n  CcipRequestParameters,\n  CcipRequestReturnType,\n} from '../ccip.js'\n\nexport const localBatchGatewayUrl = 'x-batch-gateway:true'\n\nexport async function localBatchGatewayRequest(parameters: {\n  data: Hex\n  ccipRequest: (\n    parameters: CcipRequestParameters,\n  ) => Promise<CcipRequestReturnType>\n}): Promise<Hex> {\n  const { data, ccipRequest } = parameters\n\n  const {\n    args: [queries],\n  } = decodeFunctionData({ abi: batchGatewayAbi, data })\n\n  const failures: boolean[] = []\n  const responses: Hex[] = []\n  await Promise.all(\n    queries.map(async (query, i) => {\n      try {\n        responses[i] = query.urls.includes(localBatchGatewayUrl)\n          ? await localBatchGatewayRequest({ data: query.data, ccipRequest })\n          : await ccipRequest(query)\n        failures[i] = false\n      } catch (err) {\n        failures[i] = true\n        responses[i] = encodeError(err as CcipRequestErrorType)\n      }\n    }),\n  )\n\n  return encodeFunctionResult({\n    abi: batchGatewayAbi,\n    functionName: 'query',\n    result: [failures, responses],\n  })\n}\n\nfunction encodeError(error: CcipRequestErrorType): Hex {\n  if (error.name === 'HttpRequestError' && error.status)\n    return encodeErrorResult({\n      abi: batchGatewayAbi,\n      errorName: 'HttpError',\n      args: [error.status, error.shortMessage],\n    })\n  return encodeErrorResult({\n    abi: [solidityError],\n    errorName: 'Error',\n    args: ['shortMessage' in error ? error.shortMessage : error.message],\n  })\n}\n","import {\n  NegativeOffsetError,\n  type NegativeOffsetErrorType,\n  PositionOutOfBoundsError,\n  type PositionOutOfBoundsErrorType,\n  RecursiveReadLimitExceededError,\n  type RecursiveReadLimitExceededErrorType,\n} from '../errors/cursor.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport type { ByteArray } from '../types/misc.js'\n\nexport type Cursor = {\n  bytes: ByteArray\n  dataView: DataView\n  position: number\n  positionReadCount: Map<number, number>\n  recursiveReadCount: number\n  recursiveReadLimit: number\n  remaining: number\n  assertReadLimit(position?: number): void\n  assertPosition(position: number): void\n  decrementPosition(offset: number): void\n  getReadCount(position?: number): number\n  incrementPosition(offset: number): void\n  inspectByte(position?: number): ByteArray[number]\n  inspectBytes(length: number, position?: number): ByteArray\n  inspectUint8(position?: number): number\n  inspectUint16(position?: number): number\n  inspectUint24(position?: number): number\n  inspectUint32(position?: number): number\n  pushByte(byte: ByteArray[number]): void\n  pushBytes(bytes: ByteArray): void\n  pushUint8(value: number): void\n  pushUint16(value: number): void\n  pushUint24(value: number): void\n  pushUint32(value: number): void\n  readByte(): ByteArray[number]\n  readBytes(length: number, size?: number): ByteArray\n  readUint8(): number\n  readUint16(): number\n  readUint24(): number\n  readUint32(): number\n  setPosition(position: number): () => void\n  _touch(): void\n}\n\ntype CursorErrorType =\n  | CursorAssertPositionErrorType\n  | CursorDecrementPositionErrorType\n  | CursorIncrementPositionErrorType\n  | ErrorType\n\ntype CursorAssertPositionErrorType = PositionOutOfBoundsErrorType | ErrorType\n\ntype CursorDecrementPositionErrorType = NegativeOffsetErrorType | ErrorType\n\ntype CursorIncrementPositionErrorType = NegativeOffsetErrorType | ErrorType\n\ntype StaticCursorErrorType =\n  | NegativeOffsetErrorType\n  | RecursiveReadLimitExceededErrorType\n\nconst staticCursor: Cursor = {\n  bytes: new Uint8Array(),\n  dataView: new DataView(new ArrayBuffer(0)),\n  position: 0,\n  positionReadCount: new Map(),\n  recursiveReadCount: 0,\n  recursiveReadLimit: Number.POSITIVE_INFINITY,\n  assertReadLimit() {\n    if (this.recursiveReadCount >= this.recursiveReadLimit)\n      throw new RecursiveReadLimitExceededError({\n        count: this.recursiveReadCount + 1,\n        limit: this.recursiveReadLimit,\n      })\n  },\n  assertPosition(position) {\n    if (position < 0 || position > this.bytes.length - 1)\n      throw new PositionOutOfBoundsError({\n        length: this.bytes.length,\n        position,\n      })\n  },\n  decrementPosition(offset) {\n    if (offset < 0) throw new NegativeOffsetError({ offset })\n    const position = this.position - offset\n    this.assertPosition(position)\n    this.position = position\n  },\n  getReadCount(position) {\n    return this.positionReadCount.get(position || this.position) || 0\n  },\n  incrementPosition(offset) {\n    if (offset < 0) throw new NegativeOffsetError({ offset })\n    const position = this.position + offset\n    this.assertPosition(position)\n    this.position = position\n  },\n  inspectByte(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position)\n    return this.bytes[position]\n  },\n  inspectBytes(length, position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + length - 1)\n    return this.bytes.subarray(position, position + length)\n  },\n  inspectUint8(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position)\n    return this.bytes[position]\n  },\n  inspectUint16(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + 1)\n    return this.dataView.getUint16(position)\n  },\n  inspectUint24(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + 2)\n    return (\n      (this.dataView.getUint16(position) << 8) +\n      this.dataView.getUint8(position + 2)\n    )\n  },\n  inspectUint32(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + 3)\n    return this.dataView.getUint32(position)\n  },\n  pushByte(byte: ByteArray[number]) {\n    this.assertPosition(this.position)\n    this.bytes[this.position] = byte\n    this.position++\n  },\n  pushBytes(bytes: ByteArray) {\n    this.assertPosition(this.position + bytes.length - 1)\n    this.bytes.set(bytes, this.position)\n    this.position += bytes.length\n  },\n  pushUint8(value: number) {\n    this.assertPosition(this.position)\n    this.bytes[this.position] = value\n    this.position++\n  },\n  pushUint16(value: number) {\n    this.assertPosition(this.position + 1)\n    this.dataView.setUint16(this.position, value)\n    this.position += 2\n  },\n  pushUint24(value: number) {\n    this.assertPosition(this.position + 2)\n    this.dataView.setUint16(this.position, value >> 8)\n    this.dataView.setUint8(this.position + 2, value & ~4294967040)\n    this.position += 3\n  },\n  pushUint32(value: number) {\n    this.assertPosition(this.position + 3)\n    this.dataView.setUint32(this.position, value)\n    this.position += 4\n  },\n  readByte() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectByte()\n    this.position++\n    return value\n  },\n  readBytes(length, size) {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectBytes(length)\n    this.position += size ?? length\n    return value\n  },\n  readUint8() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectUint8()\n    this.position += 1\n    return value\n  },\n  readUint16() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectUint16()\n    this.position += 2\n    return value\n  },\n  readUint24() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectUint24()\n    this.position += 3\n    return value\n  },\n  readUint32() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectUint32()\n    this.position += 4\n    return value\n  },\n  get remaining() {\n    return this.bytes.length - this.position\n  },\n  setPosition(position) {\n    const oldPosition = this.position\n    this.assertPosition(position)\n    this.position = position\n    return () => (this.position = oldPosition)\n  },\n  _touch() {\n    if (this.recursiveReadLimit === Number.POSITIVE_INFINITY) return\n    const count = this.getReadCount()\n    this.positionReadCount.set(this.position, count + 1)\n    if (count > 0) this.recursiveReadCount++\n  },\n}\n\ntype CursorConfig = { recursiveReadLimit?: number | undefined }\n\nexport type CreateCursorErrorType =\n  | CursorErrorType\n  | StaticCursorErrorType\n  | ErrorType\n\nexport function createCursor(\n  bytes: ByteArray,\n  { recursiveReadLimit = 8_192 }: CursorConfig = {},\n): Cursor {\n  const cursor: Cursor = Object.create(staticCursor)\n  cursor.bytes = bytes\n  cursor.dataView = new DataView(\n    bytes.buffer,\n    bytes.byteOffset,\n    bytes.byteLength,\n  )\n  cursor.positionReadCount = new Map()\n  cursor.recursiveReadLimit = recursiveReadLimit\n  return cursor\n}\n","import type { AbiEventParameter, AbiParameter } from '../abi.js'\nimport { execTyped } from '../regex.js'\nimport type { IsNarrowable, Join } from '../types.js'\nimport type { AssertName } from './types/signatures.js'\n\n/**\n * Formats {@link AbiParameter} to human-readable ABI parameter.\n *\n * @param abiParameter - ABI parameter\n * @returns Human-readable ABI parameter\n *\n * @example\n * type Result = FormatAbiParameter<{ type: 'address'; name: 'from'; }>\n * //   ^? type Result = 'address from'\n */\nexport type FormatAbiParameter<\n  abiParameter extends AbiParameter | AbiEventParameter,\n> = abiParameter extends {\n  name?: infer name extends string\n  type: `tuple${infer array}`\n  components: infer components extends readonly AbiParameter[]\n  indexed?: infer indexed extends boolean\n}\n  ? FormatAbiParameter<\n      {\n        type: `(${Join<\n          {\n            [key in keyof components]: FormatAbiParameter<\n              {\n                type: components[key]['type']\n              } & (IsNarrowable<components[key]['name'], string> extends true\n                ? { name: components[key]['name'] }\n                : unknown) &\n                (components[key] extends { components: readonly AbiParameter[] }\n                  ? { components: components[key]['components'] }\n                  : unknown)\n            >\n          },\n          ', '\n        >})${array}`\n      } & (IsNarrowable<name, string> extends true ? { name: name } : unknown) &\n        (IsNarrowable<indexed, boolean> extends true\n          ? { indexed: indexed }\n          : unknown)\n    >\n  : `${abiParameter['type']}${abiParameter extends { indexed: true }\n      ? ' indexed'\n      : ''}${abiParameter['name'] extends infer name extends string\n      ? name extends ''\n        ? ''\n        : ` ${AssertName<name>}`\n      : ''}`\n\n// https://regexr.com/7f7rv\nconst tupleRegex = /^tuple(?<array>(\\[(\\d*)\\])*)$/\n\n/**\n * Formats {@link AbiParameter} to human-readable ABI parameter.\n *\n * @param abiParameter - ABI parameter\n * @returns Human-readable ABI parameter\n *\n * @example\n * const result = formatAbiParameter({ type: 'address', name: 'from' })\n * //    ^? const result: 'address from'\n */\nexport function formatAbiParameter<\n  const abiParameter extends AbiParameter | AbiEventParameter,\n>(abiParameter: abiParameter): FormatAbiParameter<abiParameter> {\n  type Result = FormatAbiParameter<abiParameter>\n\n  let type = abiParameter.type\n  if (tupleRegex.test(abiParameter.type) && 'components' in abiParameter) {\n    type = '('\n    const length = abiParameter.components.length as number\n    for (let i = 0; i < length; i++) {\n      const component = abiParameter.components[i]!\n      type += formatAbiParameter(component)\n      if (i < length - 1) type += ', '\n    }\n    const result = execTyped<{ array?: string }>(tupleRegex, abiParameter.type)\n    type += `)${result?.array ?? ''}`\n    return formatAbiParameter({\n      ...abiParameter,\n      type,\n    }) as Result\n  }\n  // Add `indexed` to type if in `abiParameter`\n  if ('indexed' in abiParameter && abiParameter.indexed)\n    type = `${type} indexed`\n  // Return human-readable ABI parameter\n  if (abiParameter.name) return `${type} ${abiParameter.name}` as Result\n  return type as Result\n}\n","import type { AbiEventParameter, AbiParameter } from '../abi.js'\nimport type { Join } from '../types.js'\nimport {\n  type FormatAbiParameter,\n  formatAbiParameter,\n} from './formatAbiParameter.js'\n\n/**\n * Formats {@link AbiParameter}s to human-readable ABI parameter.\n *\n * @param abiParameters - ABI parameters\n * @returns Human-readable ABI parameters\n *\n * @example\n * type Result = FormatAbiParameters<[\n *   // ^? type Result = 'address from, uint256 tokenId'\n *   { type: 'address'; name: 'from'; },\n *   { type: 'uint256'; name: 'tokenId'; },\n * ]>\n */\nexport type FormatAbiParameters<\n  abiParameters extends readonly [\n    AbiParameter | AbiEventParameter,\n    ...(readonly (AbiParameter | AbiEventParameter)[]),\n  ],\n> = Join<\n  {\n    [key in keyof abiParameters]: FormatAbiParameter<abiParameters[key]>\n  },\n  ', '\n>\n\n/**\n * Formats {@link AbiParameter}s to human-readable ABI parameters.\n *\n * @param abiParameters - ABI parameters\n * @returns Human-readable ABI parameters\n *\n * @example\n * const result = formatAbiParameters([\n *   //  ^? const result: 'address from, uint256 tokenId'\n *   { type: 'address', name: 'from' },\n *   { type: 'uint256', name: 'tokenId' },\n * ])\n */\nexport function formatAbiParameters<\n  const abiParameters extends readonly [\n    AbiParameter | AbiEventParameter,\n    ...(readonly (AbiParameter | AbiEventParameter)[]),\n  ],\n>(abiParameters: abiParameters): FormatAbiParameters<abiParameters> {\n  let params = ''\n  const length = abiParameters.length\n  for (let i = 0; i < length; i++) {\n    const abiParameter = abiParameters[i]!\n    params += formatAbiParameter(abiParameter)\n    if (i !== length - 1) params += ', '\n  }\n  return params as FormatAbiParameters<abiParameters>\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * Internal webcrypto alias.\n * We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n * See utils.ts for details.\n * @module\n */\ndeclare const globalThis: Record<string, any> | undefined;\nexport const crypto: any =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n","/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n/** Checks if something is Uint8Array. Be careful: nodejs Buffer will return true. */\nexport function isBytes(a: unknown): a is Uint8Array {\n  return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n\n/** Asserts something is positive integer. */\nexport function anumber(n: number): void {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error('positive integer expected, got ' + n);\n}\n\n/** Asserts something is Uint8Array. */\nexport function abytes(b: Uint8Array | undefined, ...lengths: number[]): void {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n\n/** Asserts something is hash */\nexport function ahash(h: IHash): void {\n  if (typeof h !== 'function' || typeof h.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.createHasher');\n  anumber(h.outputLen);\n  anumber(h.blockLen);\n}\n\n/** Asserts a hash instance has not been destroyed / finished */\nexport function aexists(instance: any, checkFinished = true): void {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\n\n/** Asserts output is properly-sized byte array */\nexport function aoutput(out: any, instance: any): void {\n  abytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error('digestInto() expects output buffer of length at least ' + min);\n  }\n}\n\n/** Generic type encompassing 8/16/32-byte arrays - but not 64-byte. */\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n/** Cast u8 / u16 / u32 to u8. */\nexport function u8(arr: TypedArray): Uint8Array {\n  return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n\n/** Cast u8 / u16 / u32 to u32. */\nexport function u32(arr: TypedArray): Uint32Array {\n  return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n\n/** Zeroize a byte array. Warning: JS provides no guarantees. */\nexport function clean(...arrays: TypedArray[]): void {\n  for (let i = 0; i < arrays.length; i++) {\n    arrays[i].fill(0);\n  }\n}\n\n/** Create DataView of an array for easy byte-level manipulation. */\nexport function createView(arr: TypedArray): DataView {\n  return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n\n/** The rotate right (circular right shift) operation for uint32 */\nexport function rotr(word: number, shift: number): number {\n  return (word << (32 - shift)) | (word >>> shift);\n}\n\n/** The rotate left (circular left shift) operation for uint32 */\nexport function rotl(word: number, shift: number): number {\n  return (word << shift) | ((word >>> (32 - shift)) >>> 0);\n}\n\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE: boolean = /* @__PURE__ */ (() =>\n  new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n\n/** The byte swap operation for uint32 */\nexport function byteSwap(word: number): number {\n  return (\n    ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff)\n  );\n}\n/** Conditionally byte swap if on a big-endian platform */\nexport const swap8IfBE: (n: number) => number = isLE\n  ? (n: number) => n\n  : (n: number) => byteSwap(n);\n\n/** @deprecated */\nexport const byteSwapIfBE: typeof swap8IfBE = swap8IfBE;\n/** In place byte swap for Uint32Array */\nexport function byteSwap32(arr: Uint32Array): Uint32Array {\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = byteSwap(arr[i]);\n  }\n  return arr;\n}\n\nexport const swap32IfBE: (u: Uint32Array) => Uint32Array = isLE\n  ? (u: Uint32Array) => u\n  : byteSwap32;\n\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\nconst hasHexBuiltin: boolean = /* @__PURE__ */ (() =>\n  // @ts-ignore\n  typeof Uint8Array.from([]).toHex === 'function' && typeof Uint8Array.fromHex === 'function')();\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n\n/**\n * Convert byte array to hex string. Uses built-in function, when available.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // @ts-ignore\n  if (hasHexBuiltin) return bytes.toHex();\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 } as const;\nfunction asciiToBase16(ch: number): number | undefined {\n  if (ch >= asciis._0 && ch <= asciis._9) return ch - asciis._0; // '2' => 50-48\n  if (ch >= asciis.A && ch <= asciis.F) return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n  if (ch >= asciis.a && ch <= asciis.f) return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n  return;\n}\n\n/**\n * Convert hex string to byte array. Uses built-in function, when available.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // @ts-ignore\n  if (hasHexBuiltin) return Uint8Array.fromHex(hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n  }\n  return array;\n}\n\n/**\n * There is no setImmediate in browser and setTimeout is slow.\n * Call of async fn will return Promise, which will be fullfiled only on\n * next scheduler queue processing step and this is exactly what we need.\n */\nexport const nextTick = async (): Promise<void> => {};\n\n/** Returns control to thread each 'tick' ms to avoid blocking. */\nexport async function asyncLoop(\n  iters: number,\n  tick: number,\n  cb: (i: number) => void\n): Promise<void> {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols, but ts doesn't see them: https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\n/**\n * Converts string to bytes using UTF8 encoding.\n * @example utf8ToBytes('abc') // Uint8Array.from([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error('string expected');\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n/**\n * Converts bytes to string using UTF8 encoding.\n * @example bytesToUtf8(Uint8Array.from([97, 98, 99])) // 'abc'\n */\nexport function bytesToUtf8(bytes: Uint8Array): string {\n  return new TextDecoder().decode(bytes);\n}\n\n/** Accepted input of hash functions. Strings are converted to byte arrays. */\nexport type Input = string | Uint8Array;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  abytes(data);\n  return data;\n}\n\n/** KDFs can accept string or Uint8Array for user convenience. */\nexport type KDFInput = string | Uint8Array;\n/**\n * Helper for KDFs: consumes uint8array or string.\n * When string is passed, does utf8 decoding, using TextDecoder.\n */\nexport function kdfInputToBytes(data: KDFInput): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  abytes(data);\n  return data;\n}\n\n/** Copies several Uint8Arrays into one. */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n    throw new Error('options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\n/** Hash interface. */\nexport type IHash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\n\n/** For runtime check if class implements interface */\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  abstract clone(): T;\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\n/** Hash function */\nexport type CHash = ReturnType<typeof createHasher>;\n/** Hash function with output */\nexport type CHashO = ReturnType<typeof createOptHasher>;\n/** XOF with output */\nexport type CHashXO = ReturnType<typeof createXOFer>;\n\n/** Wraps hash function, creating an interface on top of it */\nexport function createHasher<T extends Hash<T>>(\n  hashCons: () => Hash<T>\n): {\n  (msg: Input): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(): Hash<T>;\n} {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function createOptHasher<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n): {\n  (msg: Input, opts?: T): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(opts?: T): Hash<H>;\n} {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts?: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function createXOFer<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n): {\n  (msg: Input, opts?: T): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(opts?: T): HashXOF<H>;\n} {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts?: T) => hashCons(opts);\n  return hashC;\n}\nexport const wrapConstructor: typeof createHasher = createHasher;\nexport const wrapConstructorWithOpts: typeof createOptHasher = createOptHasher;\nexport const wrapXOFConstructorWithOpts: typeof createXOFer = createXOFer;\n\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  // Legacy Node.js compatibility\n  if (crypto && typeof crypto.randomBytes === 'function') {\n    return Uint8Array.from(crypto.randomBytes(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n","import type { Address } from 'abitype'\n\nexport type ErrorType<name extends string = 'Error'> = Error & { name: name }\n\nexport const getContractAddress = (address: Address) => address\nexport const getUrl = (url: string) => url\n","import { etherUnits } from '../../constants/unit.js'\n\nimport { type FormatUnitsErrorType, formatUnits } from './formatUnits.js'\n\nexport type FormatEtherErrorType = FormatUnitsErrorType\n\n/**\n * Converts numerical wei to a string representation of ether.\n *\n * - Docs: https://viem.sh/docs/utilities/formatEther\n *\n * @example\n * import { formatEther } from 'viem'\n *\n * formatEther(1000000000000000000n)\n * // '1'\n */\nexport function formatEther(wei: bigint, unit: 'wei' | 'gwei' = 'wei') {\n  return formatUnits(wei, etherUnits[unit])\n}\n","/**\n * Internal helpers for u64. BigUint64Array is too slow as per 2025, so we implement it using Uint32Array.\n * @todo re-check https://issues.chromium.org/issues/42212588\n * @module\n */\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n\nfunction fromBig(\n  n: bigint,\n  le = false\n): {\n  h: number;\n  l: number;\n} {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nfunction split(lst: bigint[], le = false): Uint32Array[] {\n  const len = lst.length;\n  let Ah = new Uint32Array(len);\n  let Al = new Uint32Array(len);\n  for (let i = 0; i < len; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nconst toBig = (h: number, l: number): bigint => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, _l: number, s: number): number => h >>> s;\nconst shrSL = (h: number, l: number, s: number): number => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number): number => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number): number => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number): number => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number): number => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h: number, l: number): number => l;\nconst rotr32L = (h: number, _l: number): number => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number): number => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number): number => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number): number => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number): number => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(\n  Ah: number,\n  Al: number,\n  Bh: number,\n  Bl: number\n): {\n  h: number;\n  l: number;\n} {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number): number => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number): number =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number): number =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number): number =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number): number =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number): number =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nexport {\n  add, add3H, add3L, add4H, add4L, add5H, add5L, fromBig, rotlBH, rotlBL, rotlSH, rotlSL, rotr32H, rotr32L, rotrBH, rotrBL, rotrSH, rotrSL, shrSH, shrSL, split, toBig\n};\n// prettier-ignore\nconst u64: { fromBig: typeof fromBig; split: typeof split; toBig: (h: number, l: number) => bigint; shrSH: (h: number, _l: number, s: number) => number; shrSL: (h: number, l: number, s: number) => number; rotrSH: (h: number, l: number, s: number) => number; rotrSL: (h: number, l: number, s: number) => number; rotrBH: (h: number, l: number, s: number) => number; rotrBL: (h: number, l: number, s: number) => number; rotr32H: (_h: number, l: number) => number; rotr32L: (h: number, _l: number) => number; rotlSH: (h: number, l: number, s: number) => number; rotlSL: (h: number, l: number, s: number) => number; rotlBH: (h: number, l: number, s: number) => number; rotlBL: (h: number, l: number, s: number) => number; add: typeof add; add3L: (Al: number, Bl: number, Cl: number) => number; add3H: (low: number, Ah: number, Bh: number, Ch: number) => number; add4L: (Al: number, Bl: number, Cl: number, Dl: number) => number; add4H: (low: number, Ah: number, Bh: number, Ch: number, Dh: number) => number; add5H: (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) => number; add5L: (Al: number, Bl: number, Cl: number, Dl: number, El: number) => number; } = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","import type { Abi, AbiStateMutability, ExtractAbiFunctions } from 'abitype'\n\nimport {\n  AbiFunctionNotFoundError,\n  type AbiFunctionNotFoundErrorType,\n  AbiFunctionOutputsNotFoundError,\n  type AbiFunctionOutputsNotFoundErrorType,\n} from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  ContractFunctionArgs,\n  ContractFunctionName,\n  ContractFunctionReturnType,\n  Widen,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { IsNarrowable, UnionEvaluate } from '../../types/utils.js'\nimport {\n  type DecodeAbiParametersErrorType,\n  decodeAbiParameters,\n} from './decodeAbiParameters.js'\nimport { type GetAbiItemErrorType, getAbiItem } from './getAbiItem.js'\n\nconst docsPath = '/docs/contract/decodeFunctionResult'\n\nexport type DecodeFunctionResultParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  functionName extends\n    | ContractFunctionName<abi>\n    | undefined = ContractFunctionName<abi>,\n  args extends ContractFunctionArgs<\n    abi,\n    AbiStateMutability,\n    functionName extends ContractFunctionName<abi>\n      ? functionName\n      : ContractFunctionName<abi>\n  > = ContractFunctionArgs<\n    abi,\n    AbiStateMutability,\n    functionName extends ContractFunctionName<abi>\n      ? functionName\n      : ContractFunctionName<abi>\n  >,\n  ///\n  hasFunctions = abi extends Abi\n    ? Abi extends abi\n      ? true\n      : [ExtractAbiFunctions<abi>] extends [never]\n        ? false\n        : true\n    : true,\n  allArgs = ContractFunctionArgs<\n    abi,\n    AbiStateMutability,\n    functionName extends ContractFunctionName<abi>\n      ? functionName\n      : ContractFunctionName<abi>\n  >,\n  allFunctionNames = ContractFunctionName<abi>,\n> = {\n  abi: abi\n  data: Hex\n} & UnionEvaluate<\n  IsNarrowable<abi, Abi> extends true\n    ? abi['length'] extends 1\n      ? { functionName?: functionName | allFunctionNames | undefined }\n      : { functionName: functionName | allFunctionNames }\n    : { functionName?: functionName | allFunctionNames | undefined }\n> &\n  UnionEvaluate<\n    readonly [] extends allArgs\n      ? {\n          args?:\n            | allArgs // show all options\n            // infer value, widen inferred value of `args` conditionally to match `allArgs`\n            | (abi extends Abi\n                ? args extends allArgs\n                  ? Widen<args>\n                  : never\n                : never)\n            | undefined\n        }\n      : {\n          args?:\n            | allArgs // show all options\n            | (Widen<args> & (args extends allArgs ? unknown : never)) // infer value, widen inferred value of `args` match `allArgs` (e.g. avoid union `args: readonly [123n] | readonly [bigint]`)\n            | undefined\n        }\n  > &\n  (hasFunctions extends true ? unknown : never)\n\nexport type DecodeFunctionResultReturnType<\n  abi extends Abi | readonly unknown[] = Abi,\n  functionName extends\n    | ContractFunctionName<abi>\n    | undefined = ContractFunctionName<abi>,\n  args extends ContractFunctionArgs<\n    abi,\n    AbiStateMutability,\n    functionName extends ContractFunctionName<abi>\n      ? functionName\n      : ContractFunctionName<abi>\n  > = ContractFunctionArgs<\n    abi,\n    AbiStateMutability,\n    functionName extends ContractFunctionName<abi>\n      ? functionName\n      : ContractFunctionName<abi>\n  >,\n> = ContractFunctionReturnType<\n  abi,\n  AbiStateMutability,\n  functionName extends ContractFunctionName<abi>\n    ? functionName\n    : ContractFunctionName<abi>,\n  args\n>\n\nexport type DecodeFunctionResultErrorType =\n  | AbiFunctionNotFoundErrorType\n  | AbiFunctionOutputsNotFoundErrorType\n  | DecodeAbiParametersErrorType\n  | GetAbiItemErrorType\n  | ErrorType\n\nexport function decodeFunctionResult<\n  const abi extends Abi | readonly unknown[],\n  functionName extends ContractFunctionName<abi> | undefined = undefined,\n  const args extends ContractFunctionArgs<\n    abi,\n    AbiStateMutability,\n    functionName extends ContractFunctionName<abi>\n      ? functionName\n      : ContractFunctionName<abi>\n  > = ContractFunctionArgs<\n    abi,\n    AbiStateMutability,\n    functionName extends ContractFunctionName<abi>\n      ? functionName\n      : ContractFunctionName<abi>\n  >,\n>(\n  parameters: DecodeFunctionResultParameters<abi, functionName, args>,\n): DecodeFunctionResultReturnType<abi, functionName, args> {\n  const { abi, args, functionName, data } =\n    parameters as DecodeFunctionResultParameters\n\n  let abiItem = abi[0]\n  if (functionName) {\n    const item = getAbiItem({ abi, args, name: functionName })\n    if (!item) throw new AbiFunctionNotFoundError(functionName, { docsPath })\n    abiItem = item\n  }\n\n  if (abiItem.type !== 'function')\n    throw new AbiFunctionNotFoundError(undefined, { docsPath })\n  if (!abiItem.outputs)\n    throw new AbiFunctionOutputsNotFoundError(abiItem.name, { docsPath })\n\n  const values = decodeAbiParameters(abiItem.outputs, data)\n  if (values && values.length > 1)\n    return values as DecodeFunctionResultReturnType<abi, functionName, args>\n  if (values && values.length === 1)\n    return values[0] as DecodeFunctionResultReturnType<abi, functionName, args>\n  return undefined as DecodeFunctionResultReturnType<abi, functionName, args>\n}\n","import type {\n  AbiParameter,\n  AbiParametersToPrimitiveTypes,\n  AbiParameterToPrimitiveType,\n} from 'abitype'\n\nimport {\n  AbiEncodingArrayLengthMismatchError,\n  type AbiEncodingArrayLengthMismatchErrorType,\n  AbiEncodingBytesSizeMismatchError,\n  type AbiEncodingBytesSizeMismatchErrorType,\n  AbiEncodingLengthMismatchError,\n  type AbiEncodingLengthMismatchErrorType,\n  InvalidAbiEncodingTypeError,\n  type InvalidAbiEncodingTypeErrorType,\n  InvalidArrayError,\n  type InvalidArrayErrorType,\n} from '../../errors/abi.js'\nimport {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../../errors/address.js'\nimport { BaseError } from '../../errors/base.js'\nimport { IntegerOutOfRangeError } from '../../errors/encoding.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport { type IsAddressErrorType, isAddress } from '../address/isAddress.js'\nimport { type ConcatErrorType, concat } from '../data/concat.js'\nimport { type PadHexErrorType, padHex } from '../data/pad.js'\nimport { type SizeErrorType, size } from '../data/size.js'\nimport { type SliceErrorType, slice } from '../data/slice.js'\nimport {\n  type BoolToHexErrorType,\n  boolToHex,\n  type NumberToHexErrorType,\n  numberToHex,\n  type StringToHexErrorType,\n  stringToHex,\n} from '../encoding/toHex.js'\nimport { integerRegex } from '../regex.js'\n\nexport type EncodeAbiParametersReturnType = Hex\n\nexport type EncodeAbiParametersErrorType =\n  | AbiEncodingLengthMismatchErrorType\n  | PrepareParamsErrorType\n  | EncodeParamsErrorType\n  | ErrorType\n\n/**\n * @description Encodes a list of primitive values into an ABI-encoded hex value.\n *\n * - Docs: https://viem.sh/docs/abi/encodeAbiParameters#encodeabiparameters\n *\n *   Generates ABI encoded data using the [ABI specification](https://docs.soliditylang.org/en/latest/abi-spec), given a set of ABI parameters (inputs/outputs) and their corresponding values.\n *\n * @param params - a set of ABI Parameters (params), that can be in the shape of the inputs or outputs attribute of an ABI Item.\n * @param values - a set of values (values) that correspond to the given params.\n * @example\n * ```typescript\n * import { encodeAbiParameters } from 'viem'\n *\n * const encodedData = encodeAbiParameters(\n *   [\n *     { name: 'x', type: 'string' },\n *     { name: 'y', type: 'uint' },\n *     { name: 'z', type: 'bool' }\n *   ],\n *   ['wagmi', 420n, true]\n * )\n * ```\n *\n * You can also pass in Human Readable parameters with the parseAbiParameters utility.\n *\n * @example\n * ```typescript\n * import { encodeAbiParameters, parseAbiParameters } from 'viem'\n *\n * const encodedData = encodeAbiParameters(\n *   parseAbiParameters('string x, uint y, bool z'),\n *   ['wagmi', 420n, true]\n * )\n * ```\n */\nexport function encodeAbiParameters<\n  const params extends readonly AbiParameter[] | readonly unknown[],\n>(\n  params: params,\n  values: params extends readonly AbiParameter[]\n    ? AbiParametersToPrimitiveTypes<params>\n    : never,\n): EncodeAbiParametersReturnType {\n  if (params.length !== values.length)\n    throw new AbiEncodingLengthMismatchError({\n      expectedLength: params.length as number,\n      givenLength: values.length as any,\n    })\n  // Prepare the parameters to determine dynamic types to encode.\n  const preparedParams = prepareParams({\n    params: params as readonly AbiParameter[],\n    values: values as any,\n  })\n  const data = encodeParams(preparedParams)\n  if (data.length === 0) return '0x'\n  return data\n}\n\n/////////////////////////////////////////////////////////////////\n\ntype PreparedParam = { dynamic: boolean; encoded: Hex }\n\ntype TupleAbiParameter = AbiParameter & { components: readonly AbiParameter[] }\ntype Tuple = AbiParameterToPrimitiveType<TupleAbiParameter>\n\ntype PrepareParamsErrorType = PrepareParamErrorType | ErrorType\n\nfunction prepareParams<const params extends readonly AbiParameter[]>({\n  params,\n  values,\n}: {\n  params: params\n  values: AbiParametersToPrimitiveTypes<params>\n}) {\n  const preparedParams: PreparedParam[] = []\n  for (let i = 0; i < params.length; i++) {\n    preparedParams.push(prepareParam({ param: params[i], value: values[i] }))\n  }\n  return preparedParams\n}\n\ntype PrepareParamErrorType =\n  | EncodeAddressErrorType\n  | EncodeArrayErrorType\n  | EncodeBytesErrorType\n  | EncodeBoolErrorType\n  | EncodeNumberErrorType\n  | EncodeStringErrorType\n  | EncodeTupleErrorType\n  | GetArrayComponentsErrorType\n  | InvalidAbiEncodingTypeErrorType\n  | ErrorType\n\nfunction prepareParam<const param extends AbiParameter>({\n  param,\n  value,\n}: {\n  param: param\n  value: AbiParameterToPrimitiveType<param>\n}): PreparedParam {\n  const arrayComponents = getArrayComponents(param.type)\n  if (arrayComponents) {\n    const [length, type] = arrayComponents\n    return encodeArray(value, { length, param: { ...param, type } })\n  }\n  if (param.type === 'tuple') {\n    return encodeTuple(value as unknown as Tuple, {\n      param: param as TupleAbiParameter,\n    })\n  }\n  if (param.type === 'address') {\n    return encodeAddress(value as unknown as Hex)\n  }\n  if (param.type === 'bool') {\n    return encodeBool(value as unknown as boolean)\n  }\n  if (param.type.startsWith('uint') || param.type.startsWith('int')) {\n    const signed = param.type.startsWith('int')\n    const [, , size = '256'] = integerRegex.exec(param.type) ?? []\n    return encodeNumber(value as unknown as number, {\n      signed,\n      size: Number(size),\n    })\n  }\n  if (param.type.startsWith('bytes')) {\n    return encodeBytes(value as unknown as Hex, { param })\n  }\n  if (param.type === 'string') {\n    return encodeString(value as unknown as string)\n  }\n  throw new InvalidAbiEncodingTypeError(param.type, {\n    docsPath: '/docs/contract/encodeAbiParameters',\n  })\n}\n\n/////////////////////////////////////////////////////////////////\n\ntype EncodeParamsErrorType = NumberToHexErrorType | SizeErrorType | ErrorType\n\nfunction encodeParams(preparedParams: PreparedParam[]): Hex {\n  // 1. Compute the size of the static part of the parameters.\n  let staticSize = 0\n  for (let i = 0; i < preparedParams.length; i++) {\n    const { dynamic, encoded } = preparedParams[i]\n    if (dynamic) staticSize += 32\n    else staticSize += size(encoded)\n  }\n\n  // 2. Split the parameters into static and dynamic parts.\n  const staticParams: Hex[] = []\n  const dynamicParams: Hex[] = []\n  let dynamicSize = 0\n  for (let i = 0; i < preparedParams.length; i++) {\n    const { dynamic, encoded } = preparedParams[i]\n    if (dynamic) {\n      staticParams.push(numberToHex(staticSize + dynamicSize, { size: 32 }))\n      dynamicParams.push(encoded)\n      dynamicSize += size(encoded)\n    } else {\n      staticParams.push(encoded)\n    }\n  }\n\n  // 3. Concatenate static and dynamic parts.\n  return concat([...staticParams, ...dynamicParams])\n}\n\n/////////////////////////////////////////////////////////////////\n\ntype EncodeAddressErrorType =\n  | InvalidAddressErrorType\n  | IsAddressErrorType\n  | ErrorType\n\nfunction encodeAddress(value: Hex): PreparedParam {\n  if (!isAddress(value)) throw new InvalidAddressError({ address: value })\n  return { dynamic: false, encoded: padHex(value.toLowerCase() as Hex) }\n}\n\ntype EncodeArrayErrorType =\n  | AbiEncodingArrayLengthMismatchErrorType\n  | ConcatErrorType\n  | EncodeParamsErrorType\n  | InvalidArrayErrorType\n  | NumberToHexErrorType\n  // TODO: Add back once circular type reference is resolved\n  // | PrepareParamErrorType\n  | ErrorType\n\nfunction encodeArray<const param extends AbiParameter>(\n  value: AbiParameterToPrimitiveType<param>,\n  {\n    length,\n    param,\n  }: {\n    length: number | null\n    param: param\n  },\n): PreparedParam {\n  const dynamic = length === null\n\n  if (!Array.isArray(value)) throw new InvalidArrayError(value)\n  if (!dynamic && value.length !== length)\n    throw new AbiEncodingArrayLengthMismatchError({\n      expectedLength: length!,\n      givenLength: value.length,\n      type: `${param.type}[${length}]`,\n    })\n\n  let dynamicChild = false\n  const preparedParams: PreparedParam[] = []\n  for (let i = 0; i < value.length; i++) {\n    const preparedParam = prepareParam({ param, value: value[i] })\n    if (preparedParam.dynamic) dynamicChild = true\n    preparedParams.push(preparedParam)\n  }\n\n  if (dynamic || dynamicChild) {\n    const data = encodeParams(preparedParams)\n    if (dynamic) {\n      const length = numberToHex(preparedParams.length, { size: 32 })\n      return {\n        dynamic: true,\n        encoded: preparedParams.length > 0 ? concat([length, data]) : length,\n      }\n    }\n    if (dynamicChild) return { dynamic: true, encoded: data }\n  }\n  return {\n    dynamic: false,\n    encoded: concat(preparedParams.map(({ encoded }) => encoded)),\n  }\n}\n\ntype EncodeBytesErrorType =\n  | AbiEncodingBytesSizeMismatchErrorType\n  | ConcatErrorType\n  | PadHexErrorType\n  | NumberToHexErrorType\n  | SizeErrorType\n  | ErrorType\n\nfunction encodeBytes<const param extends AbiParameter>(\n  value: Hex,\n  { param }: { param: param },\n): PreparedParam {\n  const [, paramSize] = param.type.split('bytes')\n  const bytesSize = size(value)\n  if (!paramSize) {\n    let value_ = value\n    // If the size is not divisible by 32 bytes, pad the end\n    // with empty bytes to the ceiling 32 bytes.\n    if (bytesSize % 32 !== 0)\n      value_ = padHex(value_, {\n        dir: 'right',\n        size: Math.ceil((value.length - 2) / 2 / 32) * 32,\n      })\n    return {\n      dynamic: true,\n      encoded: concat([padHex(numberToHex(bytesSize, { size: 32 })), value_]),\n    }\n  }\n  if (bytesSize !== Number.parseInt(paramSize, 10))\n    throw new AbiEncodingBytesSizeMismatchError({\n      expectedSize: Number.parseInt(paramSize, 10),\n      value,\n    })\n  return { dynamic: false, encoded: padHex(value, { dir: 'right' }) }\n}\n\ntype EncodeBoolErrorType = PadHexErrorType | BoolToHexErrorType | ErrorType\n\nfunction encodeBool(value: boolean): PreparedParam {\n  if (typeof value !== 'boolean')\n    throw new BaseError(\n      `Invalid boolean value: \"${value}\" (type: ${typeof value}). Expected: \\`true\\` or \\`false\\`.`,\n    )\n  return { dynamic: false, encoded: padHex(boolToHex(value)) }\n}\n\ntype EncodeNumberErrorType = NumberToHexErrorType | ErrorType\n\nfunction encodeNumber(\n  value: number,\n  { signed, size = 256 }: { signed: boolean; size?: number | undefined },\n): PreparedParam {\n  if (typeof size === 'number') {\n    const max = 2n ** (BigInt(size) - (signed ? 1n : 0n)) - 1n\n    const min = signed ? -max - 1n : 0n\n    if (value > max || value < min)\n      throw new IntegerOutOfRangeError({\n        max: max.toString(),\n        min: min.toString(),\n        signed,\n        size: size / 8,\n        value: value.toString(),\n      })\n  }\n  return {\n    dynamic: false,\n    encoded: numberToHex(value, {\n      size: 32,\n      signed,\n    }),\n  }\n}\n\ntype EncodeStringErrorType =\n  | ConcatErrorType\n  | NumberToHexErrorType\n  | PadHexErrorType\n  | SizeErrorType\n  | SliceErrorType\n  | StringToHexErrorType\n  | ErrorType\n\nfunction encodeString(value: string): PreparedParam {\n  const hexValue = stringToHex(value)\n  const partsLength = Math.ceil(size(hexValue) / 32)\n  const parts: Hex[] = []\n  for (let i = 0; i < partsLength; i++) {\n    parts.push(\n      padHex(slice(hexValue, i * 32, (i + 1) * 32), {\n        dir: 'right',\n      }),\n    )\n  }\n  return {\n    dynamic: true,\n    encoded: concat([\n      padHex(numberToHex(size(hexValue), { size: 32 })),\n      ...parts,\n    ]),\n  }\n}\n\ntype EncodeTupleErrorType =\n  | ConcatErrorType\n  | EncodeParamsErrorType\n  // TODO: Add back once circular type reference is resolved\n  // | PrepareParamErrorType\n  | ErrorType\n\nfunction encodeTuple<\n  const param extends AbiParameter & { components: readonly AbiParameter[] },\n>(\n  value: AbiParameterToPrimitiveType<param>,\n  { param }: { param: param },\n): PreparedParam {\n  let dynamic = false\n  const preparedParams: PreparedParam[] = []\n  for (let i = 0; i < param.components.length; i++) {\n    const param_ = param.components[i]\n    const index = Array.isArray(value) ? i : param_.name\n    const preparedParam = prepareParam({\n      param: param_,\n      value: (value as any)[index!] as readonly unknown[],\n    })\n    preparedParams.push(preparedParam)\n    if (preparedParam.dynamic) dynamic = true\n  }\n  return {\n    dynamic,\n    encoded: dynamic\n      ? encodeParams(preparedParams)\n      : concat(preparedParams.map(({ encoded }) => encoded)),\n  }\n}\n\ntype GetArrayComponentsErrorType = ErrorType\n\nexport function getArrayComponents(\n  type: string,\n): [length: number | null, innerType: string] | undefined {\n  const matches = type.match(/^(.*)\\[(\\d+)?\\]$/)\n  return matches\n    ? // Return `null` if the array is dynamic.\n      [matches[2] ? Number(matches[2]) : null, matches[1]]\n    : undefined\n}\n","import { BaseError } from '../../errors.js'\n\nexport class InvalidAbiItemError extends BaseError {\n  override name = 'InvalidAbiItemError'\n\n  constructor({ signature }: { signature: string | object }) {\n    super('Failed to parse ABI item.', {\n      details: `parseAbiItem(${JSON.stringify(signature, null, 2)})`,\n      docsPath: '/api/human#parseabiitem-1',\n    })\n  }\n}\n\nexport class UnknownTypeError extends BaseError {\n  override name = 'UnknownTypeError'\n\n  constructor({ type }: { type: string }) {\n    super('Unknown type.', {\n      metaMessages: [\n        `Type \"${type}\" is not a valid ABI type. Perhaps you forgot to include a struct signature?`,\n      ],\n    })\n  }\n}\n\nexport class UnknownSolidityTypeError extends BaseError {\n  override name = 'UnknownSolidityTypeError'\n\n  constructor({ type }: { type: string }) {\n    super('Unknown type.', {\n      metaMessages: [`Type \"${type}\" is not a valid ABI type.`],\n    })\n  }\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\n\nexport type IsHexErrorType = ErrorType\n\nexport function isHex(\n  value: unknown,\n  { strict = true }: { strict?: boolean | undefined } = {},\n): value is Hex {\n  if (!value) return false\n  if (typeof value !== 'string') return false\n  return strict ? /^0x[0-9a-fA-F]*$/.test(value) : value.startsWith('0x')\n}\n","import type { StateMapping, StateOverride } from '../types/stateOverride.js'\nimport { BaseError } from './base.js'\n\nexport type AccountStateConflictErrorType = AccountStateConflictError & {\n  name: 'AccountStateConflictError'\n}\n\nexport class AccountStateConflictError extends BaseError {\n  constructor({ address }: { address: string }) {\n    super(`State for account \"${address}\" is set multiple times.`, {\n      name: 'AccountStateConflictError',\n    })\n  }\n}\n\nexport type StateAssignmentConflictErrorType = StateAssignmentConflictError & {\n  name: 'StateAssignmentConflictError'\n}\n\nexport class StateAssignmentConflictError extends BaseError {\n  constructor() {\n    super('state and stateDiff are set on the same account.', {\n      name: 'StateAssignmentConflictError',\n    })\n  }\n}\n\n/** @internal */\nexport function prettyStateMapping(stateMapping: StateMapping) {\n  return stateMapping.reduce((pretty, { slot, value }) => {\n    return `${pretty}        ${slot}: ${value}\\n`\n  }, '')\n}\n\nexport function prettyStateOverride(stateOverride: StateOverride) {\n  return stateOverride\n    .reduce((pretty, { address, ...state }) => {\n      let val = `${pretty}    ${address}:\\n`\n      if (state.nonce) val += `      nonce: ${state.nonce}\\n`\n      if (state.balance) val += `      balance: ${state.balance}\\n`\n      if (state.code) val += `      code: ${state.code}\\n`\n      if (state.state) {\n        val += '      state:\\n'\n        val += prettyStateMapping(state.state)\n      }\n      if (state.stateDiff) {\n        val += '      stateDiff:\\n'\n        val += prettyStateMapping(state.stateDiff)\n      }\n      return val\n    }, '  State Override:\\n')\n    .slice(0, -1)\n}\n","export const version = '2.37.5'\n","import { version } from './version.js'\n\ntype ErrorConfig = {\n  getDocsUrl?: ((args: BaseErrorParameters) => string | undefined) | undefined\n  version?: string | undefined\n}\n\nlet errorConfig: ErrorConfig = {\n  getDocsUrl: ({\n    docsBaseUrl,\n    docsPath = '',\n    docsSlug,\n  }: BaseErrorParameters) =>\n    docsPath\n      ? `${docsBaseUrl ?? 'https://viem.sh'}${docsPath}${\n          docsSlug ? `#${docsSlug}` : ''\n        }`\n      : undefined,\n  version: `viem@${version}`,\n}\n\nexport function setErrorConfig(config: ErrorConfig) {\n  errorConfig = config\n}\n\ntype BaseErrorParameters = {\n  cause?: BaseError | Error | undefined\n  details?: string | undefined\n  docsBaseUrl?: string | undefined\n  docsPath?: string | undefined\n  docsSlug?: string | undefined\n  metaMessages?: string[] | undefined\n  name?: string | undefined\n}\n\nexport type BaseErrorType = BaseError & { name: 'BaseError' }\nexport class BaseError extends Error {\n  details: string\n  docsPath?: string | undefined\n  metaMessages?: string[] | undefined\n  shortMessage: string\n  version: string\n\n  override name = 'BaseError'\n\n  constructor(shortMessage: string, args: BaseErrorParameters = {}) {\n    const details = (() => {\n      if (args.cause instanceof BaseError) return args.cause.details\n      if (args.cause?.message) return args.cause.message\n      return args.details!\n    })()\n    const docsPath = (() => {\n      if (args.cause instanceof BaseError)\n        return args.cause.docsPath || args.docsPath\n      return args.docsPath\n    })()\n    const docsUrl = errorConfig.getDocsUrl?.({ ...args, docsPath })\n\n    const message = [\n      shortMessage || 'An error occurred.',\n      '',\n      ...(args.metaMessages ? [...args.metaMessages, ''] : []),\n      ...(docsUrl ? [`Docs: ${docsUrl}`] : []),\n      ...(details ? [`Details: ${details}`] : []),\n      ...(errorConfig.version ? [`Version: ${errorConfig.version}`] : []),\n    ].join('\\n')\n\n    super(message, args.cause ? { cause: args.cause } : undefined)\n\n    this.details = details\n    this.docsPath = docsPath\n    this.metaMessages = args.metaMessages\n    this.name = args.name ?? this.name\n    this.shortMessage = shortMessage\n    this.version = version\n  }\n\n  walk(): Error\n  walk(fn: (err: unknown) => boolean): Error | null\n  walk(fn?: any): any {\n    return walk(this, fn)\n  }\n}\n\nfunction walk(\n  err: unknown,\n  fn?: ((err: unknown) => boolean) | undefined,\n): unknown {\n  if (fn?.(err)) return err\n  if (\n    err &&\n    typeof err === 'object' &&\n    'cause' in err &&\n    err.cause !== undefined\n  )\n    return walk(err.cause, fn)\n  return fn ? null : err\n}\n","import type { Abi } from 'abitype'\n\nimport {\n  AbiConstructorNotFoundError,\n  type AbiConstructorNotFoundErrorType,\n  AbiConstructorParamsNotFoundError,\n} from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ContractConstructorArgs } from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { UnionEvaluate } from '../../types/utils.js'\nimport { type ConcatHexErrorType, concatHex } from '../data/concat.js'\nimport {\n  type EncodeAbiParametersErrorType,\n  encodeAbiParameters,\n} from './encodeAbiParameters.js'\n\nconst docsPath = '/docs/contract/encodeDeployData'\n\nexport type EncodeDeployDataParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  ///\n  hasConstructor = abi extends Abi\n    ? Abi extends abi\n      ? true\n      : [Extract<abi[number], { type: 'constructor' }>] extends [never]\n        ? false\n        : true\n    : true,\n  allArgs = ContractConstructorArgs<abi>,\n> = {\n  abi: abi\n  bytecode: Hex\n} & UnionEvaluate<\n  hasConstructor extends false\n    ? { args?: undefined }\n    : readonly [] extends allArgs\n      ? { args?: allArgs | undefined }\n      : { args: allArgs }\n>\n\nexport type EncodeDeployDataReturnType = Hex\n\nexport type EncodeDeployDataErrorType =\n  | AbiConstructorNotFoundErrorType\n  | ConcatHexErrorType\n  | EncodeAbiParametersErrorType\n  | ErrorType\n\nexport function encodeDeployData<const abi extends Abi | readonly unknown[]>(\n  parameters: EncodeDeployDataParameters<abi>,\n): EncodeDeployDataReturnType {\n  const { abi, args, bytecode } = parameters as EncodeDeployDataParameters\n  if (!args || args.length === 0) return bytecode\n\n  const description = abi.find((x) => 'type' in x && x.type === 'constructor')\n  if (!description) throw new AbiConstructorNotFoundError({ docsPath })\n  if (!('inputs' in description))\n    throw new AbiConstructorParamsNotFoundError({ docsPath })\n  if (!description.inputs || description.inputs.length === 0)\n    throw new AbiConstructorParamsNotFoundError({ docsPath })\n\n  const data = encodeAbiParameters(description.inputs, args)\n  return concatHex([bytecode, data!])\n}\n","export const arrayRegex = /^(.*)\\[([0-9]*)\\]$/\n\n// `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\n// https://regexr.com/6va55\nexport const bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/\n\n// `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\n// https://regexr.com/6v8hp\nexport const integerRegex =\n  /^(u?int)(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/\n","import {\n  ChainDoesNotSupportContract,\n  type ChainDoesNotSupportContractErrorType,\n} from '../../errors/chain.js'\nimport type { Chain, ChainContract } from '../../types/chain.js'\n\nexport type GetChainContractAddressErrorType =\n  ChainDoesNotSupportContractErrorType\n\nexport function getChainContractAddress({\n  blockNumber,\n  chain,\n  contract: name,\n}: {\n  blockNumber?: bigint | undefined\n  chain: Chain\n  contract: string\n}) {\n  const contract = (chain?.contracts as Record<string, ChainContract>)?.[name]\n  if (!contract)\n    throw new ChainDoesNotSupportContract({\n      chain,\n      contract: { name },\n    })\n\n  if (\n    blockNumber &&\n    contract.blockCreated &&\n    contract.blockCreated > blockNumber\n  )\n    throw new ChainDoesNotSupportContract({\n      blockNumber,\n      chain,\n      contract: {\n        name,\n        blockCreated: contract.blockCreated,\n      },\n    })\n\n  return contract.address\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { ChainFormatter } from '../../types/chain.js'\n\nexport type ExtractErrorType = ErrorType\n\n/**\n * @description Picks out the keys from `value` that exist in the formatter..\n */\nexport function extract(\n  value_: Record<string, unknown>,\n  { format }: { format?: ChainFormatter['format'] | undefined },\n) {\n  if (!format) return {}\n\n  const value: Record<string, unknown> = {}\n  function extract_(formatted: Record<string, any>) {\n    const keys = Object.keys(formatted)\n    for (const key of keys) {\n      if (key in value_) value[key] = value_[key]\n      if (\n        formatted[key] &&\n        typeof formatted[key] === 'object' &&\n        !Array.isArray(formatted[key])\n      )\n        extract_(formatted[key])\n    }\n  }\n\n  const formatted = format(value_ || {})\n  extract_(formatted)\n\n  return value\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\nimport { type IsHexErrorType, isHex } from './isHex.js'\n\nexport type SizeErrorType = IsHexErrorType | ErrorType\n\n/**\n * @description Retrieves the size of the value (in bytes).\n *\n * @param value The value (hex or byte array) to retrieve the size of.\n * @returns The size of the value (in bytes).\n */\nexport function size(value: Hex | ByteArray) {\n  if (isHex(value, { strict: false })) return Math.ceil((value.length - 2) / 2)\n  return value.length\n}\n","import type { Abi, AbiParameter, Address } from 'abitype'\n\nimport {\n  AbiItemAmbiguityError,\n  type AbiItemAmbiguityErrorType,\n} from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  AbiItem,\n  AbiItemArgs,\n  AbiItemName,\n  ExtractAbiItemForArgs,\n  Widen,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { UnionEvaluate } from '../../types/utils.js'\nimport { type IsHexErrorType, isHex } from '../../utils/data/isHex.js'\nimport { type IsAddressErrorType, isAddress } from '../address/isAddress.js'\nimport { toEventSelector } from '../hash/toEventSelector.js'\nimport {\n  type ToFunctionSelectorErrorType,\n  toFunctionSelector,\n} from '../hash/toFunctionSelector.js'\n\nexport type GetAbiItemParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  name extends AbiItemName<abi> = AbiItemName<abi>,\n  args extends AbiItemArgs<abi, name> | undefined = AbiItemArgs<abi, name>,\n  ///\n  allArgs = AbiItemArgs<abi, name>,\n  allNames = AbiItemName<abi>,\n> = {\n  abi: abi\n  name:\n    | allNames // show all options\n    | (name extends allNames ? name : never) // infer value\n    | Hex // function selector\n} & UnionEvaluate<\n  readonly [] extends allArgs\n    ? {\n        args?:\n          | allArgs // show all options\n          // infer value, widen inferred value of `args` conditionally to match `allArgs`\n          | (abi extends Abi\n              ? args extends allArgs\n                ? Widen<args>\n                : never\n              : never)\n          | undefined\n      }\n    : {\n        args?:\n          | allArgs // show all options\n          | (Widen<args> & (args extends allArgs ? unknown : never)) // infer value, widen inferred value of `args` match `allArgs` (e.g. avoid union `args: readonly [123n] | readonly [bigint]`)\n          | undefined\n      }\n>\n\nexport type GetAbiItemErrorType =\n  | IsArgOfTypeErrorType\n  | IsHexErrorType\n  | ToFunctionSelectorErrorType\n  | AbiItemAmbiguityErrorType\n  | ErrorType\n\nexport type GetAbiItemReturnType<\n  abi extends Abi | readonly unknown[] = Abi,\n  name extends AbiItemName<abi> = AbiItemName<abi>,\n  args extends AbiItemArgs<abi, name> | undefined = AbiItemArgs<abi, name>,\n> = abi extends Abi\n  ? Abi extends abi\n    ? AbiItem | undefined\n    : ExtractAbiItemForArgs<\n        abi,\n        name,\n        args extends AbiItemArgs<abi, name> ? args : AbiItemArgs<abi, name>\n      >\n  : AbiItem | undefined\n\nexport function getAbiItem<\n  const abi extends Abi | readonly unknown[],\n  name extends AbiItemName<abi>,\n  const args extends AbiItemArgs<abi, name> | undefined = undefined,\n>(\n  parameters: GetAbiItemParameters<abi, name, args>,\n): GetAbiItemReturnType<abi, name, args> {\n  const { abi, args = [], name } = parameters as unknown as GetAbiItemParameters\n\n  const isSelector = isHex(name, { strict: false })\n  const abiItems = (abi as Abi).filter((abiItem) => {\n    if (isSelector) {\n      if (abiItem.type === 'function')\n        return toFunctionSelector(abiItem) === name\n      if (abiItem.type === 'event') return toEventSelector(abiItem) === name\n      return false\n    }\n    return 'name' in abiItem && abiItem.name === name\n  })\n\n  if (abiItems.length === 0)\n    return undefined as GetAbiItemReturnType<abi, name, args>\n  if (abiItems.length === 1)\n    return abiItems[0] as GetAbiItemReturnType<abi, name, args>\n\n  let matchedAbiItem: AbiItem | undefined\n  for (const abiItem of abiItems) {\n    if (!('inputs' in abiItem)) continue\n    if (!args || args.length === 0) {\n      if (!abiItem.inputs || abiItem.inputs.length === 0)\n        return abiItem as GetAbiItemReturnType<abi, name, args>\n      continue\n    }\n    if (!abiItem.inputs) continue\n    if (abiItem.inputs.length === 0) continue\n    if (abiItem.inputs.length !== args.length) continue\n    const matched = args.every((arg, index) => {\n      const abiParameter = 'inputs' in abiItem && abiItem.inputs![index]\n      if (!abiParameter) return false\n      return isArgOfType(arg, abiParameter)\n    })\n    if (matched) {\n      // Check for ambiguity against already matched parameters (e.g. `address` vs `bytes20`).\n      if (\n        matchedAbiItem &&\n        'inputs' in matchedAbiItem &&\n        matchedAbiItem.inputs\n      ) {\n        const ambiguousTypes = getAmbiguousTypes(\n          abiItem.inputs,\n          matchedAbiItem.inputs,\n          args as readonly unknown[],\n        )\n        if (ambiguousTypes)\n          throw new AbiItemAmbiguityError(\n            {\n              abiItem,\n              type: ambiguousTypes[0],\n            },\n            {\n              abiItem: matchedAbiItem,\n              type: ambiguousTypes[1],\n            },\n          )\n      }\n\n      matchedAbiItem = abiItem\n    }\n  }\n\n  if (matchedAbiItem)\n    return matchedAbiItem as GetAbiItemReturnType<abi, name, args>\n  return abiItems[0] as GetAbiItemReturnType<abi, name, args>\n}\n\ntype IsArgOfTypeErrorType = IsAddressErrorType | ErrorType\n\n/** @internal */\nexport function isArgOfType(arg: unknown, abiParameter: AbiParameter): boolean {\n  const argType = typeof arg\n  const abiParameterType = abiParameter.type\n  switch (abiParameterType) {\n    case 'address':\n      return isAddress(arg as Address, { strict: false })\n    case 'bool':\n      return argType === 'boolean'\n    case 'function':\n      return argType === 'string'\n    case 'string':\n      return argType === 'string'\n    default: {\n      if (abiParameterType === 'tuple' && 'components' in abiParameter)\n        return Object.values(abiParameter.components).every(\n          (component, index) => {\n            return isArgOfType(\n              Object.values(arg as unknown[] | Record<string, unknown>)[index],\n              component as AbiParameter,\n            )\n          },\n        )\n\n      // `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\n      // https://regexr.com/6v8hp\n      if (\n        /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/.test(\n          abiParameterType,\n        )\n      )\n        return argType === 'number' || argType === 'bigint'\n\n      // `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\n      // https://regexr.com/6va55\n      if (/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/.test(abiParameterType))\n        return argType === 'string' || arg instanceof Uint8Array\n\n      // fixed-length (`<type>[M]`) and dynamic (`<type>[]`) arrays\n      // https://regexr.com/6va6i\n      if (/[a-z]+[1-9]{0,3}(\\[[0-9]{0,}\\])+$/.test(abiParameterType)) {\n        return (\n          Array.isArray(arg) &&\n          arg.every((x: unknown) =>\n            isArgOfType(x, {\n              ...abiParameter,\n              // Pop off `[]` or `[M]` from end of type\n              type: abiParameterType.replace(/(\\[[0-9]{0,}\\])$/, ''),\n            } as AbiParameter),\n          )\n        )\n      }\n\n      return false\n    }\n  }\n}\n\n/** @internal */\nexport function getAmbiguousTypes(\n  sourceParameters: readonly AbiParameter[],\n  targetParameters: readonly AbiParameter[],\n  args: AbiItemArgs,\n): AbiParameter['type'][] | undefined {\n  for (const parameterIndex in sourceParameters) {\n    const sourceParameter = sourceParameters[parameterIndex]\n    const targetParameter = targetParameters[parameterIndex]\n\n    if (\n      sourceParameter.type === 'tuple' &&\n      targetParameter.type === 'tuple' &&\n      'components' in sourceParameter &&\n      'components' in targetParameter\n    )\n      return getAmbiguousTypes(\n        sourceParameter.components,\n        targetParameter.components,\n        (args as any)[parameterIndex],\n      )\n\n    const types = [sourceParameter.type, targetParameter.type]\n\n    const ambiguous = (() => {\n      if (types.includes('address') && types.includes('bytes20')) return true\n      if (types.includes('address') && types.includes('string'))\n        return isAddress(args[parameterIndex] as Address, { strict: false })\n      if (types.includes('address') && types.includes('bytes'))\n        return isAddress(args[parameterIndex] as Address, { strict: false })\n      return false\n    })()\n\n    if (ambiguous) return types\n  }\n\n  return\n}\n","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","/**\n * @license React\n * use-sync-external-store-shim.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\");\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is,\n  useState = React.useState,\n  useEffect = React.useEffect,\n  useLayoutEffect = React.useLayoutEffect,\n  useDebugValue = React.useDebugValue;\nfunction useSyncExternalStore$2(subscribe, getSnapshot) {\n  var value = getSnapshot(),\n    _useState = useState({ inst: { value: value, getSnapshot: getSnapshot } }),\n    inst = _useState[0].inst,\n    forceUpdate = _useState[1];\n  useLayoutEffect(\n    function () {\n      inst.value = value;\n      inst.getSnapshot = getSnapshot;\n      checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n    },\n    [subscribe, value, getSnapshot]\n  );\n  useEffect(\n    function () {\n      checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n      return subscribe(function () {\n        checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n      });\n    },\n    [subscribe]\n  );\n  useDebugValue(value);\n  return value;\n}\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  inst = inst.value;\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(inst, nextValue);\n  } catch (error) {\n    return !0;\n  }\n}\nfunction useSyncExternalStore$1(subscribe, getSnapshot) {\n  return getSnapshot();\n}\nvar shim =\n  \"undefined\" === typeof window ||\n  \"undefined\" === typeof window.document ||\n  \"undefined\" === typeof window.document.createElement\n    ? useSyncExternalStore$1\n    : useSyncExternalStore$2;\nexports.useSyncExternalStore =\n  void 0 !== React.useSyncExternalStore ? React.useSyncExternalStore : shim;\n","import { formatGwei } from '../utils/unit/formatGwei.js'\n\nimport { BaseError } from './base.js'\n\n/**\n * geth:    https://github.com/ethereum/go-ethereum/blob/master/core/error.go\n *          https://github.com/ethereum/go-ethereum/blob/master/core/types/transaction.go#L34-L41\n *\n * erigon:  https://github.com/ledgerwatch/erigon/blob/master/core/error.go\n *          https://github.com/ledgerwatch/erigon/blob/master/core/types/transaction.go#L41-L46\n *\n * anvil:   https://github.com/foundry-rs/foundry/blob/master/anvil/src/eth/error.rs#L108\n */\nexport type ExecutionRevertedErrorType = ExecutionRevertedError & {\n  code: 3\n  name: 'ExecutionRevertedError'\n}\nexport class ExecutionRevertedError extends BaseError {\n  static code = 3\n  static nodeMessage = /execution reverted/\n\n  constructor({\n    cause,\n    message,\n  }: { cause?: BaseError | undefined; message?: string | undefined } = {}) {\n    const reason = message\n      ?.replace('execution reverted: ', '')\n      ?.replace('execution reverted', '')\n    super(\n      `Execution reverted ${\n        reason ? `with reason: ${reason}` : 'for an unknown reason'\n      }.`,\n      {\n        cause,\n        name: 'ExecutionRevertedError',\n      },\n    )\n  }\n}\n\nexport type FeeCapTooHighErrorType = FeeCapTooHighError & {\n  name: 'FeeCapTooHighError'\n}\nexport class FeeCapTooHighError extends BaseError {\n  static nodeMessage =\n    /max fee per gas higher than 2\\^256-1|fee cap higher than 2\\^256-1/\n  constructor({\n    cause,\n    maxFeePerGas,\n  }: {\n    cause?: BaseError | undefined\n    maxFeePerGas?: bigint | undefined\n  } = {}) {\n    super(\n      `The fee cap (\\`maxFeePerGas\\`${\n        maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''\n      }) cannot be higher than the maximum allowed value (2^256-1).`,\n      {\n        cause,\n        name: 'FeeCapTooHighError',\n      },\n    )\n  }\n}\n\nexport type FeeCapTooLowErrorType = FeeCapTooLowError & {\n  name: 'FeeCapTooLowError'\n}\nexport class FeeCapTooLowError extends BaseError {\n  static nodeMessage =\n    /max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/\n  constructor({\n    cause,\n    maxFeePerGas,\n  }: {\n    cause?: BaseError | undefined\n    maxFeePerGas?: bigint | undefined\n  } = {}) {\n    super(\n      `The fee cap (\\`maxFeePerGas\\`${\n        maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)}` : ''\n      } gwei) cannot be lower than the block base fee.`,\n      {\n        cause,\n        name: 'FeeCapTooLowError',\n      },\n    )\n  }\n}\n\nexport type NonceTooHighErrorType = NonceTooHighError & {\n  name: 'NonceTooHighError'\n}\nexport class NonceTooHighError extends BaseError {\n  static nodeMessage = /nonce too high/\n  constructor({\n    cause,\n    nonce,\n  }: { cause?: BaseError | undefined; nonce?: number | undefined } = {}) {\n    super(\n      `Nonce provided for the transaction ${\n        nonce ? `(${nonce}) ` : ''\n      }is higher than the next one expected.`,\n      { cause, name: 'NonceTooHighError' },\n    )\n  }\n}\n\nexport type NonceTooLowErrorType = NonceTooLowError & {\n  name: 'NonceTooLowError'\n}\nexport class NonceTooLowError extends BaseError {\n  static nodeMessage =\n    /nonce too low|transaction already imported|already known/\n  constructor({\n    cause,\n    nonce,\n  }: { cause?: BaseError | undefined; nonce?: number | undefined } = {}) {\n    super(\n      [\n        `Nonce provided for the transaction ${\n          nonce ? `(${nonce}) ` : ''\n        }is lower than the current nonce of the account.`,\n        'Try increasing the nonce or find the latest nonce with `getTransactionCount`.',\n      ].join('\\n'),\n      { cause, name: 'NonceTooLowError' },\n    )\n  }\n}\n\nexport type NonceMaxValueErrorType = NonceMaxValueError & {\n  name: 'NonceMaxValueError'\n}\nexport class NonceMaxValueError extends BaseError {\n  static nodeMessage = /nonce has max value/\n  constructor({\n    cause,\n    nonce,\n  }: { cause?: BaseError | undefined; nonce?: number | undefined } = {}) {\n    super(\n      `Nonce provided for the transaction ${\n        nonce ? `(${nonce}) ` : ''\n      }exceeds the maximum allowed nonce.`,\n      { cause, name: 'NonceMaxValueError' },\n    )\n  }\n}\n\nexport type InsufficientFundsErrorType = InsufficientFundsError & {\n  name: 'InsufficientFundsError'\n}\nexport class InsufficientFundsError extends BaseError {\n  static nodeMessage =\n    /insufficient funds|exceeds transaction sender account balance/\n  constructor({ cause }: { cause?: BaseError | undefined } = {}) {\n    super(\n      [\n        'The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.',\n      ].join('\\n'),\n      {\n        cause,\n        metaMessages: [\n          'This error could arise when the account does not have enough funds to:',\n          ' - pay for the total gas fee,',\n          ' - pay for the value to send.',\n          ' ',\n          'The cost of the transaction is calculated as `gas * gas fee + value`, where:',\n          ' - `gas` is the amount of gas needed for transaction to execute,',\n          ' - `gas fee` is the gas fee,',\n          ' - `value` is the amount of ether to send to the recipient.',\n        ],\n        name: 'InsufficientFundsError',\n      },\n    )\n  }\n}\n\nexport type IntrinsicGasTooHighErrorType = IntrinsicGasTooHighError & {\n  name: 'IntrinsicGasTooHighError'\n}\nexport class IntrinsicGasTooHighError extends BaseError {\n  static nodeMessage = /intrinsic gas too high|gas limit reached/\n  constructor({\n    cause,\n    gas,\n  }: { cause?: BaseError | undefined; gas?: bigint | undefined } = {}) {\n    super(\n      `The amount of gas ${\n        gas ? `(${gas}) ` : ''\n      }provided for the transaction exceeds the limit allowed for the block.`,\n      {\n        cause,\n        name: 'IntrinsicGasTooHighError',\n      },\n    )\n  }\n}\n\nexport type IntrinsicGasTooLowErrorType = IntrinsicGasTooLowError & {\n  name: 'IntrinsicGasTooLowError'\n}\nexport class IntrinsicGasTooLowError extends BaseError {\n  static nodeMessage = /intrinsic gas too low/\n  constructor({\n    cause,\n    gas,\n  }: { cause?: BaseError | undefined; gas?: bigint | undefined } = {}) {\n    super(\n      `The amount of gas ${\n        gas ? `(${gas}) ` : ''\n      }provided for the transaction is too low.`,\n      {\n        cause,\n        name: 'IntrinsicGasTooLowError',\n      },\n    )\n  }\n}\n\nexport type TransactionTypeNotSupportedErrorType =\n  TransactionTypeNotSupportedError & {\n    name: 'TransactionTypeNotSupportedError'\n  }\nexport class TransactionTypeNotSupportedError extends BaseError {\n  static nodeMessage = /transaction type not valid/\n  constructor({ cause }: { cause?: BaseError | undefined }) {\n    super('The transaction type is not supported for this chain.', {\n      cause,\n      name: 'TransactionTypeNotSupportedError',\n    })\n  }\n}\n\nexport type TipAboveFeeCapErrorType = TipAboveFeeCapError & {\n  name: 'TipAboveFeeCapError'\n}\nexport class TipAboveFeeCapError extends BaseError {\n  static nodeMessage =\n    /max priority fee per gas higher than max fee per gas|tip higher than fee cap/\n  constructor({\n    cause,\n    maxPriorityFeePerGas,\n    maxFeePerGas,\n  }: {\n    cause?: BaseError | undefined\n    maxPriorityFeePerGas?: bigint | undefined\n    maxFeePerGas?: bigint | undefined\n  } = {}) {\n    super(\n      [\n        `The provided tip (\\`maxPriorityFeePerGas\\`${\n          maxPriorityFeePerGas\n            ? ` = ${formatGwei(maxPriorityFeePerGas)} gwei`\n            : ''\n        }) cannot be higher than the fee cap (\\`maxFeePerGas\\`${\n          maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''\n        }).`,\n      ].join('\\n'),\n      {\n        cause,\n        name: 'TipAboveFeeCapError',\n      },\n    )\n  }\n}\n\nexport type UnknownNodeErrorType = UnknownNodeError & {\n  name: 'UnknownNodeError'\n}\nexport class UnknownNodeError extends BaseError {\n  constructor({ cause }: { cause?: BaseError | undefined }) {\n    super(`An error occurred while executing: ${cause?.shortMessage}`, {\n      cause,\n      name: 'UnknownNodeError',\n    })\n  }\n}\n","import { stringify } from '../utils/stringify.js'\n\nimport { BaseError } from './base.js'\nimport { getUrl } from './utils.js'\n\nexport type HttpRequestErrorType = HttpRequestError & {\n  name: 'HttpRequestError'\n}\nexport class HttpRequestError extends BaseError {\n  body?: { [x: string]: unknown } | { [y: string]: unknown }[] | undefined\n  headers?: Headers | undefined\n  status?: number | undefined\n  url: string\n\n  constructor({\n    body,\n    cause,\n    details,\n    headers,\n    status,\n    url,\n  }: {\n    body?: { [x: string]: unknown } | { [y: string]: unknown }[] | undefined\n    cause?: Error | undefined\n    details?: string | undefined\n    headers?: Headers | undefined\n    status?: number | undefined\n    url: string\n  }) {\n    super('HTTP request failed.', {\n      cause,\n      details,\n      metaMessages: [\n        status && `Status: ${status}`,\n        `URL: ${getUrl(url)}`,\n        body && `Request body: ${stringify(body)}`,\n      ].filter(Boolean) as string[],\n      name: 'HttpRequestError',\n    })\n    this.body = body\n    this.headers = headers\n    this.status = status\n    this.url = url\n  }\n}\n\nexport type WebSocketRequestErrorType = WebSocketRequestError & {\n  name: 'WebSocketRequestError'\n}\nexport class WebSocketRequestError extends BaseError {\n  constructor({\n    body,\n    cause,\n    details,\n    url,\n  }: {\n    body?: { [key: string]: unknown } | undefined\n    cause?: Error | undefined\n    details?: string | undefined\n    url: string\n  }) {\n    super('WebSocket request failed.', {\n      cause,\n      details,\n      metaMessages: [\n        `URL: ${getUrl(url)}`,\n        body && `Request body: ${stringify(body)}`,\n      ].filter(Boolean) as string[],\n      name: 'WebSocketRequestError',\n    })\n  }\n}\n\nexport type RpcRequestErrorType = RpcRequestError & {\n  name: 'RpcRequestError'\n}\nexport class RpcRequestError extends BaseError {\n  code: number\n  data?: unknown\n\n  constructor({\n    body,\n    error,\n    url,\n  }: {\n    body: { [x: string]: unknown } | { [y: string]: unknown }[]\n    error: { code: number; data?: unknown; message: string }\n    url: string\n  }) {\n    super('RPC Request failed.', {\n      cause: error as any,\n      details: error.message,\n      metaMessages: [`URL: ${getUrl(url)}`, `Request body: ${stringify(body)}`],\n      name: 'RpcRequestError',\n    })\n    this.code = error.code\n    this.data = error.data\n  }\n}\n\nexport type SocketClosedErrorType = SocketClosedError & {\n  name: 'SocketClosedError'\n}\nexport class SocketClosedError extends BaseError {\n  constructor({\n    url,\n  }: {\n    url?: string | undefined\n  } = {}) {\n    super('The socket has been closed.', {\n      metaMessages: [url && `URL: ${getUrl(url)}`].filter(Boolean) as string[],\n      name: 'SocketClosedError',\n    })\n  }\n}\n\nexport type TimeoutErrorType = TimeoutError & {\n  name: 'TimeoutError'\n}\nexport class TimeoutError extends BaseError {\n  constructor({\n    body,\n    url,\n  }: {\n    body: { [x: string]: unknown } | { [y: string]: unknown }[]\n    url: string\n  }) {\n    super('The request took too long to respond.', {\n      details: 'The request timed out.',\n      metaMessages: [`URL: ${getUrl(url)}`, `Request body: ${stringify(body)}`],\n      name: 'TimeoutError',\n    })\n  }\n}\n","import type {\n  Abi,\n  AbiConstructor,\n  AbiError,\n  AbiEvent,\n  AbiEventParameter,\n  AbiFallback,\n  AbiFunction,\n  AbiParameter,\n  AbiReceive,\n  AbiStateMutability,\n} from '../abi.js'\nimport {\n  type FormatAbiParameters as FormatAbiParameters_,\n  formatAbiParameters,\n} from './formatAbiParameters.js'\nimport type { AssertName } from './types/signatures.js'\n\n/**\n * Formats ABI item (e.g. error, event, function) into human-readable ABI item\n *\n * @param abiItem - ABI item\n * @returns Human-readable ABI item\n */\nexport type FormatAbiItem<abiItem extends Abi[number]> =\n  Abi[number] extends abiItem\n    ? string\n    :\n        | (abiItem extends AbiFunction\n            ? AbiFunction extends abiItem\n              ? string\n              : `function ${AssertName<abiItem['name']>}(${FormatAbiParameters<\n                  abiItem['inputs']\n                >})${abiItem['stateMutability'] extends Exclude<\n                  AbiStateMutability,\n                  'nonpayable'\n                >\n                  ? ` ${abiItem['stateMutability']}`\n                  : ''}${abiItem['outputs']['length'] extends 0\n                  ? ''\n                  : ` returns (${FormatAbiParameters<abiItem['outputs']>})`}`\n            : never)\n        | (abiItem extends AbiEvent\n            ? AbiEvent extends abiItem\n              ? string\n              : `event ${AssertName<abiItem['name']>}(${FormatAbiParameters<\n                  abiItem['inputs']\n                >})`\n            : never)\n        | (abiItem extends AbiError\n            ? AbiError extends abiItem\n              ? string\n              : `error ${AssertName<abiItem['name']>}(${FormatAbiParameters<\n                  abiItem['inputs']\n                >})`\n            : never)\n        | (abiItem extends AbiConstructor\n            ? AbiConstructor extends abiItem\n              ? string\n              : `constructor(${FormatAbiParameters<\n                  abiItem['inputs']\n                >})${abiItem['stateMutability'] extends 'payable'\n                  ? ' payable'\n                  : ''}`\n            : never)\n        | (abiItem extends AbiFallback\n            ? AbiFallback extends abiItem\n              ? string\n              : `fallback() external${abiItem['stateMutability'] extends 'payable'\n                  ? ' payable'\n                  : ''}`\n            : never)\n        | (abiItem extends AbiReceive\n            ? AbiReceive extends abiItem\n              ? string\n              : 'receive() external payable'\n            : never)\n\ntype FormatAbiParameters<\n  abiParameters extends readonly (AbiParameter | AbiEventParameter)[],\n> = abiParameters['length'] extends 0\n  ? ''\n  : FormatAbiParameters_<\n      abiParameters extends readonly [\n        AbiParameter | AbiEventParameter,\n        ...(readonly (AbiParameter | AbiEventParameter)[]),\n      ]\n        ? abiParameters\n        : never\n    >\n\n/**\n * Formats ABI item (e.g. error, event, function) into human-readable ABI item\n *\n * @param abiItem - ABI item\n * @returns Human-readable ABI item\n */\nexport function formatAbiItem<const abiItem extends Abi[number]>(\n  abiItem: abiItem,\n): FormatAbiItem<abiItem> {\n  type Result = FormatAbiItem<abiItem>\n  type Params = readonly [\n    AbiParameter | AbiEventParameter,\n    ...(readonly (AbiParameter | AbiEventParameter)[]),\n  ]\n\n  if (abiItem.type === 'function')\n    return `function ${abiItem.name}(${formatAbiParameters(\n      abiItem.inputs as Params,\n    )})${\n      abiItem.stateMutability && abiItem.stateMutability !== 'nonpayable'\n        ? ` ${abiItem.stateMutability}`\n        : ''\n    }${\n      abiItem.outputs?.length\n        ? ` returns (${formatAbiParameters(abiItem.outputs as Params)})`\n        : ''\n    }`\n  if (abiItem.type === 'event')\n    return `event ${abiItem.name}(${formatAbiParameters(\n      abiItem.inputs as Params,\n    )})`\n  if (abiItem.type === 'error')\n    return `error ${abiItem.name}(${formatAbiParameters(\n      abiItem.inputs as Params,\n    )})`\n  if (abiItem.type === 'constructor')\n    return `constructor(${formatAbiParameters(abiItem.inputs as Params)})${\n      abiItem.stateMutability === 'payable' ? ' payable' : ''\n    }`\n  if (abiItem.type === 'fallback')\n    return `fallback() external${\n      abiItem.stateMutability === 'payable' ? ' payable' : ''\n    }` as Result\n  return 'receive() external payable' as Result\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\nexport type ConcatReturnType<value extends Hex | ByteArray> = value extends Hex\n  ? Hex\n  : ByteArray\n\nexport type ConcatErrorType =\n  | ConcatBytesErrorType\n  | ConcatHexErrorType\n  | ErrorType\n\nexport function concat<value extends Hex | ByteArray>(\n  values: readonly value[],\n): ConcatReturnType<value> {\n  if (typeof values[0] === 'string')\n    return concatHex(values as readonly Hex[]) as ConcatReturnType<value>\n  return concatBytes(values as readonly ByteArray[]) as ConcatReturnType<value>\n}\n\nexport type ConcatBytesErrorType = ErrorType\n\nexport function concatBytes(values: readonly ByteArray[]): ByteArray {\n  let length = 0\n  for (const arr of values) {\n    length += arr.length\n  }\n  const result = new Uint8Array(length)\n  let offset = 0\n  for (const arr of values) {\n    result.set(arr, offset)\n    offset += arr.length\n  }\n  return result\n}\n\nexport type ConcatHexErrorType = ErrorType\n\nexport function concatHex(values: readonly Hex[]): Hex {\n  return `0x${(values as Hex[]).reduce(\n    (acc, x) => acc + x.replace('0x', ''),\n    '',\n  )}`\n}\n","/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;\nfunction Lg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction Mg(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function Ng(a){var b=a._init;return b(a._payload)}\nfunction Og(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Pg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Qg(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&Ng(f)===b.type))return d=e(b,c.props),d.ref=Lg(a,b,c),d.return=a,d;d=Rg(c.type,c.key,c.props,null,a.mode,d);d.ref=Lg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=Sg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Tg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=Qg(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=Rg(b.type,b.key,b.props,null,a.mode,c),\nc.ref=Lg(a,null,b),c.return=a,c;case wa:return b=Sg(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Tg(b,a.mode,c,null),b.return=a,b;Mg(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);Mg(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);Mg(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&Ng(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=Lg(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Tg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Rg(f.type,f.key,f.props,null,a.mode,h),h.ref=Lg(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Sg(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);Mg(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=Qg(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Ug=Og(!0),Vg=Og(!1),Wg=Uf(null),Xg=null,Yg=null,Zg=null;function $g(){Zg=Yg=Xg=null}function ah(a){var b=Wg.current;E(Wg);a._currentValue=b}function bh(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}\nfunction ch(a,b){Xg=a;Zg=Yg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(dh=!0),a.firstContext=null)}function eh(a){var b=a._currentValue;if(Zg!==a)if(a={context:a,memoizedValue:b,next:null},null===Yg){if(null===Xg)throw Error(p(308));Yg=a;Xg.dependencies={lanes:0,firstContext:a}}else Yg=Yg.next=a;return b}var fh=null;function gh(a){null===fh?fh=[a]:fh.push(a)}\nfunction hh(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,gh(b)):(c.next=e.next,e.next=c);b.interleaved=c;return ih(a,d)}function ih(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var jh=!1;function kh(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction lh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function mh(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction nh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return ih(a,c)}e=d.interleaved;null===e?(b.next=b,gh(d)):(b.next=e.next,e.next=b);d.interleaved=b;return ih(a,c)}function oh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction ph(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction qh(a,b,c,d){var e=a.updateQueue;jh=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:jh=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);rh|=g;a.lanes=g;a.memoizedState=q}}\nfunction sh(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var th={},uh=Uf(th),vh=Uf(th),wh=Uf(th);function xh(a){if(a===th)throw Error(p(174));return a}\nfunction yh(a,b){G(wh,b);G(vh,a);G(uh,th);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(uh);G(uh,b)}function zh(){E(uh);E(vh);E(wh)}function Ah(a){xh(wh.current);var b=xh(uh.current);var c=lb(b,a.type);b!==c&&(G(vh,a),G(uh,c))}function Bh(a){vh.current===a&&(E(uh),E(vh))}var L=Uf(0);\nfunction Ch(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Dh=[];\nfunction Eh(){for(var a=0;a<Dh.length;a++)Dh[a]._workInProgressVersionPrimary=null;Dh.length=0}var Fh=ua.ReactCurrentDispatcher,Gh=ua.ReactCurrentBatchConfig,Hh=0,M=null,N=null,O=null,Ih=!1,Jh=!1,Kh=0,Lh=0;function P(){throw Error(p(321));}function Mh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Nh(a,b,c,d,e,f){Hh=f;M=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Fh.current=null===a||null===a.memoizedState?Oh:Ph;a=c(d,e);if(Jh){f=0;do{Jh=!1;Kh=0;if(25<=f)throw Error(p(301));f+=1;O=N=null;b.updateQueue=null;Fh.current=Qh;a=c(d,e)}while(Jh)}Fh.current=Rh;b=null!==N&&null!==N.next;Hh=0;O=N=M=null;Ih=!1;if(b)throw Error(p(300));return a}function Sh(){var a=0!==Kh;Kh=0;return a}\nfunction Th(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===O?M.memoizedState=O=a:O=O.next=a;return O}function Uh(){if(null===N){var a=M.alternate;a=null!==a?a.memoizedState:null}else a=N.next;var b=null===O?M.memoizedState:O.next;if(null!==b)O=b,N=a;else{if(null===a)throw Error(p(310));N=a;a={memoizedState:N.memoizedState,baseState:N.baseState,baseQueue:N.baseQueue,queue:N.queue,next:null};null===O?M.memoizedState=O=a:O=O.next=a}return O}\nfunction Vh(a,b){return\"function\"===typeof b?b(a):b}\nfunction Wh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=N,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Hh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;M.lanes|=m;rh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(dh=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,M.lanes|=f,rh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction Xh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(dh=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function Yh(){}\nfunction Zh(a,b){var c=M,d=Uh(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,dh=!0);d=d.queue;$h(ai.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==O&&O.memoizedState.tag&1){c.flags|=2048;bi(9,ci.bind(null,c,d,e,b),void 0,null);if(null===Q)throw Error(p(349));0!==(Hh&30)||di(c,b,e)}return e}function di(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction ci(a,b,c,d){b.value=c;b.getSnapshot=d;ei(b)&&fi(a)}function ai(a,b,c){return c(function(){ei(b)&&fi(a)})}function ei(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function fi(a){var b=ih(a,1);null!==b&&gi(b,a,1,-1)}\nfunction hi(a){var b=Th();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Vh,lastRenderedState:a};b.queue=a;a=a.dispatch=ii.bind(null,M,a);return[b.memoizedState,a]}\nfunction bi(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function ji(){return Uh().memoizedState}function ki(a,b,c,d){var e=Th();M.flags|=a;e.memoizedState=bi(1|b,c,void 0,void 0===d?null:d)}\nfunction li(a,b,c,d){var e=Uh();d=void 0===d?null:d;var f=void 0;if(null!==N){var g=N.memoizedState;f=g.destroy;if(null!==d&&Mh(d,g.deps)){e.memoizedState=bi(b,c,f,d);return}}M.flags|=a;e.memoizedState=bi(1|b,c,f,d)}function mi(a,b){return ki(8390656,8,a,b)}function $h(a,b){return li(2048,8,a,b)}function ni(a,b){return li(4,2,a,b)}function oi(a,b){return li(4,4,a,b)}\nfunction pi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function qi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return li(4,4,pi.bind(null,b,a),c)}function ri(){}function si(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction ti(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function ui(a,b,c){if(0===(Hh&21))return a.baseState&&(a.baseState=!1,dh=!0),a.memoizedState=c;He(c,b)||(c=yc(),M.lanes|=c,rh|=c,a.baseState=!0);return b}function vi(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Gh.transition;Gh.transition={};try{a(!1),b()}finally{C=c,Gh.transition=d}}function wi(){return Uh().memoizedState}\nfunction xi(a,b,c){var d=yi(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,c);else if(c=hh(a,b,c,d),null!==c){var e=R();gi(c,a,d,e);Bi(c,b,d)}}\nfunction ii(a,b,c){var d=yi(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,gh(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=hh(a,b,e,d);null!==c&&(e=R(),gi(c,a,d,e),Bi(c,b,d))}}\nfunction zi(a){var b=a.alternate;return a===M||null!==b&&b===M}function Ai(a,b){Jh=Ih=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Bi(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar Rh={readContext:eh,useCallback:P,useContext:P,useEffect:P,useImperativeHandle:P,useInsertionEffect:P,useLayoutEffect:P,useMemo:P,useReducer:P,useRef:P,useState:P,useDebugValue:P,useDeferredValue:P,useTransition:P,useMutableSource:P,useSyncExternalStore:P,useId:P,unstable_isNewReconciler:!1},Oh={readContext:eh,useCallback:function(a,b){Th().memoizedState=[a,void 0===b?null:b];return a},useContext:eh,useEffect:mi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ki(4194308,\n4,pi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ki(4194308,4,a,b)},useInsertionEffect:function(a,b){return ki(4,2,a,b)},useMemo:function(a,b){var c=Th();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Th();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=xi.bind(null,M,a);return[d.memoizedState,a]},useRef:function(a){var b=\nTh();a={current:a};return b.memoizedState=a},useState:hi,useDebugValue:ri,useDeferredValue:function(a){return Th().memoizedState=a},useTransition:function(){var a=hi(!1),b=a[0];a=vi.bind(null,a[1]);Th().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=M,e=Th();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===Q)throw Error(p(349));0!==(Hh&30)||di(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;mi(ai.bind(null,d,\nf,a),[a]);d.flags|=2048;bi(9,ci.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=Th(),b=Q.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Kh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Lh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Ph={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Wh,useRef:ji,useState:function(){return Wh(Vh)},\nuseDebugValue:ri,useDeferredValue:function(a){var b=Uh();return ui(b,N.memoizedState,a)},useTransition:function(){var a=Wh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1},Qh={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Xh,useRef:ji,useState:function(){return Xh(Vh)},useDebugValue:ri,useDeferredValue:function(a){var b=Uh();return null===\nN?b.memoizedState=a:ui(b,N.memoizedState,a)},useTransition:function(){var a=Xh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1};function Ci(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}function Di(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Ei={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=R(),d=\nyi(a),e=mh(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=nh(a,e,d);null!==b&&(gi(b,a,d,c),oh(b,a,d))}};function Fi(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction Gi(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=eh(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Ei;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Hi(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Ei.enqueueReplaceState(b,b.state,null)}\nfunction Ii(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs={};kh(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=eh(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Di(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Ei.enqueueReplaceState(e,e.state,null),qh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}function Ji(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}\nfunction Ki(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}function Li(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Mi=\"function\"===typeof WeakMap?WeakMap:Map;function Ni(a,b,c){c=mh(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Oi||(Oi=!0,Pi=d);Li(a,b)};return c}\nfunction Qi(a,b,c){c=mh(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Li(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Li(a,b);\"function\"!==typeof d&&(null===Ri?Ri=new Set([this]):Ri.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Si(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Mi;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ti.bind(null,a,b,c),b.then(a,a))}function Ui(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Vi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=mh(-1,1),b.tag=2,nh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Wi=ua.ReactCurrentOwner,dh=!1;function Xi(a,b,c,d){b.child=null===a?Vg(b,null,c,d):Ug(b,a.child,c,d)}\nfunction Yi(a,b,c,d,e){c=c.render;var f=b.ref;ch(b,e);d=Nh(a,b,c,d,f,e);c=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&c&&vg(b);b.flags|=1;Xi(a,b,d,e);return b.child}\nfunction $i(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!aj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,bj(a,b,f,d,e);a=Rg(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return Zi(a,b,e)}b.flags|=1;a=Pg(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction bj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(dh=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(dh=!0);else return b.lanes=a.lanes,Zi(a,b,e)}return cj(a,b,c,d,e)}\nfunction dj(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(ej,fj),fj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(ej,fj),fj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(ej,fj);fj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(ej,fj),fj|=d;Xi(a,b,e,c);return b.child}function gj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function cj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);ch(b,e);c=Nh(a,b,c,d,f,e);d=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&d&&vg(b);b.flags|=1;Xi(a,b,c,e);return b.child}\nfunction hj(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;ch(b,e);if(null===b.stateNode)ij(a,b),Gi(b,c,d),Ii(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=eh(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&Hi(b,g,d,l);jh=!1;var r=b.memoizedState;g.state=r;qh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||jh?(\"function\"===typeof m&&(Di(b,c,m,d),k=b.memoizedState),(h=jh||Fi(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;lh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Ci(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=eh(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&Hi(b,g,d,k);jh=!1;r=b.memoizedState;g.state=r;qh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||jh?(\"function\"===typeof y&&(Di(b,c,y,d),n=b.memoizedState),(l=jh||Fi(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return jj(a,b,c,d,f,e)}\nfunction jj(a,b,c,d,e,f){gj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),Zi(a,b,f);d=b.stateNode;Wi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Ug(b,a.child,null,f),b.child=Ug(b,null,h,f)):Xi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function kj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);yh(a,b.containerInfo)}\nfunction lj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Xi(a,b,c,d);return b.child}var mj={dehydrated:null,treeContext:null,retryLane:0};function nj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction oj(a,b,c){var d=b.pendingProps,e=L.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(L,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=pj(g,d,0,null),a=Tg(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=nj(c),b.memoizedState=mj,a):qj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return rj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=Pg(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=Pg(h,f):(f=Tg(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?nj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=mj;return d}f=a.child;a=f.sibling;d=Pg(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction qj(a,b){b=pj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function sj(a,b,c,d){null!==d&&Jg(d);Ug(b,a.child,null,c);a=qj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction rj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Ki(Error(p(422))),sj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=pj({mode:\"visible\",children:d.children},e,0,null);f=Tg(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Ug(b,a.child,null,g);b.child.memoizedState=nj(g);b.memoizedState=mj;return f}if(0===(b.mode&1))return sj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Ki(f,d,void 0);return sj(a,b,g,d)}h=0!==(g&a.childLanes);if(dh||h){d=Q;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,ih(a,e),gi(d,a,e,-1))}tj();d=Ki(Error(p(421)));return sj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=uj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=qj(b,d.children);b.flags|=4096;return b}function vj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);bh(a.return,b,c)}\nfunction wj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction xj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Xi(a,b,d.children,c);d=L.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&vj(a,c,b);else if(19===a.tag)vj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(L,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Ch(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);wj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Ch(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}wj(b,!0,c,null,f);break;case \"together\":wj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction ij(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function Zi(a,b,c){null!==a&&(b.dependencies=a.dependencies);rh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=Pg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Pg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction yj(a,b,c){switch(b.tag){case 3:kj(b);Ig();break;case 5:Ah(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:yh(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Wg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(L,L.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return oj(a,b,c);G(L,L.current&1);a=Zi(a,b,c);return null!==a?a.sibling:null}G(L,L.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return xj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(L,L.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,dj(a,b,c)}return Zi(a,b,c)}var zj,Aj,Bj,Cj;\nzj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Aj=function(){};\nBj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;xh(uh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Cj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Dj(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Ej(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;zh();E(Wf);E(H);Eh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Fj(zg),zg=null));Aj(a,b);S(b);return null;case 5:Bh(b);var e=xh(wh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Bj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;zj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Cj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=xh(wh.current);xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(L);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Fj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(L.current&1)?0===T&&(T=3):tj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return zh(),\nAj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return ah(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(L);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Dj(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Ch(a);if(null!==g){b.flags|=128;Dj(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(L,L.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Gj&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304)}else{if(!d)if(a=Ch(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Dj(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Gj&&1073741824!==c&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=L.current,G(L,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Hj(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(fj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Ij(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return zh(),E(Wf),E(H),Eh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Bh(b),null;case 13:E(L);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(L),null;case 4:return zh(),null;case 10:return ah(b.type._context),null;case 22:case 23:return Hj(),\nnull;case 24:return null;default:return null}}var Jj=!1,U=!1,Kj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Lj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Mj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Nj=!1;\nfunction Oj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Ci(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Nj;Nj=!1;return n}\nfunction Pj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Mj(b,c,f)}e=e.next}while(e!==d)}}function Qj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Rj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Sj(a){var b=a.alternate;null!==b&&(a.alternate=null,Sj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Tj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Uj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Tj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Vj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Vj(a,b,c),a=a.sibling;null!==a;)Vj(a,b,c),a=a.sibling}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}var X=null,Xj=!1;function Yj(a,b,c){for(c=c.child;null!==c;)Zj(a,b,c),c=c.sibling}\nfunction Zj(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Lj(c,b);case 6:var d=X,e=Xj;X=null;Yj(a,b,c);X=d;Xj=e;null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Xj;X=c.stateNode.containerInfo;Xj=!0;\nYj(a,b,c);X=d;Xj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Mj(c,b,g):0!==(f&4)&&Mj(c,b,g));e=e.next}while(e!==d)}Yj(a,b,c);break;case 1:if(!U&&(Lj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Yj(a,b,c);break;case 21:Yj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Yj(a,b,c),U=d):Yj(a,b,c);break;default:Yj(a,b,c)}}function ak(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Kj);b.forEach(function(b){var d=bk.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction ck(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Xj=!1;break a;case 3:X=h.stateNode.containerInfo;Xj=!0;break a;case 4:X=h.stateNode.containerInfo;Xj=!0;break a}h=h.return}if(null===X)throw Error(p(160));Zj(f,g,e);X=null;Xj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)dk(b,a),b=b.sibling}\nfunction dk(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:ck(b,a);ek(a);if(d&4){try{Pj(3,a,a.return),Qj(3,a)}catch(t){W(a,a.return,t)}try{Pj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);break;case 5:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:ck(b,a);ek(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:ck(b,a);ek(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:ck(b,a);ek(a);break;case 13:ck(b,a);ek(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(fk=B()));d&4&&ak(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,ck(b,a),U=l):ck(b,a);ek(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Pj(4,r,r.return);break;case 1:Lj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Lj(r,r.return);break;case 22:if(null!==r.memoizedState){gk(q);continue}}null!==y?(y.return=r,V=y):gk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:ck(b,a);ek(a);d&4&&ak(a);break;case 21:break;default:ck(b,\na),ek(a)}}function ek(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Tj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Uj(a);Wj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Uj(a);Vj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function hk(a,b,c){V=a;ik(a,b,c)}\nfunction ik(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Jj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Jj;var l=U;Jj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?jk(e):null!==k?(k.return=g,V=k):jk(e);for(;null!==f;)V=f,ik(f,b,c),f=f.sibling;V=e;Jj=h;U=l}kk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):kk(a,b,c)}}\nfunction kk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Qj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Ci(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&sh(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}sh(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Rj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function gk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction jk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Qj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Rj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Rj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar lk=Math.ceil,mk=ua.ReactCurrentDispatcher,nk=ua.ReactCurrentOwner,ok=ua.ReactCurrentBatchConfig,K=0,Q=null,Y=null,Z=0,fj=0,ej=Uf(0),T=0,pk=null,rh=0,qk=0,rk=0,sk=null,tk=null,fk=0,Gj=Infinity,uk=null,Oi=!1,Pi=null,Ri=null,vk=!1,wk=null,xk=0,yk=0,zk=null,Ak=-1,Bk=0;function R(){return 0!==(K&6)?B():-1!==Ak?Ak:Ak=B()}\nfunction yi(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Bk&&(Bk=yc()),Bk;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function gi(a,b,c,d){if(50<yk)throw yk=0,zk=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==Q)a===Q&&(0===(K&2)&&(qk|=c),4===T&&Ck(a,Z)),Dk(a,d),1===c&&0===K&&0===(b.mode&1)&&(Gj=B()+500,fg&&jg())}\nfunction Dk(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===Q?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Ek.bind(null,a)):hg(Ek.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Fk(c,Gk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Gk(a,b){Ak=-1;Bk=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Hk()&&a.callbackNode!==c)return null;var d=uc(a,a===Q?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Ik(a,d);else{b=d;var e=K;K|=2;var f=Jk();if(Q!==a||Z!==b)uk=null,Gj=B()+500,Kk(a,b);do try{Lk();break}catch(h){Mk(a,h)}while(1);$g();mk.current=f;K=e;null!==Y?b=0:(Q=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Nk(a,e)));if(1===b)throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;if(6===b)Ck(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Ok(e)&&(b=Ik(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Nk(a,f))),1===b))throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Pk(a,tk,uk);break;case 3:Ck(a,d);if((d&130023424)===d&&(b=fk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){R();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),b);break}Pk(a,tk,uk);break;case 4:Ck(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*lk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),d);break}Pk(a,tk,uk);break;case 5:Pk(a,tk,uk);break;default:throw Error(p(329));}}}Dk(a,B());return a.callbackNode===c?Gk.bind(null,a):null}\nfunction Nk(a,b){var c=sk;a.current.memoizedState.isDehydrated&&(Kk(a,b).flags|=256);a=Ik(a,b);2!==a&&(b=tk,tk=c,null!==b&&Fj(b));return a}function Fj(a){null===tk?tk=a:tk.push.apply(tk,a)}\nfunction Ok(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Ck(a,b){b&=~rk;b&=~qk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Ek(a){if(0!==(K&6))throw Error(p(327));Hk();var b=uc(a,0);if(0===(b&1))return Dk(a,B()),null;var c=Ik(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Nk(a,d))}if(1===c)throw c=pk,Kk(a,0),Ck(a,b),Dk(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Pk(a,tk,uk);Dk(a,B());return null}\nfunction Qk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Gj=B()+500,fg&&jg())}}function Rk(a){null!==wk&&0===wk.tag&&0===(K&6)&&Hk();var b=K;K|=1;var c=ok.transition,d=C;try{if(ok.transition=null,C=1,a)return a()}finally{C=d,ok.transition=c,K=b,0===(K&6)&&jg()}}function Hj(){fj=ej.current;E(ej)}\nfunction Kk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:zh();E(Wf);E(H);Eh();break;case 5:Bh(d);break;case 4:zh();break;case 13:E(L);break;case 19:E(L);break;case 10:ah(d.type._context);break;case 22:case 23:Hj()}c=c.return}Q=a;Y=a=Pg(a.current,null);Z=fj=b;T=0;pk=null;rk=qk=rh=0;tk=sk=null;if(null!==fh){for(b=\n0;b<fh.length;b++)if(c=fh[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}fh=null}return a}\nfunction Mk(a,b){do{var c=Y;try{$g();Fh.current=Rh;if(Ih){for(var d=M.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Ih=!1}Hh=0;O=N=M=null;Jh=!1;Kh=0;nk.current=null;if(null===c||null===c.return){T=1;pk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Ui(g);if(null!==y){y.flags&=-257;Vi(y,g,h,f,b);y.mode&1&&Si(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Si(f,l,b);tj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Ui(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Vi(J,g,h,f,b);Jg(Ji(k,h));break a}}f=k=Ji(k,h);4!==T&&(T=2);null===sk?sk=[f]:sk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Ni(f,k,b);ph(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Ri||!Ri.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Qi(f,h,b);ph(f,F);break a}}f=f.return}while(null!==f)}Sk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Jk(){var a=mk.current;mk.current=Rh;return null===a?Rh:a}\nfunction tj(){if(0===T||3===T||2===T)T=4;null===Q||0===(rh&268435455)&&0===(qk&268435455)||Ck(Q,Z)}function Ik(a,b){var c=K;K|=2;var d=Jk();if(Q!==a||Z!==b)uk=null,Kk(a,b);do try{Tk();break}catch(e){Mk(a,e)}while(1);$g();K=c;mk.current=d;if(null!==Y)throw Error(p(261));Q=null;Z=0;return T}function Tk(){for(;null!==Y;)Uk(Y)}function Lk(){for(;null!==Y&&!cc();)Uk(Y)}function Uk(a){var b=Vk(a.alternate,a,fj);a.memoizedProps=a.pendingProps;null===b?Sk(a):Y=b;nk.current=null}\nfunction Sk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Ej(c,b,fj),null!==c){Y=c;return}}else{c=Ij(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Pk(a,b,c){var d=C,e=ok.transition;try{ok.transition=null,C=1,Wk(a,b,c,d)}finally{ok.transition=e,C=d}return null}\nfunction Wk(a,b,c,d){do Hk();while(null!==wk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===Q&&(Y=Q=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||vk||(vk=!0,Fk(hc,function(){Hk();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=ok.transition;ok.transition=null;\nvar g=C;C=1;var h=K;K|=4;nk.current=null;Oj(a,c);dk(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;hk(c,a,e);dc();K=h;C=g;ok.transition=f}else a.current=c;vk&&(vk=!1,wk=a,xk=e);f=a.pendingLanes;0===f&&(Ri=null);mc(c.stateNode,d);Dk(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Oi)throw Oi=!1,a=Pi,Pi=null,a;0!==(xk&1)&&0!==a.tag&&Hk();f=a.pendingLanes;0!==(f&1)?a===zk?yk++:(yk=0,zk=a):yk=0;jg();return null}\nfunction Hk(){if(null!==wk){var a=Dc(xk),b=ok.transition,c=C;try{ok.transition=null;C=16>a?16:a;if(null===wk)var d=!1;else{a=wk;wk=null;xk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Pj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Sj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Pj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Qj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,ok.transition=b}}return!1}function Xk(a,b,c){b=Ji(c,b);b=Ni(a,b,1);a=nh(a,b,1);b=R();null!==a&&(Ac(a,1,b),Dk(a,b))}\nfunction W(a,b,c){if(3===a.tag)Xk(a,a,c);else for(;null!==b;){if(3===b.tag){Xk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ri||!Ri.has(d))){a=Ji(c,a);a=Qi(b,a,1);b=nh(b,a,1);a=R();null!==b&&(Ac(b,1,a),Dk(b,a));break}}b=b.return}}\nfunction Ti(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=R();a.pingedLanes|=a.suspendedLanes&c;Q===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-fk?Kk(a,0):rk|=c);Dk(a,b)}function Yk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=R();a=ih(a,b);null!==a&&(Ac(a,b,c),Dk(a,c))}function uj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Yk(a,c)}\nfunction bk(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Yk(a,c)}var Vk;\nVk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)dh=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return dh=!1,yj(a,b,c);dh=0!==(a.flags&131072)?!0:!1}else dh=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;ij(a,b);a=b.pendingProps;var e=Yf(b,H.current);ch(b,c);e=Nh(null,b,d,a,e,c);var f=Sh();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,kh(b),e.updater=Ei,b.stateNode=e,e._reactInternals=b,Ii(b,d,a,c),b=jj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Xi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{ij(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=Zk(d);a=Ci(d,a);switch(e){case 0:b=cj(null,b,d,a,c);break a;case 1:b=hj(null,b,d,a,c);break a;case 11:b=Yi(null,b,d,a,c);break a;case 14:b=$i(null,b,d,Ci(d.type,a),c);break a}throw Error(p(306,\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),cj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),hj(a,b,d,e,c);case 3:a:{kj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;lh(a,b);qh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ji(Error(p(423)),b);b=lj(a,b,d,c,e);break a}else if(d!==e){e=Ji(Error(p(424)),b);b=lj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Vg(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=Zi(a,b,c);break a}Xi(a,b,d,c)}b=b.child}return b;case 5:return Ah(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\ngj(a,b),Xi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return oj(a,b,c);case 4:return yh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Ug(b,null,d,c):Xi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),Yi(a,b,d,e,c);case 7:return Xi(a,b,b.pendingProps,c),b.child;case 8:return Xi(a,b,b.pendingProps.children,c),b.child;case 12:return Xi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Wg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=Zi(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=mh(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);bh(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);bh(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Xi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,ch(b,c),e=eh(e),d=d(e),b.flags|=1,Xi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Ci(d,b.pendingProps),e=Ci(d.type,e),$i(a,b,d,e,c);case 15:return bj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),ij(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,ch(b,c),Gi(b,d,e),Ii(b,d,e,c),jj(null,b,d,!0,a,c);case 19:return xj(a,b,c);case 22:return dj(a,b,c)}throw Error(p(156,b.tag));};function Fk(a,b){return ac(a,b)}\nfunction $k(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new $k(a,b,c,d)}function aj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction Zk(a){if(\"function\"===typeof a)return aj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction Pg(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Rg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)aj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Tg(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return pj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Tg(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function pj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function Qg(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction Sg(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction al(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function bl(a,b,c,d,e,f,g,h,k){a=new al(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};kh(f);return a}function cl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction dl(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction el(a,b,c,d,e,f,g,h,k){a=bl(c,d,!0,a,e,f,g,h,k);a.context=dl(null);c=a.current;d=R();e=yi(c);f=mh(d,e);f.callback=void 0!==b&&null!==b?b:null;nh(c,f,e);a.current.lanes=e;Ac(a,e,d);Dk(a,d);return a}function fl(a,b,c,d){var e=b.current,f=R(),g=yi(e);c=dl(c);null===b.context?b.context=c:b.pendingContext=c;b=mh(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=nh(e,b,g);null!==a&&(gi(a,e,g,f),oh(a,e,g));return g}\nfunction gl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function hl(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function il(a,b){hl(a,b);(a=a.alternate)&&hl(a,b)}function jl(){return null}var kl=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ll(a){this._internalRoot=a}\nml.prototype.render=ll.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));fl(a,b,null,null)};ml.prototype.unmount=ll.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Rk(function(){fl(null,a,null,null)});b[uf]=null}};function ml(a){this._internalRoot=a}\nml.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function nl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function pl(){}\nfunction ql(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=gl(g);f.call(a)}}var g=el(b,d,a,0,null,!1,!1,\"\",pl);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Rk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=gl(k);h.call(a)}}var k=bl(a,0,!1,null,null,!1,!1,\"\",pl);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Rk(function(){fl(b,k,c,d)});return k}\nfunction rl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=gl(g);h.call(a)}}fl(b,g,a,e)}else g=ql(c,b,a,e,d);return gl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Dk(b,B()),0===(K&6)&&(Gj=B()+500,jg()))}break;case 13:Rk(function(){var b=ih(a,1);if(null!==b){var c=R();gi(b,a,1,c)}}),il(a,1)}};\nFc=function(a){if(13===a.tag){var b=ih(a,134217728);if(null!==b){var c=R();gi(b,a,134217728,c)}il(a,134217728)}};Gc=function(a){if(13===a.tag){var b=yi(a),c=ih(a,b);if(null!==c){var d=R();gi(c,a,b,d)}il(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Qk;Hb=Rk;\nvar sl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Qk]},tl={findFiberByHostInstance:Wc,bundleType:0,version:\"18.3.1\",rendererPackageName:\"react-dom\"};\nvar ul={bundleType:tl.bundleType,version:tl.version,rendererPackageName:tl.rendererPackageName,rendererConfig:tl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:tl.findFiberByHostInstance||\njl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.3.1-next-f1338f8080-20240426\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var vl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!vl.isDisabled&&vl.supportsFiber)try{kc=vl.inject(ul),lc=vl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=sl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!nl(b))throw Error(p(200));return cl(a,b,null,c)};exports.createRoot=function(a,b){if(!nl(a))throw Error(p(299));var c=!1,d=\"\",e=kl;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=bl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ll(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Rk(a)};exports.hydrate=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!nl(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=kl;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=el(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new ml(b)};exports.render=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!ol(a))throw Error(p(40));return a._reactRootContainer?(Rk(function(){rl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Qk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!ol(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return rl(a,b,c,!1,d)};exports.version=\"18.3.1-next-f1338f8080-20240426\";\n","/* [Multicall3](https://github.com/mds1/multicall) */\nexport const multicall3Abi = [\n  {\n    inputs: [\n      {\n        components: [\n          {\n            name: 'target',\n            type: 'address',\n          },\n          {\n            name: 'allowFailure',\n            type: 'bool',\n          },\n          {\n            name: 'callData',\n            type: 'bytes',\n          },\n        ],\n        name: 'calls',\n        type: 'tuple[]',\n      },\n    ],\n    name: 'aggregate3',\n    outputs: [\n      {\n        components: [\n          {\n            name: 'success',\n            type: 'bool',\n          },\n          {\n            name: 'returnData',\n            type: 'bytes',\n          },\n        ],\n        name: 'returnData',\n        type: 'tuple[]',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'getCurrentBlockTimestamp',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: 'timestamp',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n] as const\n\nexport const batchGatewayAbi = [\n  {\n    name: 'query',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      {\n        type: 'tuple[]',\n        name: 'queries',\n        components: [\n          {\n            type: 'address',\n            name: 'sender',\n          },\n          {\n            type: 'string[]',\n            name: 'urls',\n          },\n          {\n            type: 'bytes',\n            name: 'data',\n          },\n        ],\n      },\n    ],\n    outputs: [\n      {\n        type: 'bool[]',\n        name: 'failures',\n      },\n      {\n        type: 'bytes[]',\n        name: 'responses',\n      },\n    ],\n  },\n  {\n    name: 'HttpError',\n    type: 'error',\n    inputs: [\n      {\n        type: 'uint16',\n        name: 'status',\n      },\n      {\n        type: 'string',\n        name: 'message',\n      },\n    ],\n  },\n] as const\n\nconst universalResolverErrors = [\n  {\n    inputs: [\n      {\n        name: 'dns',\n        type: 'bytes',\n      },\n    ],\n    name: 'DNSDecodingFailed',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        name: 'ens',\n        type: 'string',\n      },\n    ],\n    name: 'DNSEncodingFailed',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'EmptyAddress',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        name: 'status',\n        type: 'uint16',\n      },\n      {\n        name: 'message',\n        type: 'string',\n      },\n    ],\n    name: 'HttpError',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'InvalidBatchGatewayResponse',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        name: 'errorData',\n        type: 'bytes',\n      },\n    ],\n    name: 'ResolverError',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        name: 'name',\n        type: 'bytes',\n      },\n      {\n        name: 'resolver',\n        type: 'address',\n      },\n    ],\n    name: 'ResolverNotContract',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        name: 'name',\n        type: 'bytes',\n      },\n    ],\n    name: 'ResolverNotFound',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        name: 'primary',\n        type: 'string',\n      },\n      {\n        name: 'primaryAddress',\n        type: 'bytes',\n      },\n    ],\n    name: 'ReverseAddressMismatch',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes4',\n        name: 'selector',\n        type: 'bytes4',\n      },\n    ],\n    name: 'UnsupportedResolverProfile',\n    type: 'error',\n  },\n] as const\n\nexport const universalResolverResolveAbi = [\n  ...universalResolverErrors,\n  {\n    name: 'resolveWithGateways',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      { name: 'name', type: 'bytes' },\n      { name: 'data', type: 'bytes' },\n      { name: 'gateways', type: 'string[]' },\n    ],\n    outputs: [\n      { name: '', type: 'bytes' },\n      { name: 'address', type: 'address' },\n    ],\n  },\n] as const\n\nexport const universalResolverReverseAbi = [\n  ...universalResolverErrors,\n  {\n    name: 'reverseWithGateways',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      { type: 'bytes', name: 'reverseName' },\n      { type: 'uint256', name: 'coinType' },\n      { type: 'string[]', name: 'gateways' },\n    ],\n    outputs: [\n      { type: 'string', name: 'resolvedName' },\n      { type: 'address', name: 'resolver' },\n      { type: 'address', name: 'reverseResolver' },\n    ],\n  },\n] as const\n\nexport const textResolverAbi = [\n  {\n    name: 'text',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      { name: 'name', type: 'bytes32' },\n      { name: 'key', type: 'string' },\n    ],\n    outputs: [{ name: '', type: 'string' }],\n  },\n] as const\n\nexport const addressResolverAbi = [\n  {\n    name: 'addr',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [{ name: 'name', type: 'bytes32' }],\n    outputs: [{ name: '', type: 'address' }],\n  },\n  {\n    name: 'addr',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      { name: 'name', type: 'bytes32' },\n      { name: 'coinType', type: 'uint256' },\n    ],\n    outputs: [{ name: '', type: 'bytes' }],\n  },\n] as const\n\n// ERC-1271\n// isValidSignature(bytes32 hash, bytes signature) → bytes4 magicValue\n/** @internal */\nexport const erc1271Abi = [\n  {\n    name: 'isValidSignature',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      { name: 'hash', type: 'bytes32' },\n      { name: 'signature', type: 'bytes' },\n    ],\n    outputs: [{ name: '', type: 'bytes4' }],\n  },\n] as const\n\n// ERC-6492 - universal deployless signature validator contract\n// constructor(address _signer, bytes32 _hash, bytes _signature) → bytes4 returnValue\n// returnValue is either 0x1 (valid) or 0x0 (invalid)\nexport const erc6492SignatureValidatorAbi = [\n  {\n    inputs: [\n      {\n        name: '_signer',\n        type: 'address',\n      },\n      {\n        name: '_hash',\n        type: 'bytes32',\n      },\n      {\n        name: '_signature',\n        type: 'bytes',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n  {\n    inputs: [\n      {\n        name: '_signer',\n        type: 'address',\n      },\n      {\n        name: '_hash',\n        type: 'bytes32',\n      },\n      {\n        name: '_signature',\n        type: 'bytes',\n      },\n    ],\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n    name: 'isValidSig',\n  },\n] as const\n\n/** [ERC-20 Token Standard](https://ethereum.org/en/developers/docs/standards/tokens/erc-20) */\nexport const erc20Abi = [\n  {\n    type: 'event',\n    name: 'Approval',\n    inputs: [\n      {\n        indexed: true,\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'event',\n    name: 'Transfer',\n    inputs: [\n      {\n        indexed: true,\n        name: 'from',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'allowance',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        name: 'spender',\n        type: 'address',\n      },\n    ],\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'approve',\n    stateMutability: 'nonpayable',\n    inputs: [\n      {\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'balanceOf',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'decimals',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'uint8',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'name',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'string',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'symbol',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'string',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'totalSupply',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'transfer',\n    stateMutability: 'nonpayable',\n    inputs: [\n      {\n        name: 'recipient',\n        type: 'address',\n      },\n      {\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'transferFrom',\n    stateMutability: 'nonpayable',\n    inputs: [\n      {\n        name: 'sender',\n        type: 'address',\n      },\n      {\n        name: 'recipient',\n        type: 'address',\n      },\n      {\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n  },\n] as const\n\n/**\n * [bytes32-flavored ERC-20](https://docs.makerdao.com/smart-contract-modules/mkr-module#4.-gotchas-potential-source-of-user-error)\n * for tokens (ie. Maker) that use bytes32 instead of string.\n */\nexport const erc20Abi_bytes32 = [\n  {\n    type: 'event',\n    name: 'Approval',\n    inputs: [\n      {\n        indexed: true,\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'event',\n    name: 'Transfer',\n    inputs: [\n      {\n        indexed: true,\n        name: 'from',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'allowance',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        name: 'spender',\n        type: 'address',\n      },\n    ],\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'approve',\n    stateMutability: 'nonpayable',\n    inputs: [\n      {\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'balanceOf',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'decimals',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'uint8',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'name',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'bytes32',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'symbol',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'bytes32',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'totalSupply',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'transfer',\n    stateMutability: 'nonpayable',\n    inputs: [\n      {\n        name: 'recipient',\n        type: 'address',\n      },\n      {\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'transferFrom',\n    stateMutability: 'nonpayable',\n    inputs: [\n      {\n        name: 'sender',\n        type: 'address',\n      },\n      {\n        name: 'recipient',\n        type: 'address',\n      },\n      {\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n  },\n] as const\n\n/** [ERC-1155 Multi Token Standard](https://ethereum.org/en/developers/docs/standards/tokens/erc-1155) */\nexport const erc1155Abi = [\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'sender',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'balance',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'needed',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'ERC1155InsufficientBalance',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'approver',\n        type: 'address',\n      },\n    ],\n    name: 'ERC1155InvalidApprover',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'idsLength',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'valuesLength',\n        type: 'uint256',\n      },\n    ],\n    name: 'ERC1155InvalidArrayLength',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n    ],\n    name: 'ERC1155InvalidOperator',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'receiver',\n        type: 'address',\n      },\n    ],\n    name: 'ERC1155InvalidReceiver',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'sender',\n        type: 'address',\n      },\n    ],\n    name: 'ERC1155InvalidSender',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'ERC1155MissingApprovalForAll',\n    type: 'error',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'bool',\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    name: 'ApprovalForAll',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256[]',\n        name: 'ids',\n        type: 'uint256[]',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256[]',\n        name: 'values',\n        type: 'uint256[]',\n      },\n    ],\n    name: 'TransferBatch',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'id',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n    name: 'TransferSingle',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'string',\n        name: 'value',\n        type: 'string',\n      },\n      {\n        indexed: true,\n        internalType: 'uint256',\n        name: 'id',\n        type: 'uint256',\n      },\n    ],\n    name: 'URI',\n    type: 'event',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'id',\n        type: 'uint256',\n      },\n    ],\n    name: 'balanceOf',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address[]',\n        name: 'accounts',\n        type: 'address[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'ids',\n        type: 'uint256[]',\n      },\n    ],\n    name: 'balanceOfBatch',\n    outputs: [\n      {\n        internalType: 'uint256[]',\n        name: '',\n        type: 'uint256[]',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n    ],\n    name: 'isApprovedForAll',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'ids',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'values',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'bytes',\n        name: 'data',\n        type: 'bytes',\n      },\n    ],\n    name: 'safeBatchTransferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'id',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'value',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes',\n        name: 'data',\n        type: 'bytes',\n      },\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        internalType: 'bool',\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    name: 'setApprovalForAll',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes4',\n        name: 'interfaceId',\n        type: 'bytes4',\n      },\n    ],\n    name: 'supportsInterface',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    name: 'uri',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n] as const\n\n/** [ERC-721 Non-Fungible Token Standard](https://ethereum.org/en/developers/docs/standards/tokens/erc-721) */\nexport const erc721Abi = [\n  {\n    type: 'event',\n    name: 'Approval',\n    inputs: [\n      {\n        indexed: true,\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'event',\n    name: 'ApprovalForAll',\n    inputs: [\n      {\n        indexed: true,\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n  },\n  {\n    type: 'event',\n    name: 'Transfer',\n    inputs: [\n      {\n        indexed: true,\n        name: 'from',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'approve',\n    stateMutability: 'payable',\n    inputs: [\n      {\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    outputs: [],\n  },\n  {\n    type: 'function',\n    name: 'balanceOf',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'getApproved',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        type: 'address',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'isApprovedForAll',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        name: 'operator',\n        type: 'address',\n      },\n    ],\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'name',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'string',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'ownerOf',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'safeTransferFrom',\n    stateMutability: 'payable',\n    inputs: [\n      {\n        name: 'from',\n        type: 'address',\n      },\n      {\n        name: 'to',\n        type: 'address',\n      },\n      {\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    outputs: [],\n  },\n  {\n    type: 'function',\n    name: 'safeTransferFrom',\n    stateMutability: 'nonpayable',\n    inputs: [\n      {\n        name: 'from',\n        type: 'address',\n      },\n      {\n        name: 'to',\n        type: 'address',\n      },\n      {\n        name: 'id',\n        type: 'uint256',\n      },\n      {\n        name: 'data',\n        type: 'bytes',\n      },\n    ],\n    outputs: [],\n  },\n  {\n    type: 'function',\n    name: 'setApprovalForAll',\n    stateMutability: 'nonpayable',\n    inputs: [\n      {\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    outputs: [],\n  },\n  {\n    type: 'function',\n    name: 'symbol',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'string',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'tokenByIndex',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'index',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'tokenByIndex',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        name: 'index',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'tokenURI',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        type: 'string',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'totalSupply',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'transferFrom',\n    stateMutability: 'payable',\n    inputs: [\n      {\n        name: 'sender',\n        type: 'address',\n      },\n      {\n        name: 'recipient',\n        type: 'address',\n      },\n      {\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    outputs: [],\n  },\n] as const\n\n/** [ERC-4626 Tokenized Vaults Standard](https://ethereum.org/en/developers/docs/standards/tokens/erc-4626) */\nexport const erc4626Abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n    name: 'Approval',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'sender',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'receiver',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'assets',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        name: 'shares',\n        type: 'uint256',\n      },\n    ],\n    name: 'Deposit',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'from',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n    name: 'Transfer',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'sender',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'receiver',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'assets',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        name: 'shares',\n        type: 'uint256',\n      },\n    ],\n    name: 'Withdraw',\n    type: 'event',\n  },\n  {\n    inputs: [\n      {\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        name: 'spender',\n        type: 'address',\n      },\n    ],\n    name: 'allowance',\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'approve',\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'asset',\n    outputs: [\n      {\n        name: 'assetTokenAddress',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    name: 'balanceOf',\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'shares',\n        type: 'uint256',\n      },\n    ],\n    name: 'convertToAssets',\n    outputs: [\n      {\n        name: 'assets',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'assets',\n        type: 'uint256',\n      },\n    ],\n    name: 'convertToShares',\n    outputs: [\n      {\n        name: 'shares',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'assets',\n        type: 'uint256',\n      },\n      {\n        name: 'receiver',\n        type: 'address',\n      },\n    ],\n    name: 'deposit',\n    outputs: [\n      {\n        name: 'shares',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'caller',\n        type: 'address',\n      },\n    ],\n    name: 'maxDeposit',\n    outputs: [\n      {\n        name: 'maxAssets',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'caller',\n        type: 'address',\n      },\n    ],\n    name: 'maxMint',\n    outputs: [\n      {\n        name: 'maxShares',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'maxRedeem',\n    outputs: [\n      {\n        name: 'maxShares',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'maxWithdraw',\n    outputs: [\n      {\n        name: 'maxAssets',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'shares',\n        type: 'uint256',\n      },\n      {\n        name: 'receiver',\n        type: 'address',\n      },\n    ],\n    name: 'mint',\n    outputs: [\n      {\n        name: 'assets',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'assets',\n        type: 'uint256',\n      },\n    ],\n    name: 'previewDeposit',\n    outputs: [\n      {\n        name: 'shares',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'shares',\n        type: 'uint256',\n      },\n    ],\n    name: 'previewMint',\n    outputs: [\n      {\n        name: 'assets',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'shares',\n        type: 'uint256',\n      },\n    ],\n    name: 'previewRedeem',\n    outputs: [\n      {\n        name: 'assets',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'assets',\n        type: 'uint256',\n      },\n    ],\n    name: 'previewWithdraw',\n    outputs: [\n      {\n        name: 'shares',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'shares',\n        type: 'uint256',\n      },\n      {\n        name: 'receiver',\n        type: 'address',\n      },\n      {\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'redeem',\n    outputs: [\n      {\n        name: 'assets',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'totalAssets',\n    outputs: [\n      {\n        name: 'totalManagedAssets',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'totalSupply',\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'to',\n        type: 'address',\n      },\n      {\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'transfer',\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'from',\n        type: 'address',\n      },\n      {\n        name: 'to',\n        type: 'address',\n      },\n      {\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'transferFrom',\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'assets',\n        type: 'uint256',\n      },\n      {\n        name: 'receiver',\n        type: 'address',\n      },\n      {\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'withdraw',\n    outputs: [\n      {\n        name: 'shares',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n] as const\n","import { BaseError } from '../../errors.js'\n\nexport class CircularReferenceError extends BaseError {\n  override name = 'CircularReferenceError'\n\n  constructor({ type }: { type: string }) {\n    super('Circular reference detected.', {\n      metaMessages: [`Struct \"${type}\" is a circular reference.`],\n    })\n  }\n}\n","import type { AbiParameter } from '../../abi.js'\nimport { execTyped, isTupleRegex } from '../../regex.js'\nimport { UnknownTypeError } from '../errors/abiItem.js'\nimport { InvalidAbiTypeParameterError } from '../errors/abiParameter.js'\nimport {\n  InvalidSignatureError,\n  InvalidStructSignatureError,\n} from '../errors/signature.js'\nimport { CircularReferenceError } from '../errors/struct.js'\nimport type { StructLookup } from '../types/structs.js'\nimport { execStructSignature, isStructSignature } from './signatures.js'\nimport { isSolidityType, parseAbiParameter } from './utils.js'\n\nexport function parseStructs(signatures: readonly string[]) {\n  // Create \"shallow\" version of each struct (and filter out non-structs or invalid structs)\n  const shallowStructs: StructLookup = {}\n  const signaturesLength = signatures.length\n  for (let i = 0; i < signaturesLength; i++) {\n    const signature = signatures[i]!\n    if (!isStructSignature(signature)) continue\n\n    const match = execStructSignature(signature)\n    if (!match) throw new InvalidSignatureError({ signature, type: 'struct' })\n\n    const properties = match.properties.split(';')\n\n    const components: AbiParameter[] = []\n    const propertiesLength = properties.length\n    for (let k = 0; k < propertiesLength; k++) {\n      const property = properties[k]!\n      const trimmed = property.trim()\n      if (!trimmed) continue\n      const abiParameter = parseAbiParameter(trimmed, {\n        type: 'struct',\n      })\n      components.push(abiParameter)\n    }\n\n    if (!components.length) throw new InvalidStructSignatureError({ signature })\n    shallowStructs[match.name] = components\n  }\n\n  // Resolve nested structs inside each parameter\n  const resolvedStructs: StructLookup = {}\n  const entries = Object.entries(shallowStructs)\n  const entriesLength = entries.length\n  for (let i = 0; i < entriesLength; i++) {\n    const [name, parameters] = entries[i]!\n    resolvedStructs[name] = resolveStructs(parameters, shallowStructs)\n  }\n\n  return resolvedStructs\n}\n\nconst typeWithoutTupleRegex =\n  /^(?<type>[a-zA-Z$_][a-zA-Z0-9$_]*)(?<array>(?:\\[\\d*?\\])+?)?$/\n\nfunction resolveStructs(\n  abiParameters: readonly (AbiParameter & { indexed?: true })[],\n  structs: StructLookup,\n  ancestors = new Set<string>(),\n) {\n  const components: AbiParameter[] = []\n  const length = abiParameters.length\n  for (let i = 0; i < length; i++) {\n    const abiParameter = abiParameters[i]!\n    const isTuple = isTupleRegex.test(abiParameter.type)\n    if (isTuple) components.push(abiParameter)\n    else {\n      const match = execTyped<{ array?: string; type: string }>(\n        typeWithoutTupleRegex,\n        abiParameter.type,\n      )\n      if (!match?.type) throw new InvalidAbiTypeParameterError({ abiParameter })\n\n      const { array, type } = match\n      if (type in structs) {\n        if (ancestors.has(type)) throw new CircularReferenceError({ type })\n\n        components.push({\n          ...abiParameter,\n          type: `tuple${array ?? ''}`,\n          components: resolveStructs(\n            structs[type] ?? [],\n            structs,\n            new Set([...ancestors, type]),\n          ),\n        })\n      } else {\n        if (isSolidityType(type)) components.push(abiParameter)\n        else throw new UnknownTypeError({ type })\n      }\n    }\n  }\n\n  return components\n}\n","import type * as Errors from '../Errors.js'\nimport * as Hex from '../Hex.js'\n\n/** @internal */\nexport function assertSize(hex: Hex.Hex, size_: number): void {\n  if (Hex.size(hex) > size_)\n    throw new Hex.SizeOverflowError({\n      givenSize: Hex.size(hex),\n      maxSize: size_,\n    })\n}\n\n/** @internal */\nexport declare namespace assertSize {\n  type ErrorType =\n    | Hex.size.ErrorType\n    | Hex.SizeOverflowError\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function assertStartOffset(value: Hex.Hex, start?: number | undefined) {\n  if (typeof start === 'number' && start > 0 && start > Hex.size(value) - 1)\n    throw new Hex.SliceOffsetOutOfBoundsError({\n      offset: start,\n      position: 'start',\n      size: Hex.size(value),\n    })\n}\n\nexport declare namespace assertStartOffset {\n  type ErrorType =\n    | Hex.SliceOffsetOutOfBoundsError\n    | Hex.size.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function assertEndOffset(\n  value: Hex.Hex,\n  start?: number | undefined,\n  end?: number | undefined,\n) {\n  if (\n    typeof start === 'number' &&\n    typeof end === 'number' &&\n    Hex.size(value) !== end - start\n  ) {\n    throw new Hex.SliceOffsetOutOfBoundsError({\n      offset: end,\n      position: 'end',\n      size: Hex.size(value),\n    })\n  }\n}\n\nexport declare namespace assertEndOffset {\n  type ErrorType =\n    | Hex.SliceOffsetOutOfBoundsError\n    | Hex.size.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function pad(hex_: Hex.Hex, options: pad.Options = {}) {\n  const { dir, size = 32 } = options\n\n  if (size === 0) return hex_\n\n  const hex = hex_.replace('0x', '')\n  if (hex.length > size * 2)\n    throw new Hex.SizeExceedsPaddingSizeError({\n      size: Math.ceil(hex.length / 2),\n      targetSize: size,\n      type: 'Hex',\n    })\n\n  return `0x${hex[dir === 'right' ? 'padEnd' : 'padStart'](size * 2, '0')}` as Hex.Hex\n}\n\n/** @internal */\nexport declare namespace pad {\n  type Options = {\n    dir?: 'left' | 'right' | undefined\n    size?: number | undefined\n  }\n  type ErrorType = Hex.SizeExceedsPaddingSizeError | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function trim(\n  value: Hex.Hex,\n  options: trim.Options = {},\n): trim.ReturnType {\n  const { dir = 'left' } = options\n\n  let data = value.replace('0x', '')\n\n  let sliceLength = 0\n  for (let i = 0; i < data.length - 1; i++) {\n    if (data[dir === 'left' ? i : data.length - i - 1]!.toString() === '0')\n      sliceLength++\n    else break\n  }\n  data =\n    dir === 'left'\n      ? data.slice(sliceLength)\n      : data.slice(0, data.length - sliceLength)\n\n  if (data === '0') return '0x'\n  if (dir === 'right' && data.length % 2 === 1) return `0x${data}0`\n  return `0x${data}` as trim.ReturnType\n}\n\n/** @internal */\nexport declare namespace trim {\n  type Options = {\n    dir?: 'left' | 'right' | undefined\n  }\n\n  type ReturnType = Hex.Hex\n\n  type ErrorType = Errors.GlobalErrorType\n}\n","import {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { SendTransactionParameters } from '../../actions/wallet/sendTransaction.js'\nimport { maxUint256 } from '../../constants/number.js'\nimport {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../../errors/address.js'\nimport {\n  FeeCapTooHighError,\n  type FeeCapTooHighErrorType,\n  TipAboveFeeCapError,\n  type TipAboveFeeCapErrorType,\n} from '../../errors/node.js'\nimport {\n  FeeConflictError,\n  type FeeConflictErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { ExactPartial } from '../../types/utils.js'\nimport { isAddress } from '../address/isAddress.js'\n\nexport type AssertRequestParameters = ExactPartial<\n  SendTransactionParameters<Chain>\n>\n\nexport type AssertRequestErrorType =\n  | InvalidAddressErrorType\n  | FeeConflictErrorType\n  | FeeCapTooHighErrorType\n  | ParseAccountErrorType\n  | TipAboveFeeCapErrorType\n  | ErrorType\n\nexport function assertRequest(args: AssertRequestParameters) {\n  const {\n    account: account_,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    to,\n  } = args\n  const account = account_ ? parseAccount(account_) : undefined\n  if (account && !isAddress(account.address))\n    throw new InvalidAddressError({ address: account.address })\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n  if (\n    typeof gasPrice !== 'undefined' &&\n    (typeof maxFeePerGas !== 'undefined' ||\n      typeof maxPriorityFeePerGas !== 'undefined')\n  )\n    throw new FeeConflictError()\n\n  if (maxFeePerGas && maxFeePerGas > maxUint256)\n    throw new FeeCapTooHighError({ maxFeePerGas })\n  if (\n    maxPriorityFeePerGas &&\n    maxFeePerGas &&\n    maxPriorityFeePerGas > maxFeePerGas\n  )\n    throw new TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas })\n}\n","import type { Account } from '../accounts/types.js'\nimport type { SendTransactionParameters } from '../actions/wallet/sendTransaction.js'\nimport type { BlockTag } from '../types/block.js'\nimport type { Chain } from '../types/chain.js'\nimport type { Hash, Hex } from '../types/misc.js'\nimport type { TransactionType } from '../types/transaction.js'\nimport { formatEther } from '../utils/unit/formatEther.js'\nimport { formatGwei } from '../utils/unit/formatGwei.js'\n\nimport { BaseError } from './base.js'\n\nexport function prettyPrint(\n  args: Record<string, bigint | number | string | undefined | false | unknown>,\n) {\n  const entries = Object.entries(args)\n    .map(([key, value]) => {\n      if (value === undefined || value === false) return null\n      return [key, value]\n    })\n    .filter(Boolean) as [string, string][]\n  const maxLength = entries.reduce((acc, [key]) => Math.max(acc, key.length), 0)\n  return entries\n    .map(([key, value]) => `  ${`${key}:`.padEnd(maxLength + 1)}  ${value}`)\n    .join('\\n')\n}\n\nexport type FeeConflictErrorType = FeeConflictError & {\n  name: 'FeeConflictError'\n}\nexport class FeeConflictError extends BaseError {\n  constructor() {\n    super(\n      [\n        'Cannot specify both a `gasPrice` and a `maxFeePerGas`/`maxPriorityFeePerGas`.',\n        'Use `maxFeePerGas`/`maxPriorityFeePerGas` for EIP-1559 compatible networks, and `gasPrice` for others.',\n      ].join('\\n'),\n      { name: 'FeeConflictError' },\n    )\n  }\n}\n\nexport type InvalidLegacyVErrorType = InvalidLegacyVError & {\n  name: 'InvalidLegacyVError'\n}\nexport class InvalidLegacyVError extends BaseError {\n  constructor({ v }: { v: bigint }) {\n    super(`Invalid \\`v\\` value \"${v}\". Expected 27 or 28.`, {\n      name: 'InvalidLegacyVError',\n    })\n  }\n}\n\nexport type InvalidSerializableTransactionErrorType =\n  InvalidSerializableTransactionError & {\n    name: 'InvalidSerializableTransactionError'\n  }\nexport class InvalidSerializableTransactionError extends BaseError {\n  constructor({ transaction }: { transaction: Record<string, unknown> }) {\n    super('Cannot infer a transaction type from provided transaction.', {\n      metaMessages: [\n        'Provided Transaction:',\n        '{',\n        prettyPrint(transaction),\n        '}',\n        '',\n        'To infer the type, either provide:',\n        '- a `type` to the Transaction, or',\n        '- an EIP-1559 Transaction with `maxFeePerGas`, or',\n        '- an EIP-2930 Transaction with `gasPrice` & `accessList`, or',\n        '- an EIP-4844 Transaction with `blobs`, `blobVersionedHashes`, `sidecars`, or',\n        '- an EIP-7702 Transaction with `authorizationList`, or',\n        '- a Legacy Transaction with `gasPrice`',\n      ],\n      name: 'InvalidSerializableTransactionError',\n    })\n  }\n}\n\nexport type InvalidSerializedTransactionTypeErrorType =\n  InvalidSerializedTransactionTypeError & {\n    name: 'InvalidSerializedTransactionTypeError'\n  }\nexport class InvalidSerializedTransactionTypeError extends BaseError {\n  serializedType: Hex\n\n  constructor({ serializedType }: { serializedType: Hex }) {\n    super(`Serialized transaction type \"${serializedType}\" is invalid.`, {\n      name: 'InvalidSerializedTransactionType',\n    })\n\n    this.serializedType = serializedType\n  }\n}\n\nexport type InvalidSerializedTransactionErrorType =\n  InvalidSerializedTransactionError & {\n    name: 'InvalidSerializedTransactionError'\n  }\nexport class InvalidSerializedTransactionError extends BaseError {\n  serializedTransaction: Hex\n  type: TransactionType\n\n  constructor({\n    attributes,\n    serializedTransaction,\n    type,\n  }: {\n    attributes: Record<string, unknown>\n    serializedTransaction: Hex\n    type: TransactionType\n  }) {\n    const missing = Object.entries(attributes)\n      .map(([key, value]) => (typeof value === 'undefined' ? key : undefined))\n      .filter(Boolean)\n    super(`Invalid serialized transaction of type \"${type}\" was provided.`, {\n      metaMessages: [\n        `Serialized Transaction: \"${serializedTransaction}\"`,\n        missing.length > 0 ? `Missing Attributes: ${missing.join(', ')}` : '',\n      ].filter(Boolean),\n      name: 'InvalidSerializedTransactionError',\n    })\n\n    this.serializedTransaction = serializedTransaction\n    this.type = type\n  }\n}\n\nexport type InvalidStorageKeySizeErrorType = InvalidStorageKeySizeError & {\n  name: 'InvalidStorageKeySizeError'\n}\nexport class InvalidStorageKeySizeError extends BaseError {\n  constructor({ storageKey }: { storageKey: Hex }) {\n    super(\n      `Size for storage key \"${storageKey}\" is invalid. Expected 32 bytes. Got ${Math.floor(\n        (storageKey.length - 2) / 2,\n      )} bytes.`,\n      { name: 'InvalidStorageKeySizeError' },\n    )\n  }\n}\n\nexport type TransactionExecutionErrorType = TransactionExecutionError & {\n  name: 'TransactionExecutionError'\n}\nexport class TransactionExecutionError extends BaseError {\n  override cause: BaseError\n\n  constructor(\n    cause: BaseError,\n    {\n      account,\n      docsPath,\n      chain,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n    }: Omit<SendTransactionParameters, 'account' | 'chain'> & {\n      account: Account | null\n      chain?: Chain | undefined\n      docsPath?: string | undefined\n    },\n  ) {\n    const prettyArgs = prettyPrint({\n      chain: chain && `${chain?.name} (id: ${chain?.id})`,\n      from: account?.address,\n      to,\n      value:\n        typeof value !== 'undefined' &&\n        `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n      data,\n      gas,\n      gasPrice:\n        typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n      maxFeePerGas:\n        typeof maxFeePerGas !== 'undefined' &&\n        `${formatGwei(maxFeePerGas)} gwei`,\n      maxPriorityFeePerGas:\n        typeof maxPriorityFeePerGas !== 'undefined' &&\n        `${formatGwei(maxPriorityFeePerGas)} gwei`,\n      nonce,\n    })\n\n    super(cause.shortMessage, {\n      cause,\n      docsPath,\n      metaMessages: [\n        ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n        'Request Arguments:',\n        prettyArgs,\n      ].filter(Boolean) as string[],\n      name: 'TransactionExecutionError',\n    })\n    this.cause = cause\n  }\n}\n\nexport type TransactionNotFoundErrorType = TransactionNotFoundError & {\n  name: 'TransactionNotFoundError'\n}\nexport class TransactionNotFoundError extends BaseError {\n  constructor({\n    blockHash,\n    blockNumber,\n    blockTag,\n    hash,\n    index,\n  }: {\n    blockHash?: Hash | undefined\n    blockNumber?: bigint | undefined\n    blockTag?: BlockTag | undefined\n    hash?: Hash | undefined\n    index?: number | undefined\n  }) {\n    let identifier = 'Transaction'\n    if (blockTag && index !== undefined)\n      identifier = `Transaction at block time \"${blockTag}\" at index \"${index}\"`\n    if (blockHash && index !== undefined)\n      identifier = `Transaction at block hash \"${blockHash}\" at index \"${index}\"`\n    if (blockNumber && index !== undefined)\n      identifier = `Transaction at block number \"${blockNumber}\" at index \"${index}\"`\n    if (hash) identifier = `Transaction with hash \"${hash}\"`\n    super(`${identifier} could not be found.`, {\n      name: 'TransactionNotFoundError',\n    })\n  }\n}\n\nexport type TransactionReceiptNotFoundErrorType =\n  TransactionReceiptNotFoundError & {\n    name: 'TransactionReceiptNotFoundError'\n  }\nexport class TransactionReceiptNotFoundError extends BaseError {\n  constructor({ hash }: { hash: Hash }) {\n    super(\n      `Transaction receipt with hash \"${hash}\" could not be found. The Transaction may not be processed on a block yet.`,\n      {\n        name: 'TransactionReceiptNotFoundError',\n      },\n    )\n  }\n}\n\nexport type WaitForTransactionReceiptTimeoutErrorType =\n  WaitForTransactionReceiptTimeoutError & {\n    name: 'WaitForTransactionReceiptTimeoutError'\n  }\nexport class WaitForTransactionReceiptTimeoutError extends BaseError {\n  constructor({ hash }: { hash: Hash }) {\n    super(\n      `Timed out while waiting for transaction with hash \"${hash}\" to be confirmed.`,\n      { name: 'WaitForTransactionReceiptTimeoutError' },\n    )\n  }\n}\n","import type { Address } from 'abitype'\n\nimport { InvalidAddressError } from '../../errors/address.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type StringToBytesErrorType,\n  stringToBytes,\n} from '../encoding/toBytes.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\nimport { LruMap } from '../lru.js'\nimport { type IsAddressErrorType, isAddress } from './isAddress.js'\n\nconst checksumAddressCache = /*#__PURE__*/ new LruMap<Address>(8192)\n\nexport type ChecksumAddressErrorType =\n  | Keccak256ErrorType\n  | StringToBytesErrorType\n  | ErrorType\n\nexport function checksumAddress(\n  address_: Address,\n  /**\n   * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the\n   * wider Ethereum ecosystem, meaning it will break when validated against an application/tool\n   * that relies on EIP-55 checksum encoding (checksum without chainId).\n   *\n   * It is highly recommended to not use this feature unless you\n   * know what you are doing.\n   *\n   * See more: https://github.com/ethereum/EIPs/issues/1121\n   */\n  chainId?: number | undefined,\n): Address {\n  if (checksumAddressCache.has(`${address_}.${chainId}`))\n    return checksumAddressCache.get(`${address_}.${chainId}`)!\n\n  const hexAddress = chainId\n    ? `${chainId}${address_.toLowerCase()}`\n    : address_.substring(2).toLowerCase()\n  const hash = keccak256(stringToBytes(hexAddress), 'bytes')\n\n  const address = (\n    chainId ? hexAddress.substring(`${chainId}0x`.length) : hexAddress\n  ).split('')\n  for (let i = 0; i < 40; i += 2) {\n    if (hash[i >> 1] >> 4 >= 8 && address[i]) {\n      address[i] = address[i].toUpperCase()\n    }\n    if ((hash[i >> 1] & 0x0f) >= 8 && address[i + 1]) {\n      address[i + 1] = address[i + 1].toUpperCase()\n    }\n  }\n\n  const result = `0x${address.join('')}` as const\n  checksumAddressCache.set(`${address_}.${chainId}`, result)\n  return result\n}\n\nexport type GetAddressErrorType =\n  | ChecksumAddressErrorType\n  | IsAddressErrorType\n  | ErrorType\n\nexport function getAddress(\n  address: string,\n  /**\n   * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the\n   * wider Ethereum ecosystem, meaning it will break when validated against an application/tool\n   * that relies on EIP-55 checksum encoding (checksum without chainId).\n   *\n   * It is highly recommended to not use this feature unless you\n   * know what you are doing.\n   *\n   * See more: https://github.com/ethereum/EIPs/issues/1121\n   */\n  chainId?: number,\n): Address {\n  if (!isAddress(address, { strict: false }))\n    throw new InvalidAddressError({ address })\n  return checksumAddress(address, chainId)\n}\n","/**\n * HMAC: RFC2104 message authentication code.\n * @module\n */\nimport { abytes, aexists, ahash, clean, Hash, toBytes, type CHash, type Input } from './utils.ts';\n\nexport class HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    ahash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new Error('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    clean(pad);\n  }\n  update(buf: Input): this {\n    aexists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array): void {\n    aexists(this);\n    abytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest(): Uint8Array {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  clone(): HMAC<T> {\n    return this._cloneInto();\n  }\n  destroy(): void {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n * @example\n * import { hmac } from '@noble/hashes/hmac';\n * import { sha256 } from '@noble/hashes/sha2';\n * const mac1 = hmac(sha256, 'key', 'message');\n */\nexport const hmac: {\n  (hash: CHash, key: Input, message: Input): Uint8Array;\n  create(hash: CHash, key: Input): HMAC<any>;\n} = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n","/**\n * Hex, bytes and number utilities.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nexport type Hex = Uint8Array | string; // hex strings are accepted for simplicity\nexport type PrivKey = Hex | bigint; // bigints are accepted to ease learning curve\nexport type CHash = {\n  (message: Uint8Array | string): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create(opts?: { dkLen?: number }): any; // For shake\n};\nexport type FHash = (message: Uint8Array | string) => Uint8Array;\n\nexport function isBytes(a: unknown): a is Uint8Array {\n  return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n\nexport function abytes(item: unknown): void {\n  if (!isBytes(item)) throw new Error('Uint8Array expected');\n}\n\nexport function abool(title: string, value: boolean): void {\n  if (typeof value !== 'boolean') throw new Error(title + ' boolean expected, got ' + value);\n}\n\n// Used in weierstrass, der\nexport function numberToHexUnpadded(num: number | bigint): string {\n  const hex = num.toString(16);\n  return hex.length & 1 ? '0' + hex : hex;\n}\n\nexport function hexToNumber(hex: string): bigint {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  return hex === '' ? _0n : BigInt('0x' + hex); // Big Endian\n}\n\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\nconst hasHexBuiltin: boolean =\n  // @ts-ignore\n  typeof Uint8Array.from([]).toHex === 'function' && typeof Uint8Array.fromHex === 'function';\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n\n/**\n * Convert byte array to hex string. Uses built-in function, when available.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // @ts-ignore\n  if (hasHexBuiltin) return bytes.toHex();\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 } as const;\nfunction asciiToBase16(ch: number): number | undefined {\n  if (ch >= asciis._0 && ch <= asciis._9) return ch - asciis._0; // '2' => 50-48\n  if (ch >= asciis.A && ch <= asciis.F) return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n  if (ch >= asciis.a && ch <= asciis.f) return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n  return;\n}\n\n/**\n * Convert hex string to byte array. Uses built-in function, when available.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // @ts-ignore\n  if (hasHexBuiltin) return Uint8Array.fromHex(hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n  }\n  return array;\n}\n\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes: Uint8Array): bigint {\n  abytes(bytes);\n  return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\n\nexport function numberToBytesBE(n: number | bigint, len: number): Uint8Array {\n  return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n: number | bigint, len: number): Uint8Array {\n  return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n: number | bigint): Uint8Array {\n  return hexToBytes(numberToHexUnpadded(n));\n}\n\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title: string, hex: Hex, expectedLength?: number): Uint8Array {\n  let res: Uint8Array;\n  if (typeof hex === 'string') {\n    try {\n      res = hexToBytes(hex);\n    } catch (e) {\n      throw new Error(title + ' must be hex string or Uint8Array, cause: ' + e);\n    }\n  } else if (isBytes(hex)) {\n    // Uint8Array.from() instead of hash.slice() because node.js Buffer\n    // is instance of Uint8Array, and its slice() creates **mutable** copy\n    res = Uint8Array.from(hex);\n  } else {\n    throw new Error(title + ' must be hex string or Uint8Array');\n  }\n  const len = res.length;\n  if (typeof expectedLength === 'number' && len !== expectedLength)\n    throw new Error(title + ' of length ' + expectedLength + ' expected, got ' + len);\n  return res;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a: Uint8Array, b: Uint8Array): boolean {\n  if (a.length !== b.length) return false;\n  let diff = 0;\n  for (let i = 0; i < a.length; i++) diff |= a[i] ^ b[i];\n  return diff === 0;\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error('string expected');\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n// Is positive bigint\nconst isPosBig = (n: bigint) => typeof n === 'bigint' && _0n <= n;\n\nexport function inRange(n: bigint, min: bigint, max: bigint): boolean {\n  return isPosBig(n) && isPosBig(min) && isPosBig(max) && min <= n && n < max;\n}\n\n/**\n * Asserts min <= n < max. NOTE: It's < max and not <= max.\n * @example\n * aInRange('x', x, 1n, 256n); // would assume x is in (1n..255n)\n */\nexport function aInRange(title: string, n: bigint, min: bigint, max: bigint): void {\n  // Why min <= n < max and not a (min < n < max) OR b (min <= n <= max)?\n  // consider P=256n, min=0n, max=P\n  // - a for min=0 would require -1:          `inRange('x', x, -1n, P)`\n  // - b would commonly require subtraction:  `inRange('x', x, 0n, P - 1n)`\n  // - our way is the cleanest:               `inRange('x', x, 0n, P)\n  if (!inRange(n, min, max))\n    throw new Error('expected valid ' + title + ': ' + min + ' <= n < ' + max + ', got ' + n);\n}\n\n// Bit operations\n\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n * TODO: merge with nLength in modular\n */\nexport function bitLen(n: bigint): number {\n  let len;\n  for (len = 0; n > _0n; n >>= _1n, len += 1);\n  return len;\n}\n\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n: bigint, pos: number): bigint {\n  return (n >> BigInt(pos)) & _1n;\n}\n\n/**\n * Sets single bit at position.\n */\nexport function bitSet(n: bigint, pos: number, value: boolean): bigint {\n  return n | ((value ? _1n : _0n) << BigInt(pos));\n}\n\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n: number): bigint => (_1n << BigInt(n)) - _1n;\n\n// DRBG\n\nconst u8n = (len: number) => new Uint8Array(len); // creates Uint8Array\nconst u8fr = (arr: ArrayLike<number>) => Uint8Array.from(arr); // another shortcut\ntype Pred<T> = (v: Uint8Array) => T | undefined;\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg<T>(\n  hashLen: number,\n  qByteLen: number,\n  hmacFn: (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array\n): (seed: Uint8Array, predicate: Pred<T>) => T {\n  if (typeof hashLen !== 'number' || hashLen < 2) throw new Error('hashLen must be a number');\n  if (typeof qByteLen !== 'number' || qByteLen < 2) throw new Error('qByteLen must be a number');\n  if (typeof hmacFn !== 'function') throw new Error('hmacFn must be a function');\n  // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n  let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n  let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n  let i = 0; // Iterations counter, will throw when over 1000\n  const reset = () => {\n    v.fill(1);\n    k.fill(0);\n    i = 0;\n  };\n  const h = (...b: Uint8Array[]) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n  const reseed = (seed = u8n(0)) => {\n    // HMAC-DRBG reseed() function. Steps D-G\n    k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n    v = h(); // v = hmac(k || v)\n    if (seed.length === 0) return;\n    k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n    v = h(); // v = hmac(k || v)\n  };\n  const gen = () => {\n    // HMAC-DRBG generate() function\n    if (i++ >= 1000) throw new Error('drbg: tried 1000 values');\n    let len = 0;\n    const out: Uint8Array[] = [];\n    while (len < qByteLen) {\n      v = h();\n      const sl = v.slice();\n      out.push(sl);\n      len += v.length;\n    }\n    return concatBytes(...out);\n  };\n  const genUntil = (seed: Uint8Array, pred: Pred<T>): T => {\n    reset();\n    reseed(seed); // Steps D-G\n    let res: T | undefined = undefined; // Step H: grind until k is in [1..n-1]\n    while (!(res = pred(gen()))) reseed();\n    reset();\n    return res;\n  };\n  return genUntil;\n}\n\n// Validating curves and fields\n\nconst validatorFns = {\n  bigint: (val: any): boolean => typeof val === 'bigint',\n  function: (val: any): boolean => typeof val === 'function',\n  boolean: (val: any): boolean => typeof val === 'boolean',\n  string: (val: any): boolean => typeof val === 'string',\n  stringOrUint8Array: (val: any): boolean => typeof val === 'string' || isBytes(val),\n  isSafeInteger: (val: any): boolean => Number.isSafeInteger(val),\n  array: (val: any): boolean => Array.isArray(val),\n  field: (val: any, object: any): any => (object as any).Fp.isValid(val),\n  hash: (val: any): boolean => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n} as const;\ntype Validator = keyof typeof validatorFns;\ntype ValMap<T extends Record<string, any>> = { [K in keyof T]?: Validator };\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\n\nexport function validateObject<T extends Record<string, any>>(\n  object: T,\n  validators: ValMap<T>,\n  optValidators: ValMap<T> = {}\n): T {\n  const checkField = (fieldName: keyof T, type: Validator, isOptional: boolean) => {\n    const checkVal = validatorFns[type];\n    if (typeof checkVal !== 'function') throw new Error('invalid validator function');\n\n    const val = object[fieldName as keyof typeof object];\n    if (isOptional && val === undefined) return;\n    if (!checkVal(val, object)) {\n      throw new Error(\n        'param ' + String(fieldName) + ' is invalid. Expected ' + type + ', got ' + val\n      );\n    }\n  };\n  for (const [fieldName, type] of Object.entries(validators)) checkField(fieldName, type!, false);\n  for (const [fieldName, type] of Object.entries(optValidators)) checkField(fieldName, type!, true);\n  return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n\n/**\n * throws not implemented error\n */\nexport const notImplemented = (): never => {\n  throw new Error('not implemented');\n};\n\n/**\n * Memoizes (caches) computation result.\n * Uses WeakMap: the value is going auto-cleaned by GC after last reference is removed.\n */\nexport function memoized<T extends object, R, O extends any[]>(\n  fn: (arg: T, ...args: O) => R\n): (arg: T, ...args: O) => R {\n  const map = new WeakMap<T, R>();\n  return (arg: T, ...args: O): R => {\n    const val = map.get(arg);\n    if (val !== undefined) return val;\n    const computed = fn(arg, ...args);\n    map.set(arg, computed);\n    return computed;\n  };\n}\n","/**\n * Utils for modular division and finite fields.\n * A finite field over 11 is integer number operations `mod 11`.\n * There is no division: it is replaced by modular multiplicative inverse.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { anumber } from '@noble/hashes/utils';\nimport {\n  bitMask,\n  bytesToNumberBE,\n  bytesToNumberLE,\n  ensureBytes,\n  numberToBytesBE,\n  numberToBytesLE,\n  validateObject,\n} from './utils.ts';\n\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = /* @__PURE__ */ BigInt(2), _3n = /* @__PURE__ */ BigInt(3);\n// prettier-ignore\nconst _4n = /* @__PURE__ */ BigInt(4), _5n = /* @__PURE__ */ BigInt(5), _8n = /* @__PURE__ */ BigInt(8);\n\n// Calculates a modulo b\nexport function mod(a: bigint, b: bigint): bigint {\n  const result = a % b;\n  return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * TODO: remove.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\nexport function pow(num: bigint, power: bigint, modulo: bigint): bigint {\n  return FpPow(Field(modulo), num, power);\n}\n\n/** Does `x^(2^power)` mod p. `pow2(30, 4)` == `30^(2^4)` */\nexport function pow2(x: bigint, power: bigint, modulo: bigint): bigint {\n  let res = x;\n  while (power-- > _0n) {\n    res *= res;\n    res %= modulo;\n  }\n  return res;\n}\n\n/**\n * Inverses number over modulo.\n * Implemented using [Euclidean GCD](https://brilliant.org/wiki/extended-euclidean-algorithm/).\n */\nexport function invert(number: bigint, modulo: bigint): bigint {\n  if (number === _0n) throw new Error('invert: expected non-zero number');\n  if (modulo <= _0n) throw new Error('invert: expected positive modulus, got ' + modulo);\n  // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n  let a = mod(number, modulo);\n  let b = modulo;\n  // prettier-ignore\n  let x = _0n, y = _1n, u = _1n, v = _0n;\n  while (a !== _0n) {\n    // JIT applies optimization if those two lines follow each other\n    const q = b / a;\n    const r = b % a;\n    const m = x - u * q;\n    const n = y - v * q;\n    // prettier-ignore\n    b = a, a = r, x = u, y = v, u = m, v = n;\n  }\n  const gcd = b;\n  if (gcd !== _1n) throw new Error('invert: does not exist');\n  return mod(x, modulo);\n}\n\n// Not all roots are possible! Example which will throw:\n// const NUM =\n// n = 72057594037927816n;\n// Fp = Field(BigInt('0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaab'));\nfunction sqrt3mod4<T>(Fp: IField<T>, n: T) {\n  const p1div4 = (Fp.ORDER + _1n) / _4n;\n  const root = Fp.pow(n, p1div4);\n  // Throw if root^2 != n\n  if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n  return root;\n}\n\nfunction sqrt5mod8<T>(Fp: IField<T>, n: T) {\n  const p5div8 = (Fp.ORDER - _5n) / _8n;\n  const n2 = Fp.mul(n, _2n);\n  const v = Fp.pow(n2, p5div8);\n  const nv = Fp.mul(n, v);\n  const i = Fp.mul(Fp.mul(nv, _2n), v);\n  const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n  if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n  return root;\n}\n\n// TODO: Commented-out for now. Provide test vectors.\n// Tonelli is too slow for extension fields Fp2.\n// That means we can't use sqrt (c1, c2...) even for initialization constants.\n// if (P % _16n === _9n) return sqrt9mod16;\n// // prettier-ignore\n// function sqrt9mod16<T>(Fp: IField<T>, n: T, p7div16?: bigint) {\n//   if (p7div16 === undefined) p7div16 = (Fp.ORDER + BigInt(7)) / _16n;\n//   const c1 = Fp.sqrt(Fp.neg(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n//   const c2 = Fp.sqrt(c1);             //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n//   const c3 = Fp.sqrt(Fp.neg(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n//   const c4 = p7div16;                 //  4. c4 = (q + 7) / 16        # Integer arithmetic\n//   let tv1 = Fp.pow(n, c4);            //  1. tv1 = x^c4\n//   let tv2 = Fp.mul(c1, tv1);          //  2. tv2 = c1 * tv1\n//   const tv3 = Fp.mul(c2, tv1);        //  3. tv3 = c2 * tv1\n//   let tv4 = Fp.mul(c3, tv1);          //  4. tv4 = c3 * tv1\n//   const e1 = Fp.eql(Fp.sqr(tv2), n);  //  5.  e1 = (tv2^2) == x\n//   const e2 = Fp.eql(Fp.sqr(tv3), n);  //  6.  e2 = (tv3^2) == x\n//   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n//   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n//   const e3 = Fp.eql(Fp.sqr(tv2), n);  //  9.  e3 = (tv2^2) == x\n//   return Fp.cmov(tv1, tv2, e3); // 10.  z = CMOV(tv1, tv2, e3) # Select the sqrt from tv1 and tv2\n// }\n\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P: bigint): <T>(Fp: IField<T>, n: T) => T {\n  // Initialization (precomputation).\n  if (P < BigInt(3)) throw new Error('sqrt is not defined for small field');\n  // Factor P - 1 = Q * 2^S, where Q is odd\n  let Q = P - _1n;\n  let S = 0;\n  while (Q % _2n === _0n) {\n    Q /= _2n;\n    S++;\n  }\n\n  // Find the first quadratic non-residue Z >= 2\n  let Z = _2n;\n  const _Fp = Field(P);\n  while (FpLegendre(_Fp, Z) === 1) {\n    // Basic primality test for P. After x iterations, chance of\n    // not finding quadratic non-residue is 2^x, so 2^1000.\n    if (Z++ > 1000) throw new Error('Cannot find square root: probably non-prime P');\n  }\n  // Fast-path; usually done before Z, but we do \"primality test\".\n  if (S === 1) return sqrt3mod4;\n\n  // Slow-path\n  // TODO: test on Fp2 and others\n  let cc = _Fp.pow(Z, Q); // c = z^Q\n  const Q1div2 = (Q + _1n) / _2n;\n  return function tonelliSlow<T>(Fp: IField<T>, n: T): T {\n    if (Fp.is0(n)) return n;\n    // Check if n is a quadratic residue using Legendre symbol\n    if (FpLegendre(Fp, n) !== 1) throw new Error('Cannot find square root');\n\n    // Initialize variables for the main loop\n    let M = S;\n    let c = Fp.mul(Fp.ONE, cc); // c = z^Q, move cc from field _Fp into field Fp\n    let t = Fp.pow(n, Q); // t = n^Q, first guess at the fudge factor\n    let R = Fp.pow(n, Q1div2); // R = n^((Q+1)/2), first guess at the square root\n\n    // Main loop\n    // while t != 1\n    while (!Fp.eql(t, Fp.ONE)) {\n      if (Fp.is0(t)) return Fp.ZERO; // if t=0 return R=0\n      let i = 1;\n\n      // Find the smallest i >= 1 such that t^(2^i) ≡ 1 (mod P)\n      let t_tmp = Fp.sqr(t); // t^(2^1)\n      while (!Fp.eql(t_tmp, Fp.ONE)) {\n        i++;\n        t_tmp = Fp.sqr(t_tmp); // t^(2^2)...\n        if (i === M) throw new Error('Cannot find square root');\n      }\n\n      // Calculate the exponent for b: 2^(M - i - 1)\n      const exponent = _1n << BigInt(M - i - 1); // bigint is important\n      const b = Fp.pow(c, exponent); // b = 2^(M - i - 1)\n\n      // Update variables\n      M = i;\n      c = Fp.sqr(b); // c = b^2\n      t = Fp.mul(t, c); // t = (t * b^2)\n      R = Fp.mul(R, b); // R = R*b\n    }\n    return R;\n  };\n}\n\n/**\n * Square root for a finite field. Will try optimized versions first:\n *\n * 1. P ≡ 3 (mod 4)\n * 2. P ≡ 5 (mod 8)\n * 3. Tonelli-Shanks algorithm\n *\n * Different algorithms can give different roots, it is up to user to decide which one they want.\n * For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n */\nexport function FpSqrt(P: bigint): <T>(Fp: IField<T>, n: T) => T {\n  // P ≡ 3 (mod 4) => √n = n^((P+1)/4)\n  if (P % _4n === _3n) return sqrt3mod4;\n  // P ≡ 5 (mod 8) => Atkin algorithm, page 10 of https://eprint.iacr.org/2012/685.pdf\n  if (P % _8n === _5n) return sqrt5mod8;\n  // P ≡ 9 (mod 16) not implemented, see above\n  // Tonelli-Shanks algorithm\n  return tonelliShanks(P);\n}\n\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num: bigint, modulo: bigint): boolean =>\n  (mod(num, modulo) & _1n) === _1n;\n\n/** Field is not always over prime: for example, Fp2 has ORDER(q)=p^m. */\nexport interface IField<T> {\n  ORDER: bigint;\n  isLE: boolean;\n  BYTES: number;\n  BITS: number;\n  MASK: bigint;\n  ZERO: T;\n  ONE: T;\n  // 1-arg\n  create: (num: T) => T;\n  isValid: (num: T) => boolean;\n  is0: (num: T) => boolean;\n  neg(num: T): T;\n  inv(num: T): T;\n  sqrt(num: T): T;\n  sqr(num: T): T;\n  // 2-args\n  eql(lhs: T, rhs: T): boolean;\n  add(lhs: T, rhs: T): T;\n  sub(lhs: T, rhs: T): T;\n  mul(lhs: T, rhs: T | bigint): T;\n  pow(lhs: T, power: bigint): T;\n  div(lhs: T, rhs: T | bigint): T;\n  // N for NonNormalized (for now)\n  addN(lhs: T, rhs: T): T;\n  subN(lhs: T, rhs: T): T;\n  mulN(lhs: T, rhs: T | bigint): T;\n  sqrN(num: T): T;\n\n  // Optional\n  // Should be same as sgn0 function in\n  // [RFC9380](https://www.rfc-editor.org/rfc/rfc9380#section-4.1).\n  // NOTE: sgn0 is 'negative in LE', which is same as odd. And negative in LE is kinda strange definition anyway.\n  isOdd?(num: T): boolean; // Odd instead of even since we have it for Fp2\n  // legendre?(num: T): T;\n  invertBatch: (lst: T[]) => T[];\n  toBytes(num: T): Uint8Array;\n  fromBytes(bytes: Uint8Array): T;\n  // If c is False, CMOV returns a, otherwise it returns b.\n  cmov(a: T, b: T, c: boolean): T;\n}\n// prettier-ignore\nconst FIELD_FIELDS = [\n  'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n  'eql', 'add', 'sub', 'mul', 'pow', 'div',\n  'addN', 'subN', 'mulN', 'sqrN'\n] as const;\nexport function validateField<T>(field: IField<T>): IField<T> {\n  const initial = {\n    ORDER: 'bigint',\n    MASK: 'bigint',\n    BYTES: 'isSafeInteger',\n    BITS: 'isSafeInteger',\n  } as Record<string, string>;\n  const opts = FIELD_FIELDS.reduce((map, val: string) => {\n    map[val] = 'function';\n    return map;\n  }, initial);\n  return validateObject(field, opts);\n}\n\n// Generic field functions\n\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow<T>(Fp: IField<T>, num: T, power: bigint): T {\n  if (power < _0n) throw new Error('invalid exponent, negatives unsupported');\n  if (power === _0n) return Fp.ONE;\n  if (power === _1n) return num;\n  let p = Fp.ONE;\n  let d = num;\n  while (power > _0n) {\n    if (power & _1n) p = Fp.mul(p, d);\n    d = Fp.sqr(d);\n    power >>= _1n;\n  }\n  return p;\n}\n\n/**\n * Efficiently invert an array of Field elements.\n * Exception-free. Will return `undefined` for 0 elements.\n * @param passZero map 0 to 0 (instead of undefined)\n */\nexport function FpInvertBatch<T>(Fp: IField<T>, nums: T[], passZero = false): T[] {\n  const inverted = new Array(nums.length).fill(passZero ? Fp.ZERO : undefined);\n  // Walk from first to last, multiply them by each other MOD p\n  const multipliedAcc = nums.reduce((acc, num, i) => {\n    if (Fp.is0(num)) return acc;\n    inverted[i] = acc;\n    return Fp.mul(acc, num);\n  }, Fp.ONE);\n  // Invert last element\n  const invertedAcc = Fp.inv(multipliedAcc);\n  // Walk from last to first, multiply them by inverted each other MOD p\n  nums.reduceRight((acc, num, i) => {\n    if (Fp.is0(num)) return acc;\n    inverted[i] = Fp.mul(acc, inverted[i]);\n    return Fp.mul(acc, num);\n  }, invertedAcc);\n  return inverted;\n}\n\n// TODO: remove\nexport function FpDiv<T>(Fp: IField<T>, lhs: T, rhs: T | bigint): T {\n  return Fp.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, Fp.ORDER) : Fp.inv(rhs));\n}\n\n/**\n * Legendre symbol.\n * Legendre constant is used to calculate Legendre symbol (a | p)\n * which denotes the value of a^((p-1)/2) (mod p).\n *\n * * (a | p) ≡ 1    if a is a square (mod p), quadratic residue\n * * (a | p) ≡ -1   if a is not a square (mod p), quadratic non residue\n * * (a | p) ≡ 0    if a ≡ 0 (mod p)\n */\nexport function FpLegendre<T>(Fp: IField<T>, n: T): -1 | 0 | 1 {\n  // We can use 3rd argument as optional cache of this value\n  // but seems unneeded for now. The operation is very fast.\n  const p1mod2 = (Fp.ORDER - _1n) / _2n;\n  const powered = Fp.pow(n, p1mod2);\n  const yes = Fp.eql(powered, Fp.ONE);\n  const zero = Fp.eql(powered, Fp.ZERO);\n  const no = Fp.eql(powered, Fp.neg(Fp.ONE));\n  if (!yes && !zero && !no) throw new Error('invalid Legendre symbol result');\n  return yes ? 1 : zero ? 0 : -1;\n}\n\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare<T>(Fp: IField<T>, n: T): boolean {\n  const l = FpLegendre(Fp, n);\n  return l === 1;\n}\n\n// CURVE.n lengths\nexport function nLength(\n  n: bigint,\n  nBitLength?: number\n): {\n  nBitLength: number;\n  nByteLength: number;\n} {\n  // Bit size, byte size of CURVE.n\n  if (nBitLength !== undefined) anumber(nBitLength);\n  const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n  const nByteLength = Math.ceil(_nBitLength / 8);\n  return { nBitLength: _nBitLength, nByteLength };\n}\n\ntype FpField = IField<bigint> & Required<Pick<IField<bigint>, 'isOdd'>>;\n/**\n * Initializes a finite field over prime.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * Fragile: always run a benchmark on a change.\n * Security note: operations don't check 'isValid' for all elements for performance reasons,\n * it is caller responsibility to check this.\n * This is low-level code, please make sure you know what you're doing.\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(\n  ORDER: bigint,\n  bitLen?: number,\n  isLE = false,\n  redef: Partial<IField<bigint>> = {}\n): Readonly<FpField> {\n  if (ORDER <= _0n) throw new Error('invalid field: expected ORDER > 0, got ' + ORDER);\n  const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n  if (BYTES > 2048) throw new Error('invalid field: expected ORDER of <= 2048 bytes');\n  let sqrtP: ReturnType<typeof FpSqrt>; // cached sqrtP\n  const f: Readonly<FpField> = Object.freeze({\n    ORDER,\n    isLE,\n    BITS,\n    BYTES,\n    MASK: bitMask(BITS),\n    ZERO: _0n,\n    ONE: _1n,\n    create: (num) => mod(num, ORDER),\n    isValid: (num) => {\n      if (typeof num !== 'bigint')\n        throw new Error('invalid field element: expected bigint, got ' + typeof num);\n      return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n    },\n    is0: (num) => num === _0n,\n    isOdd: (num) => (num & _1n) === _1n,\n    neg: (num) => mod(-num, ORDER),\n    eql: (lhs, rhs) => lhs === rhs,\n\n    sqr: (num) => mod(num * num, ORDER),\n    add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n    sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n    mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n    pow: (num, power) => FpPow(f, num, power),\n    div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n\n    // Same as above, but doesn't normalize\n    sqrN: (num) => num * num,\n    addN: (lhs, rhs) => lhs + rhs,\n    subN: (lhs, rhs) => lhs - rhs,\n    mulN: (lhs, rhs) => lhs * rhs,\n\n    inv: (num) => invert(num, ORDER),\n    sqrt:\n      redef.sqrt ||\n      ((n) => {\n        if (!sqrtP) sqrtP = FpSqrt(ORDER);\n        return sqrtP(f, n);\n      }),\n    toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n    fromBytes: (bytes) => {\n      if (bytes.length !== BYTES)\n        throw new Error('Field.fromBytes: expected ' + BYTES + ' bytes, got ' + bytes.length);\n      return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n    },\n    // TODO: we don't need it here, move out to separate fn\n    invertBatch: (lst) => FpInvertBatch(f, lst),\n    // We can't move this out because Fp6, Fp12 implement it\n    // and it's unclear what to return in there.\n    cmov: (a, b, c) => (c ? b : a),\n  } as FpField);\n  return Object.freeze(f);\n}\n\nexport function FpSqrtOdd<T>(Fp: IField<T>, elm: T): T {\n  if (!Fp.isOdd) throw new Error(\"Field doesn't have isOdd\");\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? root : Fp.neg(root);\n}\n\nexport function FpSqrtEven<T>(Fp: IField<T>, elm: T): T {\n  if (!Fp.isOdd) throw new Error(\"Field doesn't have isOdd\");\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use `mapKeyToField` instead\n */\nexport function hashToPrivateScalar(\n  hash: string | Uint8Array,\n  groupOrder: bigint,\n  isLE = false\n): bigint {\n  hash = ensureBytes('privateHash', hash);\n  const hashLen = hash.length;\n  const minLen = nLength(groupOrder).nByteLength + 8;\n  if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n    throw new Error(\n      'hashToPrivateScalar: expected ' + minLen + '-1024 bytes of input, got ' + hashLen\n    );\n  const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n  return mod(num, groupOrder - _1n) + _1n;\n}\n\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder: bigint): number {\n  if (typeof fieldOrder !== 'bigint') throw new Error('field order must be bigint');\n  const bitLength = fieldOrder.toString(2).length;\n  return Math.ceil(bitLength / 8);\n}\n\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder: bigint): number {\n  const length = getFieldBytesLength(fieldOrder);\n  return length + Math.ceil(length / 2);\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key: Uint8Array, fieldOrder: bigint, isLE = false): Uint8Array {\n  const len = key.length;\n  const fieldLen = getFieldBytesLength(fieldOrder);\n  const minLen = getMinHashLength(fieldOrder);\n  // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n  if (len < 16 || len < minLen || len > 1024)\n    throw new Error('expected ' + minLen + '-1024 bytes of input, got ' + len);\n  const num = isLE ? bytesToNumberLE(key) : bytesToNumberBE(key);\n  // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n  const reduced = mod(num, fieldOrder - _1n) + _1n;\n  return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n","/**\n * Methods for elliptic curve multiplication by scalars.\n * Contains wNAF, pippenger\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { type IField, nLength, validateField } from './modular.ts';\nimport { bitLen, bitMask, validateObject } from './utils.ts';\n\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n\nexport type AffinePoint<T> = {\n  x: T;\n  y: T;\n} & { z?: never; t?: never };\n\nexport interface Group<T extends Group<T>> {\n  double(): T;\n  negate(): T;\n  add(other: T): T;\n  subtract(other: T): T;\n  equals(other: T): boolean;\n  multiply(scalar: bigint): T;\n}\n\nexport type GroupConstructor<T> = {\n  BASE: T;\n  ZERO: T;\n};\nexport type Mapper<T> = (i: T[]) => T[];\n\nfunction constTimeNegate<T extends Group<T>>(condition: boolean, item: T): T {\n  const neg = item.negate();\n  return condition ? neg : item;\n}\n\nfunction validateW(W: number, bits: number) {\n  if (!Number.isSafeInteger(W) || W <= 0 || W > bits)\n    throw new Error('invalid window size, expected [1..' + bits + '], got W=' + W);\n}\n\n/** Internal wNAF opts for specific W and scalarBits */\nexport type WOpts = {\n  windows: number;\n  windowSize: number;\n  mask: bigint;\n  maxNumber: number;\n  shiftBy: bigint;\n};\n\nfunction calcWOpts(W: number, scalarBits: number): WOpts {\n  validateW(W, scalarBits);\n  const windows = Math.ceil(scalarBits / W) + 1; // W=8 33. Not 32, because we skip zero\n  const windowSize = 2 ** (W - 1); // W=8 128. Not 256, because we skip zero\n  const maxNumber = 2 ** W; // W=8 256\n  const mask = bitMask(W); // W=8 255 == mask 0b11111111\n  const shiftBy = BigInt(W); // W=8 8\n  return { windows, windowSize, mask, maxNumber, shiftBy };\n}\n\nfunction calcOffsets(n: bigint, window: number, wOpts: WOpts) {\n  const { windowSize, mask, maxNumber, shiftBy } = wOpts;\n  let wbits = Number(n & mask); // extract W bits.\n  let nextN = n >> shiftBy; // shift number by W bits.\n\n  // What actually happens here:\n  // const highestBit = Number(mask ^ (mask >> 1n));\n  // let wbits2 = wbits - 1; // skip zero\n  // if (wbits2 & highestBit) { wbits2 ^= Number(mask); // (~);\n\n  // split if bits > max: +224 => 256-32\n  if (wbits > windowSize) {\n    // we skip zero, which means instead of `>= size-1`, we do `> size`\n    wbits -= maxNumber; // -32, can be maxNumber - wbits, but then we need to set isNeg here.\n    nextN += _1n; // +256 (carry)\n  }\n  const offsetStart = window * windowSize;\n  const offset = offsetStart + Math.abs(wbits) - 1; // -1 because we skip zero\n  const isZero = wbits === 0; // is current window slice a 0?\n  const isNeg = wbits < 0; // is current window slice negative?\n  const isNegF = window % 2 !== 0; // fake random statement for noise\n  const offsetF = offsetStart; // fake offset for noise\n  return { nextN, offset, isZero, isNeg, isNegF, offsetF };\n}\n\nfunction validateMSMPoints(points: any[], c: any) {\n  if (!Array.isArray(points)) throw new Error('array expected');\n  points.forEach((p, i) => {\n    if (!(p instanceof c)) throw new Error('invalid point at index ' + i);\n  });\n}\nfunction validateMSMScalars(scalars: any[], field: any) {\n  if (!Array.isArray(scalars)) throw new Error('array of scalars expected');\n  scalars.forEach((s, i) => {\n    if (!field.isValid(s)) throw new Error('invalid scalar at index ' + i);\n  });\n}\n\n// Since points in different groups cannot be equal (different object constructor),\n// we can have single place to store precomputes.\n// Allows to make points frozen / immutable.\nconst pointPrecomputes = new WeakMap<any, any[]>();\nconst pointWindowSizes = new WeakMap<any, number>();\n\nfunction getW(P: any): number {\n  return pointWindowSizes.get(P) || 1;\n}\n\nexport type IWNAF<T extends Group<T>> = {\n  constTimeNegate: <T extends Group<T>>(condition: boolean, item: T) => T;\n  hasPrecomputes(elm: T): boolean;\n  unsafeLadder(elm: T, n: bigint, p?: T): T;\n  precomputeWindow(elm: T, W: number): Group<T>[];\n  getPrecomputes(W: number, P: T, transform: Mapper<T>): T[];\n  wNAF(W: number, precomputes: T[], n: bigint): { p: T; f: T };\n  wNAFUnsafe(W: number, precomputes: T[], n: bigint, acc?: T): T;\n  wNAFCached(P: T, n: bigint, transform: Mapper<T>): { p: T; f: T };\n  wNAFCachedUnsafe(P: T, n: bigint, transform: Mapper<T>, prev?: T): T;\n  setWindowSize(P: T, W: number): void;\n};\n\n/**\n * Elliptic curve multiplication of Point by scalar. Fragile.\n * Scalars should always be less than curve order: this should be checked inside of a curve itself.\n * Creates precomputation tables for fast multiplication:\n * - private scalar is split by fixed size windows of W bits\n * - every window point is collected from window's table & added to accumulator\n * - since windows are different, same point inside tables won't be accessed more than once per calc\n * - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n * - +1 window is neccessary for wNAF\n * - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n *\n * @todo Research returning 2d JS array of windows, instead of a single window.\n * This would allow windows to be in different memory locations\n */\nexport function wNAF<T extends Group<T>>(c: GroupConstructor<T>, bits: number): IWNAF<T> {\n  return {\n    constTimeNegate,\n\n    hasPrecomputes(elm: T) {\n      return getW(elm) !== 1;\n    },\n\n    // non-const time multiplication ladder\n    unsafeLadder(elm: T, n: bigint, p = c.ZERO) {\n      let d: T = elm;\n      while (n > _0n) {\n        if (n & _1n) p = p.add(d);\n        d = d.double();\n        n >>= _1n;\n      }\n      return p;\n    },\n\n    /**\n     * Creates a wNAF precomputation window. Used for caching.\n     * Default window size is set by `utils.precompute()` and is equal to 8.\n     * Number of precomputed points depends on the curve size:\n     * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n     * - 𝑊 is the window size\n     * - 𝑛 is the bitlength of the curve order.\n     * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n     * @param elm Point instance\n     * @param W window size\n     * @returns precomputed point tables flattened to a single array\n     */\n    precomputeWindow(elm: T, W: number): Group<T>[] {\n      const { windows, windowSize } = calcWOpts(W, bits);\n      const points: T[] = [];\n      let p: T = elm;\n      let base = p;\n      for (let window = 0; window < windows; window++) {\n        base = p;\n        points.push(base);\n        // i=1, bc we skip 0\n        for (let i = 1; i < windowSize; i++) {\n          base = base.add(p);\n          points.push(base);\n        }\n        p = base.double();\n      }\n      return points;\n    },\n\n    /**\n     * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param W window size\n     * @param precomputes precomputed tables\n     * @param n scalar (we don't check here, but should be less than curve order)\n     * @returns real and fake (for const-time) points\n     */\n    wNAF(W: number, precomputes: T[], n: bigint): { p: T; f: T } {\n      // Smaller version:\n      // https://github.com/paulmillr/noble-secp256k1/blob/47cb1669b6e506ad66b35fe7d76132ae97465da2/index.ts#L502-L541\n      // TODO: check the scalar is less than group order?\n      // wNAF behavior is undefined otherwise. But have to carefully remove\n      // other checks before wNAF. ORDER == bits here.\n      // Accumulators\n      let p = c.ZERO;\n      let f = c.BASE;\n      // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n      // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n      // there is negate now: it is possible that negated element from low value\n      // would be the same as high element, which will create carry into next window.\n      // It's not obvious how this can fail, but still worth investigating later.\n      const wo = calcWOpts(W, bits);\n      for (let window = 0; window < wo.windows; window++) {\n        // (n === _0n) is handled and not early-exited. isEven and offsetF are used for noise\n        const { nextN, offset, isZero, isNeg, isNegF, offsetF } = calcOffsets(n, window, wo);\n        n = nextN;\n        if (isZero) {\n          // bits are 0: add garbage to fake point\n          // Important part for const-time getPublicKey: add random \"noise\" point to f.\n          f = f.add(constTimeNegate(isNegF, precomputes[offsetF]));\n        } else {\n          // bits are 1: add to result point\n          p = p.add(constTimeNegate(isNeg, precomputes[offset]));\n        }\n      }\n      // Return both real and fake points: JIT won't eliminate f.\n      // At this point there is a way to F be infinity-point even if p is not,\n      // which makes it less const-time: around 1 bigint multiply.\n      return { p, f };\n    },\n\n    /**\n     * Implements ec unsafe (non const-time) multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param W window size\n     * @param precomputes precomputed tables\n     * @param n scalar (we don't check here, but should be less than curve order)\n     * @param acc accumulator point to add result of multiplication\n     * @returns point\n     */\n    wNAFUnsafe(W: number, precomputes: T[], n: bigint, acc: T = c.ZERO): T {\n      const wo = calcWOpts(W, bits);\n      for (let window = 0; window < wo.windows; window++) {\n        if (n === _0n) break; // Early-exit, skip 0 value\n        const { nextN, offset, isZero, isNeg } = calcOffsets(n, window, wo);\n        n = nextN;\n        if (isZero) {\n          // Window bits are 0: skip processing.\n          // Move to next window.\n          continue;\n        } else {\n          const item = precomputes[offset];\n          acc = acc.add(isNeg ? item.negate() : item); // Re-using acc allows to save adds in MSM\n        }\n      }\n      return acc;\n    },\n\n    getPrecomputes(W: number, P: T, transform: Mapper<T>): T[] {\n      // Calculate precomputes on a first run, reuse them after\n      let comp = pointPrecomputes.get(P);\n      if (!comp) {\n        comp = this.precomputeWindow(P, W) as T[];\n        if (W !== 1) pointPrecomputes.set(P, transform(comp));\n      }\n      return comp;\n    },\n\n    wNAFCached(P: T, n: bigint, transform: Mapper<T>): { p: T; f: T } {\n      const W = getW(P);\n      return this.wNAF(W, this.getPrecomputes(W, P, transform), n);\n    },\n\n    wNAFCachedUnsafe(P: T, n: bigint, transform: Mapper<T>, prev?: T): T {\n      const W = getW(P);\n      if (W === 1) return this.unsafeLadder(P, n, prev); // For W=1 ladder is ~x2 faster\n      return this.wNAFUnsafe(W, this.getPrecomputes(W, P, transform), n, prev);\n    },\n\n    // We calculate precomputes for elliptic curve point multiplication\n    // using windowed method. This specifies window size and\n    // stores precomputed values. Usually only base point would be precomputed.\n\n    setWindowSize(P: T, W: number) {\n      validateW(W, bits);\n      pointWindowSizes.set(P, W);\n      pointPrecomputes.delete(P);\n    },\n  };\n}\n\n/**\n * Pippenger algorithm for multi-scalar multiplication (MSM, Pa + Qb + Rc + ...).\n * 30x faster vs naive addition on L=4096, 10x faster than precomputes.\n * For N=254bit, L=1, it does: 1024 ADD + 254 DBL. For L=5: 1536 ADD + 254 DBL.\n * Algorithmically constant-time (for same L), even when 1 point + scalar, or when scalar = 0.\n * @param c Curve Point constructor\n * @param fieldN field over CURVE.N - important that it's not over CURVE.P\n * @param points array of L curve points\n * @param scalars array of L scalars (aka private keys / bigints)\n */\nexport function pippenger<T extends Group<T>>(\n  c: GroupConstructor<T>,\n  fieldN: IField<bigint>,\n  points: T[],\n  scalars: bigint[]\n): T {\n  // If we split scalars by some window (let's say 8 bits), every chunk will only\n  // take 256 buckets even if there are 4096 scalars, also re-uses double.\n  // TODO:\n  // - https://eprint.iacr.org/2024/750.pdf\n  // - https://tches.iacr.org/index.php/TCHES/article/view/10287\n  // 0 is accepted in scalars\n  validateMSMPoints(points, c);\n  validateMSMScalars(scalars, fieldN);\n  const plength = points.length;\n  const slength = scalars.length;\n  if (plength !== slength) throw new Error('arrays of points and scalars must have equal length');\n  // if (plength === 0) throw new Error('array must be of length >= 2');\n  const zero = c.ZERO;\n  const wbits = bitLen(BigInt(plength));\n  let windowSize = 1; // bits\n  if (wbits > 12) windowSize = wbits - 3;\n  else if (wbits > 4) windowSize = wbits - 2;\n  else if (wbits > 0) windowSize = 2;\n  const MASK = bitMask(windowSize);\n  const buckets = new Array(Number(MASK) + 1).fill(zero); // +1 for zero array\n  const lastBits = Math.floor((fieldN.BITS - 1) / windowSize) * windowSize;\n  let sum = zero;\n  for (let i = lastBits; i >= 0; i -= windowSize) {\n    buckets.fill(zero);\n    for (let j = 0; j < slength; j++) {\n      const scalar = scalars[j];\n      const wbits = Number((scalar >> BigInt(i)) & MASK);\n      buckets[wbits] = buckets[wbits].add(points[j]);\n    }\n    let resI = zero; // not using this will do small speed-up, but will lose ct\n    // Skip first bucket, because it is zero\n    for (let j = buckets.length - 1, sumI = zero; j > 0; j--) {\n      sumI = sumI.add(buckets[j]);\n      resI = resI.add(sumI);\n    }\n    sum = sum.add(resI);\n    if (i !== 0) for (let j = 0; j < windowSize; j++) sum = sum.double();\n  }\n  return sum as T;\n}\n/**\n * Precomputed multi-scalar multiplication (MSM, Pa + Qb + Rc + ...).\n * @param c Curve Point constructor\n * @param fieldN field over CURVE.N - important that it's not over CURVE.P\n * @param points array of L curve points\n * @returns function which multiplies points with scaars\n */\nexport function precomputeMSMUnsafe<T extends Group<T>>(\n  c: GroupConstructor<T>,\n  fieldN: IField<bigint>,\n  points: T[],\n  windowSize: number\n): (scalars: bigint[]) => T {\n  /**\n   * Performance Analysis of Window-based Precomputation\n   *\n   * Base Case (256-bit scalar, 8-bit window):\n   * - Standard precomputation requires:\n   *   - 31 additions per scalar × 256 scalars = 7,936 ops\n   *   - Plus 255 summary additions = 8,191 total ops\n   *   Note: Summary additions can be optimized via accumulator\n   *\n   * Chunked Precomputation Analysis:\n   * - Using 32 chunks requires:\n   *   - 255 additions per chunk\n   *   - 256 doublings\n   *   - Total: (255 × 32) + 256 = 8,416 ops\n   *\n   * Memory Usage Comparison:\n   * Window Size | Standard Points | Chunked Points\n   * ------------|-----------------|---------------\n   *     4-bit   |     520         |      15\n   *     8-bit   |    4,224        |     255\n   *    10-bit   |   13,824        |   1,023\n   *    16-bit   |  557,056        |  65,535\n   *\n   * Key Advantages:\n   * 1. Enables larger window sizes due to reduced memory overhead\n   * 2. More efficient for smaller scalar counts:\n   *    - 16 chunks: (16 × 255) + 256 = 4,336 ops\n   *    - ~2x faster than standard 8,191 ops\n   *\n   * Limitations:\n   * - Not suitable for plain precomputes (requires 256 constant doublings)\n   * - Performance degrades with larger scalar counts:\n   *   - Optimal for ~256 scalars\n   *   - Less efficient for 4096+ scalars (Pippenger preferred)\n   */\n  validateW(windowSize, fieldN.BITS);\n  validateMSMPoints(points, c);\n  const zero = c.ZERO;\n  const tableSize = 2 ** windowSize - 1; // table size (without zero)\n  const chunks = Math.ceil(fieldN.BITS / windowSize); // chunks of item\n  const MASK = bitMask(windowSize);\n  const tables = points.map((p: T) => {\n    const res = [];\n    for (let i = 0, acc = p; i < tableSize; i++) {\n      res.push(acc);\n      acc = acc.add(p);\n    }\n    return res;\n  });\n  return (scalars: bigint[]): T => {\n    validateMSMScalars(scalars, fieldN);\n    if (scalars.length > points.length)\n      throw new Error('array of scalars must be smaller than array of points');\n    let res = zero;\n    for (let i = 0; i < chunks; i++) {\n      // No need to double if accumulator is still zero.\n      if (res !== zero) for (let j = 0; j < windowSize; j++) res = res.double();\n      const shiftBy = BigInt(chunks * windowSize - (i + 1) * windowSize);\n      for (let j = 0; j < scalars.length; j++) {\n        const n = scalars[j];\n        const curr = Number((n >> shiftBy) & MASK);\n        if (!curr) continue; // skip zero scalars chunks\n        res = res.add(tables[j][curr - 1]);\n      }\n    }\n    return res;\n  };\n}\n\n/**\n * Generic BasicCurve interface: works even for polynomial fields (BLS): P, n, h would be ok.\n * Though generator can be different (Fp2 / Fp6 for BLS).\n */\nexport type BasicCurve<T> = {\n  Fp: IField<T>; // Field over which we'll do calculations (Fp)\n  n: bigint; // Curve order, total count of valid points in the field\n  nBitLength?: number; // bit length of curve order\n  nByteLength?: number; // byte length of curve order\n  h: bigint; // cofactor. we can assign default=1, but users will just ignore it w/o validation\n  hEff?: bigint; // Number to multiply to clear cofactor\n  Gx: T; // base point X coordinate\n  Gy: T; // base point Y coordinate\n  allowInfinityPoint?: boolean; // bls12-381 requires it. ZERO point is valid, but invalid pubkey\n};\n\nexport function validateBasic<FP, T>(\n  curve: BasicCurve<FP> & T\n): Readonly<\n  {\n    readonly nBitLength: number;\n    readonly nByteLength: number;\n  } & BasicCurve<FP> &\n    T & {\n      p: bigint;\n    }\n> {\n  validateField(curve.Fp);\n  validateObject(\n    curve,\n    {\n      n: 'bigint',\n      h: 'bigint',\n      Gx: 'field',\n      Gy: 'field',\n    },\n    {\n      nBitLength: 'isSafeInteger',\n      nByteLength: 'isSafeInteger',\n    }\n  );\n  // Set defaults\n  return Object.freeze({\n    ...nLength(curve.n, curve.nBitLength),\n    ...curve,\n    ...{ p: curve.Fp.ORDER },\n  } as const);\n}\n","/**\n * Short Weierstrass curve methods. The formula is: y² = x³ + ax + b.\n *\n * ### Parameters\n *\n * To initialize a weierstrass curve, one needs to pass following params:\n *\n * * a: formula param\n * * b: formula param\n * * Fp: finite field of prime characteristic P; may be complex (Fp2). Arithmetics is done in field\n * * n: order of prime subgroup a.k.a total amount of valid curve points\n * * Gx: Base point (x, y) aka generator point. Gx = x coordinate\n * * Gy: ...y coordinate\n * * h: cofactor, usually 1. h*n = curve group order (n is only subgroup order)\n * * lowS: whether to enable (default) or disable \"low-s\" non-malleable signatures\n *\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance\n * of nominative types in TypeScript and interfaces only check for shape, so it's hard to create\n * unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * @todo https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// prettier-ignore\nimport {\n  pippenger, validateBasic, wNAF,\n  type AffinePoint, type BasicCurve, type Group, type GroupConstructor\n} from './curve.ts';\n// prettier-ignore\nimport {\n  Field,\n  FpInvertBatch,\n  getMinHashLength, invert, mapHashToField, mod, validateField,\n  type IField\n} from './modular.ts';\n// prettier-ignore\nimport {\n  aInRange, abool,\n  bitMask,\n  bytesToHex, bytesToNumberBE, concatBytes, createHmacDrbg, ensureBytes, hexToBytes,\n  inRange, isBytes, memoized, numberToBytesBE, numberToHexUnpadded, validateObject,\n  type CHash, type Hex, type PrivKey\n} from './utils.ts';\n\nexport type { AffinePoint };\ntype HmacFnSync = (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array;\n/**\n * When Weierstrass curve has `a=0`, it becomes Koblitz curve.\n * Koblitz curves allow using **efficiently-computable GLV endomorphism ψ**.\n * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n *\n * Endomorphism consists of beta, lambda and splitScalar:\n *\n * 1. GLV endomorphism ψ transforms a point: `P = (x, y) ↦ ψ(P) = (β·x mod p, y)`\n * 2. GLV scalar decomposition transforms a scalar: `k ≡ k₁ + k₂·λ (mod n)`\n * 3. Then these are combined: `k·P = k₁·P + k₂·ψ(P)`\n * 4. Two 128-bit point-by-scalar multiplications + one point addition is faster than\n *    one 256-bit multiplication.\n *\n * where\n * * beta: β ∈ Fₚ with β³ = 1, β ≠ 1\n * * lambda: λ ∈ Fₙ with λ³ = 1, λ ≠ 1\n * * splitScalar decomposes k ↦ k₁, k₂, by using reduced basis vectors.\n *   Gauss lattice reduction calculates them from initial basis vectors `(n, 0), (-λ, 0)`\n *\n * Check out `test/misc/endomorphism.js` and\n * [gist](https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066).\n */\nexport type EndomorphismOpts = {\n  beta: bigint;\n  splitScalar: (k: bigint) => { k1neg: boolean; k1: bigint; k2neg: boolean; k2: bigint };\n};\nexport type BasicWCurve<T> = BasicCurve<T> & {\n  // Params: a, b\n  a: T;\n  b: T;\n\n  // Optional params\n  allowedPrivateKeyLengths?: readonly number[]; // for P521\n  wrapPrivateKey?: boolean; // bls12-381 requires mod(n) instead of rejecting keys >= n\n  endo?: EndomorphismOpts;\n  // When a cofactor != 1, there can be an effective methods to:\n  // 1. Determine whether a point is torsion-free\n  isTorsionFree?: (c: ProjConstructor<T>, point: ProjPointType<T>) => boolean;\n  // 2. Clear torsion component\n  clearCofactor?: (c: ProjConstructor<T>, point: ProjPointType<T>) => ProjPointType<T>;\n};\n\nexport type Entropy = Hex | boolean;\nexport type SignOpts = { lowS?: boolean; extraEntropy?: Entropy; prehash?: boolean };\nexport type VerOpts = { lowS?: boolean; prehash?: boolean; format?: 'compact' | 'der' | undefined };\n\nfunction validateSigVerOpts(opts: SignOpts | VerOpts) {\n  if (opts.lowS !== undefined) abool('lowS', opts.lowS);\n  if (opts.prehash !== undefined) abool('prehash', opts.prehash);\n}\n\n// Instance for 3d XYZ points\nexport interface ProjPointType<T> extends Group<ProjPointType<T>> {\n  readonly px: T;\n  readonly py: T;\n  readonly pz: T;\n  get x(): T;\n  get y(): T;\n  toAffine(iz?: T): AffinePoint<T>;\n  toHex(isCompressed?: boolean): string;\n  toRawBytes(isCompressed?: boolean): Uint8Array;\n\n  assertValidity(): void;\n  hasEvenY(): boolean;\n  multiplyUnsafe(scalar: bigint): ProjPointType<T>;\n  multiplyAndAddUnsafe(Q: ProjPointType<T>, a: bigint, b: bigint): ProjPointType<T> | undefined;\n  isTorsionFree(): boolean;\n  clearCofactor(): ProjPointType<T>;\n  _setWindowSize(windowSize: number): void;\n}\n// Static methods for 3d XYZ points\nexport interface ProjConstructor<T> extends GroupConstructor<ProjPointType<T>> {\n  new (x: T, y: T, z: T): ProjPointType<T>;\n  fromAffine(p: AffinePoint<T>): ProjPointType<T>;\n  fromHex(hex: Hex): ProjPointType<T>;\n  fromPrivateKey(privateKey: PrivKey): ProjPointType<T>;\n  normalizeZ(points: ProjPointType<T>[]): ProjPointType<T>[];\n  msm(points: ProjPointType<T>[], scalars: bigint[]): ProjPointType<T>;\n}\n\nexport type CurvePointsType<T> = BasicWCurve<T> & {\n  // Bytes\n  fromBytes?: (bytes: Uint8Array) => AffinePoint<T>;\n  toBytes?: (c: ProjConstructor<T>, point: ProjPointType<T>, isCompressed: boolean) => Uint8Array;\n};\n\nexport type CurvePointsTypeWithLength<T> = Readonly<\n  CurvePointsType<T> & { nByteLength: number; nBitLength: number }\n>;\n\nfunction validatePointOpts<T>(curve: CurvePointsType<T>): CurvePointsTypeWithLength<T> {\n  const opts = validateBasic(curve);\n  validateObject(\n    opts,\n    {\n      a: 'field',\n      b: 'field',\n    },\n    {\n      allowInfinityPoint: 'boolean',\n      allowedPrivateKeyLengths: 'array',\n      clearCofactor: 'function',\n      fromBytes: 'function',\n      isTorsionFree: 'function',\n      toBytes: 'function',\n      wrapPrivateKey: 'boolean',\n    }\n  );\n  const { endo, Fp, a } = opts;\n  if (endo) {\n    if (!Fp.eql(a, Fp.ZERO)) {\n      throw new Error('invalid endo: CURVE.a must be 0');\n    }\n    if (\n      typeof endo !== 'object' ||\n      typeof endo.beta !== 'bigint' ||\n      typeof endo.splitScalar !== 'function'\n    ) {\n      throw new Error('invalid endo: expected \"beta\": bigint and \"splitScalar\": function');\n    }\n  }\n  return Object.freeze({ ...opts } as const);\n}\n\nexport type CurvePointsRes<T> = {\n  CURVE: ReturnType<typeof validatePointOpts<T>>;\n  ProjectivePoint: ProjConstructor<T>;\n  normPrivateKeyToScalar: (key: PrivKey) => bigint;\n  weierstrassEquation: (x: T) => T;\n  isWithinCurveOrder: (num: bigint) => boolean;\n};\n\nexport class DERErr extends Error {\n  constructor(m = '') {\n    super(m);\n  }\n}\nexport type IDER = {\n  // asn.1 DER encoding utils\n  Err: typeof DERErr;\n  // Basic building block is TLV (Tag-Length-Value)\n  _tlv: {\n    encode: (tag: number, data: string) => string;\n    // v - value, l - left bytes (unparsed)\n    decode(tag: number, data: Uint8Array): { v: Uint8Array; l: Uint8Array };\n  };\n  // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n  // since we always use positive integers here. It must always be empty:\n  // - add zero byte if exists\n  // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n  _int: {\n    encode(num: bigint): string;\n    decode(data: Uint8Array): bigint;\n  };\n  toSig(hex: string | Uint8Array): { r: bigint; s: bigint };\n  hexFromSig(sig: { r: bigint; s: bigint }): string;\n};\n/**\n * ASN.1 DER encoding utilities. ASN is very complex & fragile. Format:\n *\n *     [0x30 (SEQUENCE), bytelength, 0x02 (INTEGER), intLength, R, 0x02 (INTEGER), intLength, S]\n *\n * Docs: https://letsencrypt.org/docs/a-warm-welcome-to-asn1-and-der/, https://luca.ntop.org/Teaching/Appunti/asn1.html\n */\nexport const DER: IDER = {\n  // asn.1 DER encoding utils\n  Err: DERErr,\n  // Basic building block is TLV (Tag-Length-Value)\n  _tlv: {\n    encode: (tag: number, data: string): string => {\n      const { Err: E } = DER;\n      if (tag < 0 || tag > 256) throw new E('tlv.encode: wrong tag');\n      if (data.length & 1) throw new E('tlv.encode: unpadded data');\n      const dataLen = data.length / 2;\n      const len = numberToHexUnpadded(dataLen);\n      if ((len.length / 2) & 0b1000_0000) throw new E('tlv.encode: long form length too big');\n      // length of length with long form flag\n      const lenLen = dataLen > 127 ? numberToHexUnpadded((len.length / 2) | 0b1000_0000) : '';\n      const t = numberToHexUnpadded(tag);\n      return t + lenLen + len + data;\n    },\n    // v - value, l - left bytes (unparsed)\n    decode(tag: number, data: Uint8Array): { v: Uint8Array; l: Uint8Array } {\n      const { Err: E } = DER;\n      let pos = 0;\n      if (tag < 0 || tag > 256) throw new E('tlv.encode: wrong tag');\n      if (data.length < 2 || data[pos++] !== tag) throw new E('tlv.decode: wrong tlv');\n      const first = data[pos++];\n      const isLong = !!(first & 0b1000_0000); // First bit of first length byte is flag for short/long form\n      let length = 0;\n      if (!isLong) length = first;\n      else {\n        // Long form: [longFlag(1bit), lengthLength(7bit), length (BE)]\n        const lenLen = first & 0b0111_1111;\n        if (!lenLen) throw new E('tlv.decode(long): indefinite length not supported');\n        if (lenLen > 4) throw new E('tlv.decode(long): byte length is too big'); // this will overflow u32 in js\n        const lengthBytes = data.subarray(pos, pos + lenLen);\n        if (lengthBytes.length !== lenLen) throw new E('tlv.decode: length bytes not complete');\n        if (lengthBytes[0] === 0) throw new E('tlv.decode(long): zero leftmost byte');\n        for (const b of lengthBytes) length = (length << 8) | b;\n        pos += lenLen;\n        if (length < 128) throw new E('tlv.decode(long): not minimal encoding');\n      }\n      const v = data.subarray(pos, pos + length);\n      if (v.length !== length) throw new E('tlv.decode: wrong value length');\n      return { v, l: data.subarray(pos + length) };\n    },\n  },\n  // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n  // since we always use positive integers here. It must always be empty:\n  // - add zero byte if exists\n  // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n  _int: {\n    encode(num: bigint): string {\n      const { Err: E } = DER;\n      if (num < _0n) throw new E('integer: negative integers are not allowed');\n      let hex = numberToHexUnpadded(num);\n      // Pad with zero byte if negative flag is present\n      if (Number.parseInt(hex[0], 16) & 0b1000) hex = '00' + hex;\n      if (hex.length & 1) throw new E('unexpected DER parsing assertion: unpadded hex');\n      return hex;\n    },\n    decode(data: Uint8Array): bigint {\n      const { Err: E } = DER;\n      if (data[0] & 0b1000_0000) throw new E('invalid signature integer: negative');\n      if (data[0] === 0x00 && !(data[1] & 0b1000_0000))\n        throw new E('invalid signature integer: unnecessary leading zero');\n      return bytesToNumberBE(data);\n    },\n  },\n  toSig(hex: string | Uint8Array): { r: bigint; s: bigint } {\n    // parse DER signature\n    const { Err: E, _int: int, _tlv: tlv } = DER;\n    const data = ensureBytes('signature', hex);\n    const { v: seqBytes, l: seqLeftBytes } = tlv.decode(0x30, data);\n    if (seqLeftBytes.length) throw new E('invalid signature: left bytes after parsing');\n    const { v: rBytes, l: rLeftBytes } = tlv.decode(0x02, seqBytes);\n    const { v: sBytes, l: sLeftBytes } = tlv.decode(0x02, rLeftBytes);\n    if (sLeftBytes.length) throw new E('invalid signature: left bytes after parsing');\n    return { r: int.decode(rBytes), s: int.decode(sBytes) };\n  },\n  hexFromSig(sig: { r: bigint; s: bigint }): string {\n    const { _tlv: tlv, _int: int } = DER;\n    const rs = tlv.encode(0x02, int.encode(sig.r));\n    const ss = tlv.encode(0x02, int.encode(sig.s));\n    const seq = rs + ss;\n    return tlv.encode(0x30, seq);\n  },\n};\n\nfunction numToSizedHex(num: bigint, size: number): string {\n  return bytesToHex(numberToBytesBE(num, size));\n}\n\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\n\nexport function weierstrassPoints<T>(opts: CurvePointsType<T>): CurvePointsRes<T> {\n  const CURVE = validatePointOpts(opts);\n  const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n  const Fn = Field(CURVE.n, CURVE.nBitLength);\n\n  const toBytes =\n    CURVE.toBytes ||\n    ((_c: ProjConstructor<T>, point: ProjPointType<T>, _isCompressed: boolean) => {\n      const a = point.toAffine();\n      return concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n    });\n  const fromBytes =\n    CURVE.fromBytes ||\n    ((bytes: Uint8Array) => {\n      // const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n      const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n      const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n      return { x, y };\n    });\n\n  /**\n   * y² = x³ + ax + b: Short weierstrass curve formula. Takes x, returns y².\n   * @returns y²\n   */\n  function weierstrassEquation(x: T): T {\n    const { a, b } = CURVE;\n    const x2 = Fp.sqr(x); // x * x\n    const x3 = Fp.mul(x2, x); // x² * x\n    return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x³ + a * x + b\n  }\n\n  function isValidXY(x: T, y: T): boolean {\n    const left = Fp.sqr(y); // y²\n    const right = weierstrassEquation(x); // x³ + ax + b\n    return Fp.eql(left, right);\n  }\n\n  // Validate whether the passed curve params are valid.\n  // Test 1: equation y² = x³ + ax + b should work for generator point.\n  if (!isValidXY(CURVE.Gx, CURVE.Gy)) throw new Error('bad curve params: generator point');\n\n  // Test 2: discriminant Δ part should be non-zero: 4a³ + 27b² != 0.\n  // Guarantees curve is genus-1, smooth (non-singular).\n  const _4a3 = Fp.mul(Fp.pow(CURVE.a, _3n), _4n);\n  const _27b2 = Fp.mul(Fp.sqr(CURVE.b), BigInt(27));\n  if (Fp.is0(Fp.add(_4a3, _27b2))) throw new Error('bad curve params: a or b');\n\n  // Valid group elements reside in range 1..n-1\n  function isWithinCurveOrder(num: bigint): boolean {\n    return inRange(num, _1n, CURVE.n);\n  }\n  // Validates if priv key is valid and converts it to bigint.\n  // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n  function normPrivateKeyToScalar(key: PrivKey): bigint {\n    const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n: N } = CURVE;\n    if (lengths && typeof key !== 'bigint') {\n      if (isBytes(key)) key = bytesToHex(key);\n      // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n      if (typeof key !== 'string' || !lengths.includes(key.length))\n        throw new Error('invalid private key');\n      key = key.padStart(nByteLength * 2, '0');\n    }\n    let num: bigint;\n    try {\n      num =\n        typeof key === 'bigint'\n          ? key\n          : bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n    } catch (error) {\n      throw new Error(\n        'invalid private key, expected hex or ' + nByteLength + ' bytes, got ' + typeof key\n      );\n    }\n    if (wrapPrivateKey) num = mod(num, N); // disabled by default, enabled for BLS\n    aInRange('private key', num, _1n, N); // num in range [1..N-1]\n    return num;\n  }\n\n  function aprjpoint(other: unknown) {\n    if (!(other instanceof Point)) throw new Error('ProjectivePoint expected');\n  }\n\n  // Memoized toAffine / validity check. They are heavy. Points are immutable.\n\n  // Converts Projective point to affine (x, y) coordinates.\n  // Can accept precomputed Z^-1 - for example, from invertBatch.\n  // (X, Y, Z) ∋ (x=X/Z, y=Y/Z)\n  const toAffineMemo = memoized((p: Point, iz?: T): AffinePoint<T> => {\n    const { px: x, py: y, pz: z } = p;\n    // Fast-path for normalized points\n    if (Fp.eql(z, Fp.ONE)) return { x, y };\n    const is0 = p.is0();\n    // If invZ was 0, we return zero point. However we still want to execute\n    // all operations, so we replace invZ with a random number, 1.\n    if (iz == null) iz = is0 ? Fp.ONE : Fp.inv(z);\n    const ax = Fp.mul(x, iz);\n    const ay = Fp.mul(y, iz);\n    const zz = Fp.mul(z, iz);\n    if (is0) return { x: Fp.ZERO, y: Fp.ZERO };\n    if (!Fp.eql(zz, Fp.ONE)) throw new Error('invZ was invalid');\n    return { x: ax, y: ay };\n  });\n  // NOTE: on exception this will crash 'cached' and no value will be set.\n  // Otherwise true will be return\n  const assertValidMemo = memoized((p: Point) => {\n    if (p.is0()) {\n      // (0, 1, 0) aka ZERO is invalid in most contexts.\n      // In BLS, ZERO can be serialized, so we allow it.\n      // (0, 0, 0) is invalid representation of ZERO.\n      if (CURVE.allowInfinityPoint && !Fp.is0(p.py)) return;\n      throw new Error('bad point: ZERO');\n    }\n    // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n    const { x, y } = p.toAffine();\n    // Check if x, y are valid field elements\n    if (!Fp.isValid(x) || !Fp.isValid(y)) throw new Error('bad point: x or y not FE');\n    if (!isValidXY(x, y)) throw new Error('bad point: equation left != right');\n    if (!p.isTorsionFree()) throw new Error('bad point: not in prime-order subgroup');\n    return true;\n  });\n\n  /**\n   * Projective Point works in 3d / projective (homogeneous) coordinates: (X, Y, Z) ∋ (x=X/Z, y=Y/Z)\n   * Default Point works in 2d / affine coordinates: (x, y)\n   * We're doing calculations in projective, because its operations don't require costly inversion.\n   */\n  class Point implements ProjPointType<T> {\n    // base / generator point\n    static readonly BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    // zero / infinity / identity point\n    static readonly ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO); // 0, 1, 0\n    readonly px: T;\n    readonly py: T;\n    readonly pz: T;\n\n    constructor(px: T, py: T, pz: T) {\n      if (px == null || !Fp.isValid(px)) throw new Error('x required');\n      if (py == null || !Fp.isValid(py) || Fp.is0(py)) throw new Error('y required');\n      if (pz == null || !Fp.isValid(pz)) throw new Error('z required');\n      this.px = px;\n      this.py = py;\n      this.pz = pz;\n      Object.freeze(this);\n    }\n\n    // Does not validate if the point is on-curve.\n    // Use fromHex instead, or call assertValidity() later.\n    static fromAffine(p: AffinePoint<T>): Point {\n      const { x, y } = p || {};\n      if (!p || !Fp.isValid(x) || !Fp.isValid(y)) throw new Error('invalid affine point');\n      if (p instanceof Point) throw new Error('projective point not allowed');\n      const is0 = (i: T) => Fp.eql(i, Fp.ZERO);\n      // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n      if (is0(x) && is0(y)) return Point.ZERO;\n      return new Point(x, y, Fp.ONE);\n    }\n\n    get x(): T {\n      return this.toAffine().x;\n    }\n    get y(): T {\n      return this.toAffine().y;\n    }\n\n    /**\n     * Takes a bunch of Projective Points but executes only one\n     * inversion on all of them. Inversion is very slow operation,\n     * so this improves performance massively.\n     * Optimization: converts a list of projective points to a list of identical points with Z=1.\n     */\n    static normalizeZ(points: Point[]): Point[] {\n      const toInv = FpInvertBatch(\n        Fp,\n        points.map((p) => p.pz)\n      );\n      return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n    }\n\n    /**\n     * Converts hash string or Uint8Array to Point.\n     * @param hex short/long ECDSA hex\n     */\n    static fromHex(hex: Hex): Point {\n      const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n      P.assertValidity();\n      return P;\n    }\n\n    // Multiplies generator point by privateKey.\n    static fromPrivateKey(privateKey: PrivKey) {\n      return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n    }\n\n    // Multiscalar Multiplication\n    static msm(points: Point[], scalars: bigint[]): Point {\n      return pippenger(Point, Fn, points, scalars);\n    }\n\n    // \"Private method\", don't use it directly\n    _setWindowSize(windowSize: number) {\n      wnaf.setWindowSize(this, windowSize);\n    }\n\n    // A point on curve is valid if it conforms to equation.\n    assertValidity(): void {\n      assertValidMemo(this);\n    }\n\n    hasEvenY(): boolean {\n      const { y } = this.toAffine();\n      if (Fp.isOdd) return !Fp.isOdd(y);\n      throw new Error(\"Field doesn't support isOdd\");\n    }\n\n    /**\n     * Compare one point to another.\n     */\n    equals(other: Point): boolean {\n      aprjpoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n      const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n      return U1 && U2;\n    }\n\n    /**\n     * Flips point to one corresponding to (x, -y) in Affine coordinates.\n     */\n    negate(): Point {\n      return new Point(this.px, Fp.neg(this.py), this.pz);\n    }\n\n    // Renes-Costello-Batina exception-free doubling formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 3\n    // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n    double() {\n      const { a, b } = CURVE;\n      const b3 = Fp.mul(b, _3n);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      let t0 = Fp.mul(X1, X1); // step 1\n      let t1 = Fp.mul(Y1, Y1);\n      let t2 = Fp.mul(Z1, Z1);\n      let t3 = Fp.mul(X1, Y1);\n      t3 = Fp.add(t3, t3); // step 5\n      Z3 = Fp.mul(X1, Z1);\n      Z3 = Fp.add(Z3, Z3);\n      X3 = Fp.mul(a, Z3);\n      Y3 = Fp.mul(b3, t2);\n      Y3 = Fp.add(X3, Y3); // step 10\n      X3 = Fp.sub(t1, Y3);\n      Y3 = Fp.add(t1, Y3);\n      Y3 = Fp.mul(X3, Y3);\n      X3 = Fp.mul(t3, X3);\n      Z3 = Fp.mul(b3, Z3); // step 15\n      t2 = Fp.mul(a, t2);\n      t3 = Fp.sub(t0, t2);\n      t3 = Fp.mul(a, t3);\n      t3 = Fp.add(t3, Z3);\n      Z3 = Fp.add(t0, t0); // step 20\n      t0 = Fp.add(Z3, t0);\n      t0 = Fp.add(t0, t2);\n      t0 = Fp.mul(t0, t3);\n      Y3 = Fp.add(Y3, t0);\n      t2 = Fp.mul(Y1, Z1); // step 25\n      t2 = Fp.add(t2, t2);\n      t0 = Fp.mul(t2, t3);\n      X3 = Fp.sub(X3, t0);\n      Z3 = Fp.mul(t2, t1);\n      Z3 = Fp.add(Z3, Z3); // step 30\n      Z3 = Fp.add(Z3, Z3);\n      return new Point(X3, Y3, Z3);\n    }\n\n    // Renes-Costello-Batina exception-free addition formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 1\n    // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n    add(other: Point): Point {\n      aprjpoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      const a = CURVE.a;\n      const b3 = Fp.mul(CURVE.b, _3n);\n      let t0 = Fp.mul(X1, X2); // step 1\n      let t1 = Fp.mul(Y1, Y2);\n      let t2 = Fp.mul(Z1, Z2);\n      let t3 = Fp.add(X1, Y1);\n      let t4 = Fp.add(X2, Y2); // step 5\n      t3 = Fp.mul(t3, t4);\n      t4 = Fp.add(t0, t1);\n      t3 = Fp.sub(t3, t4);\n      t4 = Fp.add(X1, Z1);\n      let t5 = Fp.add(X2, Z2); // step 10\n      t4 = Fp.mul(t4, t5);\n      t5 = Fp.add(t0, t2);\n      t4 = Fp.sub(t4, t5);\n      t5 = Fp.add(Y1, Z1);\n      X3 = Fp.add(Y2, Z2); // step 15\n      t5 = Fp.mul(t5, X3);\n      X3 = Fp.add(t1, t2);\n      t5 = Fp.sub(t5, X3);\n      Z3 = Fp.mul(a, t4);\n      X3 = Fp.mul(b3, t2); // step 20\n      Z3 = Fp.add(X3, Z3);\n      X3 = Fp.sub(t1, Z3);\n      Z3 = Fp.add(t1, Z3);\n      Y3 = Fp.mul(X3, Z3);\n      t1 = Fp.add(t0, t0); // step 25\n      t1 = Fp.add(t1, t0);\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.mul(b3, t4);\n      t1 = Fp.add(t1, t2);\n      t2 = Fp.sub(t0, t2); // step 30\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.add(t4, t2);\n      t0 = Fp.mul(t1, t4);\n      Y3 = Fp.add(Y3, t0);\n      t0 = Fp.mul(t5, t4); // step 35\n      X3 = Fp.mul(t3, X3);\n      X3 = Fp.sub(X3, t0);\n      t0 = Fp.mul(t3, t1);\n      Z3 = Fp.mul(t5, Z3);\n      Z3 = Fp.add(Z3, t0); // step 40\n      return new Point(X3, Y3, Z3);\n    }\n\n    subtract(other: Point) {\n      return this.add(other.negate());\n    }\n\n    is0() {\n      return this.equals(Point.ZERO);\n    }\n\n    private wNAF(n: bigint): { p: Point; f: Point } {\n      return wnaf.wNAFCached(this, n, Point.normalizeZ);\n    }\n\n    /**\n     * Non-constant-time multiplication. Uses double-and-add algorithm.\n     * It's faster, but should only be used when you don't care about\n     * an exposed private key e.g. sig verification, which works over *public* keys.\n     */\n    multiplyUnsafe(sc: bigint): Point {\n      const { endo, n: N } = CURVE;\n      aInRange('scalar', sc, _0n, N);\n      const I = Point.ZERO;\n      if (sc === _0n) return I;\n      if (this.is0() || sc === _1n) return this;\n\n      // Case a: no endomorphism. Case b: has precomputes.\n      if (!endo || wnaf.hasPrecomputes(this))\n        return wnaf.wNAFCachedUnsafe(this, sc, Point.normalizeZ);\n\n      // Case c: endomorphism\n      /** See docs for {@link EndomorphismOpts} */\n      let { k1neg, k1, k2neg, k2 } = endo.splitScalar(sc);\n      let k1p = I;\n      let k2p = I;\n      let d: Point = this;\n      while (k1 > _0n || k2 > _0n) {\n        if (k1 & _1n) k1p = k1p.add(d);\n        if (k2 & _1n) k2p = k2p.add(d);\n        d = d.double();\n        k1 >>= _1n;\n        k2 >>= _1n;\n      }\n      if (k1neg) k1p = k1p.negate();\n      if (k2neg) k2p = k2p.negate();\n      k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n      return k1p.add(k2p);\n    }\n\n    /**\n     * Constant time multiplication.\n     * Uses wNAF method. Windowed method may be 10% faster,\n     * but takes 2x longer to generate and consumes 2x memory.\n     * Uses precomputes when available.\n     * Uses endomorphism for Koblitz curves.\n     * @param scalar by which the point would be multiplied\n     * @returns New point\n     */\n    multiply(scalar: bigint): Point {\n      const { endo, n: N } = CURVE;\n      aInRange('scalar', scalar, _1n, N);\n      let point: Point, fake: Point; // Fake point is used to const-time mult\n      /** See docs for {@link EndomorphismOpts} */\n      if (endo) {\n        const { k1neg, k1, k2neg, k2 } = endo.splitScalar(scalar);\n        let { p: k1p, f: f1p } = this.wNAF(k1);\n        let { p: k2p, f: f2p } = this.wNAF(k2);\n        k1p = wnaf.constTimeNegate(k1neg, k1p);\n        k2p = wnaf.constTimeNegate(k2neg, k2p);\n        k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n        point = k1p.add(k2p);\n        fake = f1p.add(f2p);\n      } else {\n        const { p, f } = this.wNAF(scalar);\n        point = p;\n        fake = f;\n      }\n      // Normalize `z` for both points, but return only real one\n      return Point.normalizeZ([point, fake])[0];\n    }\n\n    /**\n     * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n     * Not using Strauss-Shamir trick: precomputation tables are faster.\n     * The trick could be useful if both P and Q are not G (not in our case).\n     * @returns non-zero affine point\n     */\n    multiplyAndAddUnsafe(Q: Point, a: bigint, b: bigint): Point | undefined {\n      const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n      const mul = (\n        P: Point,\n        a: bigint // Select faster multiply() method\n      ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n      const sum = mul(this, a).add(mul(Q, b));\n      return sum.is0() ? undefined : sum;\n    }\n\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (x, y, z) ∋ (x=x/z, y=y/z)\n    toAffine(iz?: T): AffinePoint<T> {\n      return toAffineMemo(this, iz);\n    }\n    isTorsionFree(): boolean {\n      const { h: cofactor, isTorsionFree } = CURVE;\n      if (cofactor === _1n) return true; // No subgroups, always torsion-free\n      if (isTorsionFree) return isTorsionFree(Point, this);\n      throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n    }\n    clearCofactor(): Point {\n      const { h: cofactor, clearCofactor } = CURVE;\n      if (cofactor === _1n) return this; // Fast-path\n      if (clearCofactor) return clearCofactor(Point, this) as Point;\n      return this.multiplyUnsafe(CURVE.h);\n    }\n\n    toRawBytes(isCompressed = true): Uint8Array {\n      abool('isCompressed', isCompressed);\n      this.assertValidity();\n      return toBytes(Point, this, isCompressed);\n    }\n\n    toHex(isCompressed = true): string {\n      abool('isCompressed', isCompressed);\n      return bytesToHex(this.toRawBytes(isCompressed));\n    }\n  }\n  const { endo, nBitLength } = CURVE;\n  const wnaf = wNAF(Point, endo ? Math.ceil(nBitLength / 2) : nBitLength);\n  return {\n    CURVE,\n    ProjectivePoint: Point as ProjConstructor<T>,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  };\n}\n\n// Instance\nexport interface SignatureType {\n  readonly r: bigint;\n  readonly s: bigint;\n  readonly recovery?: number;\n  assertValidity(): void;\n  addRecoveryBit(recovery: number): RecoveredSignatureType;\n  hasHighS(): boolean;\n  normalizeS(): SignatureType;\n  recoverPublicKey(msgHash: Hex): ProjPointType<bigint>;\n  toCompactRawBytes(): Uint8Array;\n  toCompactHex(): string;\n  toDERRawBytes(isCompressed?: boolean): Uint8Array;\n  toDERHex(isCompressed?: boolean): string;\n}\nexport type RecoveredSignatureType = SignatureType & {\n  readonly recovery: number;\n};\n// Static methods\nexport type SignatureConstructor = {\n  new (r: bigint, s: bigint): SignatureType;\n  fromCompact(hex: Hex): SignatureType;\n  fromDER(hex: Hex): SignatureType;\n};\ntype SignatureLike = { r: bigint; s: bigint };\n\nexport type PubKey = Hex | ProjPointType<bigint>;\n\nexport type CurveType = BasicWCurve<bigint> & {\n  hash: CHash; // CHash not FHash because we need outputLen for DRBG\n  hmac: HmacFnSync;\n  randomBytes: (bytesLength?: number) => Uint8Array;\n  lowS?: boolean;\n  bits2int?: (bytes: Uint8Array) => bigint;\n  bits2int_modN?: (bytes: Uint8Array) => bigint;\n};\n\nfunction validateOpts(\n  curve: CurveType\n): Readonly<CurveType & { nByteLength: number; nBitLength: number }> {\n  const opts = validateBasic(curve);\n  validateObject(\n    opts,\n    {\n      hash: 'hash',\n      hmac: 'function',\n      randomBytes: 'function',\n    },\n    {\n      bits2int: 'function',\n      bits2int_modN: 'function',\n      lowS: 'boolean',\n    }\n  );\n  return Object.freeze({ lowS: true, ...opts } as const);\n}\n\nexport type CurveFn = {\n  CURVE: ReturnType<typeof validateOpts>;\n  getPublicKey: (privateKey: PrivKey, isCompressed?: boolean) => Uint8Array;\n  getSharedSecret: (privateA: PrivKey, publicB: Hex, isCompressed?: boolean) => Uint8Array;\n  sign: (msgHash: Hex, privKey: PrivKey, opts?: SignOpts) => RecoveredSignatureType;\n  verify: (signature: Hex | SignatureLike, msgHash: Hex, publicKey: Hex, opts?: VerOpts) => boolean;\n  ProjectivePoint: ProjConstructor<bigint>;\n  Signature: SignatureConstructor;\n  utils: {\n    normPrivateKeyToScalar: (key: PrivKey) => bigint;\n    isValidPrivateKey(privateKey: PrivKey): boolean;\n    randomPrivateKey: () => Uint8Array;\n    precompute: (windowSize?: number, point?: ProjPointType<bigint>) => ProjPointType<bigint>;\n  };\n};\n\n/**\n * Creates short weierstrass curve and ECDSA signature methods for it.\n * @example\n * import { Field } from '@noble/curves/abstract/modular';\n * // Before that, define BigInt-s: a, b, p, n, Gx, Gy\n * const curve = weierstrass({ a, b, Fp: Field(p), n, Gx, Gy, h: 1n })\n */\nexport function weierstrass(curveDef: CurveType): CurveFn {\n  const CURVE = validateOpts(curveDef) as ReturnType<typeof validateOpts>;\n  const { Fp, n: CURVE_ORDER, nByteLength, nBitLength } = CURVE;\n  const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n  const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n\n  function modN(a: bigint) {\n    return mod(a, CURVE_ORDER);\n  }\n  function invN(a: bigint) {\n    return invert(a, CURVE_ORDER);\n  }\n\n  const {\n    ProjectivePoint: Point,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  } = weierstrassPoints({\n    ...CURVE,\n    toBytes(_c, point, isCompressed: boolean): Uint8Array {\n      const a = point.toAffine();\n      const x = Fp.toBytes(a.x);\n      const cat = concatBytes;\n      abool('isCompressed', isCompressed);\n      if (isCompressed) {\n        return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n      } else {\n        return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n      }\n    },\n    fromBytes(bytes: Uint8Array) {\n      const len = bytes.length;\n      const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // this.assertValidity() is done inside of fromHex\n      if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n        const x = bytesToNumberBE(tail);\n        if (!inRange(x, _1n, Fp.ORDER)) throw new Error('Point is not on curve');\n        const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n        let y: bigint;\n        try {\n          y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n        } catch (sqrtError) {\n          const suffix = sqrtError instanceof Error ? ': ' + sqrtError.message : '';\n          throw new Error('Point is not on curve' + suffix);\n        }\n        const isYOdd = (y & _1n) === _1n;\n        // ECDSA\n        const isHeadOdd = (head & 1) === 1;\n        if (isHeadOdd !== isYOdd) y = Fp.neg(y);\n        return { x, y };\n      } else if (len === uncompressedLen && head === 0x04) {\n        const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n        const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n        return { x, y };\n      } else {\n        const cl = compressedLen;\n        const ul = uncompressedLen;\n        throw new Error(\n          'invalid Point, expected length of ' + cl + ', or uncompressed ' + ul + ', got ' + len\n        );\n      }\n    },\n  });\n\n  function isBiggerThanHalfOrder(number: bigint) {\n    const HALF = CURVE_ORDER >> _1n;\n    return number > HALF;\n  }\n\n  function normalizeS(s: bigint) {\n    return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n  }\n  // slice bytes num\n  const slcNum = (b: Uint8Array, from: number, to: number) => bytesToNumberBE(b.slice(from, to));\n\n  /**\n   * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n   */\n  class Signature implements SignatureType {\n    readonly r: bigint;\n    readonly s: bigint;\n    readonly recovery?: number;\n    constructor(r: bigint, s: bigint, recovery?: number) {\n      aInRange('r', r, _1n, CURVE_ORDER); // r in [1..N]\n      aInRange('s', s, _1n, CURVE_ORDER); // s in [1..N]\n      this.r = r;\n      this.s = s;\n      if (recovery != null) this.recovery = recovery;\n      Object.freeze(this);\n    }\n\n    // pair (bytes of r, bytes of s)\n    static fromCompact(hex: Hex) {\n      const l = nByteLength;\n      hex = ensureBytes('compactSignature', hex, l * 2);\n      return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n    }\n\n    // DER encoded ECDSA signature\n    // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n    static fromDER(hex: Hex) {\n      const { r, s } = DER.toSig(ensureBytes('DER', hex));\n      return new Signature(r, s);\n    }\n\n    /**\n     * @todo remove\n     * @deprecated\n     */\n    assertValidity(): void {}\n\n    addRecoveryBit(recovery: number): RecoveredSignature {\n      return new Signature(this.r, this.s, recovery) as RecoveredSignature;\n    }\n\n    recoverPublicKey(msgHash: Hex): typeof Point.BASE {\n      const { r, s, recovery: rec } = this;\n      const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n      if (rec == null || ![0, 1, 2, 3].includes(rec)) throw new Error('recovery id invalid');\n      const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n      if (radj >= Fp.ORDER) throw new Error('recovery id 2 or 3 invalid');\n      const prefix = (rec & 1) === 0 ? '02' : '03';\n      const R = Point.fromHex(prefix + numToSizedHex(radj, Fp.BYTES));\n      const ir = invN(radj); // r^-1\n      const u1 = modN(-h * ir); // -hr^-1\n      const u2 = modN(s * ir); // sr^-1\n      const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n      if (!Q) throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n      Q.assertValidity();\n      return Q;\n    }\n\n    // Signatures should be low-s, to prevent malleability.\n    hasHighS(): boolean {\n      return isBiggerThanHalfOrder(this.s);\n    }\n\n    normalizeS() {\n      return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n    }\n\n    // DER-encoded\n    toDERRawBytes() {\n      return hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n      return DER.hexFromSig(this);\n    }\n\n    // padded bytes of r, then padded bytes of s\n    toCompactRawBytes() {\n      return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n      const l = nByteLength;\n      return numToSizedHex(this.r, l) + numToSizedHex(this.s, l);\n    }\n  }\n  type RecoveredSignature = Signature & { recovery: number };\n\n  const utils = {\n    isValidPrivateKey(privateKey: PrivKey) {\n      try {\n        normPrivateKeyToScalar(privateKey);\n        return true;\n      } catch (error) {\n        return false;\n      }\n    },\n    normPrivateKeyToScalar: normPrivateKeyToScalar,\n\n    /**\n     * Produces cryptographically secure private key from random of size\n     * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n     */\n    randomPrivateKey: (): Uint8Array => {\n      const length = getMinHashLength(CURVE.n);\n      return mapHashToField(CURVE.randomBytes(length), CURVE.n);\n    },\n\n    /**\n     * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n     * Allows to massively speed-up `point.multiply(scalar)`.\n     * @returns cached point\n     * @example\n     * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n     * fast.multiply(privKey); // much faster ECDH now\n     */\n    precompute(windowSize = 8, point = Point.BASE): typeof Point.BASE {\n      point._setWindowSize(windowSize);\n      point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n      return point;\n    },\n  };\n\n  /**\n   * Computes public key for a private key. Checks for validity of the private key.\n   * @param privateKey private key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns Public key, full when isCompressed=false; short when isCompressed=true\n   */\n  function getPublicKey(privateKey: PrivKey, isCompressed = true): Uint8Array {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n  }\n\n  /**\n   * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n   */\n  function isProbPub(item: PrivKey | PubKey): boolean | undefined {\n    if (typeof item === 'bigint') return false;\n    if (item instanceof Point) return true;\n    const arr = ensureBytes('key', item);\n    const len = arr.length;\n    const fpl = Fp.BYTES;\n    const compLen = fpl + 1; // e.g. 33 for 32\n    const uncompLen = 2 * fpl + 1; // e.g. 65 for 32\n    if (CURVE.allowedPrivateKeyLengths || nByteLength === compLen) {\n      return undefined;\n    } else {\n      return len === compLen || len === uncompLen;\n    }\n  }\n\n  /**\n   * ECDH (Elliptic Curve Diffie Hellman).\n   * Computes shared public key from private key and public key.\n   * Checks: 1) private key validity 2) shared key is on-curve.\n   * Does NOT hash the result.\n   * @param privateA private key\n   * @param publicB different public key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns shared public key\n   */\n  function getSharedSecret(privateA: PrivKey, publicB: Hex, isCompressed = true): Uint8Array {\n    if (isProbPub(privateA) === true) throw new Error('first arg must be private key');\n    if (isProbPub(publicB) === false) throw new Error('second arg must be public key');\n    const b = Point.fromHex(publicB); // check for being on-curve\n    return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n  }\n\n  // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n  // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n  // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n  // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n  const bits2int =\n    CURVE.bits2int ||\n    function (bytes: Uint8Array): bigint {\n      // Our custom check \"just in case\", for protection against DoS\n      if (bytes.length > 8192) throw new Error('input is too large');\n      // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n      // for some cases, since bytes.length * 8 is not actual bitLength.\n      const num = bytesToNumberBE(bytes); // check for == u8 done here\n      const delta = bytes.length * 8 - nBitLength; // truncate to nBitLength leftmost bits\n      return delta > 0 ? num >> BigInt(delta) : num;\n    };\n  const bits2int_modN =\n    CURVE.bits2int_modN ||\n    function (bytes: Uint8Array): bigint {\n      return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n    };\n  // NOTE: pads output with zero as per spec\n  const ORDER_MASK = bitMask(nBitLength);\n  /**\n   * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n   */\n  function int2octets(num: bigint): Uint8Array {\n    aInRange('num < 2^' + nBitLength, num, _0n, ORDER_MASK);\n    // works with order, can have different size than numToField!\n    return numberToBytesBE(num, nByteLength);\n  }\n\n  // Steps A, D of RFC6979 3.2\n  // Creates RFC6979 seed; converts msg/privKey to numbers.\n  // Used only in sign, not in verify.\n  // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order,\n  // this will be invalid at least for P521. Also it can be bigger for P224 + SHA256\n  function prepSig(msgHash: Hex, privateKey: PrivKey, opts = defaultSigOpts) {\n    if (['recovered', 'canonical'].some((k) => k in opts))\n      throw new Error('sign() legacy options not supported');\n    const { hash, randomBytes } = CURVE;\n    let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n    if (lowS == null) lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n    msgHash = ensureBytes('msgHash', msgHash);\n    validateSigVerOpts(opts);\n    if (prehash) msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n\n    // We can't later call bits2octets, since nested bits2int is broken for curves\n    // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n    // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n    const h1int = bits2int_modN(msgHash);\n    const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n    const seedArgs = [int2octets(d), int2octets(h1int)];\n    // extraEntropy. RFC6979 3.6: additional k' (optional).\n    if (ent != null && ent !== false) {\n      // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n      const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n      seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n    }\n    const seed = concatBytes(...seedArgs); // Step D of RFC6979 3.2\n    const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n    // Converts signature params into point w r/s, checks result for validity.\n    function k2sig(kBytes: Uint8Array): RecoveredSignature | undefined {\n      // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n      const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n      if (!isWithinCurveOrder(k)) return; // Important: all mod() calls here must be done over N\n      const ik = invN(k); // k^-1 mod n\n      const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n      const r = modN(q.x); // r = q.x mod n\n      if (r === _0n) return;\n      // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n      // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n      // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n      const s = modN(ik * modN(m + r * d)); // Not using blinding here\n      if (s === _0n) return;\n      let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n      let normS = s;\n      if (lowS && isBiggerThanHalfOrder(s)) {\n        normS = normalizeS(s); // if lowS was passed, ensure s is always\n        recovery ^= 1; // // in the bottom half of N\n      }\n      return new Signature(r, normS, recovery) as RecoveredSignature; // use normS, not s\n    }\n    return { seed, k2sig };\n  }\n  const defaultSigOpts: SignOpts = { lowS: CURVE.lowS, prehash: false };\n  const defaultVerOpts: VerOpts = { lowS: CURVE.lowS, prehash: false };\n\n  /**\n   * Signs message hash with a private key.\n   * ```\n   * sign(m, d, k) where\n   *   (x, y) = G × k\n   *   r = x mod n\n   *   s = (m + dr)/k mod n\n   * ```\n   * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n   * @param privKey private key\n   * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n   * @returns signature with recovery param\n   */\n  function sign(msgHash: Hex, privKey: PrivKey, opts = defaultSigOpts): RecoveredSignature {\n    const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n    const C = CURVE;\n    const drbg = createHmacDrbg<RecoveredSignature>(C.hash.outputLen, C.nByteLength, C.hmac);\n    return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n  }\n\n  // Enable precomputes. Slows down first publicKey computation by 20ms.\n  Point.BASE._setWindowSize(8);\n  // utils.precompute(8, ProjectivePoint.BASE)\n\n  /**\n   * Verifies a signature against message hash and public key.\n   * Rejects lowS signatures by default: to override,\n   * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n   *\n   * ```\n   * verify(r, s, h, P) where\n   *   U1 = hs^-1 mod n\n   *   U2 = rs^-1 mod n\n   *   R = U1⋅G - U2⋅P\n   *   mod(R.x, n) == r\n   * ```\n   */\n  function verify(\n    signature: Hex | SignatureLike,\n    msgHash: Hex,\n    publicKey: Hex,\n    opts = defaultVerOpts\n  ): boolean {\n    const sg = signature;\n    msgHash = ensureBytes('msgHash', msgHash);\n    publicKey = ensureBytes('publicKey', publicKey);\n    const { lowS, prehash, format } = opts;\n\n    // Verify opts, deduce signature format\n    validateSigVerOpts(opts);\n    if ('strict' in opts) throw new Error('options.strict was renamed to lowS');\n    if (format !== undefined && format !== 'compact' && format !== 'der')\n      throw new Error('format must be compact or der');\n    const isHex = typeof sg === 'string' || isBytes(sg);\n    const isObj =\n      !isHex &&\n      !format &&\n      typeof sg === 'object' &&\n      sg !== null &&\n      typeof sg.r === 'bigint' &&\n      typeof sg.s === 'bigint';\n    if (!isHex && !isObj)\n      throw new Error('invalid signature, expected Uint8Array, hex string or Signature instance');\n\n    let _sig: Signature | undefined = undefined;\n    let P: ProjPointType<bigint>;\n    try {\n      if (isObj) _sig = new Signature(sg.r, sg.s);\n      if (isHex) {\n        // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n        // Since DER can also be 2*nByteLength bytes, we check for it first.\n        try {\n          if (format !== 'compact') _sig = Signature.fromDER(sg);\n        } catch (derError) {\n          if (!(derError instanceof DER.Err)) throw derError;\n        }\n        if (!_sig && format !== 'der') _sig = Signature.fromCompact(sg);\n      }\n      P = Point.fromHex(publicKey);\n    } catch (error) {\n      return false;\n    }\n    if (!_sig) return false;\n    if (lowS && _sig.hasHighS()) return false;\n    if (prehash) msgHash = CURVE.hash(msgHash);\n    const { r, s } = _sig;\n    const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n    const is = invN(s); // s^-1\n    const u1 = modN(h * is); // u1 = hs^-1 mod n\n    const u2 = modN(r * is); // u2 = rs^-1 mod n\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n    if (!R) return false;\n    const v = modN(R.x);\n    return v === r;\n  }\n  return {\n    CURVE,\n    getPublicKey,\n    getSharedSecret,\n    sign,\n    verify,\n    ProjectivePoint: Point,\n    Signature,\n    utils,\n  };\n}\n\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio<T>(\n  Fp: IField<T>,\n  Z: T\n): (u: T, v: T) => { isValid: boolean; value: T } {\n  // Generic implementation\n  const q = Fp.ORDER;\n  let l = _0n;\n  for (let o = q - _1n; o % _2n === _0n; o /= _2n) l += _1n;\n  const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n  // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n  // 2n ** c1 == 2n << (c1-1)\n  const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n  const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n  const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n  const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n  const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n  const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n  const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n  const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n  let sqrtRatio = (u: T, v: T): { isValid: boolean; value: T } => {\n    let tv1 = c6; // 1. tv1 = c6\n    let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n    let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n    tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n    let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n    tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n    tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n    tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n    tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n    let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n    tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n    let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n    tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n    tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n    tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n    tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n    // 17. for i in (c1, c1 - 1, ..., 2):\n    for (let i = c1; i > _1n; i--) {\n      let tv5 = i - _2n; // 18.    tv5 = i - 2\n      tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n      let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n      const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n      tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n      tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n      tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n      tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n      tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n    }\n    return { isValid: isQR, value: tv3 };\n  };\n  if (Fp.ORDER % _4n === _3n) {\n    // sqrt_ratio_3mod4(u, v)\n    const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n    const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n    sqrtRatio = (u: T, v: T) => {\n      let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n      const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n      tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n      let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n      y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n      const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n      const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n      const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n      let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n      return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n    };\n  }\n  // No curves uses that\n  // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n  return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU<T>(\n  Fp: IField<T>,\n  opts: {\n    A: T;\n    B: T;\n    Z: T;\n  }\n): (u: T) => { x: T; y: T } {\n  validateField(Fp);\n  if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n    throw new Error('mapToCurveSimpleSWU: invalid opts');\n  const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n  if (!Fp.isOdd) throw new Error('Fp.isOdd is not implemented!');\n  // Input: u, an element of F.\n  // Output: (x, y), a point on E.\n  return (u: T): { x: T; y: T } => {\n    // prettier-ignore\n    let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n    tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n    tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n    tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n    tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n    tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n    tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n    tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n    tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n    tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n    tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n    tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n    tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n    tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n    tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n    tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n    x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n    const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n    y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n    y = Fp.mul(y, value); // 20.   y = y * y1\n    x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n    y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n    const e1 = Fp.isOdd!(u) === Fp.isOdd!(y); // 23.  e1 = sgn0(u) == sgn0(y)\n    y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n    const tv4_inv = FpInvertBatch(Fp, [tv4], true)[0];\n    x = Fp.mul(x, tv4_inv); // 25.   x = x / tv4\n    return { x, y };\n  };\n}\n","/**\n * NIST secp256k1. See [pdf](https://www.secg.org/sec2-v2.pdf).\n *\n * Seems to be rigid (not backdoored)\n * [as per discussion](https://bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975).\n *\n * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n * [See explanation](https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066).\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha2';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { createCurve, type CurveFnWithCreate } from './_shortw_utils.ts';\nimport { createHasher, type Hasher, type HTFMethod, isogenyMap } from './abstract/hash-to-curve.ts';\nimport { Field, mod, pow2 } from './abstract/modular.ts';\nimport type { Hex, PrivKey } from './abstract/utils.ts';\nimport {\n  aInRange,\n  bytesToNumberBE,\n  concatBytes,\n  ensureBytes,\n  inRange,\n  numberToBytesBE,\n} from './abstract/utils.ts';\nimport { mapToCurveSimpleSWU, type ProjPointType as PointType } from './abstract/weierstrass.ts';\n\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a: bigint, b: bigint) => (a + b / _2n) / b;\n\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y: bigint): bigint {\n  const P = secp256k1P;\n  // prettier-ignore\n  const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n  // prettier-ignore\n  const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n  const b2 = (y * y * y) % P; // x^3, 11\n  const b3 = (b2 * b2 * y) % P; // x^7\n  const b6 = (pow2(b3, _3n, P) * b3) % P;\n  const b9 = (pow2(b6, _3n, P) * b3) % P;\n  const b11 = (pow2(b9, _2n, P) * b2) % P;\n  const b22 = (pow2(b11, _11n, P) * b11) % P;\n  const b44 = (pow2(b22, _22n, P) * b22) % P;\n  const b88 = (pow2(b44, _44n, P) * b44) % P;\n  const b176 = (pow2(b88, _88n, P) * b88) % P;\n  const b220 = (pow2(b176, _44n, P) * b44) % P;\n  const b223 = (pow2(b220, _3n, P) * b3) % P;\n  const t1 = (pow2(b223, _23n, P) * b22) % P;\n  const t2 = (pow2(t1, _6n, P) * b2) % P;\n  const root = pow2(t2, _2n, P);\n  if (!Fpk1.eql(Fpk1.sqr(root), y)) throw new Error('Cannot find square root');\n  return root;\n}\n\nconst Fpk1 = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\n\n/**\n * secp256k1 curve, ECDSA and ECDH methods.\n *\n * Field: `2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n`\n *\n * @example\n * ```js\n * import { secp256k1 } from '@noble/curves/secp256k1';\n * const priv = secp256k1.utils.randomPrivateKey();\n * const pub = secp256k1.getPublicKey(priv);\n * const msg = new Uint8Array(32).fill(1); // message hash (not message) in ecdsa\n * const sig = secp256k1.sign(msg, priv); // `{prehash: true}` option is available\n * const isValid = secp256k1.verify(sig, msg, pub) === true;\n * ```\n */\nexport const secp256k1: CurveFnWithCreate = createCurve(\n  {\n    a: _0n,\n    b: BigInt(7),\n    Fp: Fpk1,\n    n: secp256k1N,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1),\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    endo: {\n      // Endomorphism, see above\n      beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n      splitScalar: (k: bigint) => {\n        const n = secp256k1N;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg) k1 = n - k1;\n        if (k2neg) k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n          throw new Error('splitScalar: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n      },\n    },\n  },\n  sha256\n);\n\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES: { [tag: string]: Uint8Array } = {};\nfunction taggedHash(tag: string, ...messages: Uint8Array[]): Uint8Array {\n  let tagP = TAGGED_HASH_PREFIXES[tag];\n  if (tagP === undefined) {\n    const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n    tagP = concatBytes(tagH, tagH);\n    TAGGED_HASH_PREFIXES[tag] = tagP;\n  }\n  return sha256(concatBytes(tagP, ...messages));\n}\n\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point: PointType<bigint>) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n: bigint) => numberToBytesBE(n, 32);\nconst modP = (x: bigint) => mod(x, secp256k1P);\nconst modN = (x: bigint) => mod(x, secp256k1N);\nconst Point = /* @__PURE__ */ (() => secp256k1.ProjectivePoint)();\nconst GmulAdd = (Q: PointType<bigint>, a: bigint, b: bigint) =>\n  Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv: PrivKey) {\n  let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n  let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n  const scalar = p.hasEvenY() ? d_ : modN(-d_);\n  return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x: bigint): PointType<bigint> {\n  aInRange('x', x, _1n, secp256k1P); // Fail if x ≥ p.\n  const xx = modP(x * x);\n  const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n  let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n  if (y % _2n !== _0n) y = modP(-y); // Return the unique point P such that x(P) = x and\n  const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n  p.assertValidity();\n  return p;\n}\nconst num = bytesToNumberBE;\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args: Uint8Array[]): bigint {\n  return modN(num(taggedHash('BIP0340/challenge', ...args)));\n}\n\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey: Hex): Uint8Array {\n  return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(\n  message: Hex,\n  privateKey: PrivKey,\n  auxRand: Hex = randomBytes(32)\n): Uint8Array {\n  const m = ensureBytes('message', message);\n  const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n  const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n  const t = numTo32b(d ^ num(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n  const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n  const k_ = modN(num(rand)); // Let k' = int(rand) mod n\n  if (k_ === _0n) throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n  const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n  const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n  const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n  sig.set(rx, 0);\n  sig.set(numTo32b(modN(k + e * d)), 32);\n  // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n  if (!schnorrVerify(sig, m, px)) throw new Error('sign: Invalid signature produced');\n  return sig;\n}\n\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature: Hex, message: Hex, publicKey: Hex): boolean {\n  const sig = ensureBytes('signature', signature, 64);\n  const m = ensureBytes('message', message);\n  const pub = ensureBytes('publicKey', publicKey, 32);\n  try {\n    const P = lift_x(num(pub)); // P = lift_x(int(pk)); fail if that fails\n    const r = num(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n    if (!inRange(r, _1n, secp256k1P)) return false;\n    const s = num(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n    if (!inRange(s, _1n, secp256k1N)) return false;\n    const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n    const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n    if (!R || !R.hasEvenY() || R.toAffine().x !== r) return false; // -eP == (n-e)P\n    return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n  } catch (error) {\n    return false;\n  }\n}\n\nexport type SecpSchnorr = {\n  getPublicKey: typeof schnorrGetPublicKey;\n  sign: typeof schnorrSign;\n  verify: typeof schnorrVerify;\n  utils: {\n    randomPrivateKey: () => Uint8Array;\n    lift_x: typeof lift_x;\n    pointToBytes: (point: PointType<bigint>) => Uint8Array;\n    numberToBytesBE: typeof numberToBytesBE;\n    bytesToNumberBE: typeof bytesToNumberBE;\n    taggedHash: typeof taggedHash;\n    mod: typeof mod;\n  };\n};\n/**\n * Schnorr signatures over secp256k1.\n * https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\n * @example\n * ```js\n * import { schnorr } from '@noble/curves/secp256k1';\n * const priv = schnorr.utils.randomPrivateKey();\n * const pub = schnorr.getPublicKey(priv);\n * const msg = new TextEncoder().encode('hello');\n * const sig = schnorr.sign(msg, priv);\n * const isValid = schnorr.verify(sig, msg, pub);\n * ```\n */\nexport const schnorr: SecpSchnorr = /* @__PURE__ */ (() => ({\n  getPublicKey: schnorrGetPublicKey,\n  sign: schnorrSign,\n  verify: schnorrVerify,\n  utils: {\n    randomPrivateKey: secp256k1.utils.randomPrivateKey,\n    lift_x,\n    pointToBytes,\n    numberToBytesBE,\n    bytesToNumberBE,\n    taggedHash,\n    mod,\n  },\n}))();\n\nconst isoMap = /* @__PURE__ */ (() =>\n  isogenyMap(\n    Fpk1,\n    [\n      // xNum\n      [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n      ],\n      // xDen\n      [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n      // yNum\n      [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n      ],\n      // yDen\n      [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n    ].map((i) => i.map((j) => BigInt(j))) as [bigint[], bigint[], bigint[], bigint[]]\n  ))();\nconst mapSWU = /* @__PURE__ */ (() =>\n  mapToCurveSimpleSWU(Fpk1, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fpk1.create(BigInt('-11')),\n  }))();\n/** Hashing / encoding to secp256k1 points / field. RFC 9380 methods. */\nexport const secp256k1_hasher: Hasher<bigint> = /* @__PURE__ */ (() =>\n  createHasher(\n    secp256k1.ProjectivePoint,\n    (scalars: bigint[]) => {\n      const { x, y } = mapSWU(Fpk1.create(scalars[0]));\n      return isoMap(x, y);\n    },\n    {\n      DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n      encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n      p: Fpk1.ORDER,\n      m: 1,\n      k: 128,\n      expand: 'xmd',\n      hash: sha256,\n    } as const\n  ))();\n\nexport const hashToCurve: HTFMethod<bigint> = /* @__PURE__ */ (() =>\n  secp256k1_hasher.hashToCurve)();\n\nexport const encodeToCurve: HTFMethod<bigint> = /* @__PURE__ */ (() =>\n  secp256k1_hasher.encodeToCurve)();\n","/**\n * Utilities for short weierstrass curves, combined with noble-hashes.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport type { CHash } from './abstract/utils.ts';\nimport { type CurveFn, type CurveType, weierstrass } from './abstract/weierstrass.ts';\n\n/** connects noble-curves to noble-hashes */\nexport function getHash(hash: CHash): {\n  hash: CHash;\n  hmac: (key: Uint8Array, ...msgs: Uint8Array[]) => Uint8Array;\n  randomBytes: typeof randomBytes;\n} {\n  return {\n    hash,\n    hmac: (key: Uint8Array, ...msgs: Uint8Array[]) => hmac(hash, key, concatBytes(...msgs)),\n    randomBytes,\n  };\n}\n/** Same API as @noble/hashes, with ability to create curve with custom hash */\nexport type CurveDef = Readonly<Omit<CurveType, 'hash' | 'hmac' | 'randomBytes'>>;\nexport type CurveFnWithCreate = CurveFn & { create: (hash: CHash) => CurveFn };\n\nexport function createCurve(curveDef: CurveDef, defHash: CHash): CurveFnWithCreate {\n  const create = (hash: CHash): CurveFn => weierstrass({ ...curveDef, ...getHash(hash) });\n  return { ...create(defHash), create };\n}\n","import type { ByteArray, Hex } from '../types/misc.js'\n\nimport { BaseError } from './base.js'\n\nexport type IntegerOutOfRangeErrorType = IntegerOutOfRangeError & {\n  name: 'IntegerOutOfRangeError'\n}\nexport class IntegerOutOfRangeError extends BaseError {\n  constructor({\n    max,\n    min,\n    signed,\n    size,\n    value,\n  }: {\n    max?: string | undefined\n    min: string\n    signed?: boolean | undefined\n    size?: number | undefined\n    value: string\n  }) {\n    super(\n      `Number \"${value}\" is not in safe ${\n        size ? `${size * 8}-bit ${signed ? 'signed' : 'unsigned'} ` : ''\n      }integer range ${max ? `(${min} to ${max})` : `(above ${min})`}`,\n      { name: 'IntegerOutOfRangeError' },\n    )\n  }\n}\n\nexport type InvalidBytesBooleanErrorType = InvalidBytesBooleanError & {\n  name: 'InvalidBytesBooleanError'\n}\nexport class InvalidBytesBooleanError extends BaseError {\n  constructor(bytes: ByteArray) {\n    super(\n      `Bytes value \"${bytes}\" is not a valid boolean. The bytes array must contain a single byte of either a 0 or 1 value.`,\n      {\n        name: 'InvalidBytesBooleanError',\n      },\n    )\n  }\n}\n\nexport type InvalidHexBooleanErrorType = InvalidHexBooleanError & {\n  name: 'InvalidHexBooleanError'\n}\nexport class InvalidHexBooleanError extends BaseError {\n  constructor(hex: Hex) {\n    super(\n      `Hex value \"${hex}\" is not a valid boolean. The hex value must be \"0x0\" (false) or \"0x1\" (true).`,\n      { name: 'InvalidHexBooleanError' },\n    )\n  }\n}\n\nexport type InvalidHexValueErrorType = InvalidHexValueError & {\n  name: 'InvalidHexValueError'\n}\nexport class InvalidHexValueError extends BaseError {\n  constructor(value: Hex) {\n    super(\n      `Hex value \"${value}\" is an odd length (${value.length}). It must be an even length.`,\n      { name: 'InvalidHexValueError' },\n    )\n  }\n}\n\nexport type SizeOverflowErrorType = SizeOverflowError & {\n  name: 'SizeOverflowError'\n}\nexport class SizeOverflowError extends BaseError {\n  constructor({ givenSize, maxSize }: { givenSize: number; maxSize: number }) {\n    super(\n      `Size cannot exceed ${maxSize} bytes. Given size: ${givenSize} bytes.`,\n      { name: 'SizeOverflowError' },\n    )\n  }\n}\n","import { BaseError } from './base.js'\n\nexport type InvalidAddressErrorType = InvalidAddressError & {\n  name: 'InvalidAddressError'\n}\nexport class InvalidAddressError extends BaseError {\n  constructor({ address }: { address: string }) {\n    super(`Address \"${address}\" is invalid.`, {\n      metaMessages: [\n        '- Address must be a hex value of 20 bytes (40 hex characters).',\n        '- Address must match its checksum counterpart.',\n      ],\n      name: 'InvalidAddressError',\n    })\n  }\n}\n","import type { ErrorType } from '../errors/utils.js'\n\nexport type StringifyErrorType = ErrorType\n\nexport const stringify: typeof JSON.stringify = (value, replacer, space) =>\n  JSON.stringify(\n    value,\n    (key, value_) => {\n      const value = typeof value_ === 'bigint' ? value_.toString() : value_\n      return typeof replacer === 'function' ? replacer(key, value) : value\n    },\n    space,\n  )\n","import type { AbiItemType } from '../../abi.js'\nimport { BaseError } from '../../errors.js'\n\nexport class InvalidSignatureError extends BaseError {\n  override name = 'InvalidSignatureError'\n\n  constructor({\n    signature,\n    type,\n  }: {\n    signature: string\n    type: AbiItemType | 'struct'\n  }) {\n    super(`Invalid ${type} signature.`, {\n      details: signature,\n    })\n  }\n}\n\nexport class UnknownSignatureError extends BaseError {\n  override name = 'UnknownSignatureError'\n\n  constructor({ signature }: { signature: string }) {\n    super('Unknown signature.', {\n      details: signature,\n    })\n  }\n}\n\nexport class InvalidStructSignatureError extends BaseError {\n  override name = 'InvalidStructSignatureError'\n\n  constructor({ signature }: { signature: string }) {\n    super('Invalid struct signature.', {\n      details: signature,\n      metaMessages: ['No properties exist.'],\n    })\n  }\n}\n","function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };","import _typeof from \"./typeof.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport inherits from \"./inherits.js\";\nfunction _wrapRegExp() {\n  _wrapRegExp = function _wrapRegExp(e, r) {\n    return new BabelRegExp(e, void 0, r);\n  };\n  var e = RegExp.prototype,\n    r = new WeakMap();\n  function BabelRegExp(e, t, p) {\n    var o = RegExp(e, t);\n    return r.set(o, p || r.get(e)), setPrototypeOf(o, BabelRegExp.prototype);\n  }\n  function buildGroups(e, t) {\n    var p = r.get(t);\n    return Object.keys(p).reduce(function (r, t) {\n      var o = p[t];\n      if (\"number\" == typeof o) r[t] = e[o];else {\n        for (var i = 0; void 0 === e[o[i]] && i + 1 < o.length;) i++;\n        r[t] = e[o[i]];\n      }\n      return r;\n    }, Object.create(null));\n  }\n  return inherits(BabelRegExp, RegExp), BabelRegExp.prototype.exec = function (r) {\n    var t = e.exec.call(this, r);\n    if (t) {\n      t.groups = buildGroups(t, this);\n      var p = t.indices;\n      p && (p.groups = buildGroups(p, this));\n    }\n    return t;\n  }, BabelRegExp.prototype[Symbol.replace] = function (t, p) {\n    if (\"string\" == typeof p) {\n      var o = r.get(this);\n      return e[Symbol.replace].call(this, t, p.replace(/\\$<([^>]+)(>|$)/g, function (e, r, t) {\n        if (\"\" === t) return e;\n        var p = o[r];\n        return Array.isArray(p) ? \"$\" + p.join(\"$\") : \"number\" == typeof p ? \"$\" + p : \"\";\n      }));\n    }\n    if (\"function\" == typeof p) {\n      var i = this;\n      return e[Symbol.replace].call(this, t, function () {\n        var e = arguments;\n        return \"object\" != _typeof(e[e.length - 1]) && (e = [].slice.call(e)).push(buildGroups(e, i)), p.apply(this, e);\n      });\n    }\n    return e[Symbol.replace].call(this, t, p);\n  }, _wrapRegExp.apply(this, arguments);\n}\nexport { _wrapRegExp as default };","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inherits(t, e) {\n  if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\");\n  t.prototype = Object.create(e && e.prototype, {\n    constructor: {\n      value: t,\n      writable: !0,\n      configurable: !0\n    }\n  }), Object.defineProperty(t, \"prototype\", {\n    writable: !1\n  }), e && setPrototypeOf(t, e);\n}\nexport { _inherits as default };","import type { ErrorType } from '../../errors/utils.js'\nimport { type ToBytesErrorType, toBytes } from '../encoding/toBytes.js'\nimport { type Keccak256ErrorType, keccak256 } from './keccak256.js'\n\nconst hash = (value: string) => keccak256(toBytes(value))\n\nexport type HashSignatureErrorType =\n  | Keccak256ErrorType\n  | ToBytesErrorType\n  | ErrorType\n\nexport function hashSignature(sig: string) {\n  return hash(sig)\n}\n","import { type AbiEvent, type AbiFunction, formatAbiItem } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type NormalizeSignatureErrorType,\n  normalizeSignature,\n} from './normalizeSignature.js'\n\nexport type ToSignatureErrorType = NormalizeSignatureErrorType | ErrorType\n\n/**\n * Returns the signature for a given function or event definition.\n *\n * @example\n * const signature = toSignature('function ownerOf(uint256 tokenId)')\n * // 'ownerOf(uint256)'\n *\n * @example\n * const signature_3 = toSignature({\n *   name: 'ownerOf',\n *   type: 'function',\n *   inputs: [{ name: 'tokenId', type: 'uint256' }],\n *   outputs: [],\n *   stateMutability: 'view',\n * })\n * // 'ownerOf(uint256)'\n */\nexport const toSignature = (def: string | AbiFunction | AbiEvent) => {\n  const def_ = (() => {\n    if (typeof def === 'string') return def\n    return formatAbiItem(def)\n  })()\n  return normalizeSignature(def_)\n}\n","import { BaseError } from '../../errors/base.js'\nimport type { ErrorType } from '../../errors/utils.js'\n\ntype NormalizeSignatureParameters = string\ntype NormalizeSignatureReturnType = string\nexport type NormalizeSignatureErrorType = ErrorType\n\nexport function normalizeSignature(\n  signature: NormalizeSignatureParameters,\n): NormalizeSignatureReturnType {\n  let active = true\n  let current = ''\n  let level = 0\n  let result = ''\n  let valid = false\n\n  for (let i = 0; i < signature.length; i++) {\n    const char = signature[i]\n\n    // If the character is a separator, we want to reactivate.\n    if (['(', ')', ','].includes(char)) active = true\n\n    // If the character is a \"level\" token, we want to increment/decrement.\n    if (char === '(') level++\n    if (char === ')') level--\n\n    // If we aren't active, we don't want to mutate the result.\n    if (!active) continue\n\n    // If level === 0, we are at the definition level.\n    if (level === 0) {\n      if (char === ' ' && ['event', 'function', ''].includes(result))\n        result = ''\n      else {\n        result += char\n\n        // If we are at the end of the definition, we must be finished.\n        if (char === ')') {\n          valid = true\n          break\n        }\n      }\n\n      continue\n    }\n\n    // Ignore spaces\n    if (char === ' ') {\n      // If the previous character is a separator, and the current section isn't empty, we want to deactivate.\n      if (signature[i - 1] !== ',' && current !== ',' && current !== ',(') {\n        current = ''\n        active = false\n      }\n      continue\n    }\n\n    result += char\n    current += char\n  }\n\n  if (!valid) throw new BaseError('Unable to normalize signature.')\n\n  return result\n}\n","import type { AbiEvent, AbiFunction } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { type HashSignatureErrorType, hashSignature } from './hashSignature.js'\nimport { type ToSignatureErrorType, toSignature } from './toSignature.js'\n\nexport type ToSignatureHashErrorType =\n  | HashSignatureErrorType\n  | ToSignatureErrorType\n  | ErrorType\n\n/**\n * Returns the hash (of the function/event signature) for a given event or function definition.\n */\nexport function toSignatureHash(fn: string | AbiFunction | AbiEvent) {\n  return hashSignature(toSignature(fn))\n}\n","import type { AbiItemType, AbiParameter } from '../../abi.js'\nimport { BaseError } from '../../errors.js'\nimport type { Modifier } from '../types/signatures.js'\n\nexport class InvalidAbiParameterError extends BaseError {\n  override name = 'InvalidAbiParameterError'\n\n  constructor({ param }: { param: string | object }) {\n    super('Failed to parse ABI parameter.', {\n      details: `parseAbiParameter(${JSON.stringify(param, null, 2)})`,\n      docsPath: '/api/human#parseabiparameter-1',\n    })\n  }\n}\n\nexport class InvalidAbiParametersError extends BaseError {\n  override name = 'InvalidAbiParametersError'\n\n  constructor({ params }: { params: string | object }) {\n    super('Failed to parse ABI parameters.', {\n      details: `parseAbiParameters(${JSON.stringify(params, null, 2)})`,\n      docsPath: '/api/human#parseabiparameters-1',\n    })\n  }\n}\n\nexport class InvalidParameterError extends BaseError {\n  override name = 'InvalidParameterError'\n\n  constructor({ param }: { param: string }) {\n    super('Invalid ABI parameter.', {\n      details: param,\n    })\n  }\n}\n\nexport class SolidityProtectedKeywordError extends BaseError {\n  override name = 'SolidityProtectedKeywordError'\n\n  constructor({ param, name }: { param: string; name: string }) {\n    super('Invalid ABI parameter.', {\n      details: param,\n      metaMessages: [\n        `\"${name}\" is a protected Solidity keyword. More info: https://docs.soliditylang.org/en/latest/cheatsheet.html`,\n      ],\n    })\n  }\n}\n\nexport class InvalidModifierError extends BaseError {\n  override name = 'InvalidModifierError'\n\n  constructor({\n    param,\n    type,\n    modifier,\n  }: {\n    param: string\n    type?: AbiItemType | 'struct' | undefined\n    modifier: Modifier\n  }) {\n    super('Invalid ABI parameter.', {\n      details: param,\n      metaMessages: [\n        `Modifier \"${modifier}\" not allowed${\n          type ? ` in \"${type}\" type` : ''\n        }.`,\n      ],\n    })\n  }\n}\n\nexport class InvalidFunctionModifierError extends BaseError {\n  override name = 'InvalidFunctionModifierError'\n\n  constructor({\n    param,\n    type,\n    modifier,\n  }: {\n    param: string\n    type?: AbiItemType | 'struct' | undefined\n    modifier: Modifier\n  }) {\n    super('Invalid ABI parameter.', {\n      details: param,\n      metaMessages: [\n        `Modifier \"${modifier}\" not allowed${\n          type ? ` in \"${type}\" type` : ''\n        }.`,\n        `Data location can only be specified for array, struct, or mapping types, but \"${modifier}\" was given.`,\n      ],\n    })\n  }\n}\n\nexport class InvalidAbiTypeParameterError extends BaseError {\n  override name = 'InvalidAbiTypeParameterError'\n\n  constructor({\n    abiParameter,\n  }: {\n    abiParameter: AbiParameter & { indexed?: boolean | undefined }\n  }) {\n    super('Invalid ABI parameter.', {\n      details: JSON.stringify(abiParameter, null, 2),\n      metaMessages: ['ABI parameter type is invalid.'],\n    })\n  }\n}\n","import {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../errors/address.js'\nimport {\n  InvalidBytesLengthError,\n  type InvalidBytesLengthErrorType,\n} from '../errors/data.js'\nimport {\n  AccountStateConflictError,\n  type AccountStateConflictErrorType,\n  StateAssignmentConflictError,\n  type StateAssignmentConflictErrorType,\n} from '../errors/stateOverride.js'\nimport type {\n  RpcAccountStateOverride,\n  RpcStateMapping,\n  RpcStateOverride,\n} from '../types/rpc.js'\nimport type { StateMapping, StateOverride } from '../types/stateOverride.js'\nimport { isAddress } from './address/isAddress.js'\nimport { type NumberToHexErrorType, numberToHex } from './encoding/toHex.js'\n\ntype SerializeStateMappingParameters = StateMapping | undefined\n\ntype SerializeStateMappingErrorType = InvalidBytesLengthErrorType\n\n/** @internal */\nexport function serializeStateMapping(\n  stateMapping: SerializeStateMappingParameters,\n): RpcStateMapping | undefined {\n  if (!stateMapping || stateMapping.length === 0) return undefined\n  return stateMapping.reduce((acc, { slot, value }) => {\n    if (slot.length !== 66)\n      throw new InvalidBytesLengthError({\n        size: slot.length,\n        targetSize: 66,\n        type: 'hex',\n      })\n    if (value.length !== 66)\n      throw new InvalidBytesLengthError({\n        size: value.length,\n        targetSize: 66,\n        type: 'hex',\n      })\n    acc[slot] = value\n    return acc\n  }, {} as RpcStateMapping)\n}\n\ntype SerializeAccountStateOverrideParameters = Omit<\n  StateOverride[number],\n  'address'\n>\n\ntype SerializeAccountStateOverrideErrorType =\n  | NumberToHexErrorType\n  | StateAssignmentConflictErrorType\n  | SerializeStateMappingErrorType\n\n/** @internal */\nexport function serializeAccountStateOverride(\n  parameters: SerializeAccountStateOverrideParameters,\n): RpcAccountStateOverride {\n  const { balance, nonce, state, stateDiff, code } = parameters\n  const rpcAccountStateOverride: RpcAccountStateOverride = {}\n  if (code !== undefined) rpcAccountStateOverride.code = code\n  if (balance !== undefined)\n    rpcAccountStateOverride.balance = numberToHex(balance)\n  if (nonce !== undefined) rpcAccountStateOverride.nonce = numberToHex(nonce)\n  if (state !== undefined)\n    rpcAccountStateOverride.state = serializeStateMapping(state)\n  if (stateDiff !== undefined) {\n    if (rpcAccountStateOverride.state) throw new StateAssignmentConflictError()\n    rpcAccountStateOverride.stateDiff = serializeStateMapping(stateDiff)\n  }\n  return rpcAccountStateOverride\n}\n\ntype SerializeStateOverrideParameters = StateOverride | undefined\n\nexport type SerializeStateOverrideErrorType =\n  | InvalidAddressErrorType\n  | AccountStateConflictErrorType\n  | SerializeAccountStateOverrideErrorType\n\n/** @internal */\nexport function serializeStateOverride(\n  parameters?: SerializeStateOverrideParameters,\n): RpcStateOverride | undefined {\n  if (!parameters) return undefined\n  const rpcStateOverride: RpcStateOverride = {}\n  for (const { address, ...accountState } of parameters) {\n    if (!isAddress(address, { strict: false }))\n      throw new InvalidAddressError({ address })\n    if (rpcStateOverride[address])\n      throw new AccountStateConflictError({ address: address })\n    rpcStateOverride[address] = serializeAccountStateOverride(accountState)\n  }\n  return rpcStateOverride\n}\n","import type { AbiFunction } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { type SliceErrorType, slice } from '../data/slice.js'\nimport {\n  type ToSignatureHashErrorType,\n  toSignatureHash,\n} from './toSignatureHash.js'\n\nexport type ToFunctionSelectorErrorType =\n  | ToSignatureHashErrorType\n  | SliceErrorType\n  | ErrorType\n\n/**\n * Returns the function selector for a given function definition.\n *\n * @example\n * const selector = toFunctionSelector('function ownerOf(uint256 tokenId)')\n * // 0x6352211e\n */\nexport const toFunctionSelector = (fn: string | AbiFunction) =>\n  slice(toSignatureHash(fn), 0, 4)\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nexport { _objectWithoutProperties as default };","function _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (-1 !== e.indexOf(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nexport { _objectWithoutPropertiesLoose as default };","import type { Address } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../types.js'\n\nexport type ParseAccountErrorType = ErrorType\n\nexport function parseAccount<accountOrAddress extends Address | Account>(\n  account: accountOrAddress,\n): accountOrAddress extends Address ? Account : accountOrAddress {\n  if (typeof account === 'string')\n    return { address: account, type: 'json-rpc' } as any\n  return account as any\n}\n","import type { Address } from 'abitype'\nimport type { ErrorType } from '../../errors/utils.js'\nimport { LruMap } from '../lru.js'\nimport { checksumAddress } from './getAddress.js'\n\nconst addressRegex = /^0x[a-fA-F0-9]{40}$/\n\n/** @internal */\nexport const isAddressCache = /*#__PURE__*/ new LruMap<boolean>(8192)\n\nexport type IsAddressOptions = {\n  /**\n   * Enables strict mode. Whether or not to compare the address against its checksum.\n   *\n   * @default true\n   */\n  strict?: boolean | undefined\n}\n\nexport type IsAddressErrorType = ErrorType\n\nexport function isAddress(\n  address: string,\n  options?: IsAddressOptions | undefined,\n): address is Address {\n  const { strict = true } = options ?? {}\n  const cacheKey = `${address}.${strict}`\n\n  if (isAddressCache.has(cacheKey)) return isAddressCache.get(cacheKey)!\n\n  const result = (() => {\n    if (!addressRegex.test(address)) return false\n    if (address.toLowerCase() === address) return true\n    if (strict) return checksumAddress(address as Address) === address\n    return true\n  })()\n  isAddressCache.set(cacheKey, result)\n  return result\n}\n","import {\n  IntegerOutOfRangeError,\n  type IntegerOutOfRangeErrorType,\n} from '../../errors/encoding.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type PadErrorType, pad } from '../data/pad.js'\n\nimport { type AssertSizeErrorType, assertSize } from './fromHex.js'\n\nconst hexes = /*#__PURE__*/ Array.from({ length: 256 }, (_v, i) =>\n  i.toString(16).padStart(2, '0'),\n)\n\nexport type ToHexParameters = {\n  /** The size (in bytes) of the output hex value. */\n  size?: number | undefined\n}\n\nexport type ToHexErrorType =\n  | BoolToHexErrorType\n  | BytesToHexErrorType\n  | NumberToHexErrorType\n  | StringToHexErrorType\n  | ErrorType\n\n/**\n * Encodes a string, number, bigint, or ByteArray into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex\n * - Example: https://viem.sh/docs/utilities/toHex#usage\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex('Hello world')\n * // '0x48656c6c6f20776f726c6421'\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex(420)\n * // '0x1a4'\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex('Hello world', { size: 32 })\n * // '0x48656c6c6f20776f726c64210000000000000000000000000000000000000000'\n */\nexport function toHex(\n  value: string | number | bigint | boolean | ByteArray,\n  opts: ToHexParameters = {},\n): Hex {\n  if (typeof value === 'number' || typeof value === 'bigint')\n    return numberToHex(value, opts)\n  if (typeof value === 'string') {\n    return stringToHex(value, opts)\n  }\n  if (typeof value === 'boolean') return boolToHex(value, opts)\n  return bytesToHex(value, opts)\n}\n\nexport type BoolToHexOpts = {\n  /** The size (in bytes) of the output hex value. */\n  size?: number | undefined\n}\n\nexport type BoolToHexErrorType = AssertSizeErrorType | PadErrorType | ErrorType\n\n/**\n * Encodes a boolean into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#booltohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(true)\n * // '0x1'\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(false)\n * // '0x0'\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(true, { size: 32 })\n * // '0x0000000000000000000000000000000000000000000000000000000000000001'\n */\nexport function boolToHex(value: boolean, opts: BoolToHexOpts = {}): Hex {\n  const hex: Hex = `0x${Number(value)}`\n  if (typeof opts.size === 'number') {\n    assertSize(hex, { size: opts.size })\n    return pad(hex, { size: opts.size })\n  }\n  return hex\n}\n\nexport type BytesToHexOpts = {\n  /** The size (in bytes) of the output hex value. */\n  size?: number | undefined\n}\n\nexport type BytesToHexErrorType = AssertSizeErrorType | PadErrorType | ErrorType\n\n/**\n * Encodes a bytes array into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#bytestohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { bytesToHex } from 'viem'\n * const data = bytesToHex(Uint8Array.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n * // '0x48656c6c6f20576f726c6421'\n *\n * @example\n * import { bytesToHex } from 'viem'\n * const data = bytesToHex(Uint8Array.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]), { size: 32 })\n * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'\n */\nexport function bytesToHex(value: ByteArray, opts: BytesToHexOpts = {}): Hex {\n  let string = ''\n  for (let i = 0; i < value.length; i++) {\n    string += hexes[value[i]]\n  }\n  const hex = `0x${string}` as const\n\n  if (typeof opts.size === 'number') {\n    assertSize(hex, { size: opts.size })\n    return pad(hex, { dir: 'right', size: opts.size })\n  }\n  return hex\n}\n\nexport type NumberToHexOpts =\n  | {\n      /** Whether or not the number of a signed representation. */\n      signed?: boolean | undefined\n      /** The size (in bytes) of the output hex value. */\n      size: number\n    }\n  | {\n      signed?: undefined\n      /** The size (in bytes) of the output hex value. */\n      size?: number | undefined\n    }\n\nexport type NumberToHexErrorType =\n  | IntegerOutOfRangeErrorType\n  | PadErrorType\n  | ErrorType\n\n/**\n * Encodes a number or bigint into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#numbertohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { numberToHex } from 'viem'\n * const data = numberToHex(420)\n * // '0x1a4'\n *\n * @example\n * import { numberToHex } from 'viem'\n * const data = numberToHex(420, { size: 32 })\n * // '0x00000000000000000000000000000000000000000000000000000000000001a4'\n */\nexport function numberToHex(\n  value_: number | bigint,\n  opts: NumberToHexOpts = {},\n): Hex {\n  const { signed, size } = opts\n\n  const value = BigInt(value_)\n\n  let maxValue: bigint | number | undefined\n  if (size) {\n    if (signed) maxValue = (1n << (BigInt(size) * 8n - 1n)) - 1n\n    else maxValue = 2n ** (BigInt(size) * 8n) - 1n\n  } else if (typeof value_ === 'number') {\n    maxValue = BigInt(Number.MAX_SAFE_INTEGER)\n  }\n\n  const minValue = typeof maxValue === 'bigint' && signed ? -maxValue - 1n : 0\n\n  if ((maxValue && value > maxValue) || value < minValue) {\n    const suffix = typeof value_ === 'bigint' ? 'n' : ''\n    throw new IntegerOutOfRangeError({\n      max: maxValue ? `${maxValue}${suffix}` : undefined,\n      min: `${minValue}${suffix}`,\n      signed,\n      size,\n      value: `${value_}${suffix}`,\n    })\n  }\n\n  const hex = `0x${(\n    signed && value < 0 ? (1n << BigInt(size * 8)) + BigInt(value) : value\n  ).toString(16)}` as Hex\n  if (size) return pad(hex, { size }) as Hex\n  return hex\n}\n\nexport type StringToHexOpts = {\n  /** The size (in bytes) of the output hex value. */\n  size?: number | undefined\n}\n\nexport type StringToHexErrorType = BytesToHexErrorType | ErrorType\n\nconst encoder = /*#__PURE__*/ new TextEncoder()\n\n/**\n * Encodes a UTF-8 string into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#stringtohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { stringToHex } from 'viem'\n * const data = stringToHex('Hello World!')\n * // '0x48656c6c6f20576f726c6421'\n *\n * @example\n * import { stringToHex } from 'viem'\n * const data = stringToHex('Hello World!', { size: 32 })\n * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'\n */\nexport function stringToHex(value_: string, opts: StringToHexOpts = {}): Hex {\n  const value = encoder.encode(value_)\n  return bytesToHex(value, opts)\n}\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};function X(){throw Error(\"act(...) is not supported in production builds of React.\");}\nexports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;exports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;exports.act=X;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=X;exports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};\nexports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};exports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};\nexports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};exports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.3.1\";\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","import { gweiUnits } from '../../constants/unit.js'\n\nimport { type FormatUnitsErrorType, formatUnits } from './formatUnits.js'\n\nexport type FormatGweiErrorType = FormatUnitsErrorType\n\n/**\n * Converts numerical wei to a string representation of gwei.\n *\n * - Docs: https://viem.sh/docs/utilities/formatGwei\n *\n * @example\n * import { formatGwei } from 'viem'\n *\n * formatGwei(1000000000n)\n * // '1'\n */\nexport function formatGwei(wei: bigint, unit: 'wei' = 'wei') {\n  return formatUnits(wei, gweiUnits[unit])\n}\n","import { BaseError } from './base.js'\n\nexport type SliceOffsetOutOfBoundsErrorType = SliceOffsetOutOfBoundsError & {\n  name: 'SliceOffsetOutOfBoundsError'\n}\nexport class SliceOffsetOutOfBoundsError extends BaseError {\n  constructor({\n    offset,\n    position,\n    size,\n  }: { offset: number; position: 'start' | 'end'; size: number }) {\n    super(\n      `Slice ${\n        position === 'start' ? 'starting' : 'ending'\n      } at offset \"${offset}\" is out-of-bounds (size: ${size}).`,\n      { name: 'SliceOffsetOutOfBoundsError' },\n    )\n  }\n}\n\nexport type SizeExceedsPaddingSizeErrorType = SizeExceedsPaddingSizeError & {\n  name: 'SizeExceedsPaddingSizeError'\n}\nexport class SizeExceedsPaddingSizeError extends BaseError {\n  constructor({\n    size,\n    targetSize,\n    type,\n  }: {\n    size: number\n    targetSize: number\n    type: 'hex' | 'bytes'\n  }) {\n    super(\n      `${type.charAt(0).toUpperCase()}${type\n        .slice(1)\n        .toLowerCase()} size (${size}) exceeds padding size (${targetSize}).`,\n      { name: 'SizeExceedsPaddingSizeError' },\n    )\n  }\n}\n\nexport type InvalidBytesLengthErrorType = InvalidBytesLengthError & {\n  name: 'InvalidBytesLengthError'\n}\nexport class InvalidBytesLengthError extends BaseError {\n  constructor({\n    size,\n    targetSize,\n    type,\n  }: {\n    size: number\n    targetSize: number\n    type: 'hex' | 'bytes'\n  }) {\n    super(\n      `${type.charAt(0).toUpperCase()}${type\n        .slice(1)\n        .toLowerCase()} is expected to be ${targetSize} ${type} long, but is ${size} ${type} long.`,\n      { name: 'InvalidBytesLengthError' },\n    )\n  }\n}\n","/**\n * Internal Merkle-Damgard hash utils.\n * @module\n */\nimport { type Input, Hash, abytes, aexists, aoutput, clean, createView, toBytes } from './utils.ts';\n\n/** Polyfill for Safari 14. https://caniuse.com/mdn-javascript_builtins_dataview_setbiguint64 */\nexport function setBigUint64(\n  view: DataView,\n  byteOffset: number,\n  value: bigint,\n  isLE: boolean\n): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n/** Choice: a ? b : c */\nexport function Chi(a: number, b: number, c: number): number {\n  return (a & b) ^ (~a & c);\n}\n\n/** Majority function, true if any two inputs is true. */\nexport function Maj(a: number, b: number, c: number): number {\n  return (a & b) ^ (a & c) ^ (b & c);\n}\n\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport abstract class HashMD<T extends HashMD<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n\n  readonly blockLen: number;\n  readonly outputLen: number;\n  readonly padOffset: number;\n  readonly isLE: boolean;\n\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(blockLen: number, outputLen: number, padOffset: number, isLE: boolean) {\n    super();\n    this.blockLen = blockLen;\n    this.outputLen = outputLen;\n    this.padOffset = padOffset;\n    this.isLE = isLE;\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    aexists(this);\n    data = toBytes(data);\n    abytes(data);\n    const { view, buffer, blockLen } = this;\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array): void {\n    aexists(this);\n    aoutput(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    clean(this.buffer.subarray(pos));\n    // we have less than padOffset left in buffer, so we cannot put length in\n    // current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest(): Uint8Array {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.destroyed = destroyed;\n    to.finished = finished;\n    to.length = length;\n    to.pos = pos;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * Initial SHA-2 state: fractional parts of square roots of first 16 primes 2..53.\n * Check out `test/misc/sha2-gen-iv.js` for recomputation guide.\n */\n\n/** Initial SHA256 state. Bits 0..32 of frac part of sqrt of primes 2..19 */\nexport const SHA256_IV: Uint32Array = /* @__PURE__ */ Uint32Array.from([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19,\n]);\n\n/** Initial SHA224 state. Bits 32..64 of frac part of sqrt of primes 23..53 */\nexport const SHA224_IV: Uint32Array = /* @__PURE__ */ Uint32Array.from([\n  0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4,\n]);\n\n/** Initial SHA384 state. Bits 0..64 of frac part of sqrt of primes 23..53 */\nexport const SHA384_IV: Uint32Array = /* @__PURE__ */ Uint32Array.from([\n  0xcbbb9d5d, 0xc1059ed8, 0x629a292a, 0x367cd507, 0x9159015a, 0x3070dd17, 0x152fecd8, 0xf70e5939,\n  0x67332667, 0xffc00b31, 0x8eb44a87, 0x68581511, 0xdb0c2e0d, 0x64f98fa7, 0x47b5481d, 0xbefa4fa4,\n]);\n\n/** Initial SHA512 state. Bits 0..64 of frac part of sqrt of primes 2..19 */\nexport const SHA512_IV: Uint32Array = /* @__PURE__ */ Uint32Array.from([\n  0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1,\n  0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179,\n]);\n","/**\n * SHA2 hash function. A.k.a. sha256, sha384, sha512, sha512_224, sha512_256.\n * SHA256 is the fastest hash implementable in JS, even faster than Blake3.\n * Check out [RFC 4634](https://datatracker.ietf.org/doc/html/rfc4634) and\n * [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n */\nimport { Chi, HashMD, Maj, SHA224_IV, SHA256_IV, SHA384_IV, SHA512_IV } from './_md.ts';\nimport * as u64 from './_u64.ts';\nimport { type CHash, clean, createHasher, rotr } from './utils.ts';\n\n/**\n * Round constants:\n * First 32 bits of fractional parts of the cube roots of the first 64 primes 2..311)\n */\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ Uint32Array.from([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n/** Reusable temporary buffer. \"W\" comes straight from spec. */\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nexport class SHA256 extends HashMD<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  protected A: number = SHA256_IV[0] | 0;\n  protected B: number = SHA256_IV[1] | 0;\n  protected C: number = SHA256_IV[2] | 0;\n  protected D: number = SHA256_IV[3] | 0;\n  protected E: number = SHA256_IV[4] | 0;\n  protected F: number = SHA256_IV[5] | 0;\n  protected G: number = SHA256_IV[6] | 0;\n  protected H: number = SHA256_IV[7] | 0;\n\n  constructor(outputLen: number = 32) {\n    super(64, outputLen, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ): void {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean(): void {\n    clean(SHA256_W);\n  }\n  destroy(): void {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    clean(this.buffer);\n  }\n}\n\nexport class SHA224 extends SHA256 {\n  protected A: number = SHA224_IV[0] | 0;\n  protected B: number = SHA224_IV[1] | 0;\n  protected C: number = SHA224_IV[2] | 0;\n  protected D: number = SHA224_IV[3] | 0;\n  protected E: number = SHA224_IV[4] | 0;\n  protected F: number = SHA224_IV[5] | 0;\n  protected G: number = SHA224_IV[6] | 0;\n  protected H: number = SHA224_IV[7] | 0;\n  constructor() {\n    super(28);\n  }\n}\n\n// SHA2-512 is slower than sha256 in js because u64 operations are slow.\n\n// Round contants\n// First 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409\n// prettier-ignore\nconst K512 = /* @__PURE__ */ (() => u64.split([\n  '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n  '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n  '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n  '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n  '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n  '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n  '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n  '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n  '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n  '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n  '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n  '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n  '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n  '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n  '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n  '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n  '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n  '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n  '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n  '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\nconst SHA512_Kh = /* @__PURE__ */ (() => K512[0])();\nconst SHA512_Kl = /* @__PURE__ */ (() => K512[1])();\n\n// Reusable temporary buffers\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\n\nexport class SHA512 extends HashMD<SHA512> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  // h -- high 32 bits, l -- low 32 bits\n  protected Ah: number = SHA512_IV[0] | 0;\n  protected Al: number = SHA512_IV[1] | 0;\n  protected Bh: number = SHA512_IV[2] | 0;\n  protected Bl: number = SHA512_IV[3] | 0;\n  protected Ch: number = SHA512_IV[4] | 0;\n  protected Cl: number = SHA512_IV[5] | 0;\n  protected Dh: number = SHA512_IV[6] | 0;\n  protected Dl: number = SHA512_IV[7] | 0;\n  protected Eh: number = SHA512_IV[8] | 0;\n  protected El: number = SHA512_IV[9] | 0;\n  protected Fh: number = SHA512_IV[10] | 0;\n  protected Fl: number = SHA512_IV[11] | 0;\n  protected Gh: number = SHA512_IV[12] | 0;\n  protected Gl: number = SHA512_IV[13] | 0;\n  protected Hh: number = SHA512_IV[14] | 0;\n  protected Hl: number = SHA512_IV[15] | 0;\n\n  constructor(outputLen: number = 64) {\n    super(128, outputLen, 16, false);\n  }\n  // prettier-ignore\n  protected get(): [\n    number, number, number, number, number, number, number, number,\n    number, number, number, number, number, number, number, number\n  ] {\n    const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n  }\n  // prettier-ignore\n  protected set(\n    Ah: number, Al: number, Bh: number, Bl: number, Ch: number, Cl: number, Dh: number, Dl: number,\n    Eh: number, El: number, Fh: number, Fl: number, Gh: number, Gl: number, Hh: number, Hl: number\n  ): void {\n    this.Ah = Ah | 0;\n    this.Al = Al | 0;\n    this.Bh = Bh | 0;\n    this.Bl = Bl | 0;\n    this.Ch = Ch | 0;\n    this.Cl = Cl | 0;\n    this.Dh = Dh | 0;\n    this.Dl = Dl | 0;\n    this.Eh = Eh | 0;\n    this.El = El | 0;\n    this.Fh = Fh | 0;\n    this.Fl = Fl | 0;\n    this.Gh = Gh | 0;\n    this.Gl = Gl | 0;\n    this.Hh = Hh | 0;\n    this.Hl = Hl | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) {\n      SHA512_W_H[i] = view.getUint32(offset);\n      SHA512_W_L[i] = view.getUint32((offset += 4));\n    }\n    for (let i = 16; i < 80; i++) {\n      // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n      const W15h = SHA512_W_H[i - 15] | 0;\n      const W15l = SHA512_W_L[i - 15] | 0;\n      const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n      const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n      // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n      const W2h = SHA512_W_H[i - 2] | 0;\n      const W2l = SHA512_W_L[i - 2] | 0;\n      const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n      const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n      // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n      const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n      const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n      SHA512_W_H[i] = SUMh | 0;\n      SHA512_W_L[i] = SUMl | 0;\n    }\n    let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    // Compression function main loop, 80 rounds\n    for (let i = 0; i < 80; i++) {\n      // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n      const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n      const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n      //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n      const CHIl = (El & Fl) ^ (~El & Gl);\n      // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n      // prettier-ignore\n      const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n      const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n      const T1l = T1ll | 0;\n      // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n      const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n      const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n      const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n      const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n      Hh = Gh | 0;\n      Hl = Gl | 0;\n      Gh = Fh | 0;\n      Gl = Fl | 0;\n      Fh = Eh | 0;\n      Fl = El | 0;\n      ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n      Dh = Ch | 0;\n      Dl = Cl | 0;\n      Ch = Bh | 0;\n      Cl = Bl | 0;\n      Bh = Ah | 0;\n      Bl = Al | 0;\n      const All = u64.add3L(T1l, sigma0l, MAJl);\n      Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n      Al = All | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n    ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n    ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n    ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n    ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n    ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n    ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n    ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n  }\n  protected roundClean(): void {\n    clean(SHA512_W_H, SHA512_W_L);\n  }\n  destroy(): void {\n    clean(this.buffer);\n    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n  }\n}\n\nexport class SHA384 extends SHA512 {\n  protected Ah: number = SHA384_IV[0] | 0;\n  protected Al: number = SHA384_IV[1] | 0;\n  protected Bh: number = SHA384_IV[2] | 0;\n  protected Bl: number = SHA384_IV[3] | 0;\n  protected Ch: number = SHA384_IV[4] | 0;\n  protected Cl: number = SHA384_IV[5] | 0;\n  protected Dh: number = SHA384_IV[6] | 0;\n  protected Dl: number = SHA384_IV[7] | 0;\n  protected Eh: number = SHA384_IV[8] | 0;\n  protected El: number = SHA384_IV[9] | 0;\n  protected Fh: number = SHA384_IV[10] | 0;\n  protected Fl: number = SHA384_IV[11] | 0;\n  protected Gh: number = SHA384_IV[12] | 0;\n  protected Gl: number = SHA384_IV[13] | 0;\n  protected Hh: number = SHA384_IV[14] | 0;\n  protected Hl: number = SHA384_IV[15] | 0;\n\n  constructor() {\n    super(48);\n  }\n}\n\n/**\n * Truncated SHA512/256 and SHA512/224.\n * SHA512_IV is XORed with 0xa5a5a5a5a5a5a5a5, then used as \"intermediary\" IV of SHA512/t.\n * Then t hashes string to produce result IV.\n * See `test/misc/sha2-gen-iv.js`.\n */\n\n/** SHA512/224 IV */\nconst T224_IV = /* @__PURE__ */ Uint32Array.from([\n  0x8c3d37c8, 0x19544da2, 0x73e19966, 0x89dcd4d6, 0x1dfab7ae, 0x32ff9c82, 0x679dd514, 0x582f9fcf,\n  0x0f6d2b69, 0x7bd44da8, 0x77e36f73, 0x04c48942, 0x3f9d85a8, 0x6a1d36c8, 0x1112e6ad, 0x91d692a1,\n]);\n\n/** SHA512/256 IV */\nconst T256_IV = /* @__PURE__ */ Uint32Array.from([\n  0x22312194, 0xfc2bf72c, 0x9f555fa3, 0xc84c64c2, 0x2393b86b, 0x6f53b151, 0x96387719, 0x5940eabd,\n  0x96283ee2, 0xa88effe3, 0xbe5e1e25, 0x53863992, 0x2b0199fc, 0x2c85b8aa, 0x0eb72ddc, 0x81c52ca2,\n]);\n\nexport class SHA512_224 extends SHA512 {\n  protected Ah: number = T224_IV[0] | 0;\n  protected Al: number = T224_IV[1] | 0;\n  protected Bh: number = T224_IV[2] | 0;\n  protected Bl: number = T224_IV[3] | 0;\n  protected Ch: number = T224_IV[4] | 0;\n  protected Cl: number = T224_IV[5] | 0;\n  protected Dh: number = T224_IV[6] | 0;\n  protected Dl: number = T224_IV[7] | 0;\n  protected Eh: number = T224_IV[8] | 0;\n  protected El: number = T224_IV[9] | 0;\n  protected Fh: number = T224_IV[10] | 0;\n  protected Fl: number = T224_IV[11] | 0;\n  protected Gh: number = T224_IV[12] | 0;\n  protected Gl: number = T224_IV[13] | 0;\n  protected Hh: number = T224_IV[14] | 0;\n  protected Hl: number = T224_IV[15] | 0;\n\n  constructor() {\n    super(28);\n  }\n}\n\nexport class SHA512_256 extends SHA512 {\n  protected Ah: number = T256_IV[0] | 0;\n  protected Al: number = T256_IV[1] | 0;\n  protected Bh: number = T256_IV[2] | 0;\n  protected Bl: number = T256_IV[3] | 0;\n  protected Ch: number = T256_IV[4] | 0;\n  protected Cl: number = T256_IV[5] | 0;\n  protected Dh: number = T256_IV[6] | 0;\n  protected Dl: number = T256_IV[7] | 0;\n  protected Eh: number = T256_IV[8] | 0;\n  protected El: number = T256_IV[9] | 0;\n  protected Fh: number = T256_IV[10] | 0;\n  protected Fl: number = T256_IV[11] | 0;\n  protected Gh: number = T256_IV[12] | 0;\n  protected Gl: number = T256_IV[13] | 0;\n  protected Hh: number = T256_IV[14] | 0;\n  protected Hl: number = T256_IV[15] | 0;\n\n  constructor() {\n    super(32);\n  }\n}\n\n/**\n * SHA2-256 hash function from RFC 4634.\n *\n * It is the fastest JS hash, even faster than Blake3.\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n */\nexport const sha256: CHash = /* @__PURE__ */ createHasher(() => new SHA256());\n/** SHA2-224 hash function from RFC 4634 */\nexport const sha224: CHash = /* @__PURE__ */ createHasher(() => new SHA224());\n\n/** SHA2-512 hash function from RFC 4634. */\nexport const sha512: CHash = /* @__PURE__ */ createHasher(() => new SHA512());\n/** SHA2-384 hash function from RFC 4634. */\nexport const sha384: CHash = /* @__PURE__ */ createHasher(() => new SHA384());\n\n/**\n * SHA2-512/256 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nexport const sha512_256: CHash = /* @__PURE__ */ createHasher(() => new SHA512_256());\n/**\n * SHA2-512/224 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nexport const sha512_224: CHash = /* @__PURE__ */ createHasher(() => new SHA512_224());\n","import type { Abi, ExtractAbiError } from 'abitype'\n\nimport { solidityError, solidityPanic } from '../../constants/solidity.js'\nimport {\n  AbiDecodingZeroDataError,\n  type AbiDecodingZeroDataErrorType,\n  AbiErrorSignatureNotFoundError,\n  type AbiErrorSignatureNotFoundErrorType,\n} from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  AbiItem,\n  ContractErrorArgs,\n  ContractErrorName,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { IsNarrowable, UnionEvaluate } from '../../types/utils.js'\nimport { slice } from '../data/slice.js'\nimport {\n  type ToFunctionSelectorErrorType,\n  toFunctionSelector,\n} from '../hash/toFunctionSelector.js'\nimport {\n  type DecodeAbiParametersErrorType,\n  decodeAbiParameters,\n} from './decodeAbiParameters.js'\nimport { type FormatAbiItemErrorType, formatAbiItem } from './formatAbiItem.js'\n\nexport type DecodeErrorResultParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n> = { abi?: abi | undefined; data: Hex }\n\nexport type DecodeErrorResultReturnType<\n  abi extends Abi | readonly unknown[] = Abi,\n  ///\n  allErrorNames extends ContractErrorName<abi> = ContractErrorName<abi>,\n> = IsNarrowable<abi, Abi> extends true\n  ? UnionEvaluate<\n      {\n        [errorName in allErrorNames]: {\n          abiItem: abi extends Abi\n            ? Abi extends abi\n              ? AbiItem\n              : ExtractAbiError<abi, errorName>\n            : AbiItem\n          args: ContractErrorArgs<abi, errorName>\n          errorName: errorName\n        }\n      }[allErrorNames]\n    >\n  : {\n      abiItem: AbiItem\n      args: readonly unknown[] | undefined\n      errorName: string\n    }\n\nexport type DecodeErrorResultErrorType =\n  | AbiDecodingZeroDataErrorType\n  | AbiErrorSignatureNotFoundErrorType\n  | DecodeAbiParametersErrorType\n  | FormatAbiItemErrorType\n  | ToFunctionSelectorErrorType\n  | ErrorType\n\nexport function decodeErrorResult<const abi extends Abi | readonly unknown[]>(\n  parameters: DecodeErrorResultParameters<abi>,\n): DecodeErrorResultReturnType<abi> {\n  const { abi, data } = parameters as DecodeErrorResultParameters\n\n  const signature = slice(data, 0, 4)\n  if (signature === '0x') throw new AbiDecodingZeroDataError()\n\n  const abi_ = [...(abi || []), solidityError, solidityPanic]\n  const abiItem = abi_.find(\n    (x) =>\n      x.type === 'error' && signature === toFunctionSelector(formatAbiItem(x)),\n  )\n  if (!abiItem)\n    throw new AbiErrorSignatureNotFoundError(signature, {\n      docsPath: '/docs/contract/decodeErrorResult',\n    })\n  return {\n    abiItem,\n    args:\n      'inputs' in abiItem && abiItem.inputs && abiItem.inputs.length > 0\n        ? decodeAbiParameters(abiItem.inputs, slice(data, 4))\n        : undefined,\n    errorName: (abiItem as { name: string }).name,\n  } as DecodeErrorResultReturnType<abi>\n}\n","import type { Abi } from '../abi.js'\nimport type { Error, Filter } from '../types.js'\nimport { isStructSignature } from './runtime/signatures.js'\nimport { parseStructs } from './runtime/structs.js'\nimport { parseSignature } from './runtime/utils.js'\nimport type { Signatures } from './types/signatures.js'\nimport type { ParseStructs } from './types/structs.js'\nimport type { ParseSignature } from './types/utils.js'\n\n/**\n * Parses human-readable ABI into JSON {@link Abi}\n *\n * @param signatures - Human-readable ABI\n * @returns Parsed {@link Abi}\n *\n * @example\n * type Result = ParseAbi<\n *   // ^? type Result = readonly [{ name: \"balanceOf\"; type: \"function\"; stateMutability:...\n *   [\n *     'function balanceOf(address owner) view returns (uint256)',\n *     'event Transfer(address indexed from, address indexed to, uint256 amount)',\n *   ]\n * >\n */\nexport type ParseAbi<signatures extends readonly string[]> =\n  string[] extends signatures\n    ? Abi // If `T` was not able to be inferred (e.g. just `string[]`), return `Abi`\n    : signatures extends readonly string[]\n      ? signatures extends Signatures<signatures> // Validate signatures\n        ? ParseStructs<signatures> extends infer structs\n          ? {\n              [key in keyof signatures]: signatures[key] extends string\n                ? ParseSignature<signatures[key], structs>\n                : never\n            } extends infer mapped extends readonly unknown[]\n            ? Filter<mapped, never> extends infer result\n              ? result extends readonly []\n                ? never\n                : result\n              : never\n            : never\n          : never\n        : never\n      : never\n\n/**\n * Parses human-readable ABI into JSON {@link Abi}\n *\n * @param signatures - Human-Readable ABI\n * @returns Parsed {@link Abi}\n *\n * @example\n * const abi = parseAbi([\n *   //  ^? const abi: readonly [{ name: \"balanceOf\"; type: \"function\"; stateMutability:...\n *   'function balanceOf(address owner) view returns (uint256)',\n *   'event Transfer(address indexed from, address indexed to, uint256 amount)',\n * ])\n */\nexport function parseAbi<const signatures extends readonly string[]>(\n  signatures: signatures['length'] extends 0\n    ? Error<'At least one signature required'>\n    : Signatures<signatures> extends signatures\n      ? signatures\n      : Signatures<signatures>,\n): ParseAbi<signatures> {\n  const structs = parseStructs(signatures as readonly string[])\n  const abi = []\n  const length = signatures.length as number\n  for (let i = 0; i < length; i++) {\n    const signature = (signatures as readonly string[])[i]!\n    if (isStructSignature(signature)) continue\n    abi.push(parseSignature(signature, structs))\n  }\n  return abi as unknown as ParseAbi<signatures>\n}\n","export const aggregate3Signature = '0x82ad56cb'\n","import { type Address, parseAbi } from 'abitype'\nimport * as BlockOverrides from 'ox/BlockOverrides'\n\nimport type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { multicall3Abi } from '../../constants/abis.js'\nimport { aggregate3Signature } from '../../constants/contract.js'\nimport {\n  deploylessCallViaBytecodeBytecode,\n  deploylessCallViaFactoryBytecode,\n  multicall3Bytecode,\n} from '../../constants/contracts.js'\nimport { BaseError } from '../../errors/base.js'\nimport {\n  ChainDoesNotSupportContract,\n  ClientChainNotConfiguredError,\n} from '../../errors/chain.js'\nimport {\n  CounterfactualDeploymentFailedError,\n  RawContractError,\n  type RawContractErrorType,\n} from '../../errors/contract.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { RpcTransactionRequest } from '../../types/rpc.js'\nimport type { StateOverride } from '../../types/stateOverride.js'\nimport type { TransactionRequest } from '../../types/transaction.js'\nimport type { ExactPartial, UnionOmit } from '../../types/utils.js'\nimport {\n  type DecodeFunctionResultErrorType,\n  decodeFunctionResult,\n} from '../../utils/abi/decodeFunctionResult.js'\nimport {\n  type EncodeDeployDataErrorType,\n  encodeDeployData,\n} from '../../utils/abi/encodeDeployData.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type GetChainContractAddressErrorType,\n  getChainContractAddress,\n} from '../../utils/chain/getChainContractAddress.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport {\n  type GetCallErrorReturnType,\n  getCallError,\n} from '../../utils/errors/getCallError.js'\nimport { extract } from '../../utils/formatters/extract.js'\nimport {\n  type FormatTransactionRequestErrorType,\n  type FormattedTransactionRequest,\n  formatTransactionRequest,\n} from '../../utils/formatters/transactionRequest.js'\nimport {\n  type CreateBatchSchedulerErrorType,\n  createBatchScheduler,\n} from '../../utils/promise/createBatchScheduler.js'\nimport {\n  type SerializeStateOverrideErrorType,\n  serializeStateOverride,\n} from '../../utils/stateOverride.js'\nimport type {\n  AssertRequestErrorType,\n  AssertRequestParameters,\n} from '../../utils/transaction/assertRequest.js'\nimport { assertRequest } from '../../utils/transaction/assertRequest.js'\n\nexport type CallParameters<\n  chain extends Chain | undefined = Chain | undefined,\n> = UnionOmit<FormattedCall<chain>, 'from'> & {\n  /** Account attached to the call (msg.sender). */\n  account?: Account | Address | undefined\n  /** Whether or not to enable multicall batching on this call. */\n  batch?: boolean | undefined\n  /** Block overrides for the call. */\n  blockOverrides?: BlockOverrides.BlockOverrides | undefined\n  /** Bytecode to perform the call on. */\n  code?: Hex | undefined\n  /** Contract deployment factory address (ie. Create2 factory, Smart Account factory, etc). */\n  factory?: Address | undefined\n  /** Calldata to execute on the factory to deploy the contract. */\n  factoryData?: Hex | undefined\n  /** State overrides for the call. */\n  stateOverride?: StateOverride | undefined\n} & (\n    | {\n        /** The balance of the account at a block number. */\n        blockNumber?: bigint | undefined\n        blockTag?: undefined\n      }\n    | {\n        blockNumber?: undefined\n        /**\n         * The balance of the account at a block tag.\n         * @default 'latest'\n         */\n        blockTag?: BlockTag | undefined\n      }\n  )\ntype FormattedCall<chain extends Chain | undefined = Chain | undefined> =\n  FormattedTransactionRequest<chain>\n\nexport type CallReturnType = { data: Hex | undefined }\n\nexport type CallErrorType = GetCallErrorReturnType<\n  | ParseAccountErrorType\n  | SerializeStateOverrideErrorType\n  | AssertRequestErrorType\n  | NumberToHexErrorType\n  | FormatTransactionRequestErrorType\n  | ScheduleMulticallErrorType\n  | RequestErrorType\n  | ToDeploylessCallViaBytecodeDataErrorType\n  | ToDeploylessCallViaFactoryDataErrorType\n>\n\n/**\n * Executes a new message call immediately without submitting a transaction to the network.\n *\n * - Docs: https://viem.sh/docs/actions/public/call\n * - JSON-RPC Methods: [`eth_call`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_call)\n *\n * @param client - Client to use\n * @param parameters - {@link CallParameters}\n * @returns The call data. {@link CallReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { call } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const data = await call(client, {\n *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n *   data: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n * })\n */\nexport async function call<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  args: CallParameters<chain>,\n): Promise<CallReturnType> {\n  const {\n    account: account_ = client.account,\n    authorizationList,\n    batch = Boolean(client.batch?.multicall),\n    blockNumber,\n    blockTag = client.experimental_blockTag ?? 'latest',\n    accessList,\n    blobs,\n    blockOverrides,\n    code,\n    data: data_,\n    factory,\n    factoryData,\n    gas,\n    gasPrice,\n    maxFeePerBlobGas,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    to,\n    value,\n    stateOverride,\n    ...rest\n  } = args\n  const account = account_ ? parseAccount(account_) : undefined\n\n  if (code && (factory || factoryData))\n    throw new BaseError(\n      'Cannot provide both `code` & `factory`/`factoryData` as parameters.',\n    )\n  if (code && to)\n    throw new BaseError('Cannot provide both `code` & `to` as parameters.')\n\n  // Check if the call is deployless via bytecode.\n  const deploylessCallViaBytecode = code && data_\n  // Check if the call is deployless via a factory.\n  const deploylessCallViaFactory = factory && factoryData && to && data_\n  const deploylessCall = deploylessCallViaBytecode || deploylessCallViaFactory\n\n  const data = (() => {\n    if (deploylessCallViaBytecode)\n      return toDeploylessCallViaBytecodeData({\n        code,\n        data: data_,\n      })\n    if (deploylessCallViaFactory)\n      return toDeploylessCallViaFactoryData({\n        data: data_,\n        factory,\n        factoryData,\n        to,\n      })\n    return data_\n  })()\n\n  try {\n    assertRequest(args as AssertRequestParameters)\n\n    const blockNumberHex =\n      typeof blockNumber === 'bigint' ? numberToHex(blockNumber) : undefined\n    const block = blockNumberHex || blockTag\n\n    const rpcBlockOverrides = blockOverrides\n      ? BlockOverrides.toRpc(blockOverrides)\n      : undefined\n    const rpcStateOverride = serializeStateOverride(stateOverride)\n\n    const chainFormat = client.chain?.formatters?.transactionRequest?.format\n    const format = chainFormat || formatTransactionRequest\n\n    const request = format({\n      // Pick out extra data that might exist on the chain's transaction request type.\n      ...extract(rest, { format: chainFormat }),\n      from: account?.address,\n      accessList,\n      authorizationList,\n      blobs,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerBlobGas,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to: deploylessCall ? undefined : to,\n      value,\n    } as TransactionRequest) as TransactionRequest\n\n    if (\n      batch &&\n      shouldPerformMulticall({ request }) &&\n      !rpcStateOverride &&\n      !rpcBlockOverrides\n    ) {\n      try {\n        return await scheduleMulticall(client, {\n          ...request,\n          blockNumber,\n          blockTag,\n        } as unknown as ScheduleMulticallParameters<chain>)\n      } catch (err) {\n        if (\n          !(err instanceof ClientChainNotConfiguredError) &&\n          !(err instanceof ChainDoesNotSupportContract)\n        )\n          throw err\n      }\n    }\n\n    const params = (() => {\n      const base = [\n        request as ExactPartial<RpcTransactionRequest>,\n        block,\n      ] as const\n      if (rpcStateOverride && rpcBlockOverrides)\n        return [...base, rpcStateOverride, rpcBlockOverrides] as const\n      if (rpcStateOverride) return [...base, rpcStateOverride] as const\n      if (rpcBlockOverrides) return [...base, {}, rpcBlockOverrides] as const\n      return base\n    })()\n\n    const response = await client.request({\n      method: 'eth_call',\n      params,\n    })\n    if (response === '0x') return { data: undefined }\n    return { data: response }\n  } catch (err) {\n    const data = getRevertErrorData(err)\n\n    // Check for CCIP-Read offchain lookup signature.\n    const { offchainLookup, offchainLookupSignature } = await import(\n      '../../utils/ccip.js'\n    )\n    if (\n      client.ccipRead !== false &&\n      data?.slice(0, 10) === offchainLookupSignature &&\n      to\n    )\n      return { data: await offchainLookup(client, { data, to }) }\n\n    // Check for counterfactual deployment error.\n    if (deploylessCall && data?.slice(0, 10) === '0x101bb98d')\n      throw new CounterfactualDeploymentFailedError({ factory })\n\n    throw getCallError(err as ErrorType, {\n      ...args,\n      account,\n      chain: client.chain,\n    })\n  }\n}\n\n// We only want to perform a scheduled multicall if:\n// - The request has calldata,\n// - The request has a target address,\n// - The target address is not already the aggregate3 signature,\n// - The request has no other properties (`nonce`, `gas`, etc cannot be sent with a multicall).\nfunction shouldPerformMulticall({ request }: { request: TransactionRequest }) {\n  const { data, to, ...request_ } = request\n  if (!data) return false\n  if (data.startsWith(aggregate3Signature)) return false\n  if (!to) return false\n  if (\n    Object.values(request_).filter((x) => typeof x !== 'undefined').length > 0\n  )\n    return false\n  return true\n}\n\ntype ScheduleMulticallParameters<chain extends Chain | undefined> = Pick<\n  CallParameters<chain>,\n  'blockNumber' | 'blockTag'\n> & {\n  data: Hex\n  multicallAddress?: Address | undefined\n  to: Address\n}\n\ntype ScheduleMulticallErrorType =\n  | GetChainContractAddressErrorType\n  | NumberToHexErrorType\n  | CreateBatchSchedulerErrorType\n  | EncodeFunctionDataErrorType\n  | DecodeFunctionResultErrorType\n  | RawContractErrorType\n  | ErrorType\n\nasync function scheduleMulticall<chain extends Chain | undefined>(\n  client: Client<Transport>,\n  args: ScheduleMulticallParameters<chain>,\n) {\n  const {\n    batchSize = 1024,\n    deployless = false,\n    wait = 0,\n  } = typeof client.batch?.multicall === 'object' ? client.batch.multicall : {}\n  const {\n    blockNumber,\n    blockTag = client.experimental_blockTag ?? 'latest',\n    data,\n    to,\n  } = args\n\n  const multicallAddress = (() => {\n    if (deployless) return null\n    if (args.multicallAddress) return args.multicallAddress\n    if (client.chain) {\n      return getChainContractAddress({\n        blockNumber,\n        chain: client.chain,\n        contract: 'multicall3',\n      })\n    }\n    throw new ClientChainNotConfiguredError()\n  })()\n\n  const blockNumberHex =\n    typeof blockNumber === 'bigint' ? numberToHex(blockNumber) : undefined\n  const block = blockNumberHex || blockTag\n\n  const { schedule } = createBatchScheduler({\n    id: `${client.uid}.${block}`,\n    wait,\n    shouldSplitBatch(args) {\n      const size = args.reduce((size, { data }) => size + (data.length - 2), 0)\n      return size > batchSize * 2\n    },\n    fn: async (\n      requests: {\n        data: Hex\n        to: Address\n      }[],\n    ) => {\n      const calls = requests.map((request) => ({\n        allowFailure: true,\n        callData: request.data,\n        target: request.to,\n      }))\n\n      const calldata = encodeFunctionData({\n        abi: multicall3Abi,\n        args: [calls],\n        functionName: 'aggregate3',\n      })\n\n      const data = await client.request({\n        method: 'eth_call',\n        params: [\n          {\n            ...(multicallAddress === null\n              ? {\n                  data: toDeploylessCallViaBytecodeData({\n                    code: multicall3Bytecode,\n                    data: calldata,\n                  }),\n                }\n              : { to: multicallAddress, data: calldata }),\n          },\n          block,\n        ],\n      })\n\n      return decodeFunctionResult({\n        abi: multicall3Abi,\n        args: [calls],\n        functionName: 'aggregate3',\n        data: data || '0x',\n      })\n    },\n  })\n\n  const [{ returnData, success }] = await schedule({ data, to })\n\n  if (!success) throw new RawContractError({ data: returnData })\n  if (returnData === '0x') return { data: undefined }\n  return { data: returnData }\n}\n\ntype ToDeploylessCallViaBytecodeDataErrorType =\n  | EncodeDeployDataErrorType\n  | ErrorType\n\nfunction toDeploylessCallViaBytecodeData(parameters: { code: Hex; data: Hex }) {\n  const { code, data } = parameters\n  return encodeDeployData({\n    abi: parseAbi(['constructor(bytes, bytes)']),\n    bytecode: deploylessCallViaBytecodeBytecode,\n    args: [code, data],\n  })\n}\n\ntype ToDeploylessCallViaFactoryDataErrorType =\n  | EncodeDeployDataErrorType\n  | ErrorType\n\nfunction toDeploylessCallViaFactoryData(parameters: {\n  data: Hex\n  factory: Address\n  factoryData: Hex\n  to: Address\n}) {\n  const { data, factory, factoryData, to } = parameters\n  return encodeDeployData({\n    abi: parseAbi(['constructor(address, bytes, address, bytes)']),\n    bytecode: deploylessCallViaFactoryBytecode,\n    args: [to, data, factory, factoryData],\n  })\n}\n\n/** @internal */\nexport type GetRevertErrorDataErrorType = ErrorType\n\n/** @internal */\nexport function getRevertErrorData(err: unknown) {\n  if (!(err instanceof BaseError)) return undefined\n  const error = err.walk() as RawContractError\n  return typeof error?.data === 'object' ? error.data?.data : error.data\n}\n","import { getVersion } from './internal/errors.js'\n\nexport type GlobalErrorType<name extends string = 'Error'> = Error & {\n  name: name\n}\n\n/**\n * Base error class inherited by all errors thrown by ox.\n *\n * @example\n * ```ts\n * import { Errors } from 'ox'\n * throw new Errors.BaseError('An error occurred')\n * ```\n */\nexport class BaseError<\n  cause extends Error | undefined = undefined,\n> extends Error {\n  details: string\n  docs?: string | undefined\n  docsPath?: string | undefined\n  shortMessage: string\n\n  override cause: cause\n  override name = 'BaseError'\n\n  version = `ox@${getVersion()}`\n\n  constructor(shortMessage: string, options: BaseError.Options<cause> = {}) {\n    const details = (() => {\n      if (options.cause instanceof BaseError) {\n        if (options.cause.details) return options.cause.details\n        if (options.cause.shortMessage) return options.cause.shortMessage\n      }\n      if (\n        options.cause &&\n        'details' in options.cause &&\n        typeof options.cause.details === 'string'\n      )\n        return options.cause.details\n      if (options.cause?.message) return options.cause.message\n      return options.details!\n    })()\n    const docsPath = (() => {\n      if (options.cause instanceof BaseError)\n        return options.cause.docsPath || options.docsPath\n      return options.docsPath\n    })()\n\n    const docsBaseUrl = 'https://oxlib.sh'\n    const docs = `${docsBaseUrl}${docsPath ?? ''}`\n\n    const message = [\n      shortMessage || 'An error occurred.',\n      ...(options.metaMessages ? ['', ...options.metaMessages] : []),\n      ...(details || docsPath\n        ? [\n            '',\n            details ? `Details: ${details}` : undefined,\n            docsPath ? `See: ${docs}` : undefined,\n          ]\n        : []),\n    ]\n      .filter((x) => typeof x === 'string')\n      .join('\\n')\n\n    super(message, options.cause ? { cause: options.cause } : undefined)\n\n    this.cause = options.cause as any\n    this.details = details\n    this.docs = docs\n    this.docsPath = docsPath\n    this.shortMessage = shortMessage\n  }\n\n  walk(): Error\n  walk(fn: (err: unknown) => boolean): Error | null\n  walk(fn?: any): any {\n    return walk(this, fn)\n  }\n}\n\nexport declare namespace BaseError {\n  type Options<cause extends Error | undefined = Error | undefined> = {\n    cause?: cause | undefined\n    details?: string | undefined\n    docsPath?: string | undefined\n    metaMessages?: (string | undefined)[] | undefined\n  }\n}\n\n/** @internal */\nfunction walk(\n  err: unknown,\n  fn?: ((err: unknown) => boolean) | undefined,\n): unknown {\n  if (fn?.(err)) return err\n  if (err && typeof err === 'object' && 'cause' in err && err.cause)\n    return walk(err.cause, fn)\n  return fn ? null : err\n}\n","/** @internal */\nexport const version = '0.1.1'\n","import { keccak_256 } from '@noble/hashes/sha3'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type IsHexErrorType, isHex } from '../data/isHex.js'\nimport { type ToBytesErrorType, toBytes } from '../encoding/toBytes.js'\nimport { type ToHexErrorType, toHex } from '../encoding/toHex.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type Keccak256Hash<to extends To> =\n  | (to extends 'bytes' ? ByteArray : never)\n  | (to extends 'hex' ? Hex : never)\n\nexport type Keccak256ErrorType =\n  | IsHexErrorType\n  | ToBytesErrorType\n  | ToHexErrorType\n  | ErrorType\n\nexport function keccak256<to extends To = 'hex'>(\n  value: Hex | ByteArray,\n  to_?: to | undefined,\n): Keccak256Hash<to> {\n  const to = to_ || 'hex'\n  const bytes = keccak_256(\n    isHex(value, { strict: false }) ? toBytes(value) : value,\n  )\n  if (to === 'bytes') return bytes as Keccak256Hash<to>\n  return toHex(bytes) as Keccak256Hash<to>\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","import { BaseError } from '../../errors.js'\n\nexport class InvalidParenthesisError extends BaseError {\n  override name = 'InvalidParenthesisError'\n\n  constructor({ current, depth }: { current: string; depth: number }) {\n    super('Unbalanced parentheses.', {\n      metaMessages: [\n        `\"${current.trim()}\" has too many ${\n          depth > 0 ? 'opening' : 'closing'\n        } parentheses.`,\n      ],\n      details: `Depth \"${depth}\"`,\n    })\n  }\n}\n","import type { AbiItemType, AbiParameter } from '../../abi.js'\nimport type { StructLookup } from '../types/structs.js'\n\n/**\n * Gets {@link parameterCache} cache key namespaced by {@link type}. This prevents parameters from being accessible to types that don't allow them (e.g. `string indexed foo` not allowed outside of `type: 'event'`).\n * @param param ABI parameter string\n * @param type ABI parameter type\n * @returns Cache key for {@link parameterCache}\n */\nexport function getParameterCacheKey(\n  param: string,\n  type?: AbiItemType | 'struct',\n  structs?: StructLookup,\n) {\n  let structKey = ''\n  if (structs)\n    for (const struct of Object.entries(structs)) {\n      if (!struct) continue\n      let propertyKey = ''\n      for (const property of struct[1]) {\n        propertyKey += `[${property.type}${property.name ? `:${property.name}` : ''}]`\n      }\n      structKey += `(${struct[0]}{${propertyKey}})`\n    }\n  if (type) return `${type}:${param}${structKey}`\n  return param\n}\n\n/**\n * Basic cache seeded with common ABI parameter strings.\n *\n * **Note: When seeding more parameters, make sure you benchmark performance. The current number is the ideal balance between performance and having an already existing cache.**\n */\nexport const parameterCache = new Map<\n  string,\n  AbiParameter & { indexed?: boolean }\n>([\n  // Unnamed\n  ['address', { type: 'address' }],\n  ['bool', { type: 'bool' }],\n  ['bytes', { type: 'bytes' }],\n  ['bytes32', { type: 'bytes32' }],\n  ['int', { type: 'int256' }],\n  ['int256', { type: 'int256' }],\n  ['string', { type: 'string' }],\n  ['uint', { type: 'uint256' }],\n  ['uint8', { type: 'uint8' }],\n  ['uint16', { type: 'uint16' }],\n  ['uint24', { type: 'uint24' }],\n  ['uint32', { type: 'uint32' }],\n  ['uint64', { type: 'uint64' }],\n  ['uint96', { type: 'uint96' }],\n  ['uint112', { type: 'uint112' }],\n  ['uint160', { type: 'uint160' }],\n  ['uint192', { type: 'uint192' }],\n  ['uint256', { type: 'uint256' }],\n\n  // Named\n  ['address owner', { type: 'address', name: 'owner' }],\n  ['address to', { type: 'address', name: 'to' }],\n  ['bool approved', { type: 'bool', name: 'approved' }],\n  ['bytes _data', { type: 'bytes', name: '_data' }],\n  ['bytes data', { type: 'bytes', name: 'data' }],\n  ['bytes signature', { type: 'bytes', name: 'signature' }],\n  ['bytes32 hash', { type: 'bytes32', name: 'hash' }],\n  ['bytes32 r', { type: 'bytes32', name: 'r' }],\n  ['bytes32 root', { type: 'bytes32', name: 'root' }],\n  ['bytes32 s', { type: 'bytes32', name: 's' }],\n  ['string name', { type: 'string', name: 'name' }],\n  ['string symbol', { type: 'string', name: 'symbol' }],\n  ['string tokenURI', { type: 'string', name: 'tokenURI' }],\n  ['uint tokenId', { type: 'uint256', name: 'tokenId' }],\n  ['uint8 v', { type: 'uint8', name: 'v' }],\n  ['uint256 balance', { type: 'uint256', name: 'balance' }],\n  ['uint256 tokenId', { type: 'uint256', name: 'tokenId' }],\n  ['uint256 value', { type: 'uint256', name: 'value' }],\n\n  // Indexed\n  [\n    'event:address indexed from',\n    { type: 'address', name: 'from', indexed: true },\n  ],\n  ['event:address indexed to', { type: 'address', name: 'to', indexed: true }],\n  [\n    'event:uint indexed tokenId',\n    { type: 'uint256', name: 'tokenId', indexed: true },\n  ],\n  [\n    'event:uint256 indexed tokenId',\n    { type: 'uint256', name: 'tokenId', indexed: true },\n  ],\n])\n","import type {\n  AbiItemType,\n  AbiType,\n  SolidityArray,\n  SolidityBytes,\n  SolidityString,\n  SolidityTuple,\n} from '../../abi.js'\nimport {\n  bytesRegex,\n  execTyped,\n  integerRegex,\n  isTupleRegex,\n} from '../../regex.js'\nimport { UnknownSolidityTypeError } from '../errors/abiItem.js'\nimport {\n  InvalidFunctionModifierError,\n  InvalidModifierError,\n  InvalidParameterError,\n  SolidityProtectedKeywordError,\n} from '../errors/abiParameter.js'\nimport {\n  InvalidSignatureError,\n  UnknownSignatureError,\n} from '../errors/signature.js'\nimport { InvalidParenthesisError } from '../errors/splitParameters.js'\nimport type { FunctionModifier, Modifier } from '../types/signatures.js'\nimport type { StructLookup } from '../types/structs.js'\nimport { getParameterCacheKey, parameterCache } from './cache.js'\nimport {\n  eventModifiers,\n  execConstructorSignature,\n  execErrorSignature,\n  execEventSignature,\n  execFallbackSignature,\n  execFunctionSignature,\n  functionModifiers,\n  isConstructorSignature,\n  isErrorSignature,\n  isEventSignature,\n  isFallbackSignature,\n  isFunctionSignature,\n  isReceiveSignature,\n} from './signatures.js'\n\nexport function parseSignature(signature: string, structs: StructLookup = {}) {\n  if (isFunctionSignature(signature))\n    return parseFunctionSignature(signature, structs)\n\n  if (isEventSignature(signature))\n    return parseEventSignature(signature, structs)\n\n  if (isErrorSignature(signature))\n    return parseErrorSignature(signature, structs)\n\n  if (isConstructorSignature(signature))\n    return parseConstructorSignature(signature, structs)\n\n  if (isFallbackSignature(signature)) return parseFallbackSignature(signature)\n\n  if (isReceiveSignature(signature))\n    return {\n      type: 'receive',\n      stateMutability: 'payable',\n    }\n\n  throw new UnknownSignatureError({ signature })\n}\n\nexport function parseFunctionSignature(\n  signature: string,\n  structs: StructLookup = {},\n) {\n  const match = execFunctionSignature(signature)\n  if (!match) throw new InvalidSignatureError({ signature, type: 'function' })\n\n  const inputParams = splitParameters(match.parameters)\n  const inputs = []\n  const inputLength = inputParams.length\n  for (let i = 0; i < inputLength; i++) {\n    inputs.push(\n      parseAbiParameter(inputParams[i]!, {\n        modifiers: functionModifiers,\n        structs,\n        type: 'function',\n      }),\n    )\n  }\n\n  const outputs = []\n  if (match.returns) {\n    const outputParams = splitParameters(match.returns)\n    const outputLength = outputParams.length\n    for (let i = 0; i < outputLength; i++) {\n      outputs.push(\n        parseAbiParameter(outputParams[i]!, {\n          modifiers: functionModifiers,\n          structs,\n          type: 'function',\n        }),\n      )\n    }\n  }\n\n  return {\n    name: match.name,\n    type: 'function',\n    stateMutability: match.stateMutability ?? 'nonpayable',\n    inputs,\n    outputs,\n  }\n}\n\nexport function parseEventSignature(\n  signature: string,\n  structs: StructLookup = {},\n) {\n  const match = execEventSignature(signature)\n  if (!match) throw new InvalidSignatureError({ signature, type: 'event' })\n\n  const params = splitParameters(match.parameters)\n  const abiParameters = []\n  const length = params.length\n  for (let i = 0; i < length; i++)\n    abiParameters.push(\n      parseAbiParameter(params[i]!, {\n        modifiers: eventModifiers,\n        structs,\n        type: 'event',\n      }),\n    )\n  return { name: match.name, type: 'event', inputs: abiParameters }\n}\n\nexport function parseErrorSignature(\n  signature: string,\n  structs: StructLookup = {},\n) {\n  const match = execErrorSignature(signature)\n  if (!match) throw new InvalidSignatureError({ signature, type: 'error' })\n\n  const params = splitParameters(match.parameters)\n  const abiParameters = []\n  const length = params.length\n  for (let i = 0; i < length; i++)\n    abiParameters.push(\n      parseAbiParameter(params[i]!, { structs, type: 'error' }),\n    )\n  return { name: match.name, type: 'error', inputs: abiParameters }\n}\n\nexport function parseConstructorSignature(\n  signature: string,\n  structs: StructLookup = {},\n) {\n  const match = execConstructorSignature(signature)\n  if (!match)\n    throw new InvalidSignatureError({ signature, type: 'constructor' })\n\n  const params = splitParameters(match.parameters)\n  const abiParameters = []\n  const length = params.length\n  for (let i = 0; i < length; i++)\n    abiParameters.push(\n      parseAbiParameter(params[i]!, { structs, type: 'constructor' }),\n    )\n  return {\n    type: 'constructor',\n    stateMutability: match.stateMutability ?? 'nonpayable',\n    inputs: abiParameters,\n  }\n}\n\nexport function parseFallbackSignature(signature: string) {\n  const match = execFallbackSignature(signature)\n  if (!match) throw new InvalidSignatureError({ signature, type: 'fallback' })\n\n  return {\n    type: 'fallback',\n    stateMutability: match.stateMutability ?? 'nonpayable',\n  }\n}\n\nconst abiParameterWithoutTupleRegex =\n  /^(?<type>[a-zA-Z$_][a-zA-Z0-9$_]*(?:\\spayable)?)(?<array>(?:\\[\\d*?\\])+?)?(?:\\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\\s(?<name>[a-zA-Z$_][a-zA-Z0-9$_]*))?$/\nconst abiParameterWithTupleRegex =\n  /^\\((?<type>.+?)\\)(?<array>(?:\\[\\d*?\\])+?)?(?:\\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\\s(?<name>[a-zA-Z$_][a-zA-Z0-9$_]*))?$/\nconst dynamicIntegerRegex = /^u?int$/\n\ntype ParseOptions = {\n  modifiers?: Set<Modifier>\n  structs?: StructLookup\n  type?: AbiItemType | 'struct'\n}\n\nexport function parseAbiParameter(param: string, options?: ParseOptions) {\n  // optional namespace cache by `type`\n  const parameterCacheKey = getParameterCacheKey(\n    param,\n    options?.type,\n    options?.structs,\n  )\n  if (parameterCache.has(parameterCacheKey))\n    return parameterCache.get(parameterCacheKey)!\n\n  const isTuple = isTupleRegex.test(param)\n  const match = execTyped<{\n    array?: string\n    modifier?: Modifier\n    name?: string\n    type: string\n  }>(\n    isTuple ? abiParameterWithTupleRegex : abiParameterWithoutTupleRegex,\n    param,\n  )\n  if (!match) throw new InvalidParameterError({ param })\n\n  if (match.name && isSolidityKeyword(match.name))\n    throw new SolidityProtectedKeywordError({ param, name: match.name })\n\n  const name = match.name ? { name: match.name } : {}\n  const indexed = match.modifier === 'indexed' ? { indexed: true } : {}\n  const structs = options?.structs ?? {}\n  let type: string\n  let components = {}\n  if (isTuple) {\n    type = 'tuple'\n    const params = splitParameters(match.type)\n    const components_ = []\n    const length = params.length\n    for (let i = 0; i < length; i++) {\n      // remove `modifiers` from `options` to prevent from being added to tuple components\n      components_.push(parseAbiParameter(params[i]!, { structs }))\n    }\n    components = { components: components_ }\n  } else if (match.type in structs) {\n    type = 'tuple'\n    components = { components: structs[match.type] }\n  } else if (dynamicIntegerRegex.test(match.type)) {\n    type = `${match.type}256`\n  } else if (match.type === 'address payable') {\n    type = 'address'\n  } else {\n    type = match.type\n    if (!(options?.type === 'struct') && !isSolidityType(type))\n      throw new UnknownSolidityTypeError({ type })\n  }\n\n  if (match.modifier) {\n    // Check if modifier exists, but is not allowed (e.g. `indexed` in `functionModifiers`)\n    if (!options?.modifiers?.has?.(match.modifier))\n      throw new InvalidModifierError({\n        param,\n        type: options?.type,\n        modifier: match.modifier,\n      })\n\n    // Check if resolved `type` is valid if there is a function modifier\n    if (\n      functionModifiers.has(match.modifier as FunctionModifier) &&\n      !isValidDataLocation(type, !!match.array)\n    )\n      throw new InvalidFunctionModifierError({\n        param,\n        type: options?.type,\n        modifier: match.modifier,\n      })\n  }\n\n  const abiParameter = {\n    type: `${type}${match.array ?? ''}`,\n    ...name,\n    ...indexed,\n    ...components,\n  }\n  parameterCache.set(parameterCacheKey, abiParameter)\n  return abiParameter\n}\n\n// s/o latika for this\nexport function splitParameters(\n  params: string,\n  result: string[] = [],\n  current = '',\n  depth = 0,\n): readonly string[] {\n  const length = params.trim().length\n  // biome-ignore lint/correctness/noUnreachable: recursive\n  for (let i = 0; i < length; i++) {\n    const char = params[i]\n    const tail = params.slice(i + 1)\n    switch (char) {\n      case ',':\n        return depth === 0\n          ? splitParameters(tail, [...result, current.trim()])\n          : splitParameters(tail, result, `${current}${char}`, depth)\n      case '(':\n        return splitParameters(tail, result, `${current}${char}`, depth + 1)\n      case ')':\n        return splitParameters(tail, result, `${current}${char}`, depth - 1)\n      default:\n        return splitParameters(tail, result, `${current}${char}`, depth)\n    }\n  }\n\n  if (current === '') return result\n  if (depth !== 0) throw new InvalidParenthesisError({ current, depth })\n\n  result.push(current.trim())\n  return result\n}\n\nexport function isSolidityType(\n  type: string,\n): type is Exclude<AbiType, SolidityTuple | SolidityArray> {\n  return (\n    type === 'address' ||\n    type === 'bool' ||\n    type === 'function' ||\n    type === 'string' ||\n    bytesRegex.test(type) ||\n    integerRegex.test(type)\n  )\n}\n\nconst protectedKeywordsRegex =\n  /^(?:after|alias|anonymous|apply|auto|byte|calldata|case|catch|constant|copyof|default|defined|error|event|external|false|final|function|immutable|implements|in|indexed|inline|internal|let|mapping|match|memory|mutable|null|of|override|partial|private|promise|public|pure|reference|relocatable|return|returns|sizeof|static|storage|struct|super|supports|switch|this|true|try|typedef|typeof|var|view|virtual)$/\n\n/** @internal */\nexport function isSolidityKeyword(name: string) {\n  return (\n    name === 'address' ||\n    name === 'bool' ||\n    name === 'function' ||\n    name === 'string' ||\n    name === 'tuple' ||\n    bytesRegex.test(name) ||\n    integerRegex.test(name) ||\n    protectedKeywordsRegex.test(name)\n  )\n}\n\n/** @internal */\nexport function isValidDataLocation(\n  type: string,\n  isArray: boolean,\n): type is Exclude<\n  AbiType,\n  SolidityString | Extract<SolidityBytes, 'bytes'> | SolidityArray\n> {\n  return isArray || type === 'bytes' || type === 'string' || type === 'tuple'\n}\n","import {\n  SliceOffsetOutOfBoundsError,\n  type SliceOffsetOutOfBoundsErrorType,\n} from '../../errors/data.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\nimport { type IsHexErrorType, isHex } from './isHex.js'\nimport { type SizeErrorType, size } from './size.js'\n\nexport type SliceReturnType<value extends ByteArray | Hex> = value extends Hex\n  ? Hex\n  : ByteArray\n\nexport type SliceErrorType =\n  | IsHexErrorType\n  | SliceBytesErrorType\n  | SliceHexErrorType\n  | ErrorType\n\n/**\n * @description Returns a section of the hex or byte array given a start/end bytes offset.\n *\n * @param value The hex or byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function slice<value extends ByteArray | Hex>(\n  value: value,\n  start?: number | undefined,\n  end?: number | undefined,\n  { strict }: { strict?: boolean | undefined } = {},\n): SliceReturnType<value> {\n  if (isHex(value, { strict: false }))\n    return sliceHex(value as Hex, start, end, {\n      strict,\n    }) as SliceReturnType<value>\n  return sliceBytes(value as ByteArray, start, end, {\n    strict,\n  }) as SliceReturnType<value>\n}\n\nexport type AssertStartOffsetErrorType =\n  | SliceOffsetOutOfBoundsErrorType\n  | SizeErrorType\n  | ErrorType\n\nfunction assertStartOffset(value: Hex | ByteArray, start?: number | undefined) {\n  if (typeof start === 'number' && start > 0 && start > size(value) - 1)\n    throw new SliceOffsetOutOfBoundsError({\n      offset: start,\n      position: 'start',\n      size: size(value),\n    })\n}\n\nexport type AssertEndOffsetErrorType =\n  | SliceOffsetOutOfBoundsErrorType\n  | SizeErrorType\n  | ErrorType\n\nfunction assertEndOffset(\n  value: Hex | ByteArray,\n  start?: number | undefined,\n  end?: number | undefined,\n) {\n  if (\n    typeof start === 'number' &&\n    typeof end === 'number' &&\n    size(value) !== end - start\n  ) {\n    throw new SliceOffsetOutOfBoundsError({\n      offset: end,\n      position: 'end',\n      size: size(value),\n    })\n  }\n}\n\nexport type SliceBytesErrorType =\n  | AssertStartOffsetErrorType\n  | AssertEndOffsetErrorType\n  | ErrorType\n\n/**\n * @description Returns a section of the byte array given a start/end bytes offset.\n *\n * @param value The byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function sliceBytes(\n  value_: ByteArray,\n  start?: number | undefined,\n  end?: number | undefined,\n  { strict }: { strict?: boolean | undefined } = {},\n): ByteArray {\n  assertStartOffset(value_, start)\n  const value = value_.slice(start, end)\n  if (strict) assertEndOffset(value, start, end)\n  return value\n}\n\nexport type SliceHexErrorType =\n  | AssertStartOffsetErrorType\n  | AssertEndOffsetErrorType\n  | ErrorType\n\n/**\n * @description Returns a section of the hex value given a start/end bytes offset.\n *\n * @param value The hex value to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function sliceHex(\n  value_: Hex,\n  start?: number | undefined,\n  end?: number | undefined,\n  { strict }: { strict?: boolean | undefined } = {},\n): Hex {\n  assertStartOffset(value_, start)\n  const value = `0x${value_\n    .replace('0x', '')\n    .slice((start ?? 0) * 2, (end ?? value_.length) * 2)}` as const\n  if (strict) assertEndOffset(value, start, end)\n  return value\n}\n","import type { Chain } from '../types/chain.js'\n\nimport { BaseError } from './base.js'\n\nexport type ChainDoesNotSupportContractErrorType =\n  ChainDoesNotSupportContract & {\n    name: 'ChainDoesNotSupportContract'\n  }\nexport class ChainDoesNotSupportContract extends BaseError {\n  constructor({\n    blockNumber,\n    chain,\n    contract,\n  }: {\n    blockNumber?: bigint | undefined\n    chain: Chain\n    contract: { name: string; blockCreated?: number | undefined }\n  }) {\n    super(\n      `Chain \"${chain.name}\" does not support contract \"${contract.name}\".`,\n      {\n        metaMessages: [\n          'This could be due to any of the following:',\n          ...(blockNumber &&\n          contract.blockCreated &&\n          contract.blockCreated > blockNumber\n            ? [\n                `- The contract \"${contract.name}\" was not deployed until block ${contract.blockCreated} (current block ${blockNumber}).`,\n              ]\n            : [\n                `- The chain does not have the contract \"${contract.name}\" configured.`,\n              ]),\n        ],\n        name: 'ChainDoesNotSupportContract',\n      },\n    )\n  }\n}\n\nexport type ChainMismatchErrorType = ChainMismatchError & {\n  name: 'ChainMismatchError'\n}\nexport class ChainMismatchError extends BaseError {\n  constructor({\n    chain,\n    currentChainId,\n  }: {\n    chain: Chain\n    currentChainId: number\n  }) {\n    super(\n      `The current chain of the wallet (id: ${currentChainId}) does not match the target chain for the transaction (id: ${chain.id} – ${chain.name}).`,\n      {\n        metaMessages: [\n          `Current Chain ID:  ${currentChainId}`,\n          `Expected Chain ID: ${chain.id} – ${chain.name}`,\n        ],\n        name: 'ChainMismatchError',\n      },\n    )\n  }\n}\n\nexport type ChainNotFoundErrorType = ChainNotFoundError & {\n  name: 'ChainNotFoundError'\n}\nexport class ChainNotFoundError extends BaseError {\n  constructor() {\n    super(\n      [\n        'No chain was provided to the request.',\n        'Please provide a chain with the `chain` argument on the Action, or by supplying a `chain` to WalletClient.',\n      ].join('\\n'),\n      {\n        name: 'ChainNotFoundError',\n      },\n    )\n  }\n}\n\nexport type ClientChainNotConfiguredErrorType =\n  ClientChainNotConfiguredError & {\n    name: 'ClientChainNotConfiguredError'\n  }\nexport class ClientChainNotConfiguredError extends BaseError {\n  constructor() {\n    super('No chain was provided to the Client.', {\n      name: 'ClientChainNotConfiguredError',\n    })\n  }\n}\n\nexport type InvalidChainIdErrorType = InvalidChainIdError & {\n  name: 'InvalidChainIdError'\n}\nexport class InvalidChainIdError extends BaseError {\n  constructor({ chainId }: { chainId?: number | undefined }) {\n    super(\n      typeof chainId === 'number'\n        ? `Chain ID \"${chainId}\" is invalid.`\n        : 'Chain ID is invalid.',\n      { name: 'InvalidChainIdError' },\n    )\n  }\n}\n","import type { CallParameters } from '../../actions/public/call.js'\nimport type { BaseError } from '../../errors/base.js'\nimport {\n  CallExecutionError,\n  type CallExecutionErrorType,\n} from '../../errors/contract.js'\nimport { UnknownNodeError } from '../../errors/node.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\n\nimport {\n  type GetNodeErrorParameters,\n  type GetNodeErrorReturnType,\n  getNodeError,\n} from './getNodeError.js'\n\nexport type GetCallErrorReturnType<cause = ErrorType> = Omit<\n  CallExecutionErrorType,\n  'cause'\n> & {\n  cause: cause | GetNodeErrorReturnType\n}\n\nexport function getCallError<err extends ErrorType<string>>(\n  err: err,\n  {\n    docsPath,\n    ...args\n  }: CallParameters & {\n    chain?: Chain | undefined\n    docsPath?: string | undefined\n  },\n): GetCallErrorReturnType<err> {\n  const cause = (() => {\n    const cause = getNodeError(\n      err as {} as BaseError,\n      args as GetNodeErrorParameters,\n    )\n    if (cause instanceof UnknownNodeError) return err as {} as BaseError\n    return cause\n  })()\n  return new CallExecutionError(cause, {\n    docsPath,\n    ...args,\n  }) as GetCallErrorReturnType<err>\n}\n","export const deploylessCallViaBytecodeBytecode =\n  '0x608060405234801561001057600080fd5b5060405161018e38038061018e83398101604081905261002f91610124565b6000808351602085016000f59050803b61004857600080fd5b6000808351602085016000855af16040513d6000823e81610067573d81fd5b3d81f35b634e487b7160e01b600052604160045260246000fd5b600082601f83011261009257600080fd5b81516001600160401b038111156100ab576100ab61006b565b604051601f8201601f19908116603f011681016001600160401b03811182821017156100d9576100d961006b565b6040528181528382016020018510156100f157600080fd5b60005b82811015610110576020818601810151838301820152016100f4565b506000918101602001919091529392505050565b6000806040838503121561013757600080fd5b82516001600160401b0381111561014d57600080fd5b61015985828601610081565b602085015190935090506001600160401b0381111561017757600080fd5b61018385828601610081565b915050925092905056fe'\n\nexport const deploylessCallViaFactoryBytecode =\n  '0x608060405234801561001057600080fd5b506040516102c03803806102c083398101604081905261002f916101e6565b836001600160a01b03163b6000036100e457600080836001600160a01b03168360405161005c9190610270565b6000604051808303816000865af19150503d8060008114610099576040519150601f19603f3d011682016040523d82523d6000602084013e61009e565b606091505b50915091508115806100b857506001600160a01b0386163b155b156100e1578060405163101bb98d60e01b81526004016100d8919061028c565b60405180910390fd5b50505b6000808451602086016000885af16040513d6000823e81610103573d81fd5b3d81f35b80516001600160a01b038116811461011e57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561015457818101518382015260200161013c565b50506000910152565b600082601f83011261016e57600080fd5b81516001600160401b0381111561018757610187610123565b604051601f8201601f19908116603f011681016001600160401b03811182821017156101b5576101b5610123565b6040528181528382016020018510156101cd57600080fd5b6101de826020830160208701610139565b949350505050565b600080600080608085870312156101fc57600080fd5b61020585610107565b60208601519094506001600160401b0381111561022157600080fd5b61022d8782880161015d565b93505061023c60408601610107565b60608601519092506001600160401b0381111561025857600080fd5b6102648782880161015d565b91505092959194509250565b60008251610282818460208701610139565b9190910192915050565b60208152600082518060208401526102ab816040850160208701610139565b601f01601f1916919091016040019291505056fe'\n\nexport const erc6492SignatureValidatorByteCode =\n  '0x608060405234801561001057600080fd5b5060405161069438038061069483398101604081905261002f9161051e565b600061003c848484610048565b9050806000526001601ff35b60007f64926492649264926492649264926492649264926492649264926492649264926100748361040c565b036101e7576000606080848060200190518101906100929190610577565b60405192955090935091506000906001600160a01b038516906100b69085906105dd565b6000604051808303816000865af19150503d80600081146100f3576040519150601f19603f3d011682016040523d82523d6000602084013e6100f8565b606091505b50509050876001600160a01b03163b60000361016057806101605760405162461bcd60e51b815260206004820152601e60248201527f5369676e617475726556616c696461746f723a206465706c6f796d656e74000060448201526064015b60405180910390fd5b604051630b135d3f60e11b808252906001600160a01b038a1690631626ba7e90610190908b9087906004016105f9565b602060405180830381865afa1580156101ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d19190610633565b6001600160e01b03191614945050505050610405565b6001600160a01b0384163b1561027a57604051630b135d3f60e11b808252906001600160a01b03861690631626ba7e9061022790879087906004016105f9565b602060405180830381865afa158015610244573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102689190610633565b6001600160e01b031916149050610405565b81516041146102df5760405162461bcd60e51b815260206004820152603a602482015260008051602061067483398151915260448201527f3a20696e76616c6964207369676e6174757265206c656e6774680000000000006064820152608401610157565b6102e7610425565b5060208201516040808401518451859392600091859190811061030c5761030c61065d565b016020015160f81c9050601b811480159061032b57508060ff16601c14155b1561038c5760405162461bcd60e51b815260206004820152603b602482015260008051602061067483398151915260448201527f3a20696e76616c6964207369676e617475726520762076616c756500000000006064820152608401610157565b60408051600081526020810180835289905260ff83169181019190915260608101849052608081018390526001600160a01b0389169060019060a0016020604051602081039080840390855afa1580156103ea573d6000803e3d6000fd5b505050602060405103516001600160a01b0316149450505050505b9392505050565b600060208251101561041d57600080fd5b508051015190565b60405180606001604052806003906020820280368337509192915050565b6001600160a01b038116811461045857600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561048c578181015183820152602001610474565b50506000910152565b600082601f8301126104a657600080fd5b81516001600160401b038111156104bf576104bf61045b565b604051601f8201601f19908116603f011681016001600160401b03811182821017156104ed576104ed61045b565b60405281815283820160200185101561050557600080fd5b610516826020830160208701610471565b949350505050565b60008060006060848603121561053357600080fd5b835161053e81610443565b6020850151604086015191945092506001600160401b0381111561056157600080fd5b61056d86828701610495565b9150509250925092565b60008060006060848603121561058c57600080fd5b835161059781610443565b60208501519093506001600160401b038111156105b357600080fd5b6105bf86828701610495565b604086015190935090506001600160401b0381111561056157600080fd5b600082516105ef818460208701610471565b9190910192915050565b828152604060208201526000825180604084015261061e816060850160208701610471565b601f01601f1916919091016060019392505050565b60006020828403121561064557600080fd5b81516001600160e01b03198116811461040557600080fd5b634e487b7160e01b600052603260045260246000fdfe5369676e617475726556616c696461746f72237265636f7665725369676e6572'\n\nexport const multicall3Bytecode =\n  '0x608060405234801561001057600080fd5b506115b9806100206000396000f3fe6080604052600436106100f35760003560e01c80634d2301cc1161008a578063a8b0574e11610059578063a8b0574e14610325578063bce38bd714610350578063c3077fa914610380578063ee82ac5e146103b2576100f3565b80634d2301cc1461026257806372425d9d1461029f57806382ad56cb146102ca57806386d516e8146102fa576100f3565b80633408e470116100c65780633408e470146101af578063399542e9146101da5780633e64a6961461020c57806342cbb15c14610237576100f3565b80630f28c97d146100f8578063174dea7114610123578063252dba421461015357806327e86d6e14610184575b600080fd5b34801561010457600080fd5b5061010d6103ef565b60405161011a9190610c0a565b60405180910390f35b61013d60048036038101906101389190610c94565b6103f7565b60405161014a9190610e94565b60405180910390f35b61016d60048036038101906101689190610f0c565b610615565b60405161017b92919061101b565b60405180910390f35b34801561019057600080fd5b506101996107ab565b6040516101a69190611064565b60405180910390f35b3480156101bb57600080fd5b506101c46107b7565b6040516101d19190610c0a565b60405180910390f35b6101f460048036038101906101ef91906110ab565b6107bf565b6040516102039392919061110b565b60405180910390f35b34801561021857600080fd5b506102216107e1565b60405161022e9190610c0a565b60405180910390f35b34801561024357600080fd5b5061024c6107e9565b6040516102599190610c0a565b60405180910390f35b34801561026e57600080fd5b50610289600480360381019061028491906111a7565b6107f1565b6040516102969190610c0a565b60405180910390f35b3480156102ab57600080fd5b506102b4610812565b6040516102c19190610c0a565b60405180910390f35b6102e460048036038101906102df919061122a565b61081a565b6040516102f19190610e94565b60405180910390f35b34801561030657600080fd5b5061030f6109e4565b60405161031c9190610c0a565b60405180910390f35b34801561033157600080fd5b5061033a6109ec565b6040516103479190611286565b60405180910390f35b61036a600480360381019061036591906110ab565b6109f4565b6040516103779190610e94565b60405180910390f35b61039a60048036038101906103959190610f0c565b610ba6565b6040516103a99392919061110b565b60405180910390f35b3480156103be57600080fd5b506103d960048036038101906103d491906112cd565b610bca565b6040516103e69190611064565b60405180910390f35b600042905090565b60606000808484905090508067ffffffffffffffff81111561041c5761041b6112fa565b5b60405190808252806020026020018201604052801561045557816020015b610442610bd5565b81526020019060019003908161043a5790505b5092503660005b828110156105c957600085828151811061047957610478611329565b5b6020026020010151905087878381811061049657610495611329565b5b90506020028101906104a89190611367565b925060008360400135905080860195508360000160208101906104cb91906111a7565b73ffffffffffffffffffffffffffffffffffffffff16818580606001906104f2919061138f565b604051610500929190611431565b60006040518083038185875af1925050503d806000811461053d576040519150601f19603f3d011682016040523d82523d6000602084013e610542565b606091505b5083600001846020018290528215151515815250505081516020850135176105bc577f08c379a000000000000000000000000000000000000000000000000000000000600052602060045260176024527f4d756c746963616c6c333a2063616c6c206661696c656400000000000000000060445260846000fd5b826001019250505061045c565b5082341461060c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610603906114a7565b60405180910390fd5b50505092915050565b6000606043915060008484905090508067ffffffffffffffff81111561063e5761063d6112fa565b5b60405190808252806020026020018201604052801561067157816020015b606081526020019060019003908161065c5790505b5091503660005b828110156107a157600087878381811061069557610694611329565b5b90506020028101906106a791906114c7565b92508260000160208101906106bc91906111a7565b73ffffffffffffffffffffffffffffffffffffffff168380602001906106e2919061138f565b6040516106f0929190611431565b6000604051808303816000865af19150503d806000811461072d576040519150601f19603f3d011682016040523d82523d6000602084013e610732565b606091505b5086848151811061074657610745611329565b5b60200260200101819052819250505080610795576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078c9061153b565b60405180910390fd5b81600101915050610678565b5050509250929050565b60006001430340905090565b600046905090565b6000806060439250434091506107d68686866109f4565b905093509350939050565b600048905090565b600043905090565b60008173ffffffffffffffffffffffffffffffffffffffff16319050919050565b600044905090565b606060008383905090508067ffffffffffffffff81111561083e5761083d6112fa565b5b60405190808252806020026020018201604052801561087757816020015b610864610bd5565b81526020019060019003908161085c5790505b5091503660005b828110156109db57600084828151811061089b5761089a611329565b5b602002602001015190508686838181106108b8576108b7611329565b5b90506020028101906108ca919061155b565b92508260000160208101906108df91906111a7565b73ffffffffffffffffffffffffffffffffffffffff16838060400190610905919061138f565b604051610913929190611431565b6000604051808303816000865af19150503d8060008114610950576040519150601f19603f3d011682016040523d82523d6000602084013e610955565b606091505b5082600001836020018290528215151515815250505080516020840135176109cf577f08c379a000000000000000000000000000000000000000000000000000000000600052602060045260176024527f4d756c746963616c6c333a2063616c6c206661696c656400000000000000000060445260646000fd5b8160010191505061087e565b50505092915050565b600045905090565b600041905090565b606060008383905090508067ffffffffffffffff811115610a1857610a176112fa565b5b604051908082528060200260200182016040528015610a5157816020015b610a3e610bd5565b815260200190600190039081610a365790505b5091503660005b82811015610b9c576000848281518110610a7557610a74611329565b5b60200260200101519050868683818110610a9257610a91611329565b5b9050602002810190610aa491906114c7565b9250826000016020810190610ab991906111a7565b73ffffffffffffffffffffffffffffffffffffffff16838060200190610adf919061138f565b604051610aed929190611431565b6000604051808303816000865af19150503d8060008114610b2a576040519150601f19603f3d011682016040523d82523d6000602084013e610b2f565b606091505b508260000183602001829052821515151581525050508715610b90578060000151610b8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b869061153b565b60405180910390fd5b5b81600101915050610a58565b5050509392505050565b6000806060610bb7600186866107bf565b8093508194508295505050509250925092565b600081409050919050565b6040518060400160405280600015158152602001606081525090565b6000819050919050565b610c0481610bf1565b82525050565b6000602082019050610c1f6000830184610bfb565b92915050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f840112610c5457610c53610c2f565b5b8235905067ffffffffffffffff811115610c7157610c70610c34565b5b602083019150836020820283011115610c8d57610c8c610c39565b5b9250929050565b60008060208385031215610cab57610caa610c25565b5b600083013567ffffffffffffffff811115610cc957610cc8610c2a565b5b610cd585828601610c3e565b92509250509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60008115159050919050565b610d2281610d0d565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d62578082015181840152602081019050610d47565b83811115610d71576000848401525b50505050565b6000601f19601f8301169050919050565b6000610d9382610d28565b610d9d8185610d33565b9350610dad818560208601610d44565b610db681610d77565b840191505092915050565b6000604083016000830151610dd96000860182610d19565b5060208301518482036020860152610df18282610d88565b9150508091505092915050565b6000610e0a8383610dc1565b905092915050565b6000602082019050919050565b6000610e2a82610ce1565b610e348185610cec565b935083602082028501610e4685610cfd565b8060005b85811015610e825784840389528151610e638582610dfe565b9450610e6e83610e12565b925060208a01995050600181019050610e4a565b50829750879550505050505092915050565b60006020820190508181036000830152610eae8184610e1f565b905092915050565b60008083601f840112610ecc57610ecb610c2f565b5b8235905067ffffffffffffffff811115610ee957610ee8610c34565b5b602083019150836020820283011115610f0557610f04610c39565b5b9250929050565b60008060208385031215610f2357610f22610c25565b5b600083013567ffffffffffffffff811115610f4157610f40610c2a565b5b610f4d85828601610eb6565b92509250509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000610f918383610d88565b905092915050565b6000602082019050919050565b6000610fb182610f59565b610fbb8185610f64565b935083602082028501610fcd85610f75565b8060005b858110156110095784840389528151610fea8582610f85565b9450610ff583610f99565b925060208a01995050600181019050610fd1565b50829750879550505050505092915050565b60006040820190506110306000830185610bfb565b81810360208301526110428184610fa6565b90509392505050565b6000819050919050565b61105e8161104b565b82525050565b60006020820190506110796000830184611055565b92915050565b61108881610d0d565b811461109357600080fd5b50565b6000813590506110a58161107f565b92915050565b6000806000604084860312156110c4576110c3610c25565b5b60006110d286828701611096565b935050602084013567ffffffffffffffff8111156110f3576110f2610c2a565b5b6110ff86828701610eb6565b92509250509250925092565b60006060820190506111206000830186610bfb565b61112d6020830185611055565b818103604083015261113f8184610e1f565b9050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061117482611149565b9050919050565b61118481611169565b811461118f57600080fd5b50565b6000813590506111a18161117b565b92915050565b6000602082840312156111bd576111bc610c25565b5b60006111cb84828501611192565b91505092915050565b60008083601f8401126111ea576111e9610c2f565b5b8235905067ffffffffffffffff81111561120757611206610c34565b5b60208301915083602082028301111561122357611222610c39565b5b9250929050565b6000806020838503121561124157611240610c25565b5b600083013567ffffffffffffffff81111561125f5761125e610c2a565b5b61126b858286016111d4565b92509250509250929050565b61128081611169565b82525050565b600060208201905061129b6000830184611277565b92915050565b6112aa81610bf1565b81146112b557600080fd5b50565b6000813590506112c7816112a1565b92915050565b6000602082840312156112e3576112e2610c25565b5b60006112f1848285016112b8565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b60008235600160800383360303811261138357611382611358565b5b80830191505092915050565b600080833560016020038436030381126113ac576113ab611358565b5b80840192508235915067ffffffffffffffff8211156113ce576113cd61135d565b5b6020830192506001820236038313156113ea576113e9611362565b5b509250929050565b600081905092915050565b82818337600083830152505050565b600061141883856113f2565b93506114258385846113fd565b82840190509392505050565b600061143e82848661140c565b91508190509392505050565b600082825260208201905092915050565b7f4d756c746963616c6c333a2076616c7565206d69736d61746368000000000000600082015250565b6000611491601a8361144a565b915061149c8261145b565b602082019050919050565b600060208201905081810360008301526114c081611484565b9050919050565b6000823560016040038336030381126114e3576114e2611358565b5b80830191505092915050565b7f4d756c746963616c6c333a2063616c6c206661696c6564000000000000000000600082015250565b600061152560178361144a565b9150611530826114ef565b602082019050919050565b6000602082019050818103600083015261155481611518565b9050919050565b60008235600160600383360303811261157757611576611358565b5b8083019150509291505056fea264697066735822122020c1bc9aacf8e4a6507193432a895a8e77094f45a1395583f07b24e860ef06cd64736f6c634300080c0033'\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","import type { AbiParameter, AbiParametersToPrimitiveTypes } from 'abitype'\nimport {\n  AbiDecodingDataSizeTooSmallError,\n  AbiDecodingZeroDataError,\n  InvalidAbiDecodingTypeError,\n  type InvalidAbiDecodingTypeErrorType,\n} from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport {\n  type ChecksumAddressErrorType,\n  checksumAddress,\n} from '../address/getAddress.js'\nimport {\n  type CreateCursorErrorType,\n  type Cursor,\n  createCursor,\n} from '../cursor.js'\nimport { type SizeErrorType, size } from '../data/size.js'\nimport { type SliceBytesErrorType, sliceBytes } from '../data/slice.js'\nimport { type TrimErrorType, trim } from '../data/trim.js'\nimport {\n  type BytesToBigIntErrorType,\n  type BytesToBoolErrorType,\n  type BytesToNumberErrorType,\n  type BytesToStringErrorType,\n  bytesToBigInt,\n  bytesToBool,\n  bytesToNumber,\n  bytesToString,\n} from '../encoding/fromBytes.js'\nimport { type HexToBytesErrorType, hexToBytes } from '../encoding/toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from '../encoding/toHex.js'\nimport { getArrayComponents } from './encodeAbiParameters.js'\n\nexport type DecodeAbiParametersReturnType<\n  params extends readonly AbiParameter[] = readonly AbiParameter[],\n> = AbiParametersToPrimitiveTypes<\n  params extends readonly AbiParameter[] ? params : AbiParameter[]\n>\n\nexport type DecodeAbiParametersErrorType =\n  | HexToBytesErrorType\n  | BytesToHexErrorType\n  | DecodeParameterErrorType\n  | SizeErrorType\n  | CreateCursorErrorType\n  | ErrorType\n\nexport function decodeAbiParameters<\n  const params extends readonly AbiParameter[],\n>(\n  params: params,\n  data: ByteArray | Hex,\n): DecodeAbiParametersReturnType<params> {\n  const bytes = typeof data === 'string' ? hexToBytes(data) : data\n  const cursor = createCursor(bytes)\n\n  if (size(bytes) === 0 && params.length > 0)\n    throw new AbiDecodingZeroDataError()\n  if (size(data) && size(data) < 32)\n    throw new AbiDecodingDataSizeTooSmallError({\n      data: typeof data === 'string' ? data : bytesToHex(data),\n      params: params as readonly AbiParameter[],\n      size: size(data),\n    })\n\n  let consumed = 0\n  const values = []\n  for (let i = 0; i < params.length; ++i) {\n    const param = params[i]\n    cursor.setPosition(consumed)\n    const [data, consumed_] = decodeParameter(cursor, param, {\n      staticPosition: 0,\n    })\n    consumed += consumed_\n    values.push(data)\n  }\n  return values as DecodeAbiParametersReturnType<params>\n}\n\ntype DecodeParameterErrorType =\n  | DecodeArrayErrorType\n  | DecodeTupleErrorType\n  | DecodeAddressErrorType\n  | DecodeBoolErrorType\n  | DecodeBytesErrorType\n  | DecodeNumberErrorType\n  | DecodeStringErrorType\n  | InvalidAbiDecodingTypeErrorType\n\nfunction decodeParameter(\n  cursor: Cursor,\n  param: AbiParameter,\n  { staticPosition }: { staticPosition: number },\n) {\n  const arrayComponents = getArrayComponents(param.type)\n  if (arrayComponents) {\n    const [length, type] = arrayComponents\n    return decodeArray(cursor, { ...param, type }, { length, staticPosition })\n  }\n  if (param.type === 'tuple')\n    return decodeTuple(cursor, param as TupleAbiParameter, { staticPosition })\n\n  if (param.type === 'address') return decodeAddress(cursor)\n  if (param.type === 'bool') return decodeBool(cursor)\n  if (param.type.startsWith('bytes'))\n    return decodeBytes(cursor, param, { staticPosition })\n  if (param.type.startsWith('uint') || param.type.startsWith('int'))\n    return decodeNumber(cursor, param)\n  if (param.type === 'string') return decodeString(cursor, { staticPosition })\n  throw new InvalidAbiDecodingTypeError(param.type, {\n    docsPath: '/docs/contract/decodeAbiParameters',\n  })\n}\n\n////////////////////////////////////////////////////////////////////\n// Type Decoders\n\nconst sizeOfLength = 32\nconst sizeOfOffset = 32\n\ntype DecodeAddressErrorType =\n  | ChecksumAddressErrorType\n  | BytesToHexErrorType\n  | SliceBytesErrorType\n  | ErrorType\n\nfunction decodeAddress(cursor: Cursor) {\n  const value = cursor.readBytes(32)\n  return [checksumAddress(bytesToHex(sliceBytes(value, -20))), 32]\n}\n\ntype DecodeArrayErrorType = BytesToNumberErrorType | ErrorType\n\nfunction decodeArray(\n  cursor: Cursor,\n  param: AbiParameter,\n  { length, staticPosition }: { length: number | null; staticPosition: number },\n) {\n  // If the length of the array is not known in advance (dynamic array),\n  // this means we will need to wonder off to the pointer and decode.\n  if (!length) {\n    // Dealing with a dynamic type, so get the offset of the array data.\n    const offset = bytesToNumber(cursor.readBytes(sizeOfOffset))\n\n    // Start is the static position of current slot + offset.\n    const start = staticPosition + offset\n    const startOfData = start + sizeOfLength\n\n    // Get the length of the array from the offset.\n    cursor.setPosition(start)\n    const length = bytesToNumber(cursor.readBytes(sizeOfLength))\n\n    // Check if the array has any dynamic children.\n    const dynamicChild = hasDynamicChild(param)\n\n    let consumed = 0\n    const value: unknown[] = []\n    for (let i = 0; i < length; ++i) {\n      // If any of the children is dynamic, then all elements will be offset pointer, thus size of one slot (32 bytes).\n      // Otherwise, elements will be the size of their encoding (consumed bytes).\n      cursor.setPosition(startOfData + (dynamicChild ? i * 32 : consumed))\n      const [data, consumed_] = decodeParameter(cursor, param, {\n        staticPosition: startOfData,\n      })\n      consumed += consumed_\n      value.push(data)\n    }\n\n    // As we have gone wondering, restore to the original position + next slot.\n    cursor.setPosition(staticPosition + 32)\n    return [value, 32]\n  }\n\n  // If the length of the array is known in advance,\n  // and the length of an element deeply nested in the array is not known,\n  // we need to decode the offset of the array data.\n  if (hasDynamicChild(param)) {\n    // Dealing with dynamic types, so get the offset of the array data.\n    const offset = bytesToNumber(cursor.readBytes(sizeOfOffset))\n\n    // Start is the static position of current slot + offset.\n    const start = staticPosition + offset\n\n    const value: unknown[] = []\n    for (let i = 0; i < length; ++i) {\n      // Move cursor along to the next slot (next offset pointer).\n      cursor.setPosition(start + i * 32)\n      const [data] = decodeParameter(cursor, param, {\n        staticPosition: start,\n      })\n      value.push(data)\n    }\n\n    // As we have gone wondering, restore to the original position + next slot.\n    cursor.setPosition(staticPosition + 32)\n    return [value, 32]\n  }\n\n  // If the length of the array is known in advance and the array is deeply static,\n  // then we can just decode each element in sequence.\n  let consumed = 0\n  const value: unknown[] = []\n  for (let i = 0; i < length; ++i) {\n    const [data, consumed_] = decodeParameter(cursor, param, {\n      staticPosition: staticPosition + consumed,\n    })\n    consumed += consumed_\n    value.push(data)\n  }\n  return [value, consumed]\n}\n\ntype DecodeBoolErrorType = BytesToBoolErrorType | ErrorType\n\nfunction decodeBool(cursor: Cursor) {\n  return [bytesToBool(cursor.readBytes(32), { size: 32 }), 32]\n}\n\ntype DecodeBytesErrorType =\n  | BytesToNumberErrorType\n  | BytesToHexErrorType\n  | ErrorType\n\nfunction decodeBytes(\n  cursor: Cursor,\n  param: AbiParameter,\n  { staticPosition }: { staticPosition: number },\n) {\n  const [_, size] = param.type.split('bytes')\n  if (!size) {\n    // Dealing with dynamic types, so get the offset of the bytes data.\n    const offset = bytesToNumber(cursor.readBytes(32))\n\n    // Set position of the cursor to start of bytes data.\n    cursor.setPosition(staticPosition + offset)\n\n    const length = bytesToNumber(cursor.readBytes(32))\n\n    // If there is no length, we have zero data.\n    if (length === 0) {\n      // As we have gone wondering, restore to the original position + next slot.\n      cursor.setPosition(staticPosition + 32)\n      return ['0x', 32]\n    }\n\n    const data = cursor.readBytes(length)\n\n    // As we have gone wondering, restore to the original position + next slot.\n    cursor.setPosition(staticPosition + 32)\n    return [bytesToHex(data), 32]\n  }\n\n  const value = bytesToHex(cursor.readBytes(Number.parseInt(size, 10), 32))\n  return [value, 32]\n}\n\ntype DecodeNumberErrorType =\n  | BytesToNumberErrorType\n  | BytesToBigIntErrorType\n  | ErrorType\n\nfunction decodeNumber(cursor: Cursor, param: AbiParameter) {\n  const signed = param.type.startsWith('int')\n  const size = Number.parseInt(param.type.split('int')[1] || '256', 10)\n  const value = cursor.readBytes(32)\n  return [\n    size > 48\n      ? bytesToBigInt(value, { signed })\n      : bytesToNumber(value, { signed }),\n    32,\n  ]\n}\n\ntype TupleAbiParameter = AbiParameter & { components: readonly AbiParameter[] }\n\ntype DecodeTupleErrorType = BytesToNumberErrorType | ErrorType\n\nfunction decodeTuple(\n  cursor: Cursor,\n  param: TupleAbiParameter,\n  { staticPosition }: { staticPosition: number },\n) {\n  // Tuples can have unnamed components (i.e. they are arrays), so we must\n  // determine whether the tuple is named or unnamed. In the case of a named\n  // tuple, the value will be an object where each property is the name of the\n  // component. In the case of an unnamed tuple, the value will be an array.\n  const hasUnnamedChild =\n    param.components.length === 0 || param.components.some(({ name }) => !name)\n\n  // Initialize the value to an object or an array, depending on whether the\n  // tuple is named or unnamed.\n  const value: any = hasUnnamedChild ? [] : {}\n  let consumed = 0\n\n  // If the tuple has a dynamic child, we must first decode the offset to the\n  // tuple data.\n  if (hasDynamicChild(param)) {\n    // Dealing with dynamic types, so get the offset of the tuple data.\n    const offset = bytesToNumber(cursor.readBytes(sizeOfOffset))\n\n    // Start is the static position of referencing slot + offset.\n    const start = staticPosition + offset\n\n    for (let i = 0; i < param.components.length; ++i) {\n      const component = param.components[i]\n      cursor.setPosition(start + consumed)\n      const [data, consumed_] = decodeParameter(cursor, component, {\n        staticPosition: start,\n      })\n      consumed += consumed_\n      value[hasUnnamedChild ? i : component?.name!] = data\n    }\n\n    // As we have gone wondering, restore to the original position + next slot.\n    cursor.setPosition(staticPosition + 32)\n    return [value, 32]\n  }\n\n  // If the tuple has static children, we can just decode each component\n  // in sequence.\n  for (let i = 0; i < param.components.length; ++i) {\n    const component = param.components[i]\n    const [data, consumed_] = decodeParameter(cursor, component, {\n      staticPosition,\n    })\n    value[hasUnnamedChild ? i : component?.name!] = data\n    consumed += consumed_\n  }\n  return [value, consumed]\n}\n\ntype DecodeStringErrorType =\n  | BytesToNumberErrorType\n  | BytesToStringErrorType\n  | TrimErrorType\n  | ErrorType\n\nfunction decodeString(\n  cursor: Cursor,\n  { staticPosition }: { staticPosition: number },\n) {\n  // Get offset to start of string data.\n  const offset = bytesToNumber(cursor.readBytes(32))\n\n  // Start is the static position of current slot + offset.\n  const start = staticPosition + offset\n  cursor.setPosition(start)\n\n  const length = bytesToNumber(cursor.readBytes(32))\n\n  // If there is no length, we have zero data (empty string).\n  if (length === 0) {\n    cursor.setPosition(staticPosition + 32)\n    return ['', 32]\n  }\n\n  const data = cursor.readBytes(length, 32)\n  const value = bytesToString(trim(data))\n\n  // As we have gone wondering, restore to the original position + next slot.\n  cursor.setPosition(staticPosition + 32)\n\n  return [value, 32]\n}\n\nfunction hasDynamicChild(param: AbiParameter) {\n  const { type } = param\n  if (type === 'string') return true\n  if (type === 'bytes') return true\n  if (type.endsWith('[]')) return true\n\n  if (type === 'tuple') return (param as any).components?.some(hasDynamicChild)\n\n  const arrayComponents = getArrayComponents(param.type)\n  if (\n    arrayComponents &&\n    hasDynamicChild({ ...param, type: arrayComponents[1] } as AbiParameter)\n  )\n    return true\n\n  return false\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport { type PromiseWithResolvers, withResolvers } from './withResolvers.js'\n\ntype Resolved<returnType extends readonly unknown[] = any> = [\n  result: returnType[number],\n  results: returnType,\n]\n\ntype SchedulerItem = {\n  args: unknown\n  resolve: PromiseWithResolvers<unknown>['resolve']\n  reject: PromiseWithResolvers<unknown>['reject']\n}\n\ntype BatchResultsCompareFn<result = unknown> = (a: result, b: result) => number\n\ntype CreateBatchSchedulerArguments<\n  parameters = unknown,\n  returnType extends readonly unknown[] = readonly unknown[],\n> = {\n  fn: (args: parameters[]) => Promise<returnType>\n  id: number | string\n  shouldSplitBatch?: ((args: parameters[]) => boolean) | undefined\n  wait?: number | undefined\n  sort?: BatchResultsCompareFn<returnType[number]> | undefined\n}\n\ntype CreateBatchSchedulerReturnType<\n  parameters = unknown,\n  returnType extends readonly unknown[] = readonly unknown[],\n> = {\n  flush: () => void\n  schedule: parameters extends undefined\n    ? (args?: parameters | undefined) => Promise<Resolved<returnType>>\n    : (args: parameters) => Promise<Resolved<returnType>>\n}\n\nexport type CreateBatchSchedulerErrorType = ErrorType\n\nconst schedulerCache = /*#__PURE__*/ new Map<number | string, SchedulerItem[]>()\n\n/** @internal */\nexport function createBatchScheduler<\n  parameters,\n  returnType extends readonly unknown[],\n>({\n  fn,\n  id,\n  shouldSplitBatch,\n  wait = 0,\n  sort,\n}: CreateBatchSchedulerArguments<\n  parameters,\n  returnType\n>): CreateBatchSchedulerReturnType<parameters, returnType> {\n  const exec = async () => {\n    const scheduler = getScheduler()\n    flush()\n\n    const args = scheduler.map(({ args }) => args)\n\n    if (args.length === 0) return\n\n    fn(args as parameters[])\n      .then((data) => {\n        if (sort && Array.isArray(data)) data.sort(sort)\n        for (let i = 0; i < scheduler.length; i++) {\n          const { resolve } = scheduler[i]\n          resolve?.([data[i], data])\n        }\n      })\n      .catch((err) => {\n        for (let i = 0; i < scheduler.length; i++) {\n          const { reject } = scheduler[i]\n          reject?.(err)\n        }\n      })\n  }\n\n  const flush = () => schedulerCache.delete(id)\n\n  const getBatchedArgs = () =>\n    getScheduler().map(({ args }) => args) as parameters[]\n\n  const getScheduler = () => schedulerCache.get(id) || []\n\n  const setScheduler = (item: SchedulerItem) =>\n    schedulerCache.set(id, [...getScheduler(), item])\n\n  return {\n    flush,\n    async schedule(args: parameters) {\n      const { promise, resolve, reject } = withResolvers()\n\n      const split = shouldSplitBatch?.([...getBatchedArgs(), args])\n\n      if (split) exec()\n\n      const hasActiveScheduler = getScheduler().length > 0\n      if (hasActiveScheduler) {\n        setScheduler({ args, resolve, reject })\n        return promise\n      }\n\n      setScheduler({ args, resolve, reject })\n      setTimeout(exec, wait)\n      return promise\n    },\n  } as unknown as CreateBatchSchedulerReturnType<parameters, returnType>\n}\n","import type * as Errors from './Errors.js'\n\nconst bigIntSuffix = '#__bigint'\n\n/**\n * Parses a JSON string, with support for `bigint`.\n *\n * @example\n * ```ts twoslash\n * import { Json } from 'ox'\n *\n * const json = Json.parse('{\"foo\":\"bar\",\"baz\":\"69420694206942069420694206942069420694206942069420#__bigint\"}')\n * // @log: {\n * // @log:   foo: 'bar',\n * // @log:   baz: 69420694206942069420694206942069420694206942069420n\n * // @log: }\n * ```\n *\n * @param string - The value to parse.\n * @param reviver - A function that transforms the results.\n * @returns The parsed value.\n */\nexport function parse(\n  string: string,\n  reviver?: ((this: any, key: string, value: any) => any) | undefined,\n) {\n  return JSON.parse(string, (key, value_) => {\n    const value = value_\n    if (typeof value === 'string' && value.endsWith(bigIntSuffix))\n      return BigInt(value.slice(0, -bigIntSuffix.length))\n    return typeof reviver === 'function' ? reviver(key, value) : value\n  })\n}\n\nexport declare namespace parse {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Stringifies a value to its JSON representation, with support for `bigint`.\n *\n * @example\n * ```ts twoslash\n * import { Json } from 'ox'\n *\n * const json = Json.stringify({\n *   foo: 'bar',\n *   baz: 69420694206942069420694206942069420694206942069420n,\n * })\n * // @log: '{\"foo\":\"bar\",\"baz\":\"69420694206942069420694206942069420694206942069420#__bigint\"}'\n * ```\n *\n * @param value - The value to stringify.\n * @param replacer - A function that transforms the results. It is passed the key and value of the property, and must return the value to be used in the JSON string. If this function returns `undefined`, the property is not included in the resulting JSON string.\n * @param space - A string or number that determines the indentation of the JSON string. If it is a number, it indicates the number of spaces to use as indentation; if it is a string (e.g. `'\\t'`), it uses the string as the indentation character.\n * @returns The JSON string.\n */\nexport function stringify(\n  value: any,\n  replacer?: ((this: any, key: string, value: any) => any) | null | undefined,\n  space?: string | number | undefined,\n) {\n  return JSON.stringify(\n    value,\n    (key, value) => {\n      if (typeof replacer === 'function') return replacer(key, value)\n      if (typeof value === 'bigint') return value.toString() + bigIntSuffix\n      return value\n    },\n    space,\n  )\n}\n\nexport declare namespace stringify {\n  type ErrorType = Errors.GlobalErrorType\n}\n","import type { SendTransactionParameters } from '../../actions/wallet/sendTransaction.js'\nimport { BaseError } from '../../errors/base.js'\nimport {\n  ExecutionRevertedError,\n  type ExecutionRevertedErrorType,\n  FeeCapTooHighError,\n  type FeeCapTooHighErrorType,\n  FeeCapTooLowError,\n  type FeeCapTooLowErrorType,\n  InsufficientFundsError,\n  type InsufficientFundsErrorType,\n  IntrinsicGasTooHighError,\n  type IntrinsicGasTooHighErrorType,\n  IntrinsicGasTooLowError,\n  type IntrinsicGasTooLowErrorType,\n  NonceMaxValueError,\n  type NonceMaxValueErrorType,\n  NonceTooHighError,\n  type NonceTooHighErrorType,\n  NonceTooLowError,\n  type NonceTooLowErrorType,\n  TipAboveFeeCapError,\n  type TipAboveFeeCapErrorType,\n  TransactionTypeNotSupportedError,\n  type TransactionTypeNotSupportedErrorType,\n  UnknownNodeError,\n  type UnknownNodeErrorType,\n} from '../../errors/node.js'\nimport { RpcRequestError } from '../../errors/request.js'\nimport {\n  InvalidInputRpcError,\n  TransactionRejectedRpcError,\n} from '../../errors/rpc.js'\nimport type { ExactPartial } from '../../types/utils.js'\n\nexport function containsNodeError(err: BaseError) {\n  return (\n    err instanceof TransactionRejectedRpcError ||\n    err instanceof InvalidInputRpcError ||\n    (err instanceof RpcRequestError && err.code === ExecutionRevertedError.code)\n  )\n}\n\nexport type GetNodeErrorParameters = ExactPartial<\n  SendTransactionParameters<any>\n>\n\nexport type GetNodeErrorReturnType =\n  | ExecutionRevertedErrorType\n  | FeeCapTooHighErrorType\n  | FeeCapTooLowErrorType\n  | NonceTooHighErrorType\n  | NonceTooLowErrorType\n  | NonceMaxValueErrorType\n  | InsufficientFundsErrorType\n  | IntrinsicGasTooHighErrorType\n  | IntrinsicGasTooLowErrorType\n  | TransactionTypeNotSupportedErrorType\n  | TipAboveFeeCapErrorType\n  | UnknownNodeErrorType\n\nexport function getNodeError(\n  err: BaseError,\n  args: GetNodeErrorParameters,\n): GetNodeErrorReturnType {\n  const message = (err.details || '').toLowerCase()\n\n  const executionRevertedError =\n    err instanceof BaseError\n      ? err.walk(\n          (e) =>\n            (e as { code: number } | null | undefined)?.code ===\n            ExecutionRevertedError.code,\n        )\n      : err\n  if (executionRevertedError instanceof BaseError)\n    return new ExecutionRevertedError({\n      cause: err,\n      message: executionRevertedError.details,\n    }) as any\n  if (ExecutionRevertedError.nodeMessage.test(message))\n    return new ExecutionRevertedError({\n      cause: err,\n      message: err.details,\n    }) as any\n  if (FeeCapTooHighError.nodeMessage.test(message))\n    return new FeeCapTooHighError({\n      cause: err,\n      maxFeePerGas: args?.maxFeePerGas,\n    }) as any\n  if (FeeCapTooLowError.nodeMessage.test(message))\n    return new FeeCapTooLowError({\n      cause: err,\n      maxFeePerGas: args?.maxFeePerGas,\n    }) as any\n  if (NonceTooHighError.nodeMessage.test(message))\n    return new NonceTooHighError({ cause: err, nonce: args?.nonce }) as any\n  if (NonceTooLowError.nodeMessage.test(message))\n    return new NonceTooLowError({ cause: err, nonce: args?.nonce }) as any\n  if (NonceMaxValueError.nodeMessage.test(message))\n    return new NonceMaxValueError({ cause: err, nonce: args?.nonce }) as any\n  if (InsufficientFundsError.nodeMessage.test(message))\n    return new InsufficientFundsError({ cause: err }) as any\n  if (IntrinsicGasTooHighError.nodeMessage.test(message))\n    return new IntrinsicGasTooHighError({ cause: err, gas: args?.gas }) as any\n  if (IntrinsicGasTooLowError.nodeMessage.test(message))\n    return new IntrinsicGasTooLowError({ cause: err, gas: args?.gas }) as any\n  if (TransactionTypeNotSupportedError.nodeMessage.test(message))\n    return new TransactionTypeNotSupportedError({ cause: err }) as any\n  if (TipAboveFeeCapError.nodeMessage.test(message))\n    return new TipAboveFeeCapError({\n      cause: err,\n      maxFeePerGas: args?.maxFeePerGas,\n      maxPriorityFeePerGas: args?.maxPriorityFeePerGas,\n    }) as any\n  return new UnknownNodeError({\n    cause: err,\n  }) as any\n}\n","import type { OneOf, Pretty } from './types.js'\nimport { version } from './version.js'\n\ntype BaseErrorArgs = Pretty<\n  {\n    docsPath?: string | undefined\n    metaMessages?: string[] | undefined\n  } & OneOf<{ details?: string | undefined } | { cause?: BaseError | Error }>\n>\n\nexport class BaseError extends Error {\n  details: string\n  docsPath?: string | undefined\n  metaMessages?: string[] | undefined\n  shortMessage: string\n\n  override name = 'AbiTypeError'\n\n  constructor(shortMessage: string, args: BaseErrorArgs = {}) {\n    const details =\n      args.cause instanceof BaseError\n        ? args.cause.details\n        : args.cause?.message\n          ? args.cause.message\n          : args.details!\n    const docsPath =\n      args.cause instanceof BaseError\n        ? args.cause.docsPath || args.docsPath\n        : args.docsPath\n    const message = [\n      shortMessage || 'An error occurred.',\n      '',\n      ...(args.metaMessages ? [...args.metaMessages, ''] : []),\n      ...(docsPath ? [`Docs: https://abitype.dev${docsPath}`] : []),\n      ...(details ? [`Details: ${details}`] : []),\n      `Version: abitype@${version}`,\n    ].join('\\n')\n\n    super(message)\n\n    if (args.cause) this.cause = args.cause\n    this.details = details\n    this.docsPath = docsPath\n    this.metaMessages = args.metaMessages\n    this.shortMessage = shortMessage\n  }\n}\n","export const version = '1.1.0'\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { AuthorizationList } from '../../types/authorization.js'\nimport type {\n  Chain,\n  ExtractChainFormatterParameters,\n} from '../../types/chain.js'\nimport type { ByteArray } from '../../types/misc.js'\nimport type {\n  RpcAuthorizationList,\n  RpcTransactionRequest,\n} from '../../types/rpc.js'\nimport type { TransactionRequest } from '../../types/transaction.js'\nimport type { ExactPartial } from '../../types/utils.js'\nimport { bytesToHex, numberToHex } from '../encoding/toHex.js'\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\n\nexport type FormattedTransactionRequest<\n  chain extends Chain | undefined = Chain | undefined,\n> = ExtractChainFormatterParameters<\n  chain,\n  'transactionRequest',\n  TransactionRequest\n>\n\nexport const rpcTransactionType = {\n  legacy: '0x0',\n  eip2930: '0x1',\n  eip1559: '0x2',\n  eip4844: '0x3',\n  eip7702: '0x4',\n} as const\n\nexport type FormatTransactionRequestErrorType = ErrorType\n\nexport function formatTransactionRequest(\n  request: ExactPartial<TransactionRequest>,\n) {\n  const rpcRequest = {} as RpcTransactionRequest\n\n  if (typeof request.authorizationList !== 'undefined')\n    rpcRequest.authorizationList = formatAuthorizationList(\n      request.authorizationList,\n    )\n  if (typeof request.accessList !== 'undefined')\n    rpcRequest.accessList = request.accessList\n  if (typeof request.blobVersionedHashes !== 'undefined')\n    rpcRequest.blobVersionedHashes = request.blobVersionedHashes\n  if (typeof request.blobs !== 'undefined') {\n    if (typeof request.blobs[0] !== 'string')\n      rpcRequest.blobs = (request.blobs as ByteArray[]).map((x) =>\n        bytesToHex(x),\n      )\n    else rpcRequest.blobs = request.blobs\n  }\n  if (typeof request.data !== 'undefined') rpcRequest.data = request.data\n  if (typeof request.from !== 'undefined') rpcRequest.from = request.from\n  if (typeof request.gas !== 'undefined')\n    rpcRequest.gas = numberToHex(request.gas)\n  if (typeof request.gasPrice !== 'undefined')\n    rpcRequest.gasPrice = numberToHex(request.gasPrice)\n  if (typeof request.maxFeePerBlobGas !== 'undefined')\n    rpcRequest.maxFeePerBlobGas = numberToHex(request.maxFeePerBlobGas)\n  if (typeof request.maxFeePerGas !== 'undefined')\n    rpcRequest.maxFeePerGas = numberToHex(request.maxFeePerGas)\n  if (typeof request.maxPriorityFeePerGas !== 'undefined')\n    rpcRequest.maxPriorityFeePerGas = numberToHex(request.maxPriorityFeePerGas)\n  if (typeof request.nonce !== 'undefined')\n    rpcRequest.nonce = numberToHex(request.nonce)\n  if (typeof request.to !== 'undefined') rpcRequest.to = request.to\n  if (typeof request.type !== 'undefined')\n    rpcRequest.type = rpcTransactionType[request.type]\n  if (typeof request.value !== 'undefined')\n    rpcRequest.value = numberToHex(request.value)\n\n  return rpcRequest\n}\n\nexport type DefineTransactionRequestErrorType =\n  | DefineFormatterErrorType\n  | ErrorType\n\nexport const defineTransactionRequest = /*#__PURE__*/ defineFormatter(\n  'transactionRequest',\n  formatTransactionRequest,\n)\n\n//////////////////////////////////////////////////////////////////////////////\n\nfunction formatAuthorizationList(\n  authorizationList: AuthorizationList<number, boolean>,\n): RpcAuthorizationList {\n  return authorizationList.map(\n    (authorization) =>\n      ({\n        address: authorization.address,\n        r: authorization.r\n          ? numberToHex(BigInt(authorization.r))\n          : authorization.r,\n        s: authorization.s\n          ? numberToHex(BigInt(authorization.s))\n          : authorization.s,\n        chainId: numberToHex(authorization.chainId),\n        nonce: numberToHex(authorization.nonce),\n        ...(typeof authorization.yParity !== 'undefined'\n          ? { yParity: numberToHex(authorization.yParity) }\n          : {}),\n        ...(typeof authorization.v !== 'undefined' &&\n        typeof authorization.yParity === 'undefined'\n          ? { v: numberToHex(authorization.v) }\n          : {}),\n      }) as any,\n  ) as RpcAuthorizationList\n}\n","import type { Address } from 'abitype'\n\nimport {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../../errors/address.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport { isAddress } from './isAddress.js'\n\nexport type IsAddressEqualReturnType = boolean\nexport type IsAddressEqualErrorType = InvalidAddressErrorType | ErrorType\n\nexport function isAddressEqual(a: Address, b: Address) {\n  if (!isAddress(a, { strict: false }))\n    throw new InvalidAddressError({ address: a })\n  if (!isAddress(b, { strict: false }))\n    throw new InvalidAddressError({ address: b })\n  return a.toLowerCase() === b.toLowerCase()\n}\n","/**\n * Map with a LRU (Least recently used) policy.\n *\n * @link https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU\n */\nexport class LruMap<value = unknown> extends Map<string, value> {\n  maxSize: number\n\n  constructor(size: number) {\n    super()\n    this.maxSize = size\n  }\n\n  override get(key: string) {\n    const value = super.get(key)\n\n    if (super.has(key) && value !== undefined) {\n      this.delete(key)\n      super.set(key, value)\n    }\n\n    return value\n  }\n\n  override set(key: string, value: value) {\n    super.set(key, value)\n    if (this.maxSize && this.size > this.maxSize) {\n      const firstKey = this.keys().next().value\n      if (firstKey) this.delete(firstKey)\n    }\n    return this\n  }\n}\n","import type { AbiStateMutability } from '../../abi.js'\nimport { execTyped } from '../../regex.js'\nimport type {\n  EventModifier,\n  FunctionModifier,\n  Modifier,\n} from '../types/signatures.js'\n\n// https://regexr.com/7gmok\nconst errorSignatureRegex =\n  /^error (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\\((?<parameters>.*?)\\)$/\nexport function isErrorSignature(signature: string) {\n  return errorSignatureRegex.test(signature)\n}\nexport function execErrorSignature(signature: string) {\n  return execTyped<{ name: string; parameters: string }>(\n    errorSignatureRegex,\n    signature,\n  )\n}\n\n// https://regexr.com/7gmoq\nconst eventSignatureRegex =\n  /^event (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\\((?<parameters>.*?)\\)$/\nexport function isEventSignature(signature: string) {\n  return eventSignatureRegex.test(signature)\n}\nexport function execEventSignature(signature: string) {\n  return execTyped<{ name: string; parameters: string }>(\n    eventSignatureRegex,\n    signature,\n  )\n}\n\n// https://regexr.com/7gmot\nconst functionSignatureRegex =\n  /^function (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\\((?<parameters>.*?)\\)(?: (?<scope>external|public{1}))?(?: (?<stateMutability>pure|view|nonpayable|payable{1}))?(?: returns\\s?\\((?<returns>.*?)\\))?$/\nexport function isFunctionSignature(signature: string) {\n  return functionSignatureRegex.test(signature)\n}\nexport function execFunctionSignature(signature: string) {\n  return execTyped<{\n    name: string\n    parameters: string\n    stateMutability?: AbiStateMutability\n    returns?: string\n  }>(functionSignatureRegex, signature)\n}\n\n// https://regexr.com/7gmp3\nconst structSignatureRegex =\n  /^struct (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*) \\{(?<properties>.*?)\\}$/\nexport function isStructSignature(signature: string) {\n  return structSignatureRegex.test(signature)\n}\nexport function execStructSignature(signature: string) {\n  return execTyped<{ name: string; properties: string }>(\n    structSignatureRegex,\n    signature,\n  )\n}\n\n// https://regexr.com/78u01\nconst constructorSignatureRegex =\n  /^constructor\\((?<parameters>.*?)\\)(?:\\s(?<stateMutability>payable{1}))?$/\nexport function isConstructorSignature(signature: string) {\n  return constructorSignatureRegex.test(signature)\n}\nexport function execConstructorSignature(signature: string) {\n  return execTyped<{\n    parameters: string\n    stateMutability?: Extract<AbiStateMutability, 'payable'>\n  }>(constructorSignatureRegex, signature)\n}\n\n// https://regexr.com/7srtn\nconst fallbackSignatureRegex =\n  /^fallback\\(\\) external(?:\\s(?<stateMutability>payable{1}))?$/\nexport function isFallbackSignature(signature: string) {\n  return fallbackSignatureRegex.test(signature)\n}\nexport function execFallbackSignature(signature: string) {\n  return execTyped<{\n    parameters: string\n    stateMutability?: Extract<AbiStateMutability, 'payable'>\n  }>(fallbackSignatureRegex, signature)\n}\n\n// https://regexr.com/78u1k\nconst receiveSignatureRegex = /^receive\\(\\) external payable$/\nexport function isReceiveSignature(signature: string) {\n  return receiveSignatureRegex.test(signature)\n}\n\nexport const modifiers = new Set<Modifier>([\n  'memory',\n  'indexed',\n  'storage',\n  'calldata',\n])\nexport const eventModifiers = new Set<EventModifier>(['indexed'])\nexport const functionModifiers = new Set<FunctionModifier>([\n  'calldata',\n  'memory',\n  'storage',\n])\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","import { InvalidBytesBooleanError } from '../../errors/encoding.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type TrimErrorType, trim } from '../data/trim.js'\n\nimport {\n  type AssertSizeErrorType,\n  assertSize,\n  type HexToBigIntErrorType,\n  type HexToNumberErrorType,\n  hexToBigInt,\n  hexToNumber,\n} from './fromHex.js'\nimport { type BytesToHexErrorType, bytesToHex } from './toHex.js'\n\nexport type FromBytesParameters<\n  to extends 'string' | 'hex' | 'bigint' | 'number' | 'boolean',\n> =\n  | to\n  | {\n      /** Size of the bytes. */\n      size?: number | undefined\n      /** Type to convert to. */\n      to: to\n    }\n\nexport type FromBytesReturnType<to> = to extends 'string'\n  ? string\n  : to extends 'hex'\n    ? Hex\n    : to extends 'bigint'\n      ? bigint\n      : to extends 'number'\n        ? number\n        : to extends 'boolean'\n          ? boolean\n          : never\n\nexport type FromBytesErrorType =\n  | BytesToHexErrorType\n  | BytesToBigIntErrorType\n  | BytesToBoolErrorType\n  | BytesToNumberErrorType\n  | BytesToStringErrorType\n  | ErrorType\n\n/**\n * Decodes a byte array into a UTF-8 string, hex value, number, bigint or boolean.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes\n * - Example: https://viem.sh/docs/utilities/fromBytes#usage\n *\n * @param bytes Byte array to decode.\n * @param toOrOpts Type to convert to or options.\n * @returns Decoded value.\n *\n * @example\n * import { fromBytes } from 'viem'\n * const data = fromBytes(new Uint8Array([1, 164]), 'number')\n * // 420\n *\n * @example\n * import { fromBytes } from 'viem'\n * const data = fromBytes(\n *   new Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]),\n *   'string'\n * )\n * // 'Hello world'\n */\nexport function fromBytes<\n  to extends 'string' | 'hex' | 'bigint' | 'number' | 'boolean',\n>(\n  bytes: ByteArray,\n  toOrOpts: FromBytesParameters<to>,\n): FromBytesReturnType<to> {\n  const opts = typeof toOrOpts === 'string' ? { to: toOrOpts } : toOrOpts\n  const to = opts.to\n\n  if (to === 'number')\n    return bytesToNumber(bytes, opts) as FromBytesReturnType<to>\n  if (to === 'bigint')\n    return bytesToBigInt(bytes, opts) as FromBytesReturnType<to>\n  if (to === 'boolean')\n    return bytesToBool(bytes, opts) as FromBytesReturnType<to>\n  if (to === 'string')\n    return bytesToString(bytes, opts) as FromBytesReturnType<to>\n  return bytesToHex(bytes, opts) as FromBytesReturnType<to>\n}\n\nexport type BytesToBigIntOpts = {\n  /** Whether or not the number of a signed representation. */\n  signed?: boolean | undefined\n  /** Size of the bytes. */\n  size?: number | undefined\n}\n\nexport type BytesToBigIntErrorType =\n  | BytesToHexErrorType\n  | HexToBigIntErrorType\n  | ErrorType\n\n/**\n * Decodes a byte array into a bigint.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes#bytestobigint\n *\n * @param bytes Byte array to decode.\n * @param opts Options.\n * @returns BigInt value.\n *\n * @example\n * import { bytesToBigInt } from 'viem'\n * const data = bytesToBigInt(new Uint8Array([1, 164]))\n * // 420n\n */\nexport function bytesToBigInt(\n  bytes: ByteArray,\n  opts: BytesToBigIntOpts = {},\n): bigint {\n  if (typeof opts.size !== 'undefined') assertSize(bytes, { size: opts.size })\n  const hex = bytesToHex(bytes, opts)\n  return hexToBigInt(hex, opts)\n}\n\nexport type BytesToBoolOpts = {\n  /** Size of the bytes. */\n  size?: number | undefined\n}\n\nexport type BytesToBoolErrorType =\n  | AssertSizeErrorType\n  | TrimErrorType\n  | ErrorType\n\n/**\n * Decodes a byte array into a boolean.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes#bytestobool\n *\n * @param bytes Byte array to decode.\n * @param opts Options.\n * @returns Boolean value.\n *\n * @example\n * import { bytesToBool } from 'viem'\n * const data = bytesToBool(new Uint8Array([1]))\n * // true\n */\nexport function bytesToBool(\n  bytes_: ByteArray,\n  opts: BytesToBoolOpts = {},\n): boolean {\n  let bytes = bytes_\n  if (typeof opts.size !== 'undefined') {\n    assertSize(bytes, { size: opts.size })\n    bytes = trim(bytes)\n  }\n  if (bytes.length > 1 || bytes[0] > 1)\n    throw new InvalidBytesBooleanError(bytes)\n  return Boolean(bytes[0])\n}\n\nexport type BytesToNumberOpts = BytesToBigIntOpts\n\nexport type BytesToNumberErrorType =\n  | BytesToHexErrorType\n  | HexToNumberErrorType\n  | ErrorType\n\n/**\n * Decodes a byte array into a number.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes#bytestonumber\n *\n * @param bytes Byte array to decode.\n * @param opts Options.\n * @returns Number value.\n *\n * @example\n * import { bytesToNumber } from 'viem'\n * const data = bytesToNumber(new Uint8Array([1, 164]))\n * // 420\n */\nexport function bytesToNumber(\n  bytes: ByteArray,\n  opts: BytesToNumberOpts = {},\n): number {\n  if (typeof opts.size !== 'undefined') assertSize(bytes, { size: opts.size })\n  const hex = bytesToHex(bytes, opts)\n  return hexToNumber(hex, opts)\n}\n\nexport type BytesToStringOpts = {\n  /** Size of the bytes. */\n  size?: number | undefined\n}\n\nexport type BytesToStringErrorType =\n  | AssertSizeErrorType\n  | TrimErrorType\n  | ErrorType\n\n/**\n * Decodes a byte array into a UTF-8 string.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes#bytestostring\n *\n * @param bytes Byte array to decode.\n * @param opts Options.\n * @returns String value.\n *\n * @example\n * import { bytesToString } from 'viem'\n * const data = bytesToString(new Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))\n * // 'Hello world'\n */\nexport function bytesToString(\n  bytes_: ByteArray,\n  opts: BytesToStringOpts = {},\n): string {\n  let bytes = bytes_\n  if (typeof opts.size !== 'undefined') {\n    assertSize(bytes, { size: opts.size })\n    bytes = trim(bytes, { dir: 'right' })\n  }\n  return new TextDecoder().decode(bytes)\n}\n","import { BaseError } from '../../errors/base.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type IsHexErrorType, isHex } from '../data/isHex.js'\nimport { type PadErrorType, pad } from '../data/pad.js'\n\nimport { type AssertSizeErrorType, assertSize } from './fromHex.js'\nimport {\n  type NumberToHexErrorType,\n  type NumberToHexOpts,\n  numberToHex,\n} from './toHex.js'\n\nconst encoder = /*#__PURE__*/ new TextEncoder()\n\nexport type ToBytesParameters = {\n  /** Size of the output bytes. */\n  size?: number | undefined\n}\n\nexport type ToBytesErrorType =\n  | NumberToBytesErrorType\n  | BoolToBytesErrorType\n  | HexToBytesErrorType\n  | StringToBytesErrorType\n  | IsHexErrorType\n  | ErrorType\n\n/**\n * Encodes a UTF-8 string, hex value, bigint, number or boolean to a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes\n * - Example: https://viem.sh/docs/utilities/toBytes#usage\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes('Hello world')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes(420)\n * // Uint8Array([1, 164])\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes(420, { size: 4 })\n * // Uint8Array([0, 0, 1, 164])\n */\nexport function toBytes(\n  value: string | bigint | number | boolean | Hex,\n  opts: ToBytesParameters = {},\n): ByteArray {\n  if (typeof value === 'number' || typeof value === 'bigint')\n    return numberToBytes(value, opts)\n  if (typeof value === 'boolean') return boolToBytes(value, opts)\n  if (isHex(value)) return hexToBytes(value, opts)\n  return stringToBytes(value, opts)\n}\n\nexport type BoolToBytesOpts = {\n  /** Size of the output bytes. */\n  size?: number | undefined\n}\n\nexport type BoolToBytesErrorType =\n  | AssertSizeErrorType\n  | PadErrorType\n  | ErrorType\n\n/**\n * Encodes a boolean into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#booltobytes\n *\n * @param value Boolean value to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { boolToBytes } from 'viem'\n * const data = boolToBytes(true)\n * // Uint8Array([1])\n *\n * @example\n * import { boolToBytes } from 'viem'\n * const data = boolToBytes(true, { size: 32 })\n * // Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1])\n */\nexport function boolToBytes(value: boolean, opts: BoolToBytesOpts = {}) {\n  const bytes = new Uint8Array(1)\n  bytes[0] = Number(value)\n  if (typeof opts.size === 'number') {\n    assertSize(bytes, { size: opts.size })\n    return pad(bytes, { size: opts.size })\n  }\n  return bytes\n}\n\n// We use very optimized technique to convert hex string to byte array\nconst charCodeMap = {\n  zero: 48,\n  nine: 57,\n  A: 65,\n  F: 70,\n  a: 97,\n  f: 102,\n} as const\n\nfunction charCodeToBase16(char: number) {\n  if (char >= charCodeMap.zero && char <= charCodeMap.nine)\n    return char - charCodeMap.zero\n  if (char >= charCodeMap.A && char <= charCodeMap.F)\n    return char - (charCodeMap.A - 10)\n  if (char >= charCodeMap.a && char <= charCodeMap.f)\n    return char - (charCodeMap.a - 10)\n  return undefined\n}\n\nexport type HexToBytesOpts = {\n  /** Size of the output bytes. */\n  size?: number | undefined\n}\n\nexport type HexToBytesErrorType = AssertSizeErrorType | PadErrorType | ErrorType\n\n/**\n * Encodes a hex string into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#hextobytes\n *\n * @param hex Hex string to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { hexToBytes } from 'viem'\n * const data = hexToBytes('0x48656c6c6f20776f726c6421')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n *\n * @example\n * import { hexToBytes } from 'viem'\n * const data = hexToBytes('0x48656c6c6f20776f726c6421', { size: 32 })\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n */\nexport function hexToBytes(hex_: Hex, opts: HexToBytesOpts = {}): ByteArray {\n  let hex = hex_\n  if (opts.size) {\n    assertSize(hex, { size: opts.size })\n    hex = pad(hex, { dir: 'right', size: opts.size })\n  }\n\n  let hexString = hex.slice(2) as string\n  if (hexString.length % 2) hexString = `0${hexString}`\n\n  const length = hexString.length / 2\n  const bytes = new Uint8Array(length)\n  for (let index = 0, j = 0; index < length; index++) {\n    const nibbleLeft = charCodeToBase16(hexString.charCodeAt(j++))\n    const nibbleRight = charCodeToBase16(hexString.charCodeAt(j++))\n    if (nibbleLeft === undefined || nibbleRight === undefined) {\n      throw new BaseError(\n        `Invalid byte sequence (\"${hexString[j - 2]}${\n          hexString[j - 1]\n        }\" in \"${hexString}\").`,\n      )\n    }\n    bytes[index] = nibbleLeft * 16 + nibbleRight\n  }\n  return bytes\n}\n\nexport type NumberToBytesErrorType =\n  | NumberToHexErrorType\n  | HexToBytesErrorType\n  | ErrorType\n\n/**\n * Encodes a number into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#numbertobytes\n *\n * @param value Number to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { numberToBytes } from 'viem'\n * const data = numberToBytes(420)\n * // Uint8Array([1, 164])\n *\n * @example\n * import { numberToBytes } from 'viem'\n * const data = numberToBytes(420, { size: 4 })\n * // Uint8Array([0, 0, 1, 164])\n */\nexport function numberToBytes(\n  value: bigint | number,\n  opts?: NumberToHexOpts | undefined,\n) {\n  const hex = numberToHex(value, opts)\n  return hexToBytes(hex)\n}\n\nexport type StringToBytesOpts = {\n  /** Size of the output bytes. */\n  size?: number | undefined\n}\n\nexport type StringToBytesErrorType =\n  | AssertSizeErrorType\n  | PadErrorType\n  | ErrorType\n\n/**\n * Encodes a UTF-8 string into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#stringtobytes\n *\n * @param value String to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { stringToBytes } from 'viem'\n * const data = stringToBytes('Hello world!')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100, 33])\n *\n * @example\n * import { stringToBytes } from 'viem'\n * const data = stringToBytes('Hello world!', { size: 32 })\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n */\nexport function stringToBytes(\n  value: string,\n  opts: StringToBytesOpts = {},\n): ByteArray {\n  const bytes = encoder.encode(value)\n  if (typeof opts.size === 'number') {\n    assertSize(bytes, { size: opts.size })\n    return pad(bytes, { dir: 'right', size: opts.size })\n  }\n  return bytes\n}\n","import {\n  SizeExceedsPaddingSizeError,\n  type SizeExceedsPaddingSizeErrorType,\n} from '../../errors/data.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\ntype PadOptions = {\n  dir?: 'left' | 'right' | undefined\n  size?: number | null | undefined\n}\nexport type PadReturnType<value extends ByteArray | Hex> = value extends Hex\n  ? Hex\n  : ByteArray\n\nexport type PadErrorType = PadHexErrorType | PadBytesErrorType | ErrorType\n\nexport function pad<value extends ByteArray | Hex>(\n  hexOrBytes: value,\n  { dir, size = 32 }: PadOptions = {},\n): PadReturnType<value> {\n  if (typeof hexOrBytes === 'string')\n    return padHex(hexOrBytes, { dir, size }) as PadReturnType<value>\n  return padBytes(hexOrBytes, { dir, size }) as PadReturnType<value>\n}\n\nexport type PadHexErrorType = SizeExceedsPaddingSizeErrorType | ErrorType\n\nexport function padHex(hex_: Hex, { dir, size = 32 }: PadOptions = {}) {\n  if (size === null) return hex_\n  const hex = hex_.replace('0x', '')\n  if (hex.length > size * 2)\n    throw new SizeExceedsPaddingSizeError({\n      size: Math.ceil(hex.length / 2),\n      targetSize: size,\n      type: 'hex',\n    })\n\n  return `0x${hex[dir === 'right' ? 'padEnd' : 'padStart'](\n    size * 2,\n    '0',\n  )}` as Hex\n}\n\nexport type PadBytesErrorType = SizeExceedsPaddingSizeErrorType | ErrorType\n\nexport function padBytes(\n  bytes: ByteArray,\n  { dir, size = 32 }: PadOptions = {},\n) {\n  if (size === null) return bytes\n  if (bytes.length > size)\n    throw new SizeExceedsPaddingSizeError({\n      size: bytes.length,\n      targetSize: size,\n      type: 'bytes',\n    })\n  const paddedBytes = new Uint8Array(size)\n  for (let i = 0; i < size; i++) {\n    const padEnd = dir === 'right'\n    paddedBytes[padEnd ? i : size - i - 1] =\n      bytes[padEnd ? i : bytes.length - i - 1]\n  }\n  return paddedBytes\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { Prettify } from '../../types/utils.js'\n\nexport type DefineFormatterErrorType = ErrorType\n\nexport function defineFormatter<type extends string, parameters, returnType>(\n  type: type,\n  format: (_: parameters) => returnType,\n) {\n  return <\n    parametersOverride,\n    returnTypeOverride,\n    exclude extends (keyof parameters | keyof parametersOverride)[] = [],\n  >({\n    exclude,\n    format: overrides,\n  }: {\n    exclude?: exclude | undefined\n    format: (_: parametersOverride) => returnTypeOverride\n  }) => {\n    return {\n      exclude,\n      format: (args: parametersOverride) => {\n        const formatted = format(args as any)\n        if (exclude) {\n          for (const key of exclude) {\n            delete (formatted as any)[key]\n          }\n        }\n        return {\n          ...formatted,\n          ...overrides(args),\n        } as Prettify<returnTypeOverride> & {\n          [_key in exclude[number]]: never\n        }\n      },\n      type,\n    }\n  }\n}\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","import type {\n  Abi,\n  AbiStateMutability,\n  ExtractAbiFunction,\n  ExtractAbiFunctions,\n} from 'abitype'\n\nimport {\n  AbiFunctionNotFoundError,\n  type AbiFunctionNotFoundErrorType,\n} from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  ContractFunctionArgs,\n  ContractFunctionName,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { IsNarrowable, UnionEvaluate } from '../../types/utils.js'\nimport type { ConcatHexErrorType } from '../data/concat.js'\nimport {\n  type ToFunctionSelectorErrorType,\n  toFunctionSelector,\n} from '../hash/toFunctionSelector.js'\nimport { type FormatAbiItemErrorType, formatAbiItem } from './formatAbiItem.js'\nimport { type GetAbiItemErrorType, getAbiItem } from './getAbiItem.js'\n\nconst docsPath = '/docs/contract/encodeFunctionData'\n\nexport type PrepareEncodeFunctionDataParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  functionName extends\n    | ContractFunctionName<abi>\n    | undefined = ContractFunctionName<abi>,\n  ///\n  hasFunctions = abi extends Abi\n    ? Abi extends abi\n      ? true\n      : [ExtractAbiFunctions<abi>] extends [never]\n        ? false\n        : true\n    : true,\n  allArgs = ContractFunctionArgs<\n    abi,\n    AbiStateMutability,\n    functionName extends ContractFunctionName<abi>\n      ? functionName\n      : ContractFunctionName<abi>\n  >,\n  allFunctionNames = ContractFunctionName<abi>,\n> = {\n  abi: abi\n} & UnionEvaluate<\n  IsNarrowable<abi, Abi> extends true\n    ? abi['length'] extends 1\n      ? { functionName?: functionName | allFunctionNames | Hex | undefined }\n      : { functionName: functionName | allFunctionNames | Hex }\n    : { functionName?: functionName | allFunctionNames | Hex | undefined }\n> &\n  UnionEvaluate<{ args?: allArgs | undefined }> &\n  (hasFunctions extends true ? unknown : never)\n\nexport type PrepareEncodeFunctionDataReturnType<\n  abi extends Abi | readonly unknown[] = Abi,\n  functionName extends\n    | ContractFunctionName<abi>\n    | undefined = ContractFunctionName<abi>,\n> = {\n  abi: abi extends Abi\n    ? functionName extends ContractFunctionName<abi>\n      ? [ExtractAbiFunction<abi, functionName>]\n      : abi\n    : Abi\n  functionName: Hex\n}\n\nexport type PrepareEncodeFunctionDataErrorType =\n  | AbiFunctionNotFoundErrorType\n  | ConcatHexErrorType\n  | FormatAbiItemErrorType\n  | GetAbiItemErrorType\n  | ToFunctionSelectorErrorType\n  | ErrorType\n\nexport function prepareEncodeFunctionData<\n  const abi extends Abi | readonly unknown[],\n  functionName extends ContractFunctionName<abi> | undefined = undefined,\n>(\n  parameters: PrepareEncodeFunctionDataParameters<abi, functionName>,\n): PrepareEncodeFunctionDataReturnType<abi, functionName> {\n  const { abi, args, functionName } =\n    parameters as PrepareEncodeFunctionDataParameters\n\n  let abiItem = abi[0]\n  if (functionName) {\n    const item = getAbiItem({\n      abi,\n      args,\n      name: functionName,\n    })\n    if (!item) throw new AbiFunctionNotFoundError(functionName, { docsPath })\n    abiItem = item\n  }\n\n  if (abiItem.type !== 'function')\n    throw new AbiFunctionNotFoundError(undefined, { docsPath })\n\n  return {\n    abi: [abiItem],\n    functionName: toFunctionSelector(formatAbiItem(abiItem)),\n  } as unknown as PrepareEncodeFunctionDataReturnType<abi, functionName>\n}\n","import type { Abi, AbiStateMutability, ExtractAbiFunctions } from 'abitype'\n\nimport type { AbiFunctionNotFoundErrorType } from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  ContractFunctionArgs,\n  ContractFunctionName,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { IsNarrowable, UnionEvaluate } from '../../types/utils.js'\nimport { type ConcatHexErrorType, concatHex } from '../data/concat.js'\nimport type { ToFunctionSelectorErrorType } from '../hash/toFunctionSelector.js'\nimport {\n  type EncodeAbiParametersErrorType,\n  encodeAbiParameters,\n} from './encodeAbiParameters.js'\nimport type { FormatAbiItemErrorType } from './formatAbiItem.js'\nimport type { GetAbiItemErrorType } from './getAbiItem.js'\nimport { prepareEncodeFunctionData } from './prepareEncodeFunctionData.js'\n\nexport type EncodeFunctionDataParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  functionName extends\n    | ContractFunctionName<abi>\n    | Hex\n    | undefined = ContractFunctionName<abi>,\n  ///\n  hasFunctions = abi extends Abi\n    ? Abi extends abi\n      ? true\n      : [ExtractAbiFunctions<abi>] extends [never]\n        ? false\n        : true\n    : true,\n  allArgs = ContractFunctionArgs<\n    abi,\n    AbiStateMutability,\n    functionName extends ContractFunctionName<abi>\n      ? functionName\n      : ContractFunctionName<abi>\n  >,\n  allFunctionNames = ContractFunctionName<abi>,\n> = {\n  abi: abi\n} & UnionEvaluate<\n  IsNarrowable<abi, Abi> extends true\n    ? abi['length'] extends 1\n      ? { functionName?: functionName | allFunctionNames | Hex | undefined }\n      : { functionName: functionName | allFunctionNames | Hex }\n    : { functionName?: functionName | allFunctionNames | Hex | undefined }\n> &\n  UnionEvaluate<\n    readonly [] extends allArgs\n      ? { args?: allArgs | undefined }\n      : { args: allArgs }\n  > &\n  (hasFunctions extends true ? unknown : never)\n\nexport type EncodeFunctionDataReturnType = Hex\n\nexport type EncodeFunctionDataErrorType =\n  | AbiFunctionNotFoundErrorType\n  | ConcatHexErrorType\n  | EncodeAbiParametersErrorType\n  | FormatAbiItemErrorType\n  | GetAbiItemErrorType\n  | ToFunctionSelectorErrorType\n  | ErrorType\n\nexport function encodeFunctionData<\n  const abi extends Abi | readonly unknown[],\n  functionName extends ContractFunctionName<abi> | undefined = undefined,\n>(\n  parameters: EncodeFunctionDataParameters<abi, functionName>,\n): EncodeFunctionDataReturnType {\n  const { args } = parameters as EncodeFunctionDataParameters\n\n  const { abi, functionName } = (() => {\n    if (\n      parameters.abi.length === 1 &&\n      parameters.functionName?.startsWith('0x')\n    )\n      return parameters as { abi: Abi; functionName: Hex }\n    return prepareEncodeFunctionData(parameters)\n  })()\n\n  const abiItem = abi[0]\n  const signature = functionName\n\n  const data =\n    'inputs' in abiItem && abiItem.inputs\n      ? encodeAbiParameters(abiItem.inputs, args ?? [])\n      : undefined\n  return concatHex([signature, data ?? '0x'])\n}\n","import type { AbiParameter } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { AbiItem } from '../../types/contract.js'\nimport { stringify } from '../stringify.js'\n\nexport type FormatAbiItemWithArgsErrorType = ErrorType\n\nexport function formatAbiItemWithArgs({\n  abiItem,\n  args,\n  includeFunctionName = true,\n  includeName = false,\n}: {\n  abiItem: AbiItem\n  args: readonly unknown[]\n  includeFunctionName?: boolean | undefined\n  includeName?: boolean | undefined\n}) {\n  if (!('name' in abiItem)) return\n  if (!('inputs' in abiItem)) return\n  if (!abiItem.inputs) return\n  return `${includeFunctionName ? abiItem.name : ''}(${abiItem.inputs\n    .map(\n      (input: AbiParameter, i: number) =>\n        `${includeName && input.name ? `${input.name}: ` : ''}${\n          typeof args[i] === 'object' ? stringify(args[i]) : args[i]\n        }`,\n    )\n    .join(', ')})`\n}\n","import type { Abi, Address } from 'abitype'\n\nimport { parseAccount } from '../accounts/utils/parseAccount.js'\nimport type { CallParameters } from '../actions/public/call.js'\nimport { panicReasons } from '../constants/solidity.js'\nimport type { Chain } from '../types/chain.js'\nimport type { Hex } from '../types/misc.js'\nimport {\n  type DecodeErrorResultReturnType,\n  decodeErrorResult,\n} from '../utils/abi/decodeErrorResult.js'\nimport { formatAbiItem } from '../utils/abi/formatAbiItem.js'\nimport { formatAbiItemWithArgs } from '../utils/abi/formatAbiItemWithArgs.js'\nimport { getAbiItem } from '../utils/abi/getAbiItem.js'\nimport { formatEther } from '../utils/unit/formatEther.js'\nimport { formatGwei } from '../utils/unit/formatGwei.js'\n\nimport { AbiErrorSignatureNotFoundError } from './abi.js'\nimport { BaseError } from './base.js'\nimport { prettyStateOverride } from './stateOverride.js'\nimport { prettyPrint } from './transaction.js'\nimport { getContractAddress } from './utils.js'\n\nexport type CallExecutionErrorType = CallExecutionError & {\n  name: 'CallExecutionError'\n}\nexport class CallExecutionError extends BaseError {\n  override cause: BaseError\n\n  constructor(\n    cause: BaseError,\n    {\n      account: account_,\n      docsPath,\n      chain,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n      stateOverride,\n    }: CallParameters & {\n      chain?: Chain | undefined\n      docsPath?: string | undefined\n    },\n  ) {\n    const account = account_ ? parseAccount(account_) : undefined\n    let prettyArgs = prettyPrint({\n      from: account?.address,\n      to,\n      value:\n        typeof value !== 'undefined' &&\n        `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n      data,\n      gas,\n      gasPrice:\n        typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n      maxFeePerGas:\n        typeof maxFeePerGas !== 'undefined' &&\n        `${formatGwei(maxFeePerGas)} gwei`,\n      maxPriorityFeePerGas:\n        typeof maxPriorityFeePerGas !== 'undefined' &&\n        `${formatGwei(maxPriorityFeePerGas)} gwei`,\n      nonce,\n    })\n\n    if (stateOverride) {\n      prettyArgs += `\\n${prettyStateOverride(stateOverride)}`\n    }\n\n    super(cause.shortMessage, {\n      cause,\n      docsPath,\n      metaMessages: [\n        ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n        'Raw Call Arguments:',\n        prettyArgs,\n      ].filter(Boolean) as string[],\n      name: 'CallExecutionError',\n    })\n    this.cause = cause\n  }\n}\n\nexport type ContractFunctionExecutionErrorType =\n  ContractFunctionExecutionError & {\n    name: 'ContractFunctionExecutionError'\n  }\nexport class ContractFunctionExecutionError extends BaseError {\n  abi: Abi\n  args?: unknown[] | undefined\n  override cause: BaseError\n  contractAddress?: Address | undefined\n  formattedArgs?: string | undefined\n  functionName: string\n  sender?: Address | undefined\n\n  constructor(\n    cause: BaseError,\n    {\n      abi,\n      args,\n      contractAddress,\n      docsPath,\n      functionName,\n      sender,\n    }: {\n      abi: Abi\n      args?: any | undefined\n      contractAddress?: Address | undefined\n      docsPath?: string | undefined\n      functionName: string\n      sender?: Address | undefined\n    },\n  ) {\n    const abiItem = getAbiItem({ abi, args, name: functionName })\n    const formattedArgs = abiItem\n      ? formatAbiItemWithArgs({\n          abiItem,\n          args,\n          includeFunctionName: false,\n          includeName: false,\n        })\n      : undefined\n    const functionWithParams = abiItem\n      ? formatAbiItem(abiItem, { includeName: true })\n      : undefined\n\n    const prettyArgs = prettyPrint({\n      address: contractAddress && getContractAddress(contractAddress),\n      function: functionWithParams,\n      args:\n        formattedArgs &&\n        formattedArgs !== '()' &&\n        `${[...Array(functionName?.length ?? 0).keys()]\n          .map(() => ' ')\n          .join('')}${formattedArgs}`,\n      sender,\n    })\n\n    super(\n      cause.shortMessage ||\n        `An unknown error occurred while executing the contract function \"${functionName}\".`,\n      {\n        cause,\n        docsPath,\n        metaMessages: [\n          ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n          prettyArgs && 'Contract Call:',\n          prettyArgs,\n        ].filter(Boolean) as string[],\n        name: 'ContractFunctionExecutionError',\n      },\n    )\n    this.abi = abi\n    this.args = args\n    this.cause = cause\n    this.contractAddress = contractAddress\n    this.functionName = functionName\n    this.sender = sender\n  }\n}\n\nexport type ContractFunctionRevertedErrorType =\n  ContractFunctionRevertedError & {\n    name: 'ContractFunctionRevertedError'\n  }\nexport class ContractFunctionRevertedError extends BaseError {\n  data?: DecodeErrorResultReturnType | undefined\n  raw?: Hex | undefined\n  reason?: string | undefined\n  signature?: Hex | undefined\n\n  constructor({\n    abi,\n    data,\n    functionName,\n    message,\n  }: {\n    abi: Abi\n    data?: Hex | undefined\n    functionName: string\n    message?: string | undefined\n  }) {\n    let cause: Error | undefined\n    let decodedData: DecodeErrorResultReturnType | undefined\n    let metaMessages: string[] | undefined\n    let reason: string | undefined\n    if (data && data !== '0x') {\n      try {\n        decodedData = decodeErrorResult({ abi, data })\n        const { abiItem, errorName, args: errorArgs } = decodedData\n        if (errorName === 'Error') {\n          reason = (errorArgs as [string])[0]\n        } else if (errorName === 'Panic') {\n          const [firstArg] = errorArgs as [number]\n          reason = panicReasons[firstArg as keyof typeof panicReasons]\n        } else {\n          const errorWithParams = abiItem\n            ? formatAbiItem(abiItem, { includeName: true })\n            : undefined\n          const formattedArgs =\n            abiItem && errorArgs\n              ? formatAbiItemWithArgs({\n                  abiItem,\n                  args: errorArgs,\n                  includeFunctionName: false,\n                  includeName: false,\n                })\n              : undefined\n\n          metaMessages = [\n            errorWithParams ? `Error: ${errorWithParams}` : '',\n            formattedArgs && formattedArgs !== '()'\n              ? `       ${[...Array(errorName?.length ?? 0).keys()]\n                  .map(() => ' ')\n                  .join('')}${formattedArgs}`\n              : '',\n          ]\n        }\n      } catch (err) {\n        cause = err as Error\n      }\n    } else if (message) reason = message\n\n    let signature: Hex | undefined\n    if (cause instanceof AbiErrorSignatureNotFoundError) {\n      signature = cause.signature\n      metaMessages = [\n        `Unable to decode signature \"${signature}\" as it was not found on the provided ABI.`,\n        'Make sure you are using the correct ABI and that the error exists on it.',\n        `You can look up the decoded signature here: https://openchain.xyz/signatures?query=${signature}.`,\n      ]\n    }\n\n    super(\n      (reason && reason !== 'execution reverted') || signature\n        ? [\n            `The contract function \"${functionName}\" reverted with the following ${\n              signature ? 'signature' : 'reason'\n            }:`,\n            reason || signature,\n          ].join('\\n')\n        : `The contract function \"${functionName}\" reverted.`,\n      {\n        cause,\n        metaMessages,\n        name: 'ContractFunctionRevertedError',\n      },\n    )\n\n    this.data = decodedData\n    this.raw = data\n    this.reason = reason\n    this.signature = signature\n  }\n}\n\nexport type ContractFunctionZeroDataErrorType =\n  ContractFunctionZeroDataError & {\n    name: 'ContractFunctionZeroDataError'\n  }\nexport class ContractFunctionZeroDataError extends BaseError {\n  constructor({ functionName }: { functionName: string }) {\n    super(`The contract function \"${functionName}\" returned no data (\"0x\").`, {\n      metaMessages: [\n        'This could be due to any of the following:',\n        `  - The contract does not have the function \"${functionName}\",`,\n        '  - The parameters passed to the contract function may be invalid, or',\n        '  - The address is not a contract.',\n      ],\n      name: 'ContractFunctionZeroDataError',\n    })\n  }\n}\n\nexport type CounterfactualDeploymentFailedErrorType =\n  CounterfactualDeploymentFailedError & {\n    name: 'CounterfactualDeploymentFailedError'\n  }\nexport class CounterfactualDeploymentFailedError extends BaseError {\n  constructor({ factory }: { factory?: Address | undefined }) {\n    super(\n      `Deployment for counterfactual contract call failed${\n        factory ? ` for factory \"${factory}\".` : ''\n      }`,\n      {\n        metaMessages: [\n          'Please ensure:',\n          '- The `factory` is a valid contract deployment factory (ie. Create2 Factory, ERC-4337 Factory, etc).',\n          '- The `factoryData` is a valid encoded function call for contract deployment function on the factory.',\n        ],\n        name: 'CounterfactualDeploymentFailedError',\n      },\n    )\n  }\n}\n\nexport type RawContractErrorType = RawContractError & {\n  name: 'RawContractError'\n}\nexport class RawContractError extends BaseError {\n  code = 3\n\n  data?: Hex | { data?: Hex | undefined } | undefined\n\n  constructor({\n    data,\n    message,\n  }: {\n    data?: Hex | { data?: Hex | undefined } | undefined\n    message?: string | undefined\n  }) {\n    super(message || '', { name: 'RawContractError' })\n    this.data = data\n  }\n}\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","import {\n  InvalidHexBooleanError,\n  type InvalidHexBooleanErrorType,\n  SizeOverflowError,\n  type SizeOverflowErrorType,\n} from '../../errors/encoding.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type SizeErrorType, size as size_ } from '../data/size.js'\nimport { type TrimErrorType, trim } from '../data/trim.js'\n\nimport { type HexToBytesErrorType, hexToBytes } from './toBytes.js'\n\nexport type AssertSizeErrorType =\n  | SizeOverflowErrorType\n  | SizeErrorType\n  | ErrorType\n\nexport function assertSize(\n  hexOrBytes: Hex | ByteArray,\n  { size }: { size: number },\n): void {\n  if (size_(hexOrBytes) > size)\n    throw new SizeOverflowError({\n      givenSize: size_(hexOrBytes),\n      maxSize: size,\n    })\n}\n\nexport type FromHexParameters<\n  to extends 'string' | 'bigint' | 'number' | 'bytes' | 'boolean',\n> =\n  | to\n  | {\n      /** Size (in bytes) of the hex value. */\n      size?: number | undefined\n      /** Type to convert to. */\n      to: to\n    }\n\nexport type FromHexReturnType<to> = to extends 'string'\n  ? string\n  : to extends 'bigint'\n    ? bigint\n    : to extends 'number'\n      ? number\n      : to extends 'bytes'\n        ? ByteArray\n        : to extends 'boolean'\n          ? boolean\n          : never\n\nexport type FromHexErrorType =\n  | HexToNumberErrorType\n  | HexToBigIntErrorType\n  | HexToBoolErrorType\n  | HexToStringErrorType\n  | HexToBytesErrorType\n  | ErrorType\n\n/**\n * Decodes a hex string into a string, number, bigint, boolean, or byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex\n * - Example: https://viem.sh/docs/utilities/fromHex#usage\n *\n * @param hex Hex string to decode.\n * @param toOrOpts Type to convert to or options.\n * @returns Decoded value.\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x1a4', 'number')\n * // 420\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x48656c6c6f20576f726c6421', 'string')\n * // 'Hello world'\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {\n *   size: 32,\n *   to: 'string'\n * })\n * // 'Hello world'\n */\nexport function fromHex<\n  to extends 'string' | 'bigint' | 'number' | 'bytes' | 'boolean',\n>(hex: Hex, toOrOpts: FromHexParameters<to>): FromHexReturnType<to> {\n  const opts = typeof toOrOpts === 'string' ? { to: toOrOpts } : toOrOpts\n  const to = opts.to\n\n  if (to === 'number') return hexToNumber(hex, opts) as FromHexReturnType<to>\n  if (to === 'bigint') return hexToBigInt(hex, opts) as FromHexReturnType<to>\n  if (to === 'string') return hexToString(hex, opts) as FromHexReturnType<to>\n  if (to === 'boolean') return hexToBool(hex, opts) as FromHexReturnType<to>\n  return hexToBytes(hex, opts) as FromHexReturnType<to>\n}\n\nexport type HexToBigIntOpts = {\n  /** Whether or not the number of a signed representation. */\n  signed?: boolean | undefined\n  /** Size (in bytes) of the hex value. */\n  size?: number | undefined\n}\n\nexport type HexToBigIntErrorType = AssertSizeErrorType | ErrorType\n\n/**\n * Decodes a hex value into a bigint.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextobigint\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns BigInt value.\n *\n * @example\n * import { hexToBigInt } from 'viem'\n * const data = hexToBigInt('0x1a4', { signed: true })\n * // 420n\n *\n * @example\n * import { hexToBigInt } from 'viem'\n * const data = hexToBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // 420n\n */\nexport function hexToBigInt(hex: Hex, opts: HexToBigIntOpts = {}): bigint {\n  const { signed } = opts\n\n  if (opts.size) assertSize(hex, { size: opts.size })\n\n  const value = BigInt(hex)\n  if (!signed) return value\n\n  const size = (hex.length - 2) / 2\n  const max = (1n << (BigInt(size) * 8n - 1n)) - 1n\n  if (value <= max) return value\n\n  return value - BigInt(`0x${'f'.padStart(size * 2, 'f')}`) - 1n\n}\n\nexport type HexToBoolOpts = {\n  /** Size (in bytes) of the hex value. */\n  size?: number | undefined\n}\n\nexport type HexToBoolErrorType =\n  | AssertSizeErrorType\n  | InvalidHexBooleanErrorType\n  | TrimErrorType\n  | ErrorType\n\n/**\n * Decodes a hex value into a boolean.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextobool\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns Boolean value.\n *\n * @example\n * import { hexToBool } from 'viem'\n * const data = hexToBool('0x01')\n * // true\n *\n * @example\n * import { hexToBool } from 'viem'\n * const data = hexToBool('0x0000000000000000000000000000000000000000000000000000000000000001', { size: 32 })\n * // true\n */\nexport function hexToBool(hex_: Hex, opts: HexToBoolOpts = {}): boolean {\n  let hex = hex_\n  if (opts.size) {\n    assertSize(hex, { size: opts.size })\n    hex = trim(hex)\n  }\n  if (trim(hex) === '0x00') return false\n  if (trim(hex) === '0x01') return true\n  throw new InvalidHexBooleanError(hex)\n}\n\nexport type HexToNumberOpts = HexToBigIntOpts\n\nexport type HexToNumberErrorType = HexToBigIntErrorType | ErrorType\n\n/**\n * Decodes a hex string into a number.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextonumber\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns Number value.\n *\n * @example\n * import { hexToNumber } from 'viem'\n * const data = hexToNumber('0x1a4')\n * // 420\n *\n * @example\n * import { hexToNumber } from 'viem'\n * const data = hexToBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // 420\n */\nexport function hexToNumber(hex: Hex, opts: HexToNumberOpts = {}): number {\n  return Number(hexToBigInt(hex, opts))\n}\n\nexport type HexToStringOpts = {\n  /** Size (in bytes) of the hex value. */\n  size?: number | undefined\n}\n\nexport type HexToStringErrorType =\n  | AssertSizeErrorType\n  | HexToBytesErrorType\n  | TrimErrorType\n  | ErrorType\n\n/**\n * Decodes a hex value into a UTF-8 string.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextostring\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns String value.\n *\n * @example\n * import { hexToString } from 'viem'\n * const data = hexToString('0x48656c6c6f20576f726c6421')\n * // 'Hello world!'\n *\n * @example\n * import { hexToString } from 'viem'\n * const data = hexToString('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {\n *  size: 32,\n * })\n * // 'Hello world'\n */\nexport function hexToString(hex: Hex, opts: HexToStringOpts = {}): string {\n  let bytes = hexToBytes(hex)\n  if (opts.size) {\n    assertSize(bytes, { size: opts.size })\n    bytes = trim(bytes, { dir: 'right' })\n  }\n  return new TextDecoder().decode(bytes)\n}\n","import type { Abi, AbiEvent, AbiParameter } from 'abitype'\n\nimport type { Hex } from '../types/misc.js'\nimport { formatAbiItem, formatAbiParams } from '../utils/abi/formatAbiItem.js'\nimport { size } from '../utils/data/size.js'\n\nimport { BaseError } from './base.js'\n\nexport type AbiConstructorNotFoundErrorType = AbiConstructorNotFoundError & {\n  name: 'AbiConstructorNotFoundError'\n}\nexport class AbiConstructorNotFoundError extends BaseError {\n  constructor({ docsPath }: { docsPath: string }) {\n    super(\n      [\n        'A constructor was not found on the ABI.',\n        'Make sure you are using the correct ABI and that the constructor exists on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiConstructorNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiConstructorParamsNotFoundErrorType =\n  AbiConstructorParamsNotFoundError & {\n    name: 'AbiConstructorParamsNotFoundError'\n  }\n\nexport class AbiConstructorParamsNotFoundError extends BaseError {\n  constructor({ docsPath }: { docsPath: string }) {\n    super(\n      [\n        'Constructor arguments were provided (`args`), but a constructor parameters (`inputs`) were not found on the ABI.',\n        'Make sure you are using the correct ABI, and that the `inputs` attribute on the constructor exists.',\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiConstructorParamsNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiDecodingDataSizeInvalidErrorType =\n  AbiDecodingDataSizeInvalidError & {\n    name: 'AbiDecodingDataSizeInvalidError'\n  }\nexport class AbiDecodingDataSizeInvalidError extends BaseError {\n  constructor({ data, size }: { data: Hex; size: number }) {\n    super(\n      [\n        `Data size of ${size} bytes is invalid.`,\n        'Size must be in increments of 32 bytes (size % 32 === 0).',\n      ].join('\\n'),\n      {\n        metaMessages: [`Data: ${data} (${size} bytes)`],\n        name: 'AbiDecodingDataSizeInvalidError',\n      },\n    )\n  }\n}\n\nexport type AbiDecodingDataSizeTooSmallErrorType =\n  AbiDecodingDataSizeTooSmallError & {\n    name: 'AbiDecodingDataSizeTooSmallError'\n  }\nexport class AbiDecodingDataSizeTooSmallError extends BaseError {\n  data: Hex\n  params: readonly AbiParameter[]\n  size: number\n\n  constructor({\n    data,\n    params,\n    size,\n  }: { data: Hex; params: readonly AbiParameter[]; size: number }) {\n    super(\n      [`Data size of ${size} bytes is too small for given parameters.`].join(\n        '\\n',\n      ),\n      {\n        metaMessages: [\n          `Params: (${formatAbiParams(params, { includeName: true })})`,\n          `Data:   ${data} (${size} bytes)`,\n        ],\n        name: 'AbiDecodingDataSizeTooSmallError',\n      },\n    )\n\n    this.data = data\n    this.params = params\n    this.size = size\n  }\n}\n\nexport type AbiDecodingZeroDataErrorType = AbiDecodingZeroDataError & {\n  name: 'AbiDecodingZeroDataError'\n}\nexport class AbiDecodingZeroDataError extends BaseError {\n  constructor() {\n    super('Cannot decode zero data (\"0x\") with ABI parameters.', {\n      name: 'AbiDecodingZeroDataError',\n    })\n  }\n}\n\nexport type AbiEncodingArrayLengthMismatchErrorType =\n  AbiEncodingArrayLengthMismatchError & {\n    name: 'AbiEncodingArrayLengthMismatchError'\n  }\nexport class AbiEncodingArrayLengthMismatchError extends BaseError {\n  constructor({\n    expectedLength,\n    givenLength,\n    type,\n  }: { expectedLength: number; givenLength: number; type: string }) {\n    super(\n      [\n        `ABI encoding array length mismatch for type ${type}.`,\n        `Expected length: ${expectedLength}`,\n        `Given length: ${givenLength}`,\n      ].join('\\n'),\n      { name: 'AbiEncodingArrayLengthMismatchError' },\n    )\n  }\n}\n\nexport type AbiEncodingBytesSizeMismatchErrorType =\n  AbiEncodingBytesSizeMismatchError & {\n    name: 'AbiEncodingBytesSizeMismatchError'\n  }\nexport class AbiEncodingBytesSizeMismatchError extends BaseError {\n  constructor({ expectedSize, value }: { expectedSize: number; value: Hex }) {\n    super(\n      `Size of bytes \"${value}\" (bytes${size(\n        value,\n      )}) does not match expected size (bytes${expectedSize}).`,\n      { name: 'AbiEncodingBytesSizeMismatchError' },\n    )\n  }\n}\n\nexport type AbiEncodingLengthMismatchErrorType =\n  AbiEncodingLengthMismatchError & {\n    name: 'AbiEncodingLengthMismatchError'\n  }\nexport class AbiEncodingLengthMismatchError extends BaseError {\n  constructor({\n    expectedLength,\n    givenLength,\n  }: { expectedLength: number; givenLength: number }) {\n    super(\n      [\n        'ABI encoding params/values length mismatch.',\n        `Expected length (params): ${expectedLength}`,\n        `Given length (values): ${givenLength}`,\n      ].join('\\n'),\n      { name: 'AbiEncodingLengthMismatchError' },\n    )\n  }\n}\n\nexport type AbiErrorInputsNotFoundErrorType = AbiErrorInputsNotFoundError & {\n  name: 'AbiErrorInputsNotFoundError'\n}\nexport class AbiErrorInputsNotFoundError extends BaseError {\n  constructor(errorName: string, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Arguments (\\`args\\`) were provided to \"${errorName}\", but \"${errorName}\" on the ABI does not contain any parameters (\\`inputs\\`).`,\n        'Cannot encode error result without knowing what the parameter types are.',\n        'Make sure you are using the correct ABI and that the inputs exist on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiErrorInputsNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiErrorNotFoundErrorType = AbiErrorNotFoundError & {\n  name: 'AbiErrorNotFoundError'\n}\nexport class AbiErrorNotFoundError extends BaseError {\n  constructor(\n    errorName?: string | undefined,\n    { docsPath }: { docsPath?: string | undefined } = {},\n  ) {\n    super(\n      [\n        `Error ${errorName ? `\"${errorName}\" ` : ''}not found on ABI.`,\n        'Make sure you are using the correct ABI and that the error exists on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiErrorNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiErrorSignatureNotFoundErrorType =\n  AbiErrorSignatureNotFoundError & {\n    name: 'AbiErrorSignatureNotFoundError'\n  }\nexport class AbiErrorSignatureNotFoundError extends BaseError {\n  signature: Hex\n\n  constructor(signature: Hex, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Encoded error signature \"${signature}\" not found on ABI.`,\n        'Make sure you are using the correct ABI and that the error exists on it.',\n        `You can look up the decoded signature here: https://openchain.xyz/signatures?query=${signature}.`,\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiErrorSignatureNotFoundError',\n      },\n    )\n    this.signature = signature\n  }\n}\n\nexport type AbiEventSignatureEmptyTopicsErrorType =\n  AbiEventSignatureEmptyTopicsError & {\n    name: 'AbiEventSignatureEmptyTopicsError'\n  }\nexport class AbiEventSignatureEmptyTopicsError extends BaseError {\n  constructor({ docsPath }: { docsPath: string }) {\n    super('Cannot extract event signature from empty topics.', {\n      docsPath,\n      name: 'AbiEventSignatureEmptyTopicsError',\n    })\n  }\n}\n\nexport type AbiEventSignatureNotFoundErrorType =\n  AbiEventSignatureNotFoundError & {\n    name: 'AbiEventSignatureNotFoundError'\n  }\nexport class AbiEventSignatureNotFoundError extends BaseError {\n  constructor(signature: Hex, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Encoded event signature \"${signature}\" not found on ABI.`,\n        'Make sure you are using the correct ABI and that the event exists on it.',\n        `You can look up the signature here: https://openchain.xyz/signatures?query=${signature}.`,\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiEventSignatureNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiEventNotFoundErrorType = AbiEventNotFoundError & {\n  name: 'AbiEventNotFoundError'\n}\nexport class AbiEventNotFoundError extends BaseError {\n  constructor(\n    eventName?: string | undefined,\n    { docsPath }: { docsPath?: string | undefined } = {},\n  ) {\n    super(\n      [\n        `Event ${eventName ? `\"${eventName}\" ` : ''}not found on ABI.`,\n        'Make sure you are using the correct ABI and that the event exists on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiEventNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiFunctionNotFoundErrorType = AbiFunctionNotFoundError & {\n  name: 'AbiFunctionNotFoundError'\n}\nexport class AbiFunctionNotFoundError extends BaseError {\n  constructor(\n    functionName?: string | undefined,\n    { docsPath }: { docsPath?: string | undefined } = {},\n  ) {\n    super(\n      [\n        `Function ${functionName ? `\"${functionName}\" ` : ''}not found on ABI.`,\n        'Make sure you are using the correct ABI and that the function exists on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiFunctionNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiFunctionOutputsNotFoundErrorType =\n  AbiFunctionOutputsNotFoundError & {\n    name: 'AbiFunctionOutputsNotFoundError'\n  }\nexport class AbiFunctionOutputsNotFoundError extends BaseError {\n  constructor(functionName: string, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Function \"${functionName}\" does not contain any \\`outputs\\` on ABI.`,\n        'Cannot decode function result without knowing what the parameter types are.',\n        'Make sure you are using the correct ABI and that the function exists on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiFunctionOutputsNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiFunctionSignatureNotFoundErrorType =\n  AbiFunctionSignatureNotFoundError & {\n    name: 'AbiFunctionSignatureNotFoundError'\n  }\nexport class AbiFunctionSignatureNotFoundError extends BaseError {\n  constructor(signature: Hex, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Encoded function signature \"${signature}\" not found on ABI.`,\n        'Make sure you are using the correct ABI and that the function exists on it.',\n        `You can look up the signature here: https://openchain.xyz/signatures?query=${signature}.`,\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiFunctionSignatureNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiItemAmbiguityErrorType = AbiItemAmbiguityError & {\n  name: 'AbiItemAmbiguityError'\n}\nexport class AbiItemAmbiguityError extends BaseError {\n  constructor(\n    x: { abiItem: Abi[number]; type: string },\n    y: { abiItem: Abi[number]; type: string },\n  ) {\n    super('Found ambiguous types in overloaded ABI items.', {\n      metaMessages: [\n        `\\`${x.type}\\` in \\`${formatAbiItem(x.abiItem)}\\`, and`,\n        `\\`${y.type}\\` in \\`${formatAbiItem(y.abiItem)}\\``,\n        '',\n        'These types encode differently and cannot be distinguished at runtime.',\n        'Remove one of the ambiguous items in the ABI.',\n      ],\n      name: 'AbiItemAmbiguityError',\n    })\n  }\n}\n\nexport type BytesSizeMismatchErrorType = BytesSizeMismatchError & {\n  name: 'BytesSizeMismatchError'\n}\nexport class BytesSizeMismatchError extends BaseError {\n  constructor({\n    expectedSize,\n    givenSize,\n  }: { expectedSize: number; givenSize: number }) {\n    super(`Expected bytes${expectedSize}, got bytes${givenSize}.`, {\n      name: 'BytesSizeMismatchError',\n    })\n  }\n}\n\nexport type DecodeLogDataMismatchErrorType = DecodeLogDataMismatch & {\n  name: 'DecodeLogDataMismatch'\n}\nexport class DecodeLogDataMismatch extends BaseError {\n  abiItem: AbiEvent\n  data: Hex\n  params: readonly AbiParameter[]\n  size: number\n\n  constructor({\n    abiItem,\n    data,\n    params,\n    size,\n  }: {\n    abiItem: AbiEvent\n    data: Hex\n    params: readonly AbiParameter[]\n    size: number\n  }) {\n    super(\n      [\n        `Data size of ${size} bytes is too small for non-indexed event parameters.`,\n      ].join('\\n'),\n      {\n        metaMessages: [\n          `Params: (${formatAbiParams(params, { includeName: true })})`,\n          `Data:   ${data} (${size} bytes)`,\n        ],\n        name: 'DecodeLogDataMismatch',\n      },\n    )\n\n    this.abiItem = abiItem\n    this.data = data\n    this.params = params\n    this.size = size\n  }\n}\n\nexport type DecodeLogTopicsMismatchErrorType = DecodeLogTopicsMismatch & {\n  name: 'DecodeLogTopicsMismatch'\n}\nexport class DecodeLogTopicsMismatch extends BaseError {\n  abiItem: AbiEvent\n\n  constructor({\n    abiItem,\n    param,\n  }: {\n    abiItem: AbiEvent\n    param: AbiParameter & { indexed: boolean }\n  }) {\n    super(\n      [\n        `Expected a topic for indexed event parameter${\n          param.name ? ` \"${param.name}\"` : ''\n        } on event \"${formatAbiItem(abiItem, { includeName: true })}\".`,\n      ].join('\\n'),\n      { name: 'DecodeLogTopicsMismatch' },\n    )\n\n    this.abiItem = abiItem\n  }\n}\n\nexport type InvalidAbiEncodingTypeErrorType = InvalidAbiEncodingTypeError & {\n  name: 'InvalidAbiEncodingTypeError'\n}\nexport class InvalidAbiEncodingTypeError extends BaseError {\n  constructor(type: string, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Type \"${type}\" is not a valid encoding type.`,\n        'Please provide a valid ABI type.',\n      ].join('\\n'),\n      { docsPath, name: 'InvalidAbiEncodingType' },\n    )\n  }\n}\n\nexport type InvalidAbiDecodingTypeErrorType = InvalidAbiDecodingTypeError & {\n  name: 'InvalidAbiDecodingTypeError'\n}\nexport class InvalidAbiDecodingTypeError extends BaseError {\n  constructor(type: string, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Type \"${type}\" is not a valid decoding type.`,\n        'Please provide a valid ABI type.',\n      ].join('\\n'),\n      { docsPath, name: 'InvalidAbiDecodingType' },\n    )\n  }\n}\n\nexport type InvalidArrayErrorType = InvalidArrayError & {\n  name: 'InvalidArrayError'\n}\nexport class InvalidArrayError extends BaseError {\n  constructor(value: unknown) {\n    super([`Value \"${value}\" is not a valid array.`].join('\\n'), {\n      name: 'InvalidArrayError',\n    })\n  }\n}\n\nexport type InvalidDefinitionTypeErrorType = InvalidDefinitionTypeError & {\n  name: 'InvalidDefinitionTypeError'\n}\nexport class InvalidDefinitionTypeError extends BaseError {\n  constructor(type: string) {\n    super(\n      [\n        `\"${type}\" is not a valid definition type.`,\n        'Valid types: \"function\", \"event\", \"error\"',\n      ].join('\\n'),\n      { name: 'InvalidDefinitionTypeError' },\n    )\n  }\n}\n\nexport type UnsupportedPackedAbiTypeErrorType = UnsupportedPackedAbiType & {\n  name: 'UnsupportedPackedAbiType'\n}\nexport class UnsupportedPackedAbiType extends BaseError {\n  constructor(type: unknown) {\n    super(`Type \"${type}\" is not supported for packed encoding.`, {\n      name: 'UnsupportedPackedAbiType',\n    })\n  }\n}\n","import type { Abi, AbiStateMutability } from 'abitype'\n\nimport { AbiFunctionSignatureNotFoundError } from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  ContractFunctionArgs,\n  ContractFunctionName,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { IsNarrowable, UnionEvaluate } from '../../types/utils.js'\nimport { type SliceErrorType, slice } from '../data/slice.js'\nimport {\n  type ToFunctionSelectorErrorType,\n  toFunctionSelector,\n} from '../hash/toFunctionSelector.js'\nimport {\n  type DecodeAbiParametersErrorType,\n  decodeAbiParameters,\n} from './decodeAbiParameters.js'\nimport { type FormatAbiItemErrorType, formatAbiItem } from './formatAbiItem.js'\n\nexport type DecodeFunctionDataParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n> = {\n  abi: abi\n  data: Hex\n}\n\nexport type DecodeFunctionDataReturnType<\n  abi extends Abi | readonly unknown[] = Abi,\n  ///\n  allFunctionNames extends\n    ContractFunctionName<abi> = ContractFunctionName<abi>,\n> = IsNarrowable<abi, Abi> extends true\n  ? UnionEvaluate<\n      {\n        [functionName in allFunctionNames]: {\n          args: ContractFunctionArgs<abi, AbiStateMutability, functionName>\n          functionName: functionName\n        }\n      }[allFunctionNames]\n    >\n  : {\n      args: readonly unknown[] | undefined\n      functionName: string\n    }\n\nexport type DecodeFunctionDataErrorType =\n  | AbiFunctionSignatureNotFoundError\n  | DecodeAbiParametersErrorType\n  | FormatAbiItemErrorType\n  | ToFunctionSelectorErrorType\n  | SliceErrorType\n  | ErrorType\n\nexport function decodeFunctionData<const abi extends Abi | readonly unknown[]>(\n  parameters: DecodeFunctionDataParameters<abi>,\n) {\n  const { abi, data } = parameters as DecodeFunctionDataParameters\n  const signature = slice(data, 0, 4)\n  const description = abi.find(\n    (x) =>\n      x.type === 'function' &&\n      signature === toFunctionSelector(formatAbiItem(x)),\n  )\n  if (!description)\n    throw new AbiFunctionSignatureNotFoundError(signature, {\n      docsPath: '/docs/contract/decodeFunctionData',\n    })\n  return {\n    functionName: (description as { name: string }).name,\n    args: ('inputs' in description &&\n    description.inputs &&\n    description.inputs.length > 0\n      ? decodeAbiParameters(description.inputs, slice(data, 4))\n      : undefined) as readonly unknown[] | undefined,\n  } as DecodeFunctionDataReturnType<abi>\n}\n","// TODO: This looks cool. Need to check the performance of `new RegExp` versus defined inline though.\n// https://twitter.com/GabrielVergnaud/status/1622906834343366657\nexport function execTyped<type>(regex: RegExp, string: string) {\n  const match = regex.exec(string)\n  return match?.groups as type | undefined\n}\n\n// `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\n// https://regexr.com/6va55\nexport const bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/\n\n// `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\n// https://regexr.com/6v8hp\nexport const integerRegex =\n  /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/\n\nexport const isTupleRegex = /^\\(.+?\\).*?$/\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.production.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.development.js');\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\ntype TrimOptions = {\n  dir?: 'left' | 'right' | undefined\n}\nexport type TrimReturnType<value extends ByteArray | Hex> = value extends Hex\n  ? Hex\n  : ByteArray\n\nexport type TrimErrorType = ErrorType\n\nexport function trim<value extends ByteArray | Hex>(\n  hexOrBytes: value,\n  { dir = 'left' }: TrimOptions = {},\n): TrimReturnType<value> {\n  let data: any =\n    typeof hexOrBytes === 'string' ? hexOrBytes.replace('0x', '') : hexOrBytes\n\n  let sliceLength = 0\n  for (let i = 0; i < data.length - 1; i++) {\n    if (data[dir === 'left' ? i : data.length - i - 1].toString() === '0')\n      sliceLength++\n    else break\n  }\n  data =\n    dir === 'left'\n      ? data.slice(sliceLength)\n      : data.slice(0, data.length - sliceLength)\n\n  if (typeof hexOrBytes === 'string') {\n    if (data.length === 1 && dir === 'right') data = `${data}0`\n    return `0x${\n      data.length % 2 === 1 ? `0${data}` : data\n    }` as TrimReturnType<value>\n  }\n  return data as TrimReturnType<value>\n}\n","/** @internal */\nexport type PromiseWithResolvers<type> = {\n  promise: Promise<type>\n  resolve: (value: type | PromiseLike<type>) => void\n  reject: (reason?: unknown) => void\n}\n\n/** @internal */\nexport function withResolvers<type>(): PromiseWithResolvers<type> {\n  let resolve: PromiseWithResolvers<type>['resolve'] = () => undefined\n  let reject: PromiseWithResolvers<type>['reject'] = () => undefined\n\n  const promise = new Promise<type>((resolve_, reject_) => {\n    resolve = resolve_\n    reject = reject_\n  })\n\n  return { promise, resolve, reject }\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","import { equalBytes } from '@noble/curves/abstract/utils'\nimport * as Bytes from './Bytes.js'\nimport * as Errors from './Errors.js'\nimport * as internal_bytes from './internal/bytes.js'\nimport * as internal from './internal/hex.js'\nimport * as Json from './Json.js'\n\nconst encoder = /*#__PURE__*/ new TextEncoder()\n\nconst hexes = /*#__PURE__*/ Array.from({ length: 256 }, (_v, i) =>\n  i.toString(16).padStart(2, '0'),\n)\n\n/** Root type for a Hex string. */\nexport type Hex = `0x${string}`\n\n/**\n * Asserts if the given value is {@link ox#Hex.Hex}.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.assert('abc')\n * // @error: InvalidHexValueTypeError:\n * // @error: Value `\"abc\"` of type `string` is an invalid hex type.\n * // @error: Hex types must be represented as `\"0x\\${string}\"`.\n * ```\n *\n * @param value - The value to assert.\n * @param options - Options.\n */\nexport function assert(\n  value: unknown,\n  options: assert.Options = {},\n): asserts value is Hex {\n  const { strict = false } = options\n  if (!value) throw new InvalidHexTypeError(value)\n  if (typeof value !== 'string') throw new InvalidHexTypeError(value)\n  if (strict) {\n    if (!/^0x[0-9a-fA-F]*$/.test(value)) throw new InvalidHexValueError(value)\n  }\n  if (!value.startsWith('0x')) throw new InvalidHexValueError(value)\n}\n\nexport declare namespace assert {\n  type Options = {\n    /** Checks if the {@link ox#Hex.Hex} value contains invalid hexadecimal characters. @default false */\n    strict?: boolean | undefined\n  }\n\n  type ErrorType =\n    | InvalidHexTypeError\n    | InvalidHexValueError\n    | Errors.GlobalErrorType\n}\n\n/**\n * Concatenates two or more {@link ox#Hex.Hex}.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.concat('0x123', '0x456')\n * // @log: '0x123456'\n * ```\n *\n * @param values - The {@link ox#Hex.Hex} values to concatenate.\n * @returns The concatenated {@link ox#Hex.Hex} value.\n */\nexport function concat(...values: readonly Hex[]): Hex {\n  return `0x${(values as Hex[]).reduce((acc, x) => acc + x.replace('0x', ''), '')}`\n}\n\nexport declare namespace concat {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Instantiates a {@link ox#Hex.Hex} value from a hex string or {@link ox#Bytes.Bytes} value.\n *\n * :::tip\n *\n * To instantiate from a **Boolean**, **String**, or **Number**, use one of the following:\n *\n * - `Hex.fromBoolean`\n *\n * - `Hex.fromString`\n *\n * - `Hex.fromNumber`\n *\n * :::\n *\n * @example\n * ```ts twoslash\n * import { Bytes, Hex } from 'ox'\n *\n * Hex.from('0x48656c6c6f20576f726c6421')\n * // @log: '0x48656c6c6f20576f726c6421'\n *\n * Hex.from(Bytes.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))\n * // @log: '0x48656c6c6f20576f726c6421'\n * ```\n *\n * @param value - The {@link ox#Bytes.Bytes} value to encode.\n * @returns The encoded {@link ox#Hex.Hex} value.\n */\nexport function from(value: Hex | Bytes.Bytes | readonly number[]): Hex {\n  if (value instanceof Uint8Array) return fromBytes(value)\n  if (Array.isArray(value)) return fromBytes(new Uint8Array(value))\n  return value as never\n}\n\nexport declare namespace from {\n  type Options = {\n    /** The size (in bytes) of the output hex value. */\n    size?: number | undefined\n  }\n\n  type ErrorType = fromBytes.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Encodes a boolean into a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.fromBoolean(true)\n * // @log: '0x1'\n *\n * Hex.fromBoolean(false)\n * // @log: '0x0'\n *\n * Hex.fromBoolean(true, { size: 32 })\n * // @log: '0x0000000000000000000000000000000000000000000000000000000000000001'\n * ```\n *\n * @param value - The boolean value to encode.\n * @param options - Options.\n * @returns The encoded {@link ox#Hex.Hex} value.\n */\nexport function fromBoolean(\n  value: boolean,\n  options: fromBoolean.Options = {},\n): Hex {\n  const hex: Hex = `0x${Number(value)}`\n  if (typeof options.size === 'number') {\n    internal.assertSize(hex, options.size)\n    return padLeft(hex, options.size)\n  }\n  return hex\n}\n\nexport declare namespace fromBoolean {\n  type Options = {\n    /** The size (in bytes) of the output hex value. */\n    size?: number | undefined\n  }\n\n  type ErrorType =\n    | internal.assertSize.ErrorType\n    | padLeft.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Encodes a {@link ox#Bytes.Bytes} value into a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Bytes, Hex } from 'ox'\n *\n * Hex.fromBytes(Bytes.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))\n * // @log: '0x48656c6c6f20576f726c6421'\n * ```\n *\n * @param value - The {@link ox#Bytes.Bytes} value to encode.\n * @param options - Options.\n * @returns The encoded {@link ox#Hex.Hex} value.\n */\nexport function fromBytes(\n  value: Bytes.Bytes,\n  options: fromBytes.Options = {},\n): Hex {\n  let string = ''\n  for (let i = 0; i < value.length; i++) string += hexes[value[i]!]\n  const hex = `0x${string}` as const\n\n  if (typeof options.size === 'number') {\n    internal.assertSize(hex, options.size)\n    return padRight(hex, options.size)\n  }\n  return hex\n}\n\nexport declare namespace fromBytes {\n  type Options = {\n    /** The size (in bytes) of the output hex value. */\n    size?: number | undefined\n  }\n\n  type ErrorType =\n    | internal.assertSize.ErrorType\n    | padRight.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Encodes a number or bigint into a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.fromNumber(420)\n * // @log: '0x1a4'\n *\n * Hex.fromNumber(420, { size: 32 })\n * // @log: '0x00000000000000000000000000000000000000000000000000000000000001a4'\n * ```\n *\n * @param value - The number or bigint value to encode.\n * @param options - Options.\n * @returns The encoded {@link ox#Hex.Hex} value.\n */\nexport function fromNumber(\n  value: number | bigint,\n  options: fromNumber.Options = {},\n): Hex {\n  const { signed, size } = options\n\n  const value_ = BigInt(value)\n\n  let maxValue: bigint | number | undefined\n  if (size) {\n    if (signed) maxValue = (1n << (BigInt(size) * 8n - 1n)) - 1n\n    else maxValue = 2n ** (BigInt(size) * 8n) - 1n\n  } else if (typeof value === 'number') {\n    maxValue = BigInt(Number.MAX_SAFE_INTEGER)\n  }\n\n  const minValue = typeof maxValue === 'bigint' && signed ? -maxValue - 1n : 0\n\n  if ((maxValue && value_ > maxValue) || value_ < minValue) {\n    const suffix = typeof value === 'bigint' ? 'n' : ''\n    throw new IntegerOutOfRangeError({\n      max: maxValue ? `${maxValue}${suffix}` : undefined,\n      min: `${minValue}${suffix}`,\n      signed,\n      size,\n      value: `${value}${suffix}`,\n    })\n  }\n\n  const stringValue = (\n    signed && value_ < 0 ? (1n << BigInt(size * 8)) + BigInt(value_) : value_\n  ).toString(16)\n\n  const hex = `0x${stringValue}` as Hex\n  if (size) return padLeft(hex, size) as Hex\n  return hex\n}\n\nexport declare namespace fromNumber {\n  type Options =\n    | {\n        /** Whether or not the number of a signed representation. */\n        signed?: boolean | undefined\n        /** The size (in bytes) of the output hex value. */\n        size: number\n      }\n    | {\n        signed?: undefined\n        /** The size (in bytes) of the output hex value. */\n        size?: number | undefined\n      }\n\n  type ErrorType =\n    | IntegerOutOfRangeError\n    | padLeft.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Encodes a string into a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n * Hex.fromString('Hello World!')\n * // '0x48656c6c6f20576f726c6421'\n *\n * Hex.fromString('Hello World!', { size: 32 })\n * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'\n * ```\n *\n * @param value - The string value to encode.\n * @param options - Options.\n * @returns The encoded {@link ox#Hex.Hex} value.\n */\nexport function fromString(\n  value: string,\n  options: fromString.Options = {},\n): Hex {\n  return fromBytes(encoder.encode(value), options)\n}\n\nexport declare namespace fromString {\n  type Options = {\n    /** The size (in bytes) of the output hex value. */\n    size?: number | undefined\n  }\n\n  type ErrorType = fromBytes.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Checks if two {@link ox#Hex.Hex} values are equal.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.isEqual('0xdeadbeef', '0xdeadbeef')\n * // @log: true\n *\n * Hex.isEqual('0xda', '0xba')\n * // @log: false\n * ```\n *\n * @param hexA - The first {@link ox#Hex.Hex} value.\n * @param hexB - The second {@link ox#Hex.Hex} value.\n * @returns `true` if the two {@link ox#Hex.Hex} values are equal, `false` otherwise.\n */\nexport function isEqual(hexA: Hex, hexB: Hex) {\n  return equalBytes(Bytes.fromHex(hexA), Bytes.fromHex(hexB))\n}\n\nexport declare namespace isEqual {\n  type ErrorType = Bytes.fromHex.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Pads a {@link ox#Hex.Hex} value to the left with zero bytes until it reaches the given `size` (default: 32 bytes).\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.padLeft('0x1234', 4)\n * // @log: '0x00001234'\n * ```\n *\n * @param value - The {@link ox#Hex.Hex} value to pad.\n * @param size - The size (in bytes) of the output hex value.\n * @returns The padded {@link ox#Hex.Hex} value.\n */\nexport function padLeft(\n  value: Hex,\n  size?: number | undefined,\n): padLeft.ReturnType {\n  return internal.pad(value, { dir: 'left', size })\n}\n\nexport declare namespace padLeft {\n  type ReturnType = Hex\n  type ErrorType = internal.pad.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Pads a {@link ox#Hex.Hex} value to the right with zero bytes until it reaches the given `size` (default: 32 bytes).\n *\n * @example\n * ```ts\n * import { Hex } from 'ox'\n *\n * Hex.padRight('0x1234', 4)\n * // @log: '0x12340000'\n * ```\n *\n * @param value - The {@link ox#Hex.Hex} value to pad.\n * @param size - The size (in bytes) of the output hex value.\n * @returns The padded {@link ox#Hex.Hex} value.\n */\nexport function padRight(\n  value: Hex,\n  size?: number | undefined,\n): padRight.ReturnType {\n  return internal.pad(value, { dir: 'right', size })\n}\n\nexport declare namespace padRight {\n  type ReturnType = Hex\n  type ErrorType = internal.pad.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Generates a random {@link ox#Hex.Hex} value of the specified length.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * const hex = Hex.random(32)\n * // @log: '0x...'\n * ```\n *\n * @returns Random {@link ox#Hex.Hex} value.\n */\nexport function random(length: number): Hex {\n  return fromBytes(Bytes.random(length))\n}\n\nexport declare namespace random {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Returns a section of a {@link ox#Bytes.Bytes} value given a start/end bytes offset.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.slice('0x0123456789', 1, 4)\n * // @log: '0x234567'\n * ```\n *\n * @param value - The {@link ox#Hex.Hex} value to slice.\n * @param start - The start offset (in bytes).\n * @param end - The end offset (in bytes).\n * @param options - Options.\n * @returns The sliced {@link ox#Hex.Hex} value.\n */\nexport function slice(\n  value: Hex,\n  start?: number | undefined,\n  end?: number | undefined,\n  options: slice.Options = {},\n): Hex {\n  const { strict } = options\n  internal.assertStartOffset(value, start)\n  const value_ = `0x${value\n    .replace('0x', '')\n    .slice((start ?? 0) * 2, (end ?? value.length) * 2)}` as const\n  if (strict) internal.assertEndOffset(value_, start, end)\n  return value_\n}\n\nexport declare namespace slice {\n  type Options = {\n    /** Asserts that the sliced value is the same size as the given start/end offsets. */\n    strict?: boolean | undefined\n  }\n\n  type ErrorType =\n    | internal.assertStartOffset.ErrorType\n    | internal.assertEndOffset.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Retrieves the size of a {@link ox#Hex.Hex} value (in bytes).\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.size('0xdeadbeef')\n * // @log: 4\n * ```\n *\n * @param value - The {@link ox#Hex.Hex} value to get the size of.\n * @returns The size of the {@link ox#Hex.Hex} value (in bytes).\n */\nexport function size(value: Hex): number {\n  return Math.ceil((value.length - 2) / 2)\n}\n\nexport declare namespace size {\n  export type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Trims leading zeros from a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.trimLeft('0x00000000deadbeef')\n * // @log: '0xdeadbeef'\n * ```\n *\n * @param value - The {@link ox#Hex.Hex} value to trim.\n * @returns The trimmed {@link ox#Hex.Hex} value.\n */\nexport function trimLeft(value: Hex): trimLeft.ReturnType {\n  return internal.trim(value, { dir: 'left' })\n}\n\nexport declare namespace trimLeft {\n  type ReturnType = Hex\n\n  type ErrorType = internal.trim.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Trims trailing zeros from a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.trimRight('0xdeadbeef00000000')\n * // @log: '0xdeadbeef'\n * ```\n *\n * @param value - The {@link ox#Hex.Hex} value to trim.\n * @returns The trimmed {@link ox#Hex.Hex} value.\n */\nexport function trimRight(value: Hex): trimRight.ReturnType {\n  return internal.trim(value, { dir: 'right' })\n}\n\nexport declare namespace trimRight {\n  type ReturnType = Hex\n\n  type ErrorType = internal.trim.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Decodes a {@link ox#Hex.Hex} value into a BigInt.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.toBigInt('0x1a4')\n * // @log: 420n\n *\n * Hex.toBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // @log: 420n\n * ```\n *\n * @param hex - The {@link ox#Hex.Hex} value to decode.\n * @param options - Options.\n * @returns The decoded BigInt.\n */\nexport function toBigInt(hex: Hex, options: toBigInt.Options = {}): bigint {\n  const { signed } = options\n\n  if (options.size) internal.assertSize(hex, options.size)\n\n  const value = BigInt(hex)\n  if (!signed) return value\n\n  const size = (hex.length - 2) / 2\n\n  const max_unsigned = (1n << (BigInt(size) * 8n)) - 1n\n  const max_signed = max_unsigned >> 1n\n\n  if (value <= max_signed) return value\n  return value - max_unsigned - 1n\n}\n\nexport declare namespace toBigInt {\n  type Options = {\n    /** Whether or not the number of a signed representation. */\n    signed?: boolean | undefined\n    /** Size (in bytes) of the hex value. */\n    size?: number | undefined\n  }\n\n  type ErrorType = internal.assertSize.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Decodes a {@link ox#Hex.Hex} value into a boolean.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.toBoolean('0x01')\n * // @log: true\n *\n * Hex.toBoolean('0x0000000000000000000000000000000000000000000000000000000000000001', { size: 32 })\n * // @log: true\n * ```\n *\n * @param hex - The {@link ox#Hex.Hex} value to decode.\n * @param options - Options.\n * @returns The decoded boolean.\n */\nexport function toBoolean(hex: Hex, options: toBoolean.Options = {}): boolean {\n  if (options.size) internal.assertSize(hex, options.size)\n  const hex_ = trimLeft(hex)\n  if (hex_ === '0x') return false\n  if (hex_ === '0x1') return true\n  throw new InvalidHexBooleanError(hex)\n}\n\nexport declare namespace toBoolean {\n  type Options = {\n    /** Size (in bytes) of the hex value. */\n    size?: number | undefined\n  }\n\n  type ErrorType =\n    | internal.assertSize.ErrorType\n    | trimLeft.ErrorType\n    | InvalidHexBooleanError\n    | Errors.GlobalErrorType\n}\n\n/**\n * Decodes a {@link ox#Hex.Hex} value into a {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * const data = Hex.toBytes('0x48656c6c6f20776f726c6421')\n * // @log: Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n * ```\n *\n * @param hex - The {@link ox#Hex.Hex} value to decode.\n * @param options - Options.\n * @returns The decoded {@link ox#Bytes.Bytes}.\n */\nexport function toBytes(hex: Hex, options: toBytes.Options = {}): Bytes.Bytes {\n  return Bytes.fromHex(hex, options)\n}\n\nexport declare namespace toBytes {\n  type Options = {\n    /** Size (in bytes) of the hex value. */\n    size?: number | undefined\n  }\n\n  type ErrorType = Bytes.fromHex.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Decodes a {@link ox#Hex.Hex} value into a number.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.toNumber('0x1a4')\n * // @log: 420\n *\n * Hex.toNumber('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // @log: 420\n * ```\n *\n * @param hex - The {@link ox#Hex.Hex} value to decode.\n * @param options - Options.\n * @returns The decoded number.\n */\nexport function toNumber(hex: Hex, options: toNumber.Options = {}): number {\n  const { signed, size } = options\n  if (!signed && !size) return Number(hex)\n  return Number(toBigInt(hex, options))\n}\n\nexport declare namespace toNumber {\n  type Options = toBigInt.Options\n\n  type ErrorType = toBigInt.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Decodes a {@link ox#Hex.Hex} value into a string.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.toString('0x48656c6c6f20576f726c6421')\n * // @log: 'Hello world!'\n *\n * Hex.toString('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {\n *  size: 32,\n * })\n * // @log: 'Hello world'\n * ```\n *\n * @param hex - The {@link ox#Hex.Hex} value to decode.\n * @param options - Options.\n * @returns The decoded string.\n */\nexport function toString(hex: Hex, options: toString.Options = {}): string {\n  const { size } = options\n\n  let bytes = Bytes.fromHex(hex)\n  if (size) {\n    internal_bytes.assertSize(bytes, size)\n    bytes = Bytes.trimRight(bytes)\n  }\n  return new TextDecoder().decode(bytes)\n}\n\nexport declare namespace toString {\n  type Options = {\n    /** Size (in bytes) of the hex value. */\n    size?: number | undefined\n  }\n\n  type ErrorType =\n    | internal_bytes.assertSize.ErrorType\n    | Bytes.fromHex.ErrorType\n    | Bytes.trimRight.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Checks if the given value is {@link ox#Hex.Hex}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes, Hex } from 'ox'\n *\n * Hex.validate('0xdeadbeef')\n * // @log: true\n *\n * Hex.validate(Bytes.from([1, 2, 3]))\n * // @log: false\n * ```\n *\n * @param value - The value to check.\n * @param options - Options.\n * @returns `true` if the value is a {@link ox#Hex.Hex}, `false` otherwise.\n */\nexport function validate(\n  value: unknown,\n  options: validate.Options = {},\n): value is Hex {\n  const { strict = false } = options\n  try {\n    assert(value, { strict })\n    return true\n  } catch {\n    return false\n  }\n}\n\nexport declare namespace validate {\n  type Options = {\n    /** Checks if the {@link ox#Hex.Hex} value contains invalid hexadecimal characters. @default false */\n    strict?: boolean | undefined\n  }\n\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Thrown when the provided integer is out of range, and cannot be represented as a hex value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.fromNumber(420182738912731283712937129)\n * // @error: Hex.IntegerOutOfRangeError: Number \\`4.2018273891273126e+26\\` is not in safe unsigned integer range (`0` to `9007199254740991`)\n * ```\n */\nexport class IntegerOutOfRangeError extends Errors.BaseError {\n  override readonly name = 'Hex.IntegerOutOfRangeError'\n\n  constructor({\n    max,\n    min,\n    signed,\n    size,\n    value,\n  }: {\n    max?: string | undefined\n    min: string\n    signed?: boolean | undefined\n    size?: number | undefined\n    value: string\n  }) {\n    super(\n      `Number \\`${value}\\` is not in safe${\n        size ? ` ${size * 8}-bit` : ''\n      }${signed ? ' signed' : ' unsigned'} integer range ${max ? `(\\`${min}\\` to \\`${max}\\`)` : `(above \\`${min}\\`)`}`,\n    )\n  }\n}\n\n/**\n * Thrown when the provided hex value cannot be represented as a boolean.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.toBoolean('0xa')\n * // @error: Hex.InvalidHexBooleanError: Hex value `\"0xa\"` is not a valid boolean.\n * // @error: The hex value must be `\"0x0\"` (false) or `\"0x1\"` (true).\n * ```\n */\nexport class InvalidHexBooleanError extends Errors.BaseError {\n  override readonly name = 'Hex.InvalidHexBooleanError'\n\n  constructor(hex: Hex) {\n    super(`Hex value \\`\"${hex}\"\\` is not a valid boolean.`, {\n      metaMessages: [\n        'The hex value must be `\"0x0\"` (false) or `\"0x1\"` (true).',\n      ],\n    })\n  }\n}\n\n/**\n * Thrown when the provided value is not a valid hex type.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.assert(1)\n * // @error: Hex.InvalidHexTypeError: Value `1` of type `number` is an invalid hex type.\n * ```\n */\nexport class InvalidHexTypeError extends Errors.BaseError {\n  override readonly name = 'Hex.InvalidHexTypeError'\n\n  constructor(value: unknown) {\n    super(\n      `Value \\`${typeof value === 'object' ? Json.stringify(value) : value}\\` of type \\`${typeof value}\\` is an invalid hex type.`,\n      {\n        metaMessages: ['Hex types must be represented as `\"0x${string}\"`.'],\n      },\n    )\n  }\n}\n\n/**\n * Thrown when the provided hex value is invalid.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.assert('0x0123456789abcdefg')\n * // @error: Hex.InvalidHexValueError: Value `0x0123456789abcdefg` is an invalid hex value.\n * // @error: Hex values must start with `\"0x\"` and contain only hexadecimal characters (0-9, a-f, A-F).\n * ```\n */\nexport class InvalidHexValueError extends Errors.BaseError {\n  override readonly name = 'Hex.InvalidHexValueError'\n\n  constructor(value: unknown) {\n    super(`Value \\`${value}\\` is an invalid hex value.`, {\n      metaMessages: [\n        'Hex values must start with `\"0x\"` and contain only hexadecimal characters (0-9, a-f, A-F).',\n      ],\n    })\n  }\n}\n\n/**\n * Thrown when the provided hex value is an odd length.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.fromHex('0xabcde')\n * // @error: Hex.InvalidLengthError: Hex value `\"0xabcde\"` is an odd length (5 nibbles).\n * ```\n */\nexport class InvalidLengthError extends Errors.BaseError {\n  override readonly name = 'Hex.InvalidLengthError'\n\n  constructor(value: Hex) {\n    super(\n      `Hex value \\`\"${value}\"\\` is an odd length (${value.length - 2} nibbles).`,\n      {\n        metaMessages: ['It must be an even length.'],\n      },\n    )\n  }\n}\n\n/**\n * Thrown when the size of the value exceeds the expected max size.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.fromString('Hello World!', { size: 8 })\n * // @error: Hex.SizeOverflowError: Size cannot exceed `8` bytes. Given size: `12` bytes.\n * ```\n */\nexport class SizeOverflowError extends Errors.BaseError {\n  override readonly name = 'Hex.SizeOverflowError'\n\n  constructor({ givenSize, maxSize }: { givenSize: number; maxSize: number }) {\n    super(\n      `Size cannot exceed \\`${maxSize}\\` bytes. Given size: \\`${givenSize}\\` bytes.`,\n    )\n  }\n}\n\n/**\n * Thrown when the slice offset exceeds the bounds of the value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.slice('0x0123456789', 6)\n * // @error: Hex.SliceOffsetOutOfBoundsError: Slice starting at offset `6` is out-of-bounds (size: `5`).\n * ```\n */\nexport class SliceOffsetOutOfBoundsError extends Errors.BaseError {\n  override readonly name = 'Hex.SliceOffsetOutOfBoundsError'\n\n  constructor({\n    offset,\n    position,\n    size,\n  }: { offset: number; position: 'start' | 'end'; size: number }) {\n    super(\n      `Slice ${\n        position === 'start' ? 'starting' : 'ending'\n      } at offset \\`${offset}\\` is out-of-bounds (size: \\`${size}\\`).`,\n    )\n  }\n}\n\n/**\n * Thrown when the size of the value exceeds the pad size.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.padLeft('0x1a4e12a45a21323123aaa87a897a897a898a6567a578a867a98778a667a85a875a87a6a787a65a675a6a9', 32)\n * // @error: Hex.SizeExceedsPaddingSizeError: Hex size (`43`) exceeds padding size (`32`).\n * ```\n */\nexport class SizeExceedsPaddingSizeError extends Errors.BaseError {\n  override readonly name = 'Hex.SizeExceedsPaddingSizeError'\n\n  constructor({\n    size,\n    targetSize,\n    type,\n  }: {\n    size: number\n    targetSize: number\n    type: 'Hex' | 'Bytes'\n  }) {\n    super(\n      `${type.charAt(0).toUpperCase()}${type\n        .slice(1)\n        .toLowerCase()} size (\\`${size}\\`) exceeds padding size (\\`${targetSize}\\`).`,\n    )\n  }\n}\n","import type { AbiError } from 'abitype'\n\n// https://docs.soliditylang.org/en/v0.8.16/control-structures.html#panic-via-assert-and-error-via-require\nexport const panicReasons = {\n  1: 'An `assert` condition failed.',\n  17: 'Arithmetic operation resulted in underflow or overflow.',\n  18: 'Division or modulo by zero (e.g. `5 / 0` or `23 % 0`).',\n  33: 'Attempted to convert to an invalid type.',\n  34: 'Attempted to access a storage byte array that is incorrectly encoded.',\n  49: 'Performed `.pop()` on an empty array',\n  50: 'Array index is out of bounds.',\n  65: 'Allocated too much memory or created an array which is too large.',\n  81: 'Attempted to call a zero-initialized variable of internal function type.',\n} as const\n\nexport const solidityError: AbiError = {\n  inputs: [\n    {\n      name: 'message',\n      type: 'string',\n    },\n  ],\n  name: 'Error',\n  type: 'error',\n}\nexport const solidityPanic: AbiError = {\n  inputs: [\n    {\n      name: 'reason',\n      type: 'uint256',\n    },\n  ],\n  name: 'Panic',\n  type: 'error',\n}\n","import type { AbiParameter } from 'abitype'\n\nimport {\n  InvalidDefinitionTypeError,\n  type InvalidDefinitionTypeErrorType,\n} from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { AbiItem } from '../../types/contract.js'\n\nexport type FormatAbiItemErrorType =\n  | FormatAbiParamsErrorType\n  | InvalidDefinitionTypeErrorType\n  | ErrorType\n\nexport function formatAbiItem(\n  abiItem: AbiItem,\n  { includeName = false }: { includeName?: boolean | undefined } = {},\n) {\n  if (\n    abiItem.type !== 'function' &&\n    abiItem.type !== 'event' &&\n    abiItem.type !== 'error'\n  )\n    throw new InvalidDefinitionTypeError(abiItem.type)\n\n  return `${abiItem.name}(${formatAbiParams(abiItem.inputs, { includeName })})`\n}\n\nexport type FormatAbiParamsErrorType = ErrorType\n\nexport function formatAbiParams(\n  params: readonly AbiParameter[] | undefined,\n  { includeName = false }: { includeName?: boolean | undefined } = {},\n): string {\n  if (!params) return ''\n  return params\n    .map((param) => formatAbiParam(param, { includeName }))\n    .join(includeName ? ', ' : ',')\n}\n\nexport type FormatAbiParamErrorType = ErrorType\n\nfunction formatAbiParam(\n  param: AbiParameter,\n  { includeName }: { includeName: boolean },\n): string {\n  if (param.type.startsWith('tuple')) {\n    return `(${formatAbiParams(\n      (param as unknown as { components: AbiParameter[] }).components,\n      { includeName },\n    )})${param.type.slice('tuple'.length)}`\n  }\n  return param.type + (includeName && param.name ? ` ${param.name}` : '')\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n","export const maxInt8 = 2n ** (8n - 1n) - 1n\nexport const maxInt16 = 2n ** (16n - 1n) - 1n\nexport const maxInt24 = 2n ** (24n - 1n) - 1n\nexport const maxInt32 = 2n ** (32n - 1n) - 1n\nexport const maxInt40 = 2n ** (40n - 1n) - 1n\nexport const maxInt48 = 2n ** (48n - 1n) - 1n\nexport const maxInt56 = 2n ** (56n - 1n) - 1n\nexport const maxInt64 = 2n ** (64n - 1n) - 1n\nexport const maxInt72 = 2n ** (72n - 1n) - 1n\nexport const maxInt80 = 2n ** (80n - 1n) - 1n\nexport const maxInt88 = 2n ** (88n - 1n) - 1n\nexport const maxInt96 = 2n ** (96n - 1n) - 1n\nexport const maxInt104 = 2n ** (104n - 1n) - 1n\nexport const maxInt112 = 2n ** (112n - 1n) - 1n\nexport const maxInt120 = 2n ** (120n - 1n) - 1n\nexport const maxInt128 = 2n ** (128n - 1n) - 1n\nexport const maxInt136 = 2n ** (136n - 1n) - 1n\nexport const maxInt144 = 2n ** (144n - 1n) - 1n\nexport const maxInt152 = 2n ** (152n - 1n) - 1n\nexport const maxInt160 = 2n ** (160n - 1n) - 1n\nexport const maxInt168 = 2n ** (168n - 1n) - 1n\nexport const maxInt176 = 2n ** (176n - 1n) - 1n\nexport const maxInt184 = 2n ** (184n - 1n) - 1n\nexport const maxInt192 = 2n ** (192n - 1n) - 1n\nexport const maxInt200 = 2n ** (200n - 1n) - 1n\nexport const maxInt208 = 2n ** (208n - 1n) - 1n\nexport const maxInt216 = 2n ** (216n - 1n) - 1n\nexport const maxInt224 = 2n ** (224n - 1n) - 1n\nexport const maxInt232 = 2n ** (232n - 1n) - 1n\nexport const maxInt240 = 2n ** (240n - 1n) - 1n\nexport const maxInt248 = 2n ** (248n - 1n) - 1n\nexport const maxInt256 = 2n ** (256n - 1n) - 1n\n\nexport const minInt8 = -(2n ** (8n - 1n))\nexport const minInt16 = -(2n ** (16n - 1n))\nexport const minInt24 = -(2n ** (24n - 1n))\nexport const minInt32 = -(2n ** (32n - 1n))\nexport const minInt40 = -(2n ** (40n - 1n))\nexport const minInt48 = -(2n ** (48n - 1n))\nexport const minInt56 = -(2n ** (56n - 1n))\nexport const minInt64 = -(2n ** (64n - 1n))\nexport const minInt72 = -(2n ** (72n - 1n))\nexport const minInt80 = -(2n ** (80n - 1n))\nexport const minInt88 = -(2n ** (88n - 1n))\nexport const minInt96 = -(2n ** (96n - 1n))\nexport const minInt104 = -(2n ** (104n - 1n))\nexport const minInt112 = -(2n ** (112n - 1n))\nexport const minInt120 = -(2n ** (120n - 1n))\nexport const minInt128 = -(2n ** (128n - 1n))\nexport const minInt136 = -(2n ** (136n - 1n))\nexport const minInt144 = -(2n ** (144n - 1n))\nexport const minInt152 = -(2n ** (152n - 1n))\nexport const minInt160 = -(2n ** (160n - 1n))\nexport const minInt168 = -(2n ** (168n - 1n))\nexport const minInt176 = -(2n ** (176n - 1n))\nexport const minInt184 = -(2n ** (184n - 1n))\nexport const minInt192 = -(2n ** (192n - 1n))\nexport const minInt200 = -(2n ** (200n - 1n))\nexport const minInt208 = -(2n ** (208n - 1n))\nexport const minInt216 = -(2n ** (216n - 1n))\nexport const minInt224 = -(2n ** (224n - 1n))\nexport const minInt232 = -(2n ** (232n - 1n))\nexport const minInt240 = -(2n ** (240n - 1n))\nexport const minInt248 = -(2n ** (248n - 1n))\nexport const minInt256 = -(2n ** (256n - 1n))\n\nexport const maxUint8 = 2n ** 8n - 1n\nexport const maxUint16 = 2n ** 16n - 1n\nexport const maxUint24 = 2n ** 24n - 1n\nexport const maxUint32 = 2n ** 32n - 1n\nexport const maxUint40 = 2n ** 40n - 1n\nexport const maxUint48 = 2n ** 48n - 1n\nexport const maxUint56 = 2n ** 56n - 1n\nexport const maxUint64 = 2n ** 64n - 1n\nexport const maxUint72 = 2n ** 72n - 1n\nexport const maxUint80 = 2n ** 80n - 1n\nexport const maxUint88 = 2n ** 88n - 1n\nexport const maxUint96 = 2n ** 96n - 1n\nexport const maxUint104 = 2n ** 104n - 1n\nexport const maxUint112 = 2n ** 112n - 1n\nexport const maxUint120 = 2n ** 120n - 1n\nexport const maxUint128 = 2n ** 128n - 1n\nexport const maxUint136 = 2n ** 136n - 1n\nexport const maxUint144 = 2n ** 144n - 1n\nexport const maxUint152 = 2n ** 152n - 1n\nexport const maxUint160 = 2n ** 160n - 1n\nexport const maxUint168 = 2n ** 168n - 1n\nexport const maxUint176 = 2n ** 176n - 1n\nexport const maxUint184 = 2n ** 184n - 1n\nexport const maxUint192 = 2n ** 192n - 1n\nexport const maxUint200 = 2n ** 200n - 1n\nexport const maxUint208 = 2n ** 208n - 1n\nexport const maxUint216 = 2n ** 216n - 1n\nexport const maxUint224 = 2n ** 224n - 1n\nexport const maxUint232 = 2n ** 232n - 1n\nexport const maxUint240 = 2n ** 240n - 1n\nexport const maxUint248 = 2n ** 248n - 1n\nexport const maxUint256 = 2n ** 256n - 1n\n","import { BaseError } from './base.js'\n\nexport type NegativeOffsetErrorType = NegativeOffsetError & {\n  name: 'NegativeOffsetError'\n}\nexport class NegativeOffsetError extends BaseError {\n  constructor({ offset }: { offset: number }) {\n    super(`Offset \\`${offset}\\` cannot be negative.`, {\n      name: 'NegativeOffsetError',\n    })\n  }\n}\n\nexport type PositionOutOfBoundsErrorType = PositionOutOfBoundsError & {\n  name: 'PositionOutOfBoundsError'\n}\nexport class PositionOutOfBoundsError extends BaseError {\n  constructor({ length, position }: { length: number; position: number }) {\n    super(\n      `Position \\`${position}\\` is out of bounds (\\`0 < position < ${length}\\`).`,\n      { name: 'PositionOutOfBoundsError' },\n    )\n  }\n}\n\nexport type RecursiveReadLimitExceededErrorType =\n  RecursiveReadLimitExceededError & {\n    name: 'RecursiveReadLimitExceededError'\n  }\nexport class RecursiveReadLimitExceededError extends BaseError {\n  constructor({ count, limit }: { count: number; limit: number }) {\n    super(\n      `Recursive read limit of \\`${limit}\\` exceeded (recursive read count: \\`${count}\\`).`,\n      { name: 'RecursiveReadLimitExceededError' },\n    )\n  }\n}\n","export const etherUnits = {\n  gwei: 9,\n  wei: 18,\n}\nexport const gweiUnits = {\n  ether: -9,\n  wei: 9,\n}\nexport const weiUnits = {\n  ether: -18,\n  gwei: -9,\n}\n","/**\n * @license React\n * use-sync-external-store-shim/with-selector.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\"),\n  shim = require(\"use-sync-external-store/shim\");\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is,\n  useSyncExternalStore = shim.useSyncExternalStore,\n  useRef = React.useRef,\n  useEffect = React.useEffect,\n  useMemo = React.useMemo,\n  useDebugValue = React.useDebugValue;\nexports.useSyncExternalStoreWithSelector = function (\n  subscribe,\n  getSnapshot,\n  getServerSnapshot,\n  selector,\n  isEqual\n) {\n  var instRef = useRef(null);\n  if (null === instRef.current) {\n    var inst = { hasValue: !1, value: null };\n    instRef.current = inst;\n  } else inst = instRef.current;\n  instRef = useMemo(\n    function () {\n      function memoizedSelector(nextSnapshot) {\n        if (!hasMemo) {\n          hasMemo = !0;\n          memoizedSnapshot = nextSnapshot;\n          nextSnapshot = selector(nextSnapshot);\n          if (void 0 !== isEqual && inst.hasValue) {\n            var currentSelection = inst.value;\n            if (isEqual(currentSelection, nextSnapshot))\n              return (memoizedSelection = currentSelection);\n          }\n          return (memoizedSelection = nextSnapshot);\n        }\n        currentSelection = memoizedSelection;\n        if (objectIs(memoizedSnapshot, nextSnapshot)) return currentSelection;\n        var nextSelection = selector(nextSnapshot);\n        if (void 0 !== isEqual && isEqual(currentSelection, nextSelection))\n          return (memoizedSnapshot = nextSnapshot), currentSelection;\n        memoizedSnapshot = nextSnapshot;\n        return (memoizedSelection = nextSelection);\n      }\n      var hasMemo = !1,\n        memoizedSnapshot,\n        memoizedSelection,\n        maybeGetServerSnapshot =\n          void 0 === getServerSnapshot ? null : getServerSnapshot;\n      return [\n        function () {\n          return memoizedSelector(getSnapshot());\n        },\n        null === maybeGetServerSnapshot\n          ? void 0\n          : function () {\n              return memoizedSelector(maybeGetServerSnapshot());\n            }\n      ];\n    },\n    [getSnapshot, getServerSnapshot, selector, isEqual]\n  );\n  var value = useSyncExternalStore(subscribe, instRef[0], instRef[1]);\n  useEffect(\n    function () {\n      inst.hasValue = !0;\n      inst.value = value;\n    },\n    [value]\n  );\n  useDebugValue(value);\n  return value;\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"48f03bac\" + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"absconnect-wallet:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkabsconnect_wallet\"] = self[\"webpackChunkabsconnect_wallet\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","import { BaseError } from './base.js'\n\nexport type UrlRequiredErrorType = UrlRequiredError & {\n  name: 'UrlRequiredError'\n}\nexport class UrlRequiredError extends BaseError {\n  constructor() {\n    super(\n      'No URL was provided to the Transport. Please provide a valid RPC URL to the Transport.',\n      {\n        docsPath: '/docs/clients/intro',\n        name: 'UrlRequiredError',\n      },\n    )\n  }\n}\n","import type { ErrorType } from '../../errors/utils.js'\n\nexport type WithTimeoutErrorType = ErrorType\n\nexport function withTimeout<data>(\n  fn: ({\n    signal,\n  }: {\n    signal: AbortController['signal'] | null\n  }) => Promise<data>,\n  {\n    errorInstance = new Error('timed out'),\n    timeout,\n    signal,\n  }: {\n    // The error instance to throw when the timeout is reached.\n    errorInstance?: Error | undefined\n    // The timeout (in ms).\n    timeout: number\n    // Whether or not the timeout should use an abort signal.\n    signal?: boolean | undefined\n  },\n): Promise<data> {\n  return new Promise((resolve, reject) => {\n    ;(async () => {\n      let timeoutId!: NodeJS.Timeout\n      try {\n        const controller = new AbortController()\n        if (timeout > 0) {\n          timeoutId = setTimeout(() => {\n            if (signal) {\n              controller.abort()\n            } else {\n              reject(errorInstance)\n            }\n          }, timeout) as NodeJS.Timeout // need to cast because bun globals.d.ts overrides @types/node\n        }\n        resolve(await fn({ signal: controller?.signal || null }))\n      } catch (err) {\n        if ((err as Error)?.name === 'AbortError') reject(errorInstance)\n        reject(err)\n      } finally {\n        clearTimeout(timeoutId)\n      }\n    })()\n  })\n}\n","function createIdStore() {\n  return {\n    current: 0,\n    take() {\n      return this.current++\n    },\n    reset() {\n      this.current = 0\n    },\n  }\n}\n\nexport const idCache = /*#__PURE__*/ createIdStore()\n","import type { Prettify } from '../types/utils.js'\nimport { BaseError } from './base.js'\nimport { RpcRequestError } from './request.js'\n\nconst unknownErrorCode = -1\n\nexport type RpcErrorCode =\n  | -1\n  | -32700 // Parse error\n  | -32600 // Invalid request\n  | -32601 // Method not found\n  | -32602 // Invalid params\n  | -32603 // Internal error\n  | -32000 // Invalid input\n  | -32001 // Resource not found\n  | -32002 // Resource unavailable\n  | -32003 // Transaction rejected\n  | -32004 // Method not supported\n  | -32005 // Limit exceeded\n  | -32006 // JSON-RPC version not supported\n  | -32042 // Method not found\n\ntype RpcErrorOptions<code extends number = RpcErrorCode> = {\n  code?: code | (number & {}) | undefined\n  docsPath?: string | undefined\n  metaMessages?: string[] | undefined\n  name?: string | undefined\n  shortMessage: string\n}\n\n/**\n * Error subclass implementing JSON RPC 2.0 errors and Ethereum RPC errors per EIP-1474.\n *\n * - EIP https://eips.ethereum.org/EIPS/eip-1474\n */\nexport type RpcErrorType = RpcError & { name: 'RpcError' }\nexport class RpcError<code_ extends number = RpcErrorCode> extends BaseError {\n  code: code_ | (number & {})\n\n  constructor(\n    cause: Error,\n    {\n      code,\n      docsPath,\n      metaMessages,\n      name,\n      shortMessage,\n    }: RpcErrorOptions<code_>,\n  ) {\n    super(shortMessage, {\n      cause,\n      docsPath,\n      metaMessages:\n        metaMessages || (cause as { metaMessages?: string[] })?.metaMessages,\n      name: name || 'RpcError',\n    })\n    this.name = name || cause.name\n    this.code = (\n      cause instanceof RpcRequestError ? cause.code : (code ?? unknownErrorCode)\n    ) as code_\n  }\n}\n\nexport type ProviderRpcErrorCode =\n  | 4001 // User Rejected Request\n  | 4100 // Unauthorized\n  | 4200 // Unsupported Method\n  | 4900 // Disconnected\n  | 4901 // Chain Disconnected\n  | 4902 // Chain Not Recognized\n  | 5700 // Unsupported non-optional capability\n  | 5710 // Unsupported chain id\n  | 5720 // Duplicate ID\n  | 5730 // Unknown bundle id\n  | 5740 // Bundle too large\n  | 5750 // Atomic-ready wallet rejected upgrade\n  | 5760 // Atomicity not supported\n\n/**\n * Error subclass implementing Ethereum Provider errors per EIP-1193.\n *\n * - EIP https://eips.ethereum.org/EIPS/eip-1193\n */\nexport type ProviderRpcErrorType = ProviderRpcError & {\n  name: 'ProviderRpcError'\n}\nexport class ProviderRpcError<\n  T = undefined,\n> extends RpcError<ProviderRpcErrorCode> {\n  data?: T | undefined\n\n  constructor(\n    cause: Error,\n    options: Prettify<\n      RpcErrorOptions<ProviderRpcErrorCode> & {\n        data?: T | undefined\n      }\n    >,\n  ) {\n    super(cause, options)\n\n    this.data = options.data\n  }\n}\n\n/**\n * Subclass for a \"Parse error\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type ParseRpcErrorType = ParseRpcError & {\n  code: -32700\n  name: 'ParseRpcError'\n}\nexport class ParseRpcError extends RpcError {\n  static code = -32700 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: ParseRpcError.code,\n      name: 'ParseRpcError',\n      shortMessage:\n        'Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"Invalid request\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type InvalidRequestRpcErrorType = InvalidRequestRpcError & {\n  code: -32600\n  name: 'InvalidRequestRpcError'\n}\nexport class InvalidRequestRpcError extends RpcError {\n  static code = -32600 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: InvalidRequestRpcError.code,\n      name: 'InvalidRequestRpcError',\n      shortMessage: 'JSON is not a valid request object.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"Method not found\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type MethodNotFoundRpcErrorType = MethodNotFoundRpcError & {\n  code: -32601\n  name: 'MethodNotFoundRpcError'\n}\nexport class MethodNotFoundRpcError extends RpcError {\n  static code = -32601 as const\n\n  constructor(cause: Error, { method }: { method?: string } = {}) {\n    super(cause, {\n      code: MethodNotFoundRpcError.code,\n      name: 'MethodNotFoundRpcError',\n      shortMessage: `The method${method ? ` \"${method}\"` : ''} does not exist / is not available.`,\n    })\n  }\n}\n\n/**\n * Subclass for an \"Invalid params\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type InvalidParamsRpcErrorType = InvalidParamsRpcError & {\n  code: -32602\n  name: 'InvalidParamsRpcError'\n}\nexport class InvalidParamsRpcError extends RpcError {\n  static code = -32602 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: InvalidParamsRpcError.code,\n      name: 'InvalidParamsRpcError',\n      shortMessage: [\n        'Invalid parameters were provided to the RPC method.',\n        'Double check you have provided the correct parameters.',\n      ].join('\\n'),\n    })\n  }\n}\n\n/**\n * Subclass for an \"Internal error\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type InternalRpcErrorType = InternalRpcError & {\n  code: -32603\n  name: 'InternalRpcError'\n}\nexport class InternalRpcError extends RpcError {\n  static code = -32603 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: InternalRpcError.code,\n      name: 'InternalRpcError',\n      shortMessage: 'An internal error was received.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Invalid input\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type InvalidInputRpcErrorType = InvalidInputRpcError & {\n  code: -32000\n  name: 'InvalidInputRpcError'\n}\nexport class InvalidInputRpcError extends RpcError {\n  static code = -32000 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: InvalidInputRpcError.code,\n      name: 'InvalidInputRpcError',\n      shortMessage: [\n        'Missing or invalid parameters.',\n        'Double check you have provided the correct parameters.',\n      ].join('\\n'),\n    })\n  }\n}\n\n/**\n * Subclass for a \"Resource not found\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type ResourceNotFoundRpcErrorType = ResourceNotFoundRpcError & {\n  code: -32001\n  name: 'ResourceNotFoundRpcError'\n}\nexport class ResourceNotFoundRpcError extends RpcError {\n  override name = 'ResourceNotFoundRpcError'\n  static code = -32001 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: ResourceNotFoundRpcError.code,\n      name: 'ResourceNotFoundRpcError',\n      shortMessage: 'Requested resource not found.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"Resource unavailable\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type ResourceUnavailableRpcErrorType = ResourceUnavailableRpcError & {\n  code: -32002\n  name: 'ResourceUnavailableRpcError'\n}\nexport class ResourceUnavailableRpcError extends RpcError {\n  static code = -32002 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: ResourceUnavailableRpcError.code,\n      name: 'ResourceUnavailableRpcError',\n      shortMessage: 'Requested resource not available.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"Transaction rejected\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type TransactionRejectedRpcErrorType = TransactionRejectedRpcError & {\n  code: -32003\n  name: 'TransactionRejectedRpcError'\n}\nexport class TransactionRejectedRpcError extends RpcError {\n  static code = -32003 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: TransactionRejectedRpcError.code,\n      name: 'TransactionRejectedRpcError',\n      shortMessage: 'Transaction creation failed.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"Method not supported\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type MethodNotSupportedRpcErrorType = MethodNotSupportedRpcError & {\n  code: -32004\n  name: 'MethodNotSupportedRpcError'\n}\nexport class MethodNotSupportedRpcError extends RpcError {\n  static code = -32004 as const\n\n  constructor(cause: Error, { method }: { method?: string } = {}) {\n    super(cause, {\n      code: MethodNotSupportedRpcError.code,\n      name: 'MethodNotSupportedRpcError',\n      shortMessage: `Method${method ? ` \"${method}\"` : ''} is not supported.`,\n    })\n  }\n}\n\n/**\n * Subclass for a \"Limit exceeded\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type LimitExceededRpcErrorType = LimitExceededRpcError & {\n  code: -32005\n  name: 'LimitExceededRpcError'\n}\nexport class LimitExceededRpcError extends RpcError {\n  static code = -32005 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: LimitExceededRpcError.code,\n      name: 'LimitExceededRpcError',\n      shortMessage: 'Request exceeds defined limit.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"JSON-RPC version not supported\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type JsonRpcVersionUnsupportedErrorType =\n  JsonRpcVersionUnsupportedError & {\n    code: -32006\n    name: 'JsonRpcVersionUnsupportedError'\n  }\nexport class JsonRpcVersionUnsupportedError extends RpcError {\n  static code = -32006 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: JsonRpcVersionUnsupportedError.code,\n      name: 'JsonRpcVersionUnsupportedError',\n      shortMessage: 'Version of JSON-RPC protocol is not supported.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"User Rejected Request\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport type UserRejectedRequestErrorType = UserRejectedRequestError & {\n  code: 4001\n  name: 'UserRejectedRequestError'\n}\nexport class UserRejectedRequestError extends ProviderRpcError {\n  static code = 4001 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: UserRejectedRequestError.code,\n      name: 'UserRejectedRequestError',\n      shortMessage: 'User rejected the request.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Unauthorized\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport type UnauthorizedProviderErrorType = UnauthorizedProviderError & {\n  code: 4100\n  name: 'UnauthorizedProviderError'\n}\nexport class UnauthorizedProviderError extends ProviderRpcError {\n  static code = 4100 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: UnauthorizedProviderError.code,\n      name: 'UnauthorizedProviderError',\n      shortMessage:\n        'The requested method and/or account has not been authorized by the user.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Unsupported Method\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport type UnsupportedProviderMethodErrorType =\n  UnsupportedProviderMethodError & {\n    code: 4200\n    name: 'UnsupportedProviderMethodError'\n  }\nexport class UnsupportedProviderMethodError extends ProviderRpcError {\n  static code = 4200 as const\n\n  constructor(cause: Error, { method }: { method?: string } = {}) {\n    super(cause, {\n      code: UnsupportedProviderMethodError.code,\n      name: 'UnsupportedProviderMethodError',\n      shortMessage: `The Provider does not support the requested method${method ? ` \" ${method}\"` : ''}.`,\n    })\n  }\n}\n\n/**\n * Subclass for an \"Disconnected\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport type ProviderDisconnectedErrorType = ProviderDisconnectedError & {\n  code: 4900\n  name: 'ProviderDisconnectedError'\n}\nexport class ProviderDisconnectedError extends ProviderRpcError {\n  static code = 4900 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: ProviderDisconnectedError.code,\n      name: 'ProviderDisconnectedError',\n      shortMessage: 'The Provider is disconnected from all chains.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Chain Disconnected\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport type ChainDisconnectedErrorType = ChainDisconnectedError & {\n  code: 4901\n  name: 'ChainDisconnectedError'\n}\nexport class ChainDisconnectedError extends ProviderRpcError {\n  static code = 4901 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: ChainDisconnectedError.code,\n      name: 'ChainDisconnectedError',\n      shortMessage: 'The Provider is not connected to the requested chain.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Switch Chain\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport type SwitchChainErrorType = SwitchChainError & {\n  code: 4902\n  name: 'SwitchChainError'\n}\nexport class SwitchChainError extends ProviderRpcError {\n  static code = 4902 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: SwitchChainError.code,\n      name: 'SwitchChainError',\n      shortMessage: 'An error occurred when attempting to switch chain.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Unsupported non-optional capability\" EIP-5792 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-5792#error-codes\n */\nexport type UnsupportedNonOptionalCapabilityErrorType =\n  UnsupportedNonOptionalCapabilityError & {\n    code: 5700\n    name: 'UnsupportedNonOptionalCapabilityError'\n  }\nexport class UnsupportedNonOptionalCapabilityError extends ProviderRpcError {\n  static code = 5700 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: UnsupportedNonOptionalCapabilityError.code,\n      name: 'UnsupportedNonOptionalCapabilityError',\n      shortMessage:\n        'This Wallet does not support a capability that was not marked as optional.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Unsupported chain id\" EIP-5792 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-5792#error-codes\n */\nexport type UnsupportedChainIdErrorType = UnsupportedChainIdError & {\n  code: 5710\n  name: 'UnsupportedChainIdError'\n}\nexport class UnsupportedChainIdError extends ProviderRpcError {\n  static code = 5710 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: UnsupportedChainIdError.code,\n      name: 'UnsupportedChainIdError',\n      shortMessage: 'This Wallet does not support the requested chain ID.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Duplicate ID\" EIP-5792 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-5792#error-codes\n */\nexport type DuplicateIdErrorType = DuplicateIdError & {\n  code: 5720\n  name: 'DuplicateIdError'\n}\nexport class DuplicateIdError extends ProviderRpcError {\n  static code = 5720 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: DuplicateIdError.code,\n      name: 'DuplicateIdError',\n      shortMessage: 'There is already a bundle submitted with this ID.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Unknown bundle ID\" EIP-5792 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-5792#error-codes\n */\nexport type UnknownBundleIdErrorType = UnknownBundleIdError & {\n  code: 5730\n  name: 'UnknownBundleIdError'\n}\nexport class UnknownBundleIdError extends ProviderRpcError {\n  static code = 5730 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: UnknownBundleIdError.code,\n      name: 'UnknownBundleIdError',\n      shortMessage: 'This bundle id is unknown / has not been submitted',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Bundle too large\" EIP-5792 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-5792#error-codes\n */\nexport type BundleTooLargeErrorType = BundleTooLargeError & {\n  code: 5740\n  name: 'BundleTooLargeError'\n}\nexport class BundleTooLargeError extends ProviderRpcError {\n  static code = 5740 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: BundleTooLargeError.code,\n      name: 'BundleTooLargeError',\n      shortMessage: 'The call bundle is too large for the Wallet to process.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Atomic-ready wallet rejected upgrade\" EIP-5792 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-5792#error-codes\n */\nexport type AtomicReadyWalletRejectedUpgradeErrorType =\n  AtomicReadyWalletRejectedUpgradeError & {\n    code: 5750\n    name: 'AtomicReadyWalletRejectedUpgradeError'\n  }\nexport class AtomicReadyWalletRejectedUpgradeError extends ProviderRpcError {\n  static code = 5750 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: AtomicReadyWalletRejectedUpgradeError.code,\n      name: 'AtomicReadyWalletRejectedUpgradeError',\n      shortMessage:\n        'The Wallet can support atomicity after an upgrade, but the user rejected the upgrade.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Atomicity not supported\" EIP-5792 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-5792#error-codes\n */\nexport type AtomicityNotSupportedErrorType = AtomicityNotSupportedError & {\n  code: 5760\n  name: 'AtomicityNotSupportedError'\n}\nexport class AtomicityNotSupportedError extends ProviderRpcError {\n  static code = 5760 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: AtomicityNotSupportedError.code,\n      name: 'AtomicityNotSupportedError',\n      shortMessage:\n        'The wallet does not support atomic execution but the request requires it.',\n    })\n  }\n}\n\n/**\n * Subclass for an unknown RPC error.\n */\nexport type UnknownRpcErrorType = UnknownRpcError & {\n  name: 'UnknownRpcError'\n}\nexport class UnknownRpcError extends RpcError {\n  constructor(cause: Error) {\n    super(cause, {\n      name: 'UnknownRpcError',\n      shortMessage: 'An unknown RPC error occurred.',\n    })\n  }\n}\n","import { LruMap } from '../lru.js'\n\n/** @internal */\nexport const promiseCache = /*#__PURE__*/ new LruMap<Promise<any>>(8192)\n\ntype WithDedupeOptions = {\n  enabled?: boolean | undefined\n  id?: string | undefined\n}\n\n/** Deduplicates in-flight promises. */\nexport function withDedupe<data>(\n  fn: () => Promise<data>,\n  { enabled = true, id }: WithDedupeOptions,\n): Promise<data> {\n  if (!enabled || !id) return fn()\n  if (promiseCache.get(id)) return promiseCache.get(id)!\n  const promise = fn().finally(() => promiseCache.delete(id))\n  promiseCache.set(id, promise)\n  return promise\n}\n","export async function wait(time: number) {\n  return new Promise((res) => setTimeout(res, time))\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport { wait } from '../wait.js'\n\nexport type WithRetryParameters = {\n  // The delay (in ms) between retries.\n  delay?:\n    | ((config: { count: number; error: Error }) => number)\n    | number\n    | undefined\n  // The max number of times to retry.\n  retryCount?: number | undefined\n  // Whether or not to retry when an error is thrown.\n  shouldRetry?:\n    | (({\n        count,\n        error,\n      }: {\n        count: number\n        error: Error\n      }) => Promise<boolean> | boolean)\n    | undefined\n}\n\nexport type WithRetryErrorType = ErrorType\n\nexport function withRetry<data>(\n  fn: () => Promise<data>,\n  {\n    delay: delay_ = 100,\n    retryCount = 2,\n    shouldRetry = () => true,\n  }: WithRetryParameters = {},\n) {\n  return new Promise<data>((resolve, reject) => {\n    const attemptRetry = async ({ count = 0 } = {}) => {\n      const retry = async ({ error }: { error: Error }) => {\n        const delay =\n          typeof delay_ === 'function' ? delay_({ count, error }) : delay_\n        if (delay) await wait(delay)\n        attemptRetry({ count: count + 1 })\n      }\n\n      try {\n        const data = await fn()\n        resolve(data)\n      } catch (err) {\n        if (\n          count < retryCount &&\n          (await shouldRetry({ count, error: err as Error }))\n        )\n          return retry({ error: err as Error })\n        reject(err)\n      }\n    }\n    attemptRetry()\n  })\n}\n","import { BaseError } from '../errors/base.js'\nimport {\n  HttpRequestError,\n  type HttpRequestErrorType,\n  type RpcRequestErrorType,\n  type TimeoutErrorType,\n  type WebSocketRequestErrorType,\n} from '../errors/request.js'\nimport {\n  AtomicityNotSupportedError,\n  type AtomicityNotSupportedErrorType,\n  AtomicReadyWalletRejectedUpgradeError,\n  type AtomicReadyWalletRejectedUpgradeErrorType,\n  BundleTooLargeError,\n  type BundleTooLargeErrorType,\n  ChainDisconnectedError,\n  type ChainDisconnectedErrorType,\n  DuplicateIdError,\n  type DuplicateIdErrorType,\n  InternalRpcError,\n  type InternalRpcErrorType,\n  InvalidInputRpcError,\n  type InvalidInputRpcErrorType,\n  InvalidParamsRpcError,\n  type InvalidParamsRpcErrorType,\n  InvalidRequestRpcError,\n  type InvalidRequestRpcErrorType,\n  JsonRpcVersionUnsupportedError,\n  type JsonRpcVersionUnsupportedErrorType,\n  LimitExceededRpcError,\n  type LimitExceededRpcErrorType,\n  MethodNotFoundRpcError,\n  type MethodNotFoundRpcErrorType,\n  MethodNotSupportedRpcError,\n  type MethodNotSupportedRpcErrorType,\n  ParseRpcError,\n  type ParseRpcErrorType,\n  ProviderDisconnectedError,\n  type ProviderDisconnectedErrorType,\n  type ProviderRpcErrorCode,\n  ResourceNotFoundRpcError,\n  type ResourceNotFoundRpcErrorType,\n  ResourceUnavailableRpcError,\n  type ResourceUnavailableRpcErrorType,\n  type RpcError,\n  type RpcErrorCode,\n  type RpcErrorType,\n  SwitchChainError,\n  type SwitchChainErrorType,\n  TransactionRejectedRpcError,\n  type TransactionRejectedRpcErrorType,\n  UnauthorizedProviderError,\n  type UnauthorizedProviderErrorType,\n  UnknownBundleIdError,\n  type UnknownBundleIdErrorType,\n  UnknownRpcError,\n  type UnknownRpcErrorType,\n  UnsupportedChainIdError,\n  type UnsupportedChainIdErrorType,\n  UnsupportedNonOptionalCapabilityError,\n  type UnsupportedNonOptionalCapabilityErrorType,\n  UnsupportedProviderMethodError,\n  type UnsupportedProviderMethodErrorType,\n  UserRejectedRequestError,\n  type UserRejectedRequestErrorType,\n} from '../errors/rpc.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport type {\n  EIP1193RequestFn,\n  EIP1193RequestOptions,\n} from '../types/eip1193.js'\nimport { stringToHex } from './encoding/toHex.js'\nimport type { CreateBatchSchedulerErrorType } from './promise/createBatchScheduler.js'\nimport { withDedupe } from './promise/withDedupe.js'\nimport { type WithRetryErrorType, withRetry } from './promise/withRetry.js'\nimport type { GetSocketRpcClientErrorType } from './rpc/socket.js'\nimport { stringify } from './stringify.js'\n\nexport type RequestErrorType =\n  | AtomicityNotSupportedErrorType\n  | AtomicReadyWalletRejectedUpgradeErrorType\n  | BundleTooLargeErrorType\n  | ChainDisconnectedErrorType\n  | CreateBatchSchedulerErrorType\n  | DuplicateIdErrorType\n  | HttpRequestErrorType\n  | InternalRpcErrorType\n  | InvalidInputRpcErrorType\n  | InvalidParamsRpcErrorType\n  | InvalidRequestRpcErrorType\n  | GetSocketRpcClientErrorType\n  | JsonRpcVersionUnsupportedErrorType\n  | LimitExceededRpcErrorType\n  | MethodNotFoundRpcErrorType\n  | MethodNotSupportedRpcErrorType\n  | ParseRpcErrorType\n  | ProviderDisconnectedErrorType\n  | ResourceNotFoundRpcErrorType\n  | ResourceUnavailableRpcErrorType\n  | RpcErrorType\n  | RpcRequestErrorType\n  | SwitchChainErrorType\n  | TimeoutErrorType\n  | TransactionRejectedRpcErrorType\n  | UnauthorizedProviderErrorType\n  | UnknownBundleIdErrorType\n  | UnknownRpcErrorType\n  | UnsupportedChainIdErrorType\n  | UnsupportedNonOptionalCapabilityErrorType\n  | UnsupportedProviderMethodErrorType\n  | UserRejectedRequestErrorType\n  | WebSocketRequestErrorType\n  | WithRetryErrorType\n  | ErrorType\n\nexport function buildRequest<request extends (args: any) => Promise<any>>(\n  request: request,\n  options: EIP1193RequestOptions = {},\n): EIP1193RequestFn {\n  return async (args, overrideOptions = {}) => {\n    const {\n      dedupe = false,\n      methods,\n      retryDelay = 150,\n      retryCount = 3,\n      uid,\n    } = {\n      ...options,\n      ...overrideOptions,\n    }\n\n    const { method } = args\n    if (methods?.exclude?.includes(method))\n      throw new MethodNotSupportedRpcError(new Error('method not supported'), {\n        method,\n      })\n    if (methods?.include && !methods.include.includes(method))\n      throw new MethodNotSupportedRpcError(new Error('method not supported'), {\n        method,\n      })\n\n    const requestId = dedupe\n      ? stringToHex(`${uid}.${stringify(args)}`)\n      : undefined\n    return withDedupe(\n      () =>\n        withRetry(\n          async () => {\n            try {\n              return await request(args)\n            } catch (err_) {\n              const err = err_ as unknown as RpcError<\n                RpcErrorCode | ProviderRpcErrorCode\n              >\n              switch (err.code) {\n                // -32700\n                case ParseRpcError.code:\n                  throw new ParseRpcError(err)\n                // -32600\n                case InvalidRequestRpcError.code:\n                  throw new InvalidRequestRpcError(err)\n                // -32601\n                case MethodNotFoundRpcError.code:\n                  throw new MethodNotFoundRpcError(err, { method: args.method })\n                // -32602\n                case InvalidParamsRpcError.code:\n                  throw new InvalidParamsRpcError(err)\n                // -32603\n                case InternalRpcError.code:\n                  throw new InternalRpcError(err)\n                // -32000\n                case InvalidInputRpcError.code:\n                  throw new InvalidInputRpcError(err)\n                // -32001\n                case ResourceNotFoundRpcError.code:\n                  throw new ResourceNotFoundRpcError(err)\n                // -32002\n                case ResourceUnavailableRpcError.code:\n                  throw new ResourceUnavailableRpcError(err)\n                // -32003\n                case TransactionRejectedRpcError.code:\n                  throw new TransactionRejectedRpcError(err)\n                // -32004\n                case MethodNotSupportedRpcError.code:\n                  throw new MethodNotSupportedRpcError(err, {\n                    method: args.method,\n                  })\n                // -32005\n                case LimitExceededRpcError.code:\n                  throw new LimitExceededRpcError(err)\n                // -32006\n                case JsonRpcVersionUnsupportedError.code:\n                  throw new JsonRpcVersionUnsupportedError(err)\n\n                // 4001\n                case UserRejectedRequestError.code:\n                  throw new UserRejectedRequestError(err)\n                // 4100\n                case UnauthorizedProviderError.code:\n                  throw new UnauthorizedProviderError(err)\n                // 4200\n                case UnsupportedProviderMethodError.code:\n                  throw new UnsupportedProviderMethodError(err)\n                // 4900\n                case ProviderDisconnectedError.code:\n                  throw new ProviderDisconnectedError(err)\n                // 4901\n                case ChainDisconnectedError.code:\n                  throw new ChainDisconnectedError(err)\n                // 4902\n                case SwitchChainError.code:\n                  throw new SwitchChainError(err)\n\n                // 5700\n                case UnsupportedNonOptionalCapabilityError.code:\n                  throw new UnsupportedNonOptionalCapabilityError(err)\n                // 5710\n                case UnsupportedChainIdError.code:\n                  throw new UnsupportedChainIdError(err)\n                // 5720\n                case DuplicateIdError.code:\n                  throw new DuplicateIdError(err)\n                // 5730\n                case UnknownBundleIdError.code:\n                  throw new UnknownBundleIdError(err)\n                // 5740\n                case BundleTooLargeError.code:\n                  throw new BundleTooLargeError(err)\n                // 5750\n                case AtomicReadyWalletRejectedUpgradeError.code:\n                  throw new AtomicReadyWalletRejectedUpgradeError(err)\n                // 5760\n                case AtomicityNotSupportedError.code:\n                  throw new AtomicityNotSupportedError(err)\n\n                // CAIP-25: User Rejected Error\n                // https://docs.walletconnect.com/2.0/specs/clients/sign/error-codes#rejected-caip-25\n                case 5000:\n                  throw new UserRejectedRequestError(err)\n\n                default:\n                  if (err_ instanceof BaseError) throw err_\n                  throw new UnknownRpcError(err as Error)\n              }\n            }\n          },\n          {\n            delay: ({ count, error }) => {\n              // If we find a Retry-After header, let's retry after the given time.\n              if (error && error instanceof HttpRequestError) {\n                const retryAfter = error?.headers?.get('Retry-After')\n                if (retryAfter?.match(/\\d/))\n                  return Number.parseInt(retryAfter, 10) * 1000\n              }\n\n              // Otherwise, let's retry with an exponential backoff.\n              return ~~(1 << count) * retryDelay\n            },\n            retryCount,\n            shouldRetry: ({ error }) => shouldRetry(error),\n          },\n        ),\n      { enabled: dedupe, id: requestId },\n    )\n  }\n}\n\n/** @internal */\nexport function shouldRetry(error: Error) {\n  if ('code' in error && typeof error.code === 'number') {\n    if (error.code === -1) return true // Unknown error\n    if (error.code === LimitExceededRpcError.code) return true\n    if (error.code === InternalRpcError.code) return true\n    return false\n  }\n  if (error instanceof HttpRequestError && error.status) {\n    // Forbidden\n    if (error.status === 403) return true\n    // Request Timeout\n    if (error.status === 408) return true\n    // Request Entity Too Large\n    if (error.status === 413) return true\n    // Too Many Requests\n    if (error.status === 429) return true\n    // Internal Server Error\n    if (error.status === 500) return true\n    // Bad Gateway\n    if (error.status === 502) return true\n    // Service Unavailable\n    if (error.status === 503) return true\n    // Gateway Timeout\n    if (error.status === 504) return true\n    return false\n  }\n  return true\n}\n","const size = 256\nlet index = size\nlet buffer: string\n\nexport function uid(length = 11) {\n  if (!buffer || index + length > size * 2) {\n    buffer = ''\n    index = 0\n    for (let i = 0; i < size; i++) {\n      buffer += ((256 + Math.random() * 256) | 0).toString(16).substring(1)\n    }\n  }\n  return buffer.substring(index, index++ + length)\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { EIP1193RequestFn } from '../../types/eip1193.js'\nimport type { OneOf } from '../../types/utils.js'\nimport { buildRequest } from '../../utils/buildRequest.js'\nimport { uid as uid_ } from '../../utils/uid.js'\nimport type { ClientConfig } from '../createClient.js'\n\nexport type TransportConfig<\n  type extends string = string,\n  eip1193RequestFn extends EIP1193RequestFn = EIP1193RequestFn,\n> = {\n  /** The name of the transport. */\n  name: string\n  /** The key of the transport. */\n  key: string\n  /** Methods to include or exclude from executing RPC requests. */\n  methods?:\n    | OneOf<\n        | {\n            include?: string[] | undefined\n          }\n        | {\n            exclude?: string[] | undefined\n          }\n      >\n    | undefined\n  /** The JSON-RPC request function that matches the EIP-1193 request spec. */\n  request: eip1193RequestFn\n  /** The base delay (in ms) between retries. */\n  retryDelay?: number | undefined\n  /** The max number of times to retry. */\n  retryCount?: number | undefined\n  /** The timeout (in ms) for requests. */\n  timeout?: number | undefined\n  /** The type of the transport. */\n  type: type\n}\n\nexport type Transport<\n  type extends string = string,\n  rpcAttributes = Record<string, any>,\n  eip1193RequestFn extends EIP1193RequestFn = EIP1193RequestFn,\n> = <chain extends Chain | undefined = Chain>({\n  chain,\n}: {\n  chain?: chain | undefined\n  pollingInterval?: ClientConfig['pollingInterval'] | undefined\n  retryCount?: TransportConfig['retryCount'] | undefined\n  timeout?: TransportConfig['timeout'] | undefined\n}) => {\n  config: TransportConfig<type>\n  request: eip1193RequestFn\n  value?: rpcAttributes | undefined\n}\n\nexport type CreateTransportErrorType = ErrorType\n\n/**\n * @description Creates an transport intended to be used with a client.\n */\nexport function createTransport<\n  type extends string,\n  rpcAttributes extends Record<string, any>,\n>(\n  {\n    key,\n    methods,\n    name,\n    request,\n    retryCount = 3,\n    retryDelay = 150,\n    timeout,\n    type,\n  }: TransportConfig<type>,\n  value?: rpcAttributes | undefined,\n): ReturnType<Transport<type, rpcAttributes>> {\n  const uid = uid_()\n  return {\n    config: {\n      key,\n      methods,\n      name,\n      request,\n      retryCount,\n      retryDelay,\n      timeout,\n      type,\n    },\n    request: buildRequest(request, { methods, retryCount, retryDelay, uid }),\n    value,\n  }\n}\n","import { RpcRequestError } from '../../errors/request.js'\nimport {\n  UrlRequiredError,\n  type UrlRequiredErrorType,\n} from '../../errors/transport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { EIP1193RequestFn, RpcSchema } from '../../types/eip1193.js'\nimport type { RpcRequest } from '../../types/rpc.js'\nimport { createBatchScheduler } from '../../utils/promise/createBatchScheduler.js'\nimport {\n  getHttpRpcClient,\n  type HttpRpcClientOptions,\n} from '../../utils/rpc/http.js'\n\nimport {\n  type CreateTransportErrorType,\n  createTransport,\n  type Transport,\n  type TransportConfig,\n} from './createTransport.js'\n\nexport type HttpTransportConfig<\n  rpcSchema extends RpcSchema | undefined = undefined,\n  raw extends boolean = false,\n> = {\n  /**\n   * Whether to enable Batch JSON-RPC.\n   * @link https://www.jsonrpc.org/specification#batch\n   */\n  batch?:\n    | boolean\n    | {\n        /** The maximum number of JSON-RPC requests to send in a batch. @default 1_000 */\n        batchSize?: number | undefined\n        /** The maximum number of milliseconds to wait before sending a batch. @default 0 */\n        wait?: number | undefined\n      }\n    | undefined\n  fetchFn?: HttpRpcClientOptions['fetchFn'] | undefined\n  /**\n   * Request configuration to pass to `fetch`.\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/fetch\n   */\n  fetchOptions?: HttpRpcClientOptions['fetchOptions'] | undefined\n  /** A callback to handle the response from `fetch`. */\n  onFetchRequest?: HttpRpcClientOptions['onRequest'] | undefined\n  /** A callback to handle the response from `fetch`. */\n  onFetchResponse?: HttpRpcClientOptions['onResponse'] | undefined\n  /** The key of the HTTP transport. */\n  key?: TransportConfig['key'] | undefined\n  /** Methods to include or exclude from executing RPC requests. */\n  methods?: TransportConfig['methods'] | undefined\n  /** The name of the HTTP transport. */\n  name?: TransportConfig['name'] | undefined\n  /** Whether to return JSON RPC errors as responses instead of throwing. */\n  raw?: raw | boolean | undefined\n  /** The max number of times to retry. */\n  retryCount?: TransportConfig['retryCount'] | undefined\n  /** The base delay (in ms) between retries. */\n  retryDelay?: TransportConfig['retryDelay'] | undefined\n  /** Typed JSON-RPC schema for the transport. */\n  rpcSchema?: rpcSchema | RpcSchema | undefined\n  /** The timeout (in ms) for the HTTP request. Default: 10_000 */\n  timeout?: TransportConfig['timeout'] | undefined\n}\n\nexport type HttpTransport<\n  rpcSchema extends RpcSchema | undefined = undefined,\n  raw extends boolean = false,\n> = Transport<\n  'http',\n  {\n    fetchOptions?: HttpTransportConfig['fetchOptions'] | undefined\n    url?: string | undefined\n  },\n  EIP1193RequestFn<rpcSchema, raw>\n>\n\nexport type HttpTransportErrorType =\n  | CreateTransportErrorType\n  | UrlRequiredErrorType\n  | ErrorType\n\n/**\n * @description Creates a HTTP transport that connects to a JSON-RPC API.\n */\nexport function http<\n  rpcSchema extends RpcSchema | undefined = undefined,\n  raw extends boolean = false,\n>(\n  /** URL of the JSON-RPC API. Defaults to the chain's public RPC URL. */\n  url?: string | undefined,\n  config: HttpTransportConfig<rpcSchema, raw> = {},\n): HttpTransport<rpcSchema, raw> {\n  const {\n    batch,\n    fetchFn,\n    fetchOptions,\n    key = 'http',\n    methods,\n    name = 'HTTP JSON-RPC',\n    onFetchRequest,\n    onFetchResponse,\n    retryDelay,\n    raw,\n  } = config\n  return ({ chain, retryCount: retryCount_, timeout: timeout_ }) => {\n    const { batchSize = 1000, wait = 0 } =\n      typeof batch === 'object' ? batch : {}\n    const retryCount = config.retryCount ?? retryCount_\n    const timeout = timeout_ ?? config.timeout ?? 10_000\n    const url_ = url || chain?.rpcUrls.default.http[0]\n    if (!url_) throw new UrlRequiredError()\n\n    const rpcClient = getHttpRpcClient(url_, {\n      fetchFn,\n      fetchOptions,\n      onRequest: onFetchRequest,\n      onResponse: onFetchResponse,\n      timeout,\n    })\n\n    return createTransport(\n      {\n        key,\n        methods,\n        name,\n        async request({ method, params }) {\n          const body = { method, params }\n\n          const { schedule } = createBatchScheduler({\n            id: url_,\n            wait,\n            shouldSplitBatch(requests) {\n              return requests.length > batchSize\n            },\n            fn: (body: RpcRequest[]) =>\n              rpcClient.request({\n                body,\n              }),\n            sort: (a, b) => a.id - b.id,\n          })\n\n          const fn = async (body: RpcRequest) =>\n            batch\n              ? schedule(body)\n              : [\n                  await rpcClient.request({\n                    body,\n                  }),\n                ]\n\n          const [{ error, result }] = await fn(body)\n\n          if (raw) return { error, result }\n          if (error)\n            throw new RpcRequestError({\n              body,\n              error,\n              url: url_,\n            })\n          return result\n        },\n        retryCount,\n        retryDelay,\n        timeout,\n        type: 'http',\n      },\n      {\n        fetchOptions,\n        url: url_,\n      },\n    )\n  }\n}\n","import {\n  HttpRequestError,\n  type HttpRequestErrorType as HttpRequestErrorType_,\n  TimeoutError,\n  type TimeoutErrorType,\n} from '../../errors/request.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { RpcRequest, RpcResponse } from '../../types/rpc.js'\nimport type { MaybePromise } from '../../types/utils.js'\nimport {\n  type WithTimeoutErrorType,\n  withTimeout,\n} from '../promise/withTimeout.js'\nimport { stringify } from '../stringify.js'\nimport { idCache } from './id.js'\n\nexport type HttpRpcClientOptions = {\n  /** Override for the fetch function used to make requests. */\n  fetchFn?:\n    | ((input: string | URL | Request, init?: RequestInit) => Promise<Response>)\n    | undefined\n  /** Request configuration to pass to `fetch`. */\n  fetchOptions?: Omit<RequestInit, 'body'> | undefined\n  /** A callback to handle the request. */\n  onRequest?:\n    | ((\n        request: Request,\n        init: RequestInit,\n      ) => MaybePromise<\n        void | undefined | (RequestInit & { url?: string | undefined })\n      >)\n    | undefined\n  /** A callback to handle the response. */\n  onResponse?: ((response: Response) => Promise<void> | void) | undefined\n  /** The timeout (in ms) for the request. */\n  timeout?: number | undefined\n}\n\nexport type HttpRequestParameters<\n  body extends RpcRequest | RpcRequest[] = RpcRequest,\n> = {\n  /** The RPC request body. */\n  body: body\n  /** Override for the fetch function used to make requests. */\n  fetchFn?: HttpRpcClientOptions['fetchFn'] | undefined\n  /** Request configuration to pass to `fetch`. */\n  fetchOptions?: HttpRpcClientOptions['fetchOptions'] | undefined\n  /** A callback to handle the response. */\n  onRequest?:\n    | ((\n        request: Request,\n        init: RequestInit,\n      ) => MaybePromise<\n        void | undefined | (RequestInit & { url?: string | undefined })\n      >)\n    | undefined\n  /** A callback to handle the response. */\n  onResponse?: ((response: Response) => Promise<void> | void) | undefined\n  /** The timeout (in ms) for the request. */\n  timeout?: HttpRpcClientOptions['timeout'] | undefined\n}\n\nexport type HttpRequestReturnType<\n  body extends RpcRequest | RpcRequest[] = RpcRequest,\n> = body extends RpcRequest[] ? RpcResponse[] : RpcResponse\n\nexport type HttpRequestErrorType =\n  | HttpRequestErrorType_\n  | TimeoutErrorType\n  | WithTimeoutErrorType\n  | ErrorType\n\nexport type HttpRpcClient = {\n  request<body extends RpcRequest | RpcRequest[]>(\n    params: HttpRequestParameters<body>,\n  ): Promise<HttpRequestReturnType<body>>\n}\n\nexport function getHttpRpcClient(\n  url: string,\n  options: HttpRpcClientOptions = {},\n): HttpRpcClient {\n  return {\n    async request(params) {\n      const {\n        body,\n        fetchFn = options.fetchFn ?? fetch,\n        onRequest = options.onRequest,\n        onResponse = options.onResponse,\n        timeout = options.timeout ?? 10_000,\n      } = params\n\n      const fetchOptions = {\n        ...(options.fetchOptions ?? {}),\n        ...(params.fetchOptions ?? {}),\n      }\n\n      const { headers, method, signal: signal_ } = fetchOptions\n\n      try {\n        const response = await withTimeout(\n          async ({ signal }) => {\n            const init: RequestInit = {\n              ...fetchOptions,\n              body: Array.isArray(body)\n                ? stringify(\n                    body.map((body) => ({\n                      jsonrpc: '2.0',\n                      id: body.id ?? idCache.take(),\n                      ...body,\n                    })),\n                  )\n                : stringify({\n                    jsonrpc: '2.0',\n                    id: body.id ?? idCache.take(),\n                    ...body,\n                  }),\n              headers: {\n                'Content-Type': 'application/json',\n                ...headers,\n              },\n              method: method || 'POST',\n              signal: signal_ || (timeout > 0 ? signal : null),\n            }\n            const request = new Request(url, init)\n            const args = (await onRequest?.(request, init)) ?? { ...init, url }\n            const response = await fetchFn(args.url ?? url, args)\n            return response\n          },\n          {\n            errorInstance: new TimeoutError({ body, url }),\n            timeout,\n            signal: true,\n          },\n        )\n\n        if (onResponse) await onResponse(response)\n\n        let data: any\n        if (\n          response.headers.get('Content-Type')?.startsWith('application/json')\n        )\n          data = await response.json()\n        else {\n          data = await response.text()\n          try {\n            data = JSON.parse(data || '{}')\n          } catch (err) {\n            if (response.ok) throw err\n            data = { error: data }\n          }\n        }\n\n        if (!response.ok) {\n          throw new HttpRequestError({\n            body,\n            details: stringify(data.error) || response.statusText,\n            headers: response.headers,\n            status: response.status,\n            url,\n          })\n        }\n\n        return data\n      } catch (err) {\n        if (err instanceof HttpRequestError) throw err\n        if (err instanceof TimeoutError) throw err\n        throw new HttpRequestError({\n          body,\n          cause: err as Error,\n          url,\n        })\n      }\n    },\n  }\n}\n","import type { Address } from 'abitype'\n\nimport type { JsonRpcAccount } from '../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../accounts/utils/parseAccount.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport type { Account } from '../types/account.js'\nimport type { BlockTag } from '../types/block.js'\nimport type { Chain } from '../types/chain.js'\nimport type {\n  EIP1193RequestFn,\n  EIP1474Methods,\n  RpcSchema,\n} from '../types/eip1193.js'\nimport type { ExactPartial, Prettify } from '../types/utils.js'\nimport type {\n  CcipRequestParameters,\n  CcipRequestReturnType,\n} from '../utils/ccip.js'\nimport { uid } from '../utils/uid.js'\nimport type { PublicActions } from './decorators/public.js'\nimport type { WalletActions } from './decorators/wallet.js'\nimport type { Transport } from './transports/createTransport.js'\n\nexport type ClientConfig<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  accountOrAddress extends Account | Address | undefined =\n    | Account\n    | Address\n    | undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n> = {\n  /** The Account to use for the Client. This will be used for Actions that require an account as an argument. */\n  account?: accountOrAddress | Account | Address | undefined\n  /** Flags for batch settings. */\n  batch?:\n    | {\n        /** Toggle to enable `eth_call` multicall aggregation. */\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined\n      }\n    | undefined\n  /**\n   * Default block tag to use for RPC requests.\n   *\n   * If the chain supports a pre-confirmation mechanism\n   * (set via `chain.experimental_preconfirmationTime`), defaults to `'pending'`.\n   *\n   * @default 'latest'\n   */\n  experimental_blockTag?: BlockTag | undefined\n  /**\n   * Time (in ms) that cached data will remain in memory.\n   * @default chain.blockTime / 3\n   */\n  cacheTime?: number | undefined\n  /**\n   * [CCIP Read](https://eips.ethereum.org/EIPS/eip-3668) configuration.\n   * If `false`, the client will not support offchain CCIP lookups.\n   */\n  ccipRead?:\n    | {\n        /**\n         * A function that will be called to make the offchain CCIP lookup request.\n         * @see https://eips.ethereum.org/EIPS/eip-3668#client-lookup-protocol\n         */\n        request?: (\n          parameters: CcipRequestParameters,\n        ) => Promise<CcipRequestReturnType>\n      }\n    | false\n    | undefined\n  /** Chain for the client. */\n  chain?: Chain | undefined | chain\n  /** A key for the client. */\n  key?: string | undefined\n  /** A name for the client. */\n  name?: string | undefined\n  /**\n   * Frequency (in ms) for polling enabled actions & events.\n   * @default chain.blockTime / 3\n   */\n  pollingInterval?: number | undefined\n  /**\n   * Typed JSON-RPC schema for the client.\n   */\n  rpcSchema?: rpcSchema | undefined\n  /** The RPC transport */\n  transport: transport\n  /** The type of client. */\n  type?: string | undefined\n}\n\n// Actions that are used internally by other Actions (ie. `call` is used by `readContract`).\n// They are allowed to be extended, but must conform to their parameter & return type interfaces.\n// Example: an extended `call` action must accept `CallParameters` as parameters,\n// and conform to the `CallReturnType` return type.\ntype ExtendableProtectedActions<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n> = Pick<\n  PublicActions<transport, chain, account>,\n  | 'call'\n  | 'createContractEventFilter'\n  | 'createEventFilter'\n  | 'estimateContractGas'\n  | 'estimateGas'\n  | 'getBlock'\n  | 'getBlockNumber'\n  | 'getChainId'\n  | 'getContractEvents'\n  | 'getEnsText'\n  | 'getFilterChanges'\n  | 'getGasPrice'\n  | 'getLogs'\n  | 'getTransaction'\n  | 'getTransactionCount'\n  | 'getTransactionReceipt'\n  | 'prepareTransactionRequest'\n  | 'readContract'\n  | 'sendRawTransaction'\n  | 'simulateContract'\n  | 'uninstallFilter'\n  | 'watchBlockNumber'\n  | 'watchContractEvent'\n> &\n  Pick<WalletActions<chain, account>, 'sendTransaction' | 'writeContract'>\n\n// TODO: Move `transport` to slot index 2 since `chain` and `account` used more frequently.\n// Otherwise, we end up with a lot of `Client<Transport, chain, account>` in actions.\nexport type Client<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n  extended extends Extended | undefined = Extended | undefined,\n> = Client_Base<transport, chain, account, rpcSchema> &\n  (extended extends Extended ? extended : unknown) & {\n    extend: <\n      const client extends Extended &\n        ExactPartial<ExtendableProtectedActions<transport, chain, account>>,\n    >(\n      fn: (\n        client: Client<transport, chain, account, rpcSchema, extended>,\n      ) => client,\n    ) => Client<\n      transport,\n      chain,\n      account,\n      rpcSchema,\n      Prettify<client> & (extended extends Extended ? extended : unknown)\n    >\n  }\n\ntype Client_Base<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n> = {\n  /** The Account of the Client. */\n  account: account\n  /** Flags for batch settings. */\n  batch?: ClientConfig['batch'] | undefined\n  /** Time (in ms) that cached data will remain in memory. */\n  cacheTime: number\n  /** [CCIP Read](https://eips.ethereum.org/EIPS/eip-3668) configuration. */\n  ccipRead?: ClientConfig['ccipRead'] | undefined\n  /** Chain for the client. */\n  chain: chain\n  /** Default block tag to use for RPC requests. */\n  experimental_blockTag?: BlockTag | undefined\n  /** A key for the client. */\n  key: string\n  /** A name for the client. */\n  name: string\n  /** Frequency (in ms) for polling enabled actions & events. Defaults to 4_000 milliseconds. */\n  pollingInterval: number\n  /** Request function wrapped with friendly error handling */\n  request: EIP1193RequestFn<\n    rpcSchema extends undefined ? EIP1474Methods : rpcSchema\n  >\n  /** The RPC transport */\n  transport: ReturnType<transport>['config'] & ReturnType<transport>['value']\n  /** The type of client. */\n  type: string\n  /** A unique ID for the client. */\n  uid: string\n}\n\ntype Extended = Prettify<\n  // disallow redefining base properties\n  { [_ in keyof Client_Base]?: undefined } & {\n    [key: string]: unknown\n  }\n>\n\nexport type MulticallBatchOptions = {\n  /** The maximum size (in bytes) for each calldata chunk. @default 1_024 */\n  batchSize?: number | undefined\n  /** Enable deployless multicall. */\n  deployless?: boolean | undefined\n  /** The maximum number of milliseconds to wait before sending a batch. @default 0 */\n  wait?: number | undefined\n}\n\nexport type CreateClientErrorType = ParseAccountErrorType | ErrorType\n\nexport function createClient<\n  transport extends Transport,\n  chain extends Chain | undefined = undefined,\n  accountOrAddress extends Account | Address | undefined = undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n>(\n  parameters: ClientConfig<transport, chain, accountOrAddress, rpcSchema>,\n): Prettify<\n  Client<\n    transport,\n    chain,\n    accountOrAddress extends Address\n      ? Prettify<JsonRpcAccount<accountOrAddress>>\n      : accountOrAddress,\n    rpcSchema\n  >\n>\n\nexport function createClient(parameters: ClientConfig): Client {\n  const {\n    batch,\n    chain,\n    ccipRead,\n    key = 'base',\n    name = 'Base Client',\n    type = 'base',\n  } = parameters\n\n  const experimental_blockTag =\n    parameters.experimental_blockTag ??\n    (typeof chain?.experimental_preconfirmationTime === 'number'\n      ? 'pending'\n      : undefined)\n  const blockTime = chain?.blockTime ?? 12_000\n\n  const defaultPollingInterval = Math.min(\n    Math.max(Math.floor(blockTime / 2), 500),\n    4_000,\n  )\n  const pollingInterval = parameters.pollingInterval ?? defaultPollingInterval\n  const cacheTime = parameters.cacheTime ?? pollingInterval\n\n  const account = parameters.account\n    ? parseAccount(parameters.account)\n    : undefined\n  const { config, request, value } = parameters.transport({\n    chain,\n    pollingInterval,\n  })\n  const transport = { ...config, ...value }\n\n  const client = {\n    account,\n    batch,\n    cacheTime,\n    ccipRead,\n    chain,\n    key,\n    name,\n    pollingInterval,\n    request,\n    transport,\n    type,\n    uid: uid(),\n    ...(experimental_blockTag ? { experimental_blockTag } : {}),\n  }\n\n  function extend(base: typeof client) {\n    type ExtendFn = (base: typeof client) => unknown\n    return (extendFn: ExtendFn) => {\n      const extended = extendFn(base) as Extended\n      for (const key in client) delete extended[key]\n      const combined = { ...base, ...extended }\n      return Object.assign(combined, { extend: extend(combined as any) })\n    }\n  }\n\n  return Object.assign(client, { extend: extend(client) as any })\n}\n\n/**\n * Defines a typed JSON-RPC schema for the client.\n * Note: This is a runtime noop function.\n */\nexport function rpcSchema<rpcSchema extends RpcSchema>(): rpcSchema {\n  return null as any\n}\n","import { BaseError } from '../../errors/base.js'\nimport { ContractFunctionRevertedError } from '../../errors/contract.js'\nimport type { ErrorType } from '../../errors/utils.js'\n\n/** @internal */\nexport type IsNullUniversalResolverErrorErrorType = ErrorType\n\n/*\n * @description Checks if error is a valid null result UniversalResolver error\n */\nexport function isNullUniversalResolverError(err: unknown): boolean {\n  if (!(err instanceof BaseError)) return false\n  const cause = err.walk((e) => e instanceof ContractFunctionRevertedError)\n  if (!(cause instanceof ContractFunctionRevertedError)) return false\n\n  if (cause.data?.errorName === 'HttpError') return true\n  if (cause.data?.errorName === 'ResolverError') return true\n  if (cause.data?.errorName === 'ResolverNotContract') return true\n  if (cause.data?.errorName === 'ResolverNotFound') return true\n  if (cause.data?.errorName === 'ReverseAddressMismatch') return true\n  if (cause.data?.errorName === 'UnsupportedResolverProfile') return true\n\n  return false\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport { type IsHexErrorType, isHex } from '../data/isHex.js'\n\nexport type EncodedLabelToLabelhashErrorType = IsHexErrorType | ErrorType\n\nexport function encodedLabelToLabelhash(label: string): Hex | null {\n  if (label.length !== 66) return null\n  if (label.indexOf('[') !== 0) return null\n  if (label.indexOf(']') !== 65) return null\n  const hash = `0x${label.slice(1, 65)}`\n  if (!isHex(hash)) return null\n  return hash\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray } from '../../types/misc.js'\nimport { type ConcatErrorType, concat } from '../data/concat.js'\nimport {\n  type StringToBytesErrorType,\n  stringToBytes,\n  type ToBytesErrorType,\n  toBytes,\n} from '../encoding/toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from '../encoding/toHex.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\nimport {\n  type EncodedLabelToLabelhashErrorType,\n  encodedLabelToLabelhash,\n} from './encodedLabelToLabelhash.js'\n\nexport type NamehashErrorType =\n  | BytesToHexErrorType\n  | EncodedLabelToLabelhashErrorType\n  | ToBytesErrorType\n  | Keccak256ErrorType\n  | StringToBytesErrorType\n  | ConcatErrorType\n  | ErrorType\n\n/**\n * @description Hashes ENS name\n *\n * - Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `namehash`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n *\n * @example\n * namehash('wevm.eth')\n * '0x08c85f2f4059e930c45a6aeff9dcd3bd95dc3c5c1cddef6a0626b31152248560'\n *\n * @link https://eips.ethereum.org/EIPS/eip-137\n */\nexport function namehash(name: string) {\n  let result = new Uint8Array(32).fill(0) as ByteArray\n  if (!name) return bytesToHex(result)\n\n  const labels = name.split('.')\n  // Iterate in reverse order building up hash\n  for (let i = labels.length - 1; i >= 0; i -= 1) {\n    const hashFromEncodedLabel = encodedLabelToLabelhash(labels[i])\n    const hashed = hashFromEncodedLabel\n      ? toBytes(hashFromEncodedLabel)\n      : keccak256(stringToBytes(labels[i]), 'bytes')\n    result = keccak256(concat([result, hashed]), 'bytes')\n  }\n\n  return bytesToHex(result)\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\n\nexport type EncodeLabelhashErrorType = ErrorType\n\nexport function encodeLabelhash(hash: Hex): `[${string}]` {\n  return `[${hash.slice(2)}]`\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport {\n  type StringToBytesErrorType,\n  stringToBytes,\n} from '../encoding/toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from '../encoding/toHex.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\nimport {\n  type EncodedLabelToLabelhashErrorType,\n  encodedLabelToLabelhash,\n} from './encodedLabelToLabelhash.js'\n\nexport type LabelhashErrorType =\n  | BytesToHexErrorType\n  | EncodedLabelToLabelhashErrorType\n  | Keccak256ErrorType\n  | StringToBytesErrorType\n  | ErrorType\n\n/**\n * @description Hashes ENS label\n *\n * - Since ENS labels prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS labels](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `labelhash`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n *\n * @example\n * labelhash('eth')\n * '0x4f5b812789fc606be1b3b16908db13fc7a9adf7ca72641f84d75b47069d3d7f0'\n */\nexport function labelhash(label: string) {\n  const result = new Uint8Array(32).fill(0)\n  if (!label) return bytesToHex(result)\n  return encodedLabelToLabelhash(label) || keccak256(stringToBytes(label))\n}\n","// Adapted from https://github.com/mafintosh/dns-packet\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray } from '../../types/misc.js'\nimport {\n  type StringToBytesErrorType,\n  stringToBytes,\n} from '../encoding/toBytes.js'\nimport {\n  type EncodeLabelhashErrorType,\n  encodeLabelhash,\n} from './encodeLabelhash.js'\nimport { type LabelhashErrorType, labelhash } from './labelhash.js'\n\nexport type PacketToBytesErrorType =\n  | EncodeLabelhashErrorType\n  | LabelhashErrorType\n  | StringToBytesErrorType\n  | ErrorType\n\n/*\n * @description Encodes a DNS packet into a ByteArray containing a UDP payload.\n *\n * @example\n * packetToBytes('awkweb.eth')\n * '0x0661776b7765620365746800'\n *\n * @see https://docs.ens.domains/resolution/names#dns\n *\n */\nexport function packetToBytes(packet: string): ByteArray {\n  // strip leading and trailing `.`\n  const value = packet.replace(/^\\.|\\.$/gm, '')\n  if (value.length === 0) return new Uint8Array(1)\n\n  const bytes = new Uint8Array(stringToBytes(value).byteLength + 2)\n\n  let offset = 0\n  const list = value.split('.')\n  for (let i = 0; i < list.length; i++) {\n    let encoded = stringToBytes(list[i])\n    // if the length is > 255, make the encoded label value a labelhash\n    // this is compatible with the universal resolver\n    if (encoded.byteLength > 255)\n      encoded = stringToBytes(encodeLabelhash(labelhash(list[i])))\n    bytes[offset] = encoded.length\n    bytes.set(encoded, offset + 1)\n    offset += encoded.length + 1\n  }\n\n  if (bytes.byteLength !== offset + 1) return bytes.slice(0, offset + 1)\n\n  return bytes\n}\n","import type { Client } from '../clients/createClient.js'\nimport type { PublicActions } from '../clients/decorators/public.js'\nimport type { WalletActions } from '../clients/decorators/wallet.js'\nimport type { Transport } from '../clients/transports/createTransport.js'\nimport type { Account } from '../types/account.js'\nimport type { Chain } from '../types/chain.js'\nimport type { RpcSchema } from '../types/eip1193.js'\n\n/**\n * Retrieves and returns an action from the client (if exists), and falls\n * back to the tree-shakable action.\n *\n * Useful for extracting overridden actions from a client (ie. if a consumer\n * wants to override the `sendTransaction` implementation).\n */\nexport function getAction<\n  transport extends Transport,\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n  rpcSchema extends RpcSchema | undefined,\n  extended extends { [key: string]: unknown },\n  client extends Client<transport, chain, account, rpcSchema, extended>,\n  parameters,\n  returnType,\n>(\n  client: client,\n  actionFn: (_: any, parameters: parameters) => returnType,\n  // Some minifiers drop `Function.prototype.name`, or replace it with short letters,\n  // meaning that `actionFn.name` will not always work. For that case, the consumer\n  // needs to pass the name explicitly.\n  name: keyof PublicActions | keyof WalletActions | (string & {}),\n): (parameters: parameters) => returnType {\n  const action_implicit = client[actionFn.name]\n  if (typeof action_implicit === 'function')\n    return action_implicit as (params: parameters) => returnType\n\n  const action_explicit = client[name]\n  if (typeof action_explicit === 'function')\n    return action_explicit as (params: parameters) => returnType\n\n  return (params) => actionFn(client, params)\n}\n","import type { Abi, Address } from 'abitype'\n\nimport { AbiDecodingZeroDataError } from '../../errors/abi.js'\nimport { BaseError } from '../../errors/base.js'\nimport {\n  ContractFunctionExecutionError,\n  type ContractFunctionExecutionErrorType,\n  ContractFunctionRevertedError,\n  type ContractFunctionRevertedErrorType,\n  ContractFunctionZeroDataError,\n  type ContractFunctionZeroDataErrorType,\n  RawContractError,\n} from '../../errors/contract.js'\nimport { RpcRequestError } from '../../errors/request.js'\nimport { InternalRpcError } from '../../errors/rpc.js'\nimport type { ErrorType } from '../../errors/utils.js'\n\nconst EXECUTION_REVERTED_ERROR_CODE = 3\n\nexport type GetContractErrorReturnType<cause = ErrorType> = Omit<\n  ContractFunctionExecutionErrorType,\n  'cause'\n> & {\n  cause:\n    | cause\n    | ContractFunctionZeroDataErrorType\n    | ContractFunctionRevertedErrorType\n}\n\nexport function getContractError<err extends ErrorType<string>>(\n  err: err,\n  {\n    abi,\n    address,\n    args,\n    docsPath,\n    functionName,\n    sender,\n  }: {\n    abi: Abi\n    args: any\n    address?: Address | undefined\n    docsPath?: string | undefined\n    functionName: string\n    sender?: Address | undefined\n  },\n): GetContractErrorReturnType {\n  const error = (\n    err instanceof RawContractError\n      ? err\n      : err instanceof BaseError\n        ? err.walk((err) => 'data' in (err as Error)) || err.walk()\n        : {}\n  ) as BaseError\n  const { code, data, details, message, shortMessage } =\n    error as RawContractError\n\n  const cause = (() => {\n    if (err instanceof AbiDecodingZeroDataError)\n      return new ContractFunctionZeroDataError({ functionName })\n    if (\n      [EXECUTION_REVERTED_ERROR_CODE, InternalRpcError.code].includes(code) &&\n      (data || details || message || shortMessage)\n    ) {\n      return new ContractFunctionRevertedError({\n        abi,\n        data: typeof data === 'object' ? data.data : data,\n        functionName,\n        message:\n          error instanceof RpcRequestError\n            ? details\n            : (shortMessage ?? message),\n      })\n    }\n    return err\n  })()\n\n  return new ContractFunctionExecutionError(cause as BaseError, {\n    abi,\n    args,\n    contractAddress: address,\n    docsPath,\n    functionName,\n    sender,\n  }) as GetContractErrorReturnType\n}\n","import type { Abi } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { BaseError } from '../../errors/base.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ContractFunctionArgs,\n  ContractFunctionName,\n  ContractFunctionParameters,\n  ContractFunctionReturnType,\n} from '../../types/contract.js'\nimport type { UnionEvaluate } from '../../types/utils.js'\nimport {\n  type DecodeFunctionResultErrorType,\n  decodeFunctionResult,\n} from '../../utils/abi/decodeFunctionResult.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  type EncodeFunctionDataParameters,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport {\n  type GetContractErrorReturnType,\n  getContractError,\n} from '../../utils/errors/getContractError.js'\nimport { getAction } from '../../utils/getAction.js'\n\nimport { type CallErrorType, type CallParameters, call } from './call.js'\n\nexport type ReadContractParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  functionName extends ContractFunctionName<\n    abi,\n    'pure' | 'view'\n  > = ContractFunctionName<abi, 'pure' | 'view'>,\n  args extends ContractFunctionArgs<\n    abi,\n    'pure' | 'view',\n    functionName\n  > = ContractFunctionArgs<abi, 'pure' | 'view', functionName>,\n> = UnionEvaluate<\n  Pick<\n    CallParameters,\n    | 'account'\n    | 'authorizationList'\n    | 'blockNumber'\n    | 'blockOverrides'\n    | 'blockTag'\n    | 'factory'\n    | 'factoryData'\n    | 'stateOverride'\n  >\n> &\n  ContractFunctionParameters<abi, 'pure' | 'view', functionName, args, boolean>\n\nexport type ReadContractReturnType<\n  abi extends Abi | readonly unknown[] = Abi,\n  functionName extends ContractFunctionName<\n    abi,\n    'pure' | 'view'\n  > = ContractFunctionName<abi, 'pure' | 'view'>,\n  args extends ContractFunctionArgs<\n    abi,\n    'pure' | 'view',\n    functionName\n  > = ContractFunctionArgs<abi, 'pure' | 'view', functionName>,\n> = ContractFunctionReturnType<abi, 'pure' | 'view', functionName, args>\n\nexport type ReadContractErrorType = GetContractErrorReturnType<\n  CallErrorType | EncodeFunctionDataErrorType | DecodeFunctionResultErrorType\n>\n\n/**\n * Calls a read-only function on a contract, and returns the response.\n *\n * - Docs: https://viem.sh/docs/contract/readContract\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts_reading-contracts\n *\n * A \"read-only\" function (constant function) on a Solidity contract is denoted by a `view` or `pure` keyword. They can only read the state of the contract, and cannot make any changes to it. Since read-only methods do not change the state of the contract, they do not require any gas to be executed, and can be called by any user without the need to pay for gas.\n *\n * Internally, uses a [Public Client](https://viem.sh/docs/clients/public) to call the [`call` action](https://viem.sh/docs/actions/public/call) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\n *\n * @param client - Client to use\n * @param parameters - {@link ReadContractParameters}\n * @returns The response from the contract. Type is inferred. {@link ReadContractReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { readContract } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const result = await readContract(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['function balanceOf(address) view returns (uint256)']),\n *   functionName: 'balanceOf',\n *   args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],\n * })\n * // 424122n\n */\nexport async function readContract<\n  chain extends Chain | undefined,\n  const abi extends Abi | readonly unknown[],\n  functionName extends ContractFunctionName<abi, 'pure' | 'view'>,\n  const args extends ContractFunctionArgs<abi, 'pure' | 'view', functionName>,\n>(\n  client: Client<Transport, chain>,\n  parameters: ReadContractParameters<abi, functionName, args>,\n): Promise<ReadContractReturnType<abi, functionName, args>> {\n  const { abi, address, args, functionName, ...rest } =\n    parameters as ReadContractParameters\n  const calldata = encodeFunctionData({\n    abi,\n    args,\n    functionName,\n  } as EncodeFunctionDataParameters)\n  try {\n    const { data } = await getAction(\n      client,\n      call,\n      'call',\n    )({\n      ...(rest as CallParameters),\n      data: calldata,\n      to: address!,\n    })\n    return decodeFunctionResult({\n      abi,\n      args,\n      functionName,\n      data: data || '0x',\n    }) as ReadContractReturnType<abi, functionName>\n  } catch (error) {\n    throw getContractError(error as BaseError, {\n      abi,\n      address,\n      args,\n      docsPath: '/docs/contract/readContract',\n      functionName,\n    })\n  }\n}\n","import { BaseError } from './base.js'\n\nexport type EnsAvatarInvalidMetadataErrorType =\n  EnsAvatarInvalidMetadataError & {\n    name: 'EnsAvatarInvalidMetadataError'\n  }\nexport class EnsAvatarInvalidMetadataError extends BaseError {\n  constructor({ data }: { data: any }) {\n    super(\n      'Unable to extract image from metadata. The metadata may be malformed or invalid.',\n      {\n        metaMessages: [\n          '- Metadata must be a JSON object with at least an `image`, `image_url` or `image_data` property.',\n          '',\n          `Provided data: ${JSON.stringify(data)}`,\n        ],\n        name: 'EnsAvatarInvalidMetadataError',\n      },\n    )\n  }\n}\n\nexport type EnsAvatarInvalidNftUriErrorType = EnsAvatarInvalidNftUriError & {\n  name: 'EnsAvatarInvalidNftUriError'\n}\nexport class EnsAvatarInvalidNftUriError extends BaseError {\n  constructor({ reason }: { reason: string }) {\n    super(`ENS NFT avatar URI is invalid. ${reason}`, {\n      name: 'EnsAvatarInvalidNftUriError',\n    })\n  }\n}\n\nexport type EnsAvatarUriResolutionErrorType = EnsAvatarUriResolutionError & {\n  name: 'EnsAvatarUriResolutionError'\n}\nexport class EnsAvatarUriResolutionError extends BaseError {\n  constructor({ uri }: { uri: string }) {\n    super(\n      `Unable to resolve ENS avatar URI \"${uri}\". The URI may be malformed, invalid, or does not respond with a valid image.`,\n      { name: 'EnsAvatarUriResolutionError' },\n    )\n  }\n}\n\nexport type EnsAvatarUnsupportedNamespaceErrorType =\n  EnsAvatarUnsupportedNamespaceError & {\n    name: 'EnsAvatarUnsupportedNamespaceError'\n  }\nexport class EnsAvatarUnsupportedNamespaceError extends BaseError {\n  constructor({ namespace }: { namespace: string }) {\n    super(\n      `ENS NFT avatar namespace \"${namespace}\" is not supported. Must be \"erc721\" or \"erc1155\".`,\n      { name: 'EnsAvatarUnsupportedNamespaceError' },\n    )\n  }\n}\n\nexport type EnsInvalidChainIdErrorType = EnsInvalidChainIdError & {\n  name: 'EnsInvalidChainIdError'\n}\nexport class EnsInvalidChainIdError extends BaseError {\n  constructor({ chainId }: { chainId: number }) {\n    super(\n      `Invalid ENSIP-11 chainId: ${chainId}. Must be between 0 and 0x7fffffff, or 1.`,\n      {\n        name: 'EnsInvalidChainIdError',\n      },\n    )\n  }\n}\n","import type { Address } from 'abitype'\n\nimport {\n  type ReadContractErrorType,\n  readContract,\n} from '../../../actions/public/readContract.js'\nimport type { Client } from '../../../clients/createClient.js'\nimport type { Transport } from '../../../clients/transports/createTransport.js'\nimport {\n  EnsAvatarInvalidMetadataError,\n  type EnsAvatarInvalidMetadataErrorType,\n  EnsAvatarInvalidNftUriError,\n  type EnsAvatarInvalidNftUriErrorType,\n  EnsAvatarUnsupportedNamespaceError,\n  type EnsAvatarUnsupportedNamespaceErrorType,\n  EnsAvatarUriResolutionError,\n  type EnsAvatarUriResolutionErrorType,\n} from '../../../errors/ens.js'\nimport type { ErrorType } from '../../../errors/utils.js'\nimport type { Chain } from '../../../types/chain.js'\nimport type { AssetGatewayUrls } from '../../../types/ens.js'\n\ntype UriItem = {\n  uri: string\n  isOnChain: boolean\n  isEncoded: boolean\n}\n\nconst networkRegex =\n  /(?<protocol>https?:\\/\\/[^/]*|ipfs:\\/|ipns:\\/|ar:\\/)?(?<root>\\/)?(?<subpath>ipfs\\/|ipns\\/)?(?<target>[\\w\\-.]+)(?<subtarget>\\/.*)?/\nconst ipfsHashRegex =\n  /^(Qm[1-9A-HJ-NP-Za-km-z]{44,}|b[A-Za-z2-7]{58,}|B[A-Z2-7]{58,}|z[1-9A-HJ-NP-Za-km-z]{48,}|F[0-9A-F]{50,})(\\/(?<target>[\\w\\-.]+))?(?<subtarget>\\/.*)?$/\nconst base64Regex = /^data:([a-zA-Z\\-/+]*);base64,([^\"].*)/\nconst dataURIRegex = /^data:([a-zA-Z\\-/+]*)?(;[a-zA-Z0-9].*?)?(,)/\n\ntype IsImageUriErrorType = ErrorType\n\n/** @internal */\nexport async function isImageUri(uri: string) {\n  try {\n    const res = await fetch(uri, { method: 'HEAD' })\n    // retrieve content type header to check if content is image\n    if (res.status === 200) {\n      const contentType = res.headers.get('content-type')\n      return contentType?.startsWith('image/')\n    }\n    return false\n  } catch (error: any) {\n    // if error is not cors related then fail\n    if (typeof error === 'object' && typeof error.response !== 'undefined') {\n      return false\n    }\n    // fail in NodeJS, since the error is not cors but any other network issue\n    if (!Object.hasOwn(globalThis, 'Image')) return false\n    // in case of cors, use image api to validate if given url is an actual image\n    return new Promise((resolve) => {\n      const img = new Image()\n      img.onload = () => {\n        resolve(true)\n      }\n      img.onerror = () => {\n        resolve(false)\n      }\n      img.src = uri\n    })\n  }\n}\n\ntype GetGatewayErrorType = ErrorType\n\n/** @internal */\nexport function getGateway(custom: string | undefined, defaultGateway: string) {\n  if (!custom) return defaultGateway\n  if (custom.endsWith('/')) return custom.slice(0, -1)\n  return custom\n}\n\nexport type ResolveAvatarUriErrorType =\n  | GetGatewayErrorType\n  | EnsAvatarUriResolutionErrorType\n  | ErrorType\n\nexport function resolveAvatarUri({\n  uri,\n  gatewayUrls,\n}: {\n  uri: string\n  gatewayUrls?: AssetGatewayUrls | undefined\n}): UriItem {\n  const isEncoded = base64Regex.test(uri)\n  if (isEncoded) return { uri, isOnChain: true, isEncoded }\n\n  const ipfsGateway = getGateway(gatewayUrls?.ipfs, 'https://ipfs.io')\n  const arweaveGateway = getGateway(gatewayUrls?.arweave, 'https://arweave.net')\n\n  const networkRegexMatch = uri.match(networkRegex)\n  const {\n    protocol,\n    subpath,\n    target,\n    subtarget = '',\n  } = networkRegexMatch?.groups || {}\n\n  const isIPNS = protocol === 'ipns:/' || subpath === 'ipns/'\n  const isIPFS =\n    protocol === 'ipfs:/' || subpath === 'ipfs/' || ipfsHashRegex.test(uri)\n\n  if (uri.startsWith('http') && !isIPNS && !isIPFS) {\n    let replacedUri = uri\n    if (gatewayUrls?.arweave)\n      replacedUri = uri.replace(/https:\\/\\/arweave.net/g, gatewayUrls?.arweave)\n    return { uri: replacedUri, isOnChain: false, isEncoded: false }\n  }\n\n  if ((isIPNS || isIPFS) && target) {\n    return {\n      uri: `${ipfsGateway}/${isIPNS ? 'ipns' : 'ipfs'}/${target}${subtarget}`,\n      isOnChain: false,\n      isEncoded: false,\n    }\n  }\n\n  if (protocol === 'ar:/' && target) {\n    return {\n      uri: `${arweaveGateway}/${target}${subtarget || ''}`,\n      isOnChain: false,\n      isEncoded: false,\n    }\n  }\n\n  let parsedUri = uri.replace(dataURIRegex, '')\n  if (parsedUri.startsWith('<svg')) {\n    // if svg, base64 encode\n    parsedUri = `data:image/svg+xml;base64,${btoa(parsedUri)}`\n  }\n\n  if (parsedUri.startsWith('data:') || parsedUri.startsWith('{')) {\n    return {\n      uri: parsedUri,\n      isOnChain: true,\n      isEncoded: false,\n    }\n  }\n\n  throw new EnsAvatarUriResolutionError({ uri })\n}\n\nexport type GetJsonImageErrorType =\n  | EnsAvatarInvalidMetadataErrorType\n  | ErrorType\n\nexport function getJsonImage(data: any) {\n  // validation check for json data, must include one of theses properties\n  if (\n    typeof data !== 'object' ||\n    (!('image' in data) && !('image_url' in data) && !('image_data' in data))\n  ) {\n    throw new EnsAvatarInvalidMetadataError({ data })\n  }\n\n  return data.image || data.image_url || data.image_data\n}\n\nexport type GetMetadataAvatarUriErrorType =\n  | EnsAvatarUriResolutionErrorType\n  | ParseAvatarUriErrorType\n  | GetJsonImageErrorType\n  | ErrorType\n\nexport async function getMetadataAvatarUri({\n  gatewayUrls,\n  uri,\n}: {\n  gatewayUrls?: AssetGatewayUrls | undefined\n  uri: string\n}): Promise<string> {\n  try {\n    const res = await fetch(uri).then((res) => res.json())\n    const image = await parseAvatarUri({\n      gatewayUrls,\n      uri: getJsonImage(res),\n    })\n    return image\n  } catch {\n    throw new EnsAvatarUriResolutionError({ uri })\n  }\n}\n\nexport type ParseAvatarUriErrorType =\n  | ResolveAvatarUriErrorType\n  | IsImageUriErrorType\n  | EnsAvatarUriResolutionErrorType\n  | ErrorType\n\nexport async function parseAvatarUri({\n  gatewayUrls,\n  uri,\n}: {\n  gatewayUrls?: AssetGatewayUrls | undefined\n  uri: string\n}): Promise<string> {\n  const { uri: resolvedURI, isOnChain } = resolveAvatarUri({ uri, gatewayUrls })\n  if (isOnChain) return resolvedURI\n\n  // check if resolvedURI is an image, if it is return the url\n  const isImage = await isImageUri(resolvedURI)\n  if (isImage) return resolvedURI\n\n  throw new EnsAvatarUriResolutionError({ uri })\n}\n\ntype ParsedNft = {\n  chainID: number\n  namespace: string\n  contractAddress: Address\n  tokenID: string\n}\n\nexport type ParseNftUriErrorType = EnsAvatarInvalidNftUriErrorType | ErrorType\n\nexport function parseNftUri(uri_: string): ParsedNft {\n  let uri = uri_\n  // parse valid nft spec (CAIP-22/CAIP-29)\n  // @see: https://github.com/ChainAgnostic/CAIPs/tree/master/CAIPs\n  if (uri.startsWith('did:nft:')) {\n    // convert DID to CAIP\n    uri = uri.replace('did:nft:', '').replace(/_/g, '/')\n  }\n\n  const [reference, asset_namespace, tokenID] = uri.split('/')\n  const [eip_namespace, chainID] = reference.split(':')\n  const [erc_namespace, contractAddress] = asset_namespace.split(':')\n\n  if (!eip_namespace || eip_namespace.toLowerCase() !== 'eip155')\n    throw new EnsAvatarInvalidNftUriError({ reason: 'Only EIP-155 supported' })\n  if (!chainID)\n    throw new EnsAvatarInvalidNftUriError({ reason: 'Chain ID not found' })\n  if (!contractAddress)\n    throw new EnsAvatarInvalidNftUriError({\n      reason: 'Contract address not found',\n    })\n  if (!tokenID)\n    throw new EnsAvatarInvalidNftUriError({ reason: 'Token ID not found' })\n  if (!erc_namespace)\n    throw new EnsAvatarInvalidNftUriError({ reason: 'ERC namespace not found' })\n\n  return {\n    chainID: Number.parseInt(chainID, 10),\n    namespace: erc_namespace.toLowerCase(),\n    contractAddress: contractAddress as Address,\n    tokenID,\n  }\n}\n\nexport type GetNftTokenUriErrorType =\n  | ReadContractErrorType\n  | EnsAvatarUnsupportedNamespaceErrorType\n  | ErrorType\n\nexport async function getNftTokenUri<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  { nft }: { nft: ParsedNft },\n) {\n  if (nft.namespace === 'erc721') {\n    return readContract(client, {\n      address: nft.contractAddress,\n      abi: [\n        {\n          name: 'tokenURI',\n          type: 'function',\n          stateMutability: 'view',\n          inputs: [{ name: 'tokenId', type: 'uint256' }],\n          outputs: [{ name: '', type: 'string' }],\n        },\n      ],\n      functionName: 'tokenURI',\n      args: [BigInt(nft.tokenID)],\n    })\n  }\n  if (nft.namespace === 'erc1155') {\n    return readContract(client, {\n      address: nft.contractAddress,\n      abi: [\n        {\n          name: 'uri',\n          type: 'function',\n          stateMutability: 'view',\n          inputs: [{ name: '_id', type: 'uint256' }],\n          outputs: [{ name: '', type: 'string' }],\n        },\n      ],\n      functionName: 'uri',\n      args: [BigInt(nft.tokenID)],\n    })\n  }\n  throw new EnsAvatarUnsupportedNamespaceError({ namespace: nft.namespace })\n}\n","import type { Client } from '../../../clients/createClient.js'\nimport type { Transport } from '../../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../../errors/utils.js'\nimport type { Chain } from '../../../types/chain.js'\nimport type { AssetGatewayUrls } from '../../../types/ens.js'\n\nimport {\n  type GetJsonImageErrorType,\n  type GetMetadataAvatarUriErrorType,\n  type GetNftTokenUriErrorType,\n  getJsonImage,\n  getMetadataAvatarUri,\n  getNftTokenUri,\n  type ParseAvatarUriErrorType,\n  type ParseNftUriErrorType,\n  parseAvatarUri,\n  parseNftUri,\n  type ResolveAvatarUriErrorType,\n  resolveAvatarUri,\n} from './utils.js'\n\nexport type ParseAvatarRecordErrorType =\n  | ParseNftAvatarUriErrorType\n  | ParseAvatarUriErrorType\n  | ErrorType\n\n/*\n * @description Parses an ENS avatar record.\n *\n * @example\n * parseAvatarRecord('eip155:1/erc1155:0xb32979486938aa9694bfc898f35dbed459f44424/10063')\n * 'https://ipfs.io/ipfs/QmSP4nq9fnN9dAiCj42ug9Wa79rqmQerZXZch82VqpiH7U/image.gif'\n *\n * @see https://docs.ens.domains/web/avatars\n *\n */\nexport async function parseAvatarRecord<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  {\n    gatewayUrls,\n    record,\n  }: {\n    gatewayUrls?: AssetGatewayUrls | undefined\n    record: string\n  },\n): Promise<string> {\n  if (/eip155:/i.test(record))\n    return parseNftAvatarUri(client, { gatewayUrls, record })\n  return parseAvatarUri({ uri: record, gatewayUrls })\n}\n\ntype ParseNftAvatarUriErrorType =\n  | ParseNftUriErrorType\n  | GetNftTokenUriErrorType\n  | ResolveAvatarUriErrorType\n  | ParseAvatarUriErrorType\n  | GetJsonImageErrorType\n  | GetMetadataAvatarUriErrorType\n  | ErrorType\n\nasync function parseNftAvatarUri<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  {\n    gatewayUrls,\n    record,\n  }: {\n    gatewayUrls?: AssetGatewayUrls | undefined\n    record: string\n  },\n): Promise<string> {\n  // parse NFT URI into properties\n  const nft = parseNftUri(record)\n  // fetch tokenURI from the NFT contract\n  const nftUri = await getNftTokenUri(client, { nft })\n  // resolve the URI from the fetched tokenURI\n  const {\n    uri: resolvedNftUri,\n    isOnChain,\n    isEncoded,\n  } = resolveAvatarUri({ uri: nftUri, gatewayUrls })\n\n  // if the resolved URI is on chain, return the data\n  if (\n    isOnChain &&\n    (resolvedNftUri.includes('data:application/json;base64,') ||\n      resolvedNftUri.startsWith('{'))\n  ) {\n    const encodedJson = isEncoded\n      ? // if it is encoded, decode it\n        atob(resolvedNftUri.replace('data:application/json;base64,', ''))\n      : // if it isn't encoded assume it is a JSON string, but it could be anything (it will error if it is)\n        resolvedNftUri\n\n    const decoded = JSON.parse(encodedJson)\n    return parseAvatarUri({ uri: getJsonImage(decoded), gatewayUrls })\n  }\n\n  let uriTokenId = nft.tokenID\n  if (nft.namespace === 'erc1155')\n    uriTokenId = uriTokenId.replace('0x', '').padStart(64, '0')\n\n  return getMetadataAvatarUri({\n    gatewayUrls,\n    uri: resolvedNftUri.replace(/(?:0x)?{id}/, uriTokenId),\n  })\n}\n","import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  textResolverAbi,\n  universalResolverResolveAbi,\n} from '../../constants/abis.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Prettify } from '../../types/utils.js'\nimport {\n  type DecodeFunctionResultErrorType,\n  decodeFunctionResult,\n} from '../../utils/abi/decodeFunctionResult.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport {\n  type GetChainContractAddressErrorType,\n  getChainContractAddress,\n} from '../../utils/chain/getChainContractAddress.js'\nimport { type ToHexErrorType, toHex } from '../../utils/encoding/toHex.js'\nimport { isNullUniversalResolverError } from '../../utils/ens/errors.js'\nimport { localBatchGatewayUrl } from '../../utils/ens/localBatchGatewayRequest.js'\nimport { type NamehashErrorType, namehash } from '../../utils/ens/namehash.js'\nimport {\n  type PacketToBytesErrorType,\n  packetToBytes,\n} from '../../utils/ens/packetToBytes.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type ReadContractErrorType,\n  type ReadContractParameters,\n  readContract,\n} from '../public/readContract.js'\n\nexport type GetEnsTextParameters = Prettify<\n  Pick<ReadContractParameters, 'blockNumber' | 'blockTag'> & {\n    /** ENS name to get Text for. */\n    name: string\n    /** Universal Resolver gateway URLs to use for resolving CCIP-read requests. */\n    gatewayUrls?: string[] | undefined\n    /** Text record to retrieve. */\n    key: string\n    /** Whether or not to throw errors propagated from the ENS Universal Resolver Contract. */\n    strict?: boolean | undefined\n    /** Address of ENS Universal Resolver Contract. */\n    universalResolverAddress?: Address | undefined\n  }\n>\n\nexport type GetEnsTextReturnType = string | null\n\nexport type GetEnsTextErrorType =\n  | GetChainContractAddressErrorType\n  | ReadContractErrorType\n  | ToHexErrorType\n  | PacketToBytesErrorType\n  | EncodeFunctionDataErrorType\n  | NamehashErrorType\n  | DecodeFunctionResultErrorType\n\n/**\n * Gets a text record for specified ENS name.\n *\n * - Docs: https://viem.sh/docs/ens/actions/getEnsResolver\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n *\n * Calls `resolve(bytes, bytes)` on ENS Universal Resolver Contract.\n *\n * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n *\n * @param client - Client to use\n * @param parameters - {@link GetEnsTextParameters}\n * @returns Address for ENS resolver. {@link GetEnsTextReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getEnsText, normalize } from 'viem/ens'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const twitterRecord = await getEnsText(client, {\n *   name: normalize('wevm.eth'),\n *   key: 'com.twitter',\n * })\n * // 'wevm_dev'\n */\nexport async function getEnsText<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  parameters: GetEnsTextParameters,\n): Promise<GetEnsTextReturnType> {\n  const { blockNumber, blockTag, key, name, gatewayUrls, strict } = parameters\n  const { chain } = client\n\n  const universalResolverAddress = (() => {\n    if (parameters.universalResolverAddress)\n      return parameters.universalResolverAddress\n    if (!chain)\n      throw new Error(\n        'client chain not configured. universalResolverAddress is required.',\n      )\n    return getChainContractAddress({\n      blockNumber,\n      chain,\n      contract: 'ensUniversalResolver',\n    })\n  })()\n\n  const tlds = chain?.ensTlds\n  if (tlds && !tlds.some((tld) => name.endsWith(tld))) return null\n\n  try {\n    const readContractParameters = {\n      address: universalResolverAddress,\n      abi: universalResolverResolveAbi,\n      args: [\n        toHex(packetToBytes(name)),\n        encodeFunctionData({\n          abi: textResolverAbi,\n          functionName: 'text',\n          args: [namehash(name), key],\n        }),\n        gatewayUrls ?? [localBatchGatewayUrl],\n      ],\n      functionName: 'resolveWithGateways',\n      blockNumber,\n      blockTag,\n    } as const\n\n    const readContractAction = getAction(client, readContract, 'readContract')\n\n    const res = await readContractAction(readContractParameters)\n\n    if (res[0] === '0x') return null\n\n    const record = decodeFunctionResult({\n      abi: textResolverAbi,\n      functionName: 'text',\n      data: res[0],\n    })\n\n    return record === '' ? null : record\n  } catch (err) {\n    if (strict) throw err\n    if (isNullUniversalResolverError(err)) return null\n    throw err\n  }\n}\n","import type { Address } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RpcTransactionRequest } from '../../types/rpc.js'\nimport type { AccessList, TransactionRequest } from '../../types/transaction.js'\nimport type { ExactPartial, Prettify, UnionOmit } from '../../types/utils.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport {\n  type GetCallErrorReturnType,\n  getCallError,\n} from '../../utils/errors/getCallError.js'\nimport { extract } from '../../utils/formatters/extract.js'\nimport {\n  type FormatTransactionRequestErrorType,\n  type FormattedTransactionRequest,\n  formatTransactionRequest,\n} from '../../utils/formatters/transactionRequest.js'\nimport type {\n  AssertRequestErrorType,\n  AssertRequestParameters,\n} from '../../utils/transaction/assertRequest.js'\nimport { assertRequest } from '../../utils/transaction/assertRequest.js'\n\nexport type CreateAccessListParameters<\n  chain extends Chain | undefined = Chain | undefined,\n> = UnionOmit<\n  FormattedTransactionRequest<chain>,\n  'from' | 'nonce' | 'accessList'\n> & {\n  /** Account attached to the call (msg.sender). */\n  account?: Account | Address | undefined\n} & (\n    | {\n        /** The balance of the account at a block number. */\n        blockNumber?: bigint | undefined\n        blockTag?: undefined\n      }\n    | {\n        blockNumber?: undefined\n        /**\n         * The balance of the account at a block tag.\n         * @default 'latest'\n         */\n        blockTag?: BlockTag | undefined\n      }\n  )\n\nexport type CreateAccessListReturnType = Prettify<{\n  accessList: AccessList\n  gasUsed: bigint\n}>\n\nexport type CreateAccessListErrorType = GetCallErrorReturnType<\n  | ParseAccountErrorType\n  | AssertRequestErrorType\n  | NumberToHexErrorType\n  | FormatTransactionRequestErrorType\n  | RequestErrorType\n>\n\n/**\n * Creates an EIP-2930 access list.\n *\n * - Docs: https://viem.sh/docs/actions/public/createAccessList\n * - JSON-RPC Methods: `eth_createAccessList`\n *\n * @param client - Client to use\n * @param parameters - {@link CreateAccessListParameters}\n * @returns The access list. {@link CreateAccessListReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createAccessList } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const data = await createAccessList(client, {\n *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n *   data: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n * })\n */\nexport async function createAccessList<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  args: CreateAccessListParameters<chain>,\n): Promise<CreateAccessListReturnType> {\n  const {\n    account: account_ = client.account,\n    blockNumber,\n    blockTag = 'latest',\n    blobs,\n    data,\n    gas,\n    gasPrice,\n    maxFeePerBlobGas,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    to,\n    value,\n    ...rest\n  } = args\n  const account = account_ ? parseAccount(account_) : undefined\n\n  try {\n    assertRequest(args as AssertRequestParameters)\n\n    const blockNumberHex =\n      typeof blockNumber === 'bigint' ? numberToHex(blockNumber) : undefined\n    const block = blockNumberHex || blockTag\n\n    const chainFormat = client.chain?.formatters?.transactionRequest?.format\n    const format = chainFormat || formatTransactionRequest\n\n    const request = format({\n      // Pick out extra data that might exist on the chain's transaction request type.\n      ...extract(rest, { format: chainFormat }),\n      from: account?.address,\n      blobs,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerBlobGas,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      to,\n      value,\n    } as TransactionRequest) as TransactionRequest\n\n    const response = await client.request({\n      method: 'eth_createAccessList',\n      params: [request as ExactPartial<RpcTransactionRequest>, block],\n    })\n    return {\n      accessList: response.accessList,\n      gasUsed: BigInt(response.gasUsed),\n    }\n  } catch (err) {\n    throw getCallError(err as ErrorType, {\n      ...args,\n      account,\n      chain: client.chain,\n    })\n  }\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { OnResponseFn } from '../../clients/transports/fallback.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { EIP1193RequestFn, PublicRpcSchema } from '../../types/eip1193.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { Filter } from '../../types/utils.js'\n\ntype CreateFilterRequestScopeParameters = {\n  method:\n    | 'eth_newFilter'\n    | 'eth_newPendingTransactionFilter'\n    | 'eth_newBlockFilter'\n}\n\ntype FilterRpcSchema = Filter<\n  PublicRpcSchema,\n  { Method: 'eth_getFilterLogs' | 'eth_getFilterChanges' }\n>\n\ntype CreateFilterRequestScopeReturnType = (\n  id: Hex,\n) => EIP1193RequestFn<FilterRpcSchema>\n\n/**\n * Scopes `request` to the filter ID. If the client is a fallback, it will\n * listen for responses and scope the child transport `request` function\n * to the successful filter ID.\n */\nexport function createFilterRequestScope<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  { method }: CreateFilterRequestScopeParameters,\n): CreateFilterRequestScopeReturnType {\n  const requestMap: Record<Hex, EIP1193RequestFn> = {}\n\n  if (client.transport.type === 'fallback')\n    client.transport.onResponse?.(\n      ({\n        method: method_,\n        response: id,\n        status,\n        transport,\n      }: Parameters<OnResponseFn>[0]) => {\n        if (status === 'success' && method === method_)\n          requestMap[id as Hex] = transport.request\n      },\n    )\n\n  return ((id) =>\n    requestMap[id] || client.request) as CreateFilterRequestScopeReturnType\n}\n","import { BaseError } from './base.js'\n\nexport type FilterTypeNotSupportedErrorType = FilterTypeNotSupportedError & {\n  name: 'FilterTypeNotSupportedError'\n}\nexport class FilterTypeNotSupportedError extends BaseError {\n  constructor(type: string) {\n    super(`Filter type \"${type}\" is not supported.`, {\n      name: 'FilterTypeNotSupportedError',\n    })\n  }\n}\n","import type {\n  Abi,\n  AbiParameter,\n  AbiParameterToPrimitiveType,\n  ExtractAbiEvents,\n} from 'abitype'\n\nimport {\n  AbiEventNotFoundError,\n  type AbiEventNotFoundErrorType,\n} from '../../errors/abi.js'\nimport {\n  FilterTypeNotSupportedError,\n  type FilterTypeNotSupportedErrorType,\n} from '../../errors/log.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  ContractEventArgs,\n  ContractEventName,\n  EventDefinition,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { IsNarrowable, UnionEvaluate } from '../../types/utils.js'\nimport { type ToBytesErrorType, toBytes } from '../encoding/toBytes.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\nimport {\n  type ToEventSelectorErrorType,\n  toEventSelector,\n} from '../hash/toEventSelector.js'\nimport {\n  type EncodeAbiParametersErrorType,\n  encodeAbiParameters,\n} from './encodeAbiParameters.js'\nimport { type FormatAbiItemErrorType, formatAbiItem } from './formatAbiItem.js'\nimport { type GetAbiItemErrorType, getAbiItem } from './getAbiItem.js'\n\nconst docsPath = '/docs/contract/encodeEventTopics'\n\nexport type EncodeEventTopicsParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  eventName extends ContractEventName<abi> | undefined = ContractEventName<abi>,\n  ///\n  hasEvents = abi extends Abi\n    ? Abi extends abi\n      ? true\n      : [ExtractAbiEvents<abi>] extends [never]\n        ? false\n        : true\n    : true,\n  allArgs = ContractEventArgs<\n    abi,\n    eventName extends ContractEventName<abi>\n      ? eventName\n      : ContractEventName<abi>\n  >,\n  allErrorNames = ContractEventName<abi>,\n> = {\n  abi: abi\n  args?: allArgs | undefined\n} & UnionEvaluate<\n  IsNarrowable<abi, Abi> extends true\n    ? abi['length'] extends 1\n      ? { eventName?: eventName | allErrorNames | undefined }\n      : { eventName: eventName | allErrorNames }\n    : { eventName?: eventName | allErrorNames | undefined }\n> &\n  (hasEvents extends true ? unknown : never)\n\nexport type EncodeEventTopicsReturnType = [Hex, ...(Hex | Hex[] | null)[]]\n\nexport type EncodeEventTopicsErrorType =\n  | AbiEventNotFoundErrorType\n  | EncodeArgErrorType\n  | FormatAbiItemErrorType\n  | GetAbiItemErrorType\n  | ToEventSelectorErrorType\n  | ErrorType\n\nexport function encodeEventTopics<\n  const abi extends Abi | readonly unknown[],\n  eventName extends ContractEventName<abi> | undefined = undefined,\n>(\n  parameters: EncodeEventTopicsParameters<abi, eventName>,\n): EncodeEventTopicsReturnType {\n  const { abi, eventName, args } = parameters as EncodeEventTopicsParameters\n\n  let abiItem = abi[0]\n  if (eventName) {\n    const item = getAbiItem({ abi, name: eventName })\n    if (!item) throw new AbiEventNotFoundError(eventName, { docsPath })\n    abiItem = item\n  }\n\n  if (abiItem.type !== 'event')\n    throw new AbiEventNotFoundError(undefined, { docsPath })\n\n  const definition = formatAbiItem(abiItem)\n  const signature = toEventSelector(definition as EventDefinition)\n\n  let topics: (Hex | Hex[] | null)[] = []\n  if (args && 'inputs' in abiItem) {\n    const indexedInputs = abiItem.inputs?.filter(\n      (param) => 'indexed' in param && param.indexed,\n    )\n    const args_ = Array.isArray(args)\n      ? args\n      : Object.values(args).length > 0\n        ? (indexedInputs?.map((x: any) => (args as any)[x.name]) ?? [])\n        : []\n\n    if (args_.length > 0) {\n      topics =\n        indexedInputs?.map((param, i) => {\n          if (Array.isArray(args_[i]))\n            return args_[i].map((_: any, j: number) =>\n              encodeArg({ param, value: args_[i][j] }),\n            )\n          return typeof args_[i] !== 'undefined' && args_[i] !== null\n            ? encodeArg({ param, value: args_[i] })\n            : null\n        }) ?? []\n    }\n  }\n  return [signature, ...topics]\n}\n\nexport type EncodeArgErrorType =\n  | Keccak256ErrorType\n  | ToBytesErrorType\n  | EncodeAbiParametersErrorType\n  | FilterTypeNotSupportedErrorType\n  | ErrorType\n\nfunction encodeArg({\n  param,\n  value,\n}: {\n  param: AbiParameter\n  value: AbiParameterToPrimitiveType<AbiParameter>\n}) {\n  if (param.type === 'string' || param.type === 'bytes')\n    return keccak256(toBytes(value as string))\n  if (param.type === 'tuple' || param.type.match(/^(.*)\\[(\\d+)?\\]$/))\n    throw new FilterTypeNotSupportedError(param.type)\n  return encodeAbiParameters([param], [value])\n}\n","import type { Abi, Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ContractEventName,\n  MaybeExtractEventArgsFromAbi,\n} from '../../types/contract.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { Hex } from '../../types/misc.js'\nimport {\n  type EncodeEventTopicsErrorType,\n  type EncodeEventTopicsParameters,\n  encodeEventTopics,\n} from '../../utils/abi/encodeEventTopics.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport { createFilterRequestScope } from '../../utils/filters/createFilterRequestScope.js'\n\nexport type CreateContractEventFilterParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  eventName extends ContractEventName<abi> | undefined = undefined,\n  args extends\n    | MaybeExtractEventArgsFromAbi<abi, eventName>\n    | undefined = undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n> = {\n  address?: Address | Address[] | undefined\n  abi: abi\n  eventName?: eventName | ContractEventName<abi> | undefined\n  fromBlock?: fromBlock | BlockNumber | BlockTag | undefined\n  /**\n   * Whether or not the logs must match the indexed/non-indexed arguments in the event ABI item.\n   * @default false\n   */\n  strict?: strict | boolean | undefined\n  toBlock?: toBlock | BlockNumber | BlockTag | undefined\n} & (undefined extends eventName\n  ? {\n      args?: undefined\n    }\n  : MaybeExtractEventArgsFromAbi<abi, eventName> extends infer eventFilterArgs\n    ? {\n        args?:\n          | eventFilterArgs\n          | (args extends eventFilterArgs ? args : never)\n          | undefined\n      }\n    : {\n        args?: undefined\n      })\n\nexport type CreateContractEventFilterReturnType<\n  abi extends Abi | readonly unknown[] = Abi,\n  eventName extends ContractEventName<abi> | undefined = undefined,\n  args extends\n    | MaybeExtractEventArgsFromAbi<abi, eventName>\n    | undefined = undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n> = Filter<'event', abi, eventName, args, strict, fromBlock, toBlock>\n\nexport type CreateContractEventFilterErrorType =\n  | EncodeEventTopicsErrorType\n  | RequestErrorType\n  | NumberToHexErrorType\n  | ErrorType\n\n/**\n * Creates a Filter to retrieve event logs that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges) or [`getFilterLogs`](https://viem.sh/docs/actions/public/getFilterLogs).\n *\n * - Docs: https://viem.sh/docs/contract/createContractEventFilter\n *\n * @param client - Client to use\n * @param parameters - {@link CreateContractEventFilterParameters}\n * @returns [`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateContractEventFilterReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createContractEventFilter } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createContractEventFilter(client, {\n *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n * })\n */\nexport async function createContractEventFilter<\n  chain extends Chain | undefined,\n  const abi extends Abi | readonly unknown[],\n  eventName extends ContractEventName<abi> | undefined,\n  args extends MaybeExtractEventArgsFromAbi<abi, eventName> | undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n>(\n  client: Client<Transport, chain>,\n  parameters: CreateContractEventFilterParameters<\n    abi,\n    eventName,\n    args,\n    strict,\n    fromBlock,\n    toBlock\n  >,\n): Promise<\n  CreateContractEventFilterReturnType<\n    abi,\n    eventName,\n    args,\n    strict,\n    fromBlock,\n    toBlock\n  >\n> {\n  const { address, abi, args, eventName, fromBlock, strict, toBlock } =\n    parameters as CreateContractEventFilterParameters\n\n  const getRequest = createFilterRequestScope(client, {\n    method: 'eth_newFilter',\n  })\n\n  const topics = eventName\n    ? encodeEventTopics({\n        abi,\n        args,\n        eventName,\n      } as unknown as EncodeEventTopicsParameters)\n    : undefined\n  const id: Hex = await client.request({\n    method: 'eth_newFilter',\n    params: [\n      {\n        address,\n        fromBlock:\n          typeof fromBlock === 'bigint' ? numberToHex(fromBlock) : fromBlock,\n        toBlock: typeof toBlock === 'bigint' ? numberToHex(toBlock) : toBlock,\n        topics,\n      },\n    ],\n  })\n\n  return {\n    abi,\n    args,\n    eventName,\n    id,\n    request: getRequest(id),\n    strict: Boolean(strict),\n    type: 'event',\n  } as unknown as CreateContractEventFilterReturnType<\n    abi,\n    eventName,\n    args,\n    strict,\n    fromBlock,\n    toBlock\n  >\n}\n","import type { AbiEvent, Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  MaybeAbiEventName,\n  MaybeExtractEventArgsFromAbi,\n} from '../../types/contract.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { Hex, LogTopic } from '../../types/misc.js'\nimport type { Prettify } from '../../types/utils.js'\nimport {\n  type EncodeEventTopicsErrorType,\n  type EncodeEventTopicsParameters,\n  encodeEventTopics,\n} from '../../utils/abi/encodeEventTopics.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport { createFilterRequestScope } from '../../utils/filters/createFilterRequestScope.js'\n\nexport type CreateEventFilterParameters<\n  abiEvent extends AbiEvent | undefined = undefined,\n  abiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  //\n  _eventName extends string | undefined = MaybeAbiEventName<abiEvent>,\n  _args extends\n    | MaybeExtractEventArgsFromAbi<abiEvents, _eventName>\n    | undefined = undefined,\n> = {\n  address?: Address | Address[] | undefined\n  fromBlock?: fromBlock | BlockNumber | BlockTag | undefined\n  toBlock?: toBlock | BlockNumber | BlockTag | undefined\n} & (MaybeExtractEventArgsFromAbi<\n  abiEvents,\n  _eventName\n> extends infer eventFilterArgs\n  ?\n      | {\n          args:\n            | eventFilterArgs\n            | (_args extends eventFilterArgs ? _args : never)\n          event: abiEvent\n          events?: undefined\n          /**\n           * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n           * @default false\n           */\n          strict?: strict | undefined\n        }\n      | {\n          args?: undefined\n          event?: abiEvent | undefined\n          events?: undefined\n          /**\n           * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n           * @default false\n           */\n          strict?: strict | undefined\n        }\n      | {\n          args?: undefined\n          event?: undefined\n          events: abiEvents | undefined\n          /**\n           * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n           * @default false\n           */\n          strict?: strict | undefined\n        }\n      | {\n          args?: undefined\n          event?: undefined\n          events?: undefined\n          strict?: undefined\n        }\n  : {\n      args?: undefined\n      event?: undefined\n      events?: undefined\n      strict?: undefined\n    })\n\nexport type CreateEventFilterReturnType<\n  abiEvent extends AbiEvent | undefined = undefined,\n  abiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  _eventName extends string | undefined = MaybeAbiEventName<abiEvent>,\n  _args extends\n    | MaybeExtractEventArgsFromAbi<abiEvents, _eventName>\n    | undefined = undefined,\n> = Prettify<\n  Filter<'event', abiEvents, _eventName, _args, strict, fromBlock, toBlock>\n>\n\nexport type CreateEventFilterErrorType =\n  | EncodeEventTopicsErrorType\n  | RequestErrorType\n  | NumberToHexErrorType\n  | ErrorType\n\n/**\n * Creates a [`Filter`](https://viem.sh/docs/glossary/types#filter) to listen for new events that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges).\n *\n * - Docs: https://viem.sh/docs/actions/public/createEventFilter\n * - JSON-RPC Methods: [`eth_newFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter)\n *\n * @param client - Client to use\n * @param parameters - {@link CreateEventFilterParameters}\n * @returns [`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateEventFilterReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createEventFilter } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createEventFilter(client, {\n *   address: '0xfba3912ca04dd458c843e2ee08967fc04f3579c2',\n * })\n */\nexport async function createEventFilter<\n  chain extends Chain | undefined,\n  const abiEvent extends AbiEvent | undefined = undefined,\n  const abiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber<bigint> | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber<bigint> | BlockTag | undefined = undefined,\n  _eventName extends string | undefined = MaybeAbiEventName<abiEvent>,\n  _args extends\n    | MaybeExtractEventArgsFromAbi<abiEvents, _eventName>\n    | undefined = undefined,\n>(\n  client: Client<Transport, chain>,\n  {\n    address,\n    args,\n    event,\n    events: events_,\n    fromBlock,\n    strict,\n    toBlock,\n  }: CreateEventFilterParameters<\n    abiEvent,\n    abiEvents,\n    strict,\n    fromBlock,\n    toBlock,\n    _eventName,\n    _args\n  > = {} as any,\n): Promise<\n  CreateEventFilterReturnType<\n    abiEvent,\n    abiEvents,\n    strict,\n    fromBlock,\n    toBlock,\n    _eventName,\n    _args\n  >\n> {\n  const events = events_ ?? (event ? [event] : undefined)\n\n  const getRequest = createFilterRequestScope(client, {\n    method: 'eth_newFilter',\n  })\n\n  let topics: LogTopic[] = []\n  if (events) {\n    const encoded = (events as AbiEvent[]).flatMap((event) =>\n      encodeEventTopics({\n        abi: [event],\n        eventName: (event as AbiEvent).name,\n        args,\n      } as EncodeEventTopicsParameters),\n    )\n    // TODO: Clean up type casting\n    topics = [encoded as LogTopic]\n    if (event) topics = topics[0] as LogTopic[]\n  }\n\n  const id: Hex = await client.request({\n    method: 'eth_newFilter',\n    params: [\n      {\n        address,\n        fromBlock:\n          typeof fromBlock === 'bigint' ? numberToHex(fromBlock) : fromBlock,\n        toBlock: typeof toBlock === 'bigint' ? numberToHex(toBlock) : toBlock,\n        ...(topics.length ? { topics } : {}),\n      },\n    ],\n  })\n\n  return {\n    abi: events,\n    args,\n    eventName: event ? (event as AbiEvent).name : undefined,\n    fromBlock,\n    id,\n    request: getRequest(id),\n    strict: Boolean(strict),\n    toBlock,\n    type: 'event',\n  } as unknown as CreateEventFilterReturnType<\n    abiEvent,\n    abiEvents,\n    strict,\n    fromBlock,\n    toBlock,\n    _eventName,\n    _args\n  >\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { createFilterRequestScope } from '../../utils/filters/createFilterRequestScope.js'\n\nexport type CreatePendingTransactionFilterReturnType = Filter<'transaction'>\n\nexport type CreatePendingTransactionFilterErrorType =\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Creates a Filter to listen for new pending transaction hashes that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges).\n *\n * - Docs: https://viem.sh/docs/actions/public/createPendingTransactionFilter\n * - JSON-RPC Methods: [`eth_newPendingTransactionFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newpendingtransactionfilter)\n *\n * @param client - Client to use\n * @returns [`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateBlockFilterReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createPendingTransactionFilter } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createPendingTransactionFilter(client)\n * // { id: \"0x345a6572337856574a76364e457a4366\", type: 'transaction' }\n */\nexport async function createPendingTransactionFilter<\n  transport extends Transport,\n  chain extends Chain | undefined,\n>(\n  client: Client<transport, chain>,\n): Promise<CreatePendingTransactionFilterReturnType> {\n  const getRequest = createFilterRequestScope(client, {\n    method: 'eth_newPendingTransactionFilter',\n  })\n  const id = await client.request({\n    method: 'eth_newPendingTransactionFilter',\n  })\n  return { id, request: getRequest(id), type: 'transaction' }\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex, Signature } from '../../types/misc.js'\nimport { type IsHexErrorType, isHex } from '../data/isHex.js'\nimport { size } from '../data/size.js'\nimport {\n  type HexToNumberErrorType,\n  hexToBigInt,\n  hexToNumber,\n} from '../encoding/fromHex.js'\nimport { toHex } from '../encoding/toHex.js'\n\nexport type RecoverPublicKeyParameters = {\n  hash: Hex | ByteArray\n  signature: Hex | ByteArray | Signature\n}\n\nexport type RecoverPublicKeyReturnType = Hex\n\nexport type RecoverPublicKeyErrorType =\n  | HexToNumberErrorType\n  | IsHexErrorType\n  | ErrorType\n\nexport async function recoverPublicKey({\n  hash,\n  signature,\n}: RecoverPublicKeyParameters): Promise<RecoverPublicKeyReturnType> {\n  const hashHex = isHex(hash) ? hash : toHex(hash)\n\n  const { secp256k1 } = await import('@noble/curves/secp256k1')\n  const signature_ = (() => {\n    // typeof signature: `Signature`\n    if (typeof signature === 'object' && 'r' in signature && 's' in signature) {\n      const { r, s, v, yParity } = signature\n      const yParityOrV = Number(yParity ?? v)!\n      const recoveryBit = toRecoveryBit(yParityOrV)\n      return new secp256k1.Signature(\n        hexToBigInt(r),\n        hexToBigInt(s),\n      ).addRecoveryBit(recoveryBit)\n    }\n\n    // typeof signature: `Hex | ByteArray`\n    const signatureHex = isHex(signature) ? signature : toHex(signature)\n    if (size(signatureHex) !== 65) throw new Error('invalid signature length')\n    const yParityOrV = hexToNumber(`0x${signatureHex.slice(130)}`)\n    const recoveryBit = toRecoveryBit(yParityOrV)\n    return secp256k1.Signature.fromCompact(\n      signatureHex.substring(2, 130),\n    ).addRecoveryBit(recoveryBit)\n  })()\n\n  const publicKey = signature_\n    .recoverPublicKey(hashHex.substring(2))\n    .toHex(false)\n  return `0x${publicKey}`\n}\n\nfunction toRecoveryBit(yParityOrV: number) {\n  if (yParityOrV === 0 || yParityOrV === 1) return yParityOrV\n  if (yParityOrV === 27) return 0\n  if (yParityOrV === 28) return 1\n  throw new Error('Invalid yParityOrV value')\n}\n","import type { Address } from 'abitype'\n\nimport { publicKeyToAddress } from '../../accounts/utils/publicKeyToAddress.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex, Signature } from '../../types/misc.js'\nimport { recoverPublicKey } from './recoverPublicKey.js'\n\nexport type RecoverAddressParameters = {\n  hash: Hex | ByteArray\n  signature: Hex | ByteArray | Signature\n}\n\nexport type RecoverAddressReturnType = Address\n\nexport type RecoverAddressErrorType = ErrorType\n\nexport async function recoverAddress({\n  hash,\n  signature,\n}: RecoverAddressParameters): Promise<RecoverAddressReturnType> {\n  return publicKeyToAddress(await recoverPublicKey({ hash, signature }))\n}\n","import type { Address } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport {\n  type ChecksumAddressErrorType,\n  checksumAddress,\n} from '../../utils/address/getAddress.js'\nimport {\n  type Keccak256ErrorType,\n  keccak256,\n} from '../../utils/hash/keccak256.js'\n\nexport type PublicKeyToAddressErrorType =\n  | ChecksumAddressErrorType\n  | Keccak256ErrorType\n  | ErrorType\n\n/**\n * @description Converts an ECDSA public key to an address.\n *\n * @param publicKey The public key to convert.\n *\n * @returns The address.\n */\nexport function publicKeyToAddress(publicKey: Hex): Address {\n  const address = keccak256(`0x${publicKey.substring(4)}`).substring(26)\n  return checksumAddress(`0x${address}`) as Address\n}\n","import { BaseError } from '../../errors/base.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport {\n  type CreateCursorErrorType,\n  type Cursor,\n  createCursor,\n} from '../cursor.js'\n\nimport { type HexToBytesErrorType, hexToBytes } from './toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from './toHex.js'\n\nexport type RecursiveArray<T> = T | readonly RecursiveArray<T>[]\n\ntype To = 'hex' | 'bytes'\n\ntype Encodable = {\n  length: number\n  encode(cursor: Cursor): void\n}\n\nexport type ToRlpReturnType<to extends To> =\n  | (to extends 'bytes' ? ByteArray : never)\n  | (to extends 'hex' ? Hex : never)\n\nexport type ToRlpErrorType =\n  | CreateCursorErrorType\n  | BytesToHexErrorType\n  | HexToBytesErrorType\n  | ErrorType\n\nexport function toRlp<to extends To = 'hex'>(\n  bytes: RecursiveArray<ByteArray> | RecursiveArray<Hex>,\n  to: to | To | undefined = 'hex',\n): ToRlpReturnType<to> {\n  const encodable = getEncodable(bytes)\n  const cursor = createCursor(new Uint8Array(encodable.length))\n  encodable.encode(cursor)\n\n  if (to === 'hex') return bytesToHex(cursor.bytes) as ToRlpReturnType<to>\n  return cursor.bytes as ToRlpReturnType<to>\n}\n\nexport type BytesToRlpErrorType = ToRlpErrorType | ErrorType\n\nexport function bytesToRlp<to extends To = 'bytes'>(\n  bytes: RecursiveArray<ByteArray>,\n  to: to | To | undefined = 'bytes',\n): ToRlpReturnType<to> {\n  return toRlp(bytes, to)\n}\n\nexport type HexToRlpErrorType = ToRlpErrorType | ErrorType\n\nexport function hexToRlp<to extends To = 'hex'>(\n  hex: RecursiveArray<Hex>,\n  to: to | To | undefined = 'hex',\n): ToRlpReturnType<to> {\n  return toRlp(hex, to)\n}\n\nfunction getEncodable(\n  bytes: RecursiveArray<ByteArray> | RecursiveArray<Hex>,\n): Encodable {\n  if (Array.isArray(bytes))\n    return getEncodableList(bytes.map((x) => getEncodable(x)))\n  return getEncodableBytes(bytes as any)\n}\n\nfunction getEncodableList(list: Encodable[]): Encodable {\n  const bodyLength = list.reduce((acc, x) => acc + x.length, 0)\n\n  const sizeOfBodyLength = getSizeOfLength(bodyLength)\n  const length = (() => {\n    if (bodyLength <= 55) return 1 + bodyLength\n    return 1 + sizeOfBodyLength + bodyLength\n  })()\n\n  return {\n    length,\n    encode(cursor: Cursor) {\n      if (bodyLength <= 55) {\n        cursor.pushByte(0xc0 + bodyLength)\n      } else {\n        cursor.pushByte(0xc0 + 55 + sizeOfBodyLength)\n        if (sizeOfBodyLength === 1) cursor.pushUint8(bodyLength)\n        else if (sizeOfBodyLength === 2) cursor.pushUint16(bodyLength)\n        else if (sizeOfBodyLength === 3) cursor.pushUint24(bodyLength)\n        else cursor.pushUint32(bodyLength)\n      }\n      for (const { encode } of list) {\n        encode(cursor)\n      }\n    },\n  }\n}\n\nfunction getEncodableBytes(bytesOrHex: ByteArray | Hex): Encodable {\n  const bytes =\n    typeof bytesOrHex === 'string' ? hexToBytes(bytesOrHex) : bytesOrHex\n\n  const sizeOfBytesLength = getSizeOfLength(bytes.length)\n  const length = (() => {\n    if (bytes.length === 1 && bytes[0] < 0x80) return 1\n    if (bytes.length <= 55) return 1 + bytes.length\n    return 1 + sizeOfBytesLength + bytes.length\n  })()\n\n  return {\n    length,\n    encode(cursor: Cursor) {\n      if (bytes.length === 1 && bytes[0] < 0x80) {\n        cursor.pushBytes(bytes)\n      } else if (bytes.length <= 55) {\n        cursor.pushByte(0x80 + bytes.length)\n        cursor.pushBytes(bytes)\n      } else {\n        cursor.pushByte(0x80 + 55 + sizeOfBytesLength)\n        if (sizeOfBytesLength === 1) cursor.pushUint8(bytes.length)\n        else if (sizeOfBytesLength === 2) cursor.pushUint16(bytes.length)\n        else if (sizeOfBytesLength === 3) cursor.pushUint24(bytes.length)\n        else cursor.pushUint32(bytes.length)\n        cursor.pushBytes(bytes)\n      }\n    },\n  }\n}\n\nfunction getSizeOfLength(length: number) {\n  if (length < 2 ** 8) return 1\n  if (length < 2 ** 16) return 2\n  if (length < 2 ** 24) return 3\n  if (length < 2 ** 32) return 4\n  throw new BaseError('Length is too large.')\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { AuthorizationRequest } from '../../types/authorization.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type ConcatHexErrorType, concatHex } from '../data/concat.js'\nimport { type HexToBytesErrorType, hexToBytes } from '../encoding/toBytes.js'\nimport { type NumberToHexErrorType, numberToHex } from '../encoding/toHex.js'\nimport { type ToRlpErrorType, toRlp } from '../encoding/toRlp.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type HashAuthorizationParameters<to extends To> =\n  AuthorizationRequest & {\n    /** Output format. @default \"hex\" */\n    to?: to | To | undefined\n  }\n\nexport type HashAuthorizationReturnType<to extends To> =\n  | (to extends 'bytes' ? ByteArray : never)\n  | (to extends 'hex' ? Hex : never)\n\nexport type HashAuthorizationErrorType =\n  | Keccak256ErrorType\n  | ConcatHexErrorType\n  | ToRlpErrorType\n  | NumberToHexErrorType\n  | HexToBytesErrorType\n  | ErrorType\n\n/**\n * Computes an Authorization hash in [EIP-7702 format](https://eips.ethereum.org/EIPS/eip-7702): `keccak256('0x05' || rlp([chain_id, address, nonce]))`.\n */\nexport function hashAuthorization<to extends To = 'hex'>(\n  parameters: HashAuthorizationParameters<to>,\n): HashAuthorizationReturnType<to> {\n  const { chainId, nonce, to } = parameters\n  const address = parameters.contractAddress ?? parameters.address\n  const hash = keccak256(\n    concatHex([\n      '0x05',\n      toRlp([\n        chainId ? numberToHex(chainId) : '0x',\n        address,\n        nonce ? numberToHex(nonce) : '0x',\n      ]),\n    ]),\n  )\n  if (to === 'bytes') return hexToBytes(hash) as HashAuthorizationReturnType<to>\n  return hash as HashAuthorizationReturnType<to>\n}\n","import type { Address } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  Authorization,\n  AuthorizationRequest,\n  SignedAuthorization,\n} from '../../types/authorization.js'\nimport type { ByteArray, Hex, Signature } from '../../types/misc.js'\nimport type { OneOf } from '../../types/utils.js'\nimport {\n  type RecoverAddressErrorType,\n  recoverAddress,\n} from '../signature/recoverAddress.js'\nimport {\n  type HashAuthorizationErrorType,\n  hashAuthorization,\n} from './hashAuthorization.js'\n\nexport type RecoverAuthorizationAddressParameters<\n  authorization extends OneOf<\n    Authorization | AuthorizationRequest | SignedAuthorization\n  > = OneOf<Authorization | AuthorizationRequest | SignedAuthorization>,\n  //\n  _signature = Hex | ByteArray | OneOf<Signature | SignedAuthorization>,\n> = {\n  /**\n   * The Authorization object.\n   *\n   * - If an unsigned `authorization` is provided, the `signature` property is required.\n   * - If a signed `authorization` is provided, the `signature` property does not need to be provided.\n   */\n  authorization:\n    | authorization\n    | OneOf<Authorization | AuthorizationRequest | SignedAuthorization>\n} & (authorization extends SignedAuthorization\n  ? {\n      /** Signature of the Authorization. Not required if the `authorization` is signed. */\n      signature?: _signature | undefined\n    }\n  : {\n      /** Signature of the Authorization. Not required if the `authorization` is signed. */\n      signature: _signature\n    })\n\nexport type RecoverAuthorizationAddressReturnType = Address\n\nexport type RecoverAuthorizationAddressErrorType =\n  | HashAuthorizationErrorType\n  | RecoverAddressErrorType\n  | ErrorType\n\nexport async function recoverAuthorizationAddress<\n  const authorization extends OneOf<\n    Authorization | AuthorizationRequest | SignedAuthorization\n  >,\n>(\n  parameters: RecoverAuthorizationAddressParameters<authorization>,\n): Promise<RecoverAuthorizationAddressReturnType> {\n  const { authorization, signature } = parameters\n\n  return recoverAddress({\n    hash: hashAuthorization(authorization as AuthorizationRequest),\n    signature: (signature ?? authorization) as Signature,\n  })\n}\n","import type { Account } from '../accounts/types.js'\nimport type { EstimateGasParameters } from '../actions/public/estimateGas.js'\nimport type { Chain } from '../types/chain.js'\nimport { formatEther } from '../utils/unit/formatEther.js'\nimport { formatGwei } from '../utils/unit/formatGwei.js'\n\nimport { BaseError } from './base.js'\nimport { prettyPrint } from './transaction.js'\n\nexport type EstimateGasExecutionErrorType = EstimateGasExecutionError & {\n  name: 'EstimateGasExecutionError'\n}\nexport class EstimateGasExecutionError extends BaseError {\n  override cause: BaseError\n\n  constructor(\n    cause: BaseError,\n    {\n      account,\n      docsPath,\n      chain,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n    }: Omit<EstimateGasParameters<any>, 'account'> & {\n      account?: Account | undefined\n      chain?: Chain | undefined\n      docsPath?: string | undefined\n    },\n  ) {\n    const prettyArgs = prettyPrint({\n      from: account?.address,\n      to,\n      value:\n        typeof value !== 'undefined' &&\n        `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n      data,\n      gas,\n      gasPrice:\n        typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n      maxFeePerGas:\n        typeof maxFeePerGas !== 'undefined' &&\n        `${formatGwei(maxFeePerGas)} gwei`,\n      maxPriorityFeePerGas:\n        typeof maxPriorityFeePerGas !== 'undefined' &&\n        `${formatGwei(maxPriorityFeePerGas)} gwei`,\n      nonce,\n    })\n\n    super(cause.shortMessage, {\n      cause,\n      docsPath,\n      metaMessages: [\n        ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n        'Estimate Gas Arguments:',\n        prettyArgs,\n      ].filter(Boolean) as string[],\n      name: 'EstimateGasExecutionError',\n    })\n    this.cause = cause\n  }\n}\n","import { formatGwei } from '../utils/unit/formatGwei.js'\nimport { BaseError } from './base.js'\n\nexport type BaseFeeScalarErrorType = BaseFeeScalarError & {\n  name: 'BaseFeeScalarError'\n}\nexport class BaseFeeScalarError extends BaseError {\n  constructor() {\n    super('`baseFeeMultiplier` must be greater than 1.', {\n      name: 'BaseFeeScalarError',\n    })\n  }\n}\n\nexport type Eip1559FeesNotSupportedErrorType = Eip1559FeesNotSupportedError & {\n  name: 'Eip1559FeesNotSupportedError'\n}\nexport class Eip1559FeesNotSupportedError extends BaseError {\n  constructor() {\n    super('Chain does not support EIP-1559 fees.', {\n      name: 'Eip1559FeesNotSupportedError',\n    })\n  }\n}\n\nexport type MaxFeePerGasTooLowErrorType = MaxFeePerGasTooLowError & {\n  name: 'MaxFeePerGasTooLowError'\n}\nexport class MaxFeePerGasTooLowError extends BaseError {\n  constructor({ maxPriorityFeePerGas }: { maxPriorityFeePerGas: bigint }) {\n    super(\n      `\\`maxFeePerGas\\` cannot be less than the \\`maxPriorityFeePerGas\\` (${formatGwei(\n        maxPriorityFeePerGas,\n      )} gwei).`,\n      { name: 'MaxFeePerGasTooLowError' },\n    )\n  }\n}\n","import type { Hash } from '../types/misc.js'\n\nimport { BaseError } from './base.js'\n\nexport type BlockNotFoundErrorType = BlockNotFoundError & {\n  name: 'BlockNotFoundError'\n}\nexport class BlockNotFoundError extends BaseError {\n  constructor({\n    blockHash,\n    blockNumber,\n  }: {\n    blockHash?: Hash | undefined\n    blockNumber?: bigint | undefined\n  }) {\n    let identifier = 'Block'\n    if (blockHash) identifier = `Block at hash \"${blockHash}\"`\n    if (blockNumber) identifier = `Block at number \"${blockNumber}\"`\n    super(`${identifier} could not be found.`, { name: 'BlockNotFoundError' })\n  }\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { SignedAuthorizationList } from '../../types/authorization.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type {\n  Chain,\n  ExtractChainFormatterExclude,\n  ExtractChainFormatterReturnType,\n} from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { RpcAuthorizationList, RpcTransaction } from '../../types/rpc.js'\nimport type { Transaction, TransactionType } from '../../types/transaction.js'\nimport type { ExactPartial, UnionLooseOmit } from '../../types/utils.js'\nimport { hexToNumber } from '../encoding/fromHex.js'\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\n\ntype TransactionPendingDependencies =\n  | 'blockHash'\n  | 'blockNumber'\n  | 'transactionIndex'\n\nexport type FormattedTransaction<\n  chain extends Chain | undefined = undefined,\n  blockTag extends BlockTag = BlockTag,\n  _FormatterReturnType = ExtractChainFormatterReturnType<\n    chain,\n    'transaction',\n    Transaction\n  >,\n  _ExcludedPendingDependencies extends string = TransactionPendingDependencies &\n    ExtractChainFormatterExclude<chain, 'transaction'>,\n> = UnionLooseOmit<_FormatterReturnType, TransactionPendingDependencies> & {\n  [_K in _ExcludedPendingDependencies]: never\n} & Pick<\n    Transaction<bigint, number, blockTag extends 'pending' ? true : false>,\n    TransactionPendingDependencies\n  >\n\nexport const transactionType = {\n  '0x0': 'legacy',\n  '0x1': 'eip2930',\n  '0x2': 'eip1559',\n  '0x3': 'eip4844',\n  '0x4': 'eip7702',\n} as const satisfies Record<Hex, TransactionType>\n\nexport type FormatTransactionErrorType = ErrorType\n\nexport function formatTransaction(transaction: ExactPartial<RpcTransaction>) {\n  const transaction_ = {\n    ...transaction,\n    blockHash: transaction.blockHash ? transaction.blockHash : null,\n    blockNumber: transaction.blockNumber\n      ? BigInt(transaction.blockNumber)\n      : null,\n    chainId: transaction.chainId ? hexToNumber(transaction.chainId) : undefined,\n    gas: transaction.gas ? BigInt(transaction.gas) : undefined,\n    gasPrice: transaction.gasPrice ? BigInt(transaction.gasPrice) : undefined,\n    maxFeePerBlobGas: transaction.maxFeePerBlobGas\n      ? BigInt(transaction.maxFeePerBlobGas)\n      : undefined,\n    maxFeePerGas: transaction.maxFeePerGas\n      ? BigInt(transaction.maxFeePerGas)\n      : undefined,\n    maxPriorityFeePerGas: transaction.maxPriorityFeePerGas\n      ? BigInt(transaction.maxPriorityFeePerGas)\n      : undefined,\n    nonce: transaction.nonce ? hexToNumber(transaction.nonce) : undefined,\n    to: transaction.to ? transaction.to : null,\n    transactionIndex: transaction.transactionIndex\n      ? Number(transaction.transactionIndex)\n      : null,\n    type: transaction.type\n      ? (transactionType as any)[transaction.type]\n      : undefined,\n    typeHex: transaction.type ? transaction.type : undefined,\n    value: transaction.value ? BigInt(transaction.value) : undefined,\n    v: transaction.v ? BigInt(transaction.v) : undefined,\n  } as Transaction\n\n  if (transaction.authorizationList)\n    transaction_.authorizationList = formatAuthorizationList(\n      transaction.authorizationList,\n    )\n\n  transaction_.yParity = (() => {\n    // If `yParity` is provided, we will use it.\n    if (transaction.yParity) return Number(transaction.yParity)\n\n    // If no `yParity` provided, try derive from `v`.\n    if (typeof transaction_.v === 'bigint') {\n      if (transaction_.v === 0n || transaction_.v === 27n) return 0\n      if (transaction_.v === 1n || transaction_.v === 28n) return 1\n      if (transaction_.v >= 35n) return transaction_.v % 2n === 0n ? 1 : 0\n    }\n\n    return undefined\n  })()\n\n  if (transaction_.type === 'legacy') {\n    delete transaction_.accessList\n    delete transaction_.maxFeePerBlobGas\n    delete transaction_.maxFeePerGas\n    delete transaction_.maxPriorityFeePerGas\n    delete transaction_.yParity\n  }\n  if (transaction_.type === 'eip2930') {\n    delete transaction_.maxFeePerBlobGas\n    delete transaction_.maxFeePerGas\n    delete transaction_.maxPriorityFeePerGas\n  }\n  if (transaction_.type === 'eip1559') {\n    delete transaction_.maxFeePerBlobGas\n  }\n  return transaction_\n}\n\nexport type DefineTransactionErrorType = DefineFormatterErrorType | ErrorType\n\nexport const defineTransaction = /*#__PURE__*/ defineFormatter(\n  'transaction',\n  formatTransaction,\n)\n\n//////////////////////////////////////////////////////////////////////////////\n\nfunction formatAuthorizationList(\n  authorizationList: RpcAuthorizationList,\n): SignedAuthorizationList {\n  return authorizationList.map((authorization) => ({\n    address: (authorization as any).address,\n    chainId: Number(authorization.chainId),\n    nonce: Number(authorization.nonce),\n    r: authorization.r,\n    s: authorization.s,\n    yParity: Number(authorization.yParity),\n  })) as SignedAuthorizationList\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { Block, BlockTag } from '../../types/block.js'\nimport type {\n  Chain,\n  ExtractChainFormatterExclude,\n  ExtractChainFormatterReturnType,\n} from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { RpcBlock } from '../../types/rpc.js'\nimport type { ExactPartial, Prettify } from '../../types/utils.js'\n\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\nimport { type FormattedTransaction, formatTransaction } from './transaction.js'\n\ntype BlockPendingDependencies = 'hash' | 'logsBloom' | 'nonce' | 'number'\n\nexport type FormattedBlock<\n  chain extends Chain | undefined = undefined,\n  includeTransactions extends boolean = boolean,\n  blockTag extends BlockTag = BlockTag,\n  _FormatterReturnType = ExtractChainFormatterReturnType<\n    chain,\n    'block',\n    Block<bigint, includeTransactions>\n  >,\n  _ExcludedPendingDependencies extends string = BlockPendingDependencies &\n    ExtractChainFormatterExclude<chain, 'block'>,\n  _Formatted = Omit<_FormatterReturnType, BlockPendingDependencies> & {\n    [_key in _ExcludedPendingDependencies]: never\n  } & Pick<\n      Block<bigint, includeTransactions, blockTag>,\n      BlockPendingDependencies\n    >,\n  _Transactions = includeTransactions extends true\n    ? Prettify<FormattedTransaction<chain, blockTag>>[]\n    : Hash[],\n> = Omit<_Formatted, 'transactions'> & {\n  transactions: _Transactions\n}\n\nexport type FormatBlockErrorType = ErrorType\n\nexport function formatBlock(block: ExactPartial<RpcBlock>) {\n  const transactions = (block.transactions ?? []).map((transaction) => {\n    if (typeof transaction === 'string') return transaction\n    return formatTransaction(transaction)\n  })\n  return {\n    ...block,\n    baseFeePerGas: block.baseFeePerGas ? BigInt(block.baseFeePerGas) : null,\n    blobGasUsed: block.blobGasUsed ? BigInt(block.blobGasUsed) : undefined,\n    difficulty: block.difficulty ? BigInt(block.difficulty) : undefined,\n    excessBlobGas: block.excessBlobGas\n      ? BigInt(block.excessBlobGas)\n      : undefined,\n    gasLimit: block.gasLimit ? BigInt(block.gasLimit) : undefined,\n    gasUsed: block.gasUsed ? BigInt(block.gasUsed) : undefined,\n    hash: block.hash ? block.hash : null,\n    logsBloom: block.logsBloom ? block.logsBloom : null,\n    nonce: block.nonce ? block.nonce : null,\n    number: block.number ? BigInt(block.number) : null,\n    size: block.size ? BigInt(block.size) : undefined,\n    timestamp: block.timestamp ? BigInt(block.timestamp) : undefined,\n    transactions,\n    totalDifficulty: block.totalDifficulty\n      ? BigInt(block.totalDifficulty)\n      : null,\n  } as Block\n}\n\nexport type DefineBlockErrorType = DefineFormatterErrorType | ErrorType\n\nexport const defineBlock = /*#__PURE__*/ defineFormatter('block', formatBlock)\n","import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  BlockNotFoundError,\n  type BlockNotFoundErrorType,\n} from '../../errors/block.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { RpcBlock } from '../../types/rpc.js'\nimport type { Prettify } from '../../types/utils.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport {\n  type FormattedBlock,\n  formatBlock,\n} from '../../utils/formatters/block.js'\n\nexport type GetBlockParameters<\n  includeTransactions extends boolean = false,\n  blockTag extends BlockTag = 'latest',\n> = {\n  /** Whether or not to include transaction data in the response. */\n  includeTransactions?: includeTransactions | undefined\n} & (\n  | {\n      /** Hash of the block. */\n      blockHash?: Hash | undefined\n      blockNumber?: undefined\n      blockTag?: undefined\n    }\n  | {\n      blockHash?: undefined\n      /** The block number. */\n      blockNumber?: bigint | undefined\n      blockTag?: undefined\n    }\n  | {\n      blockHash?: undefined\n      blockNumber?: undefined\n      /**\n       * The block tag.\n       * @default 'latest'\n       */\n      blockTag?: blockTag | BlockTag | undefined\n    }\n)\n\nexport type GetBlockReturnType<\n  chain extends Chain | undefined = undefined,\n  includeTransactions extends boolean = false,\n  blockTag extends BlockTag = 'latest',\n> = Prettify<FormattedBlock<chain, includeTransactions, blockTag>>\n\nexport type GetBlockErrorType =\n  | BlockNotFoundErrorType\n  | NumberToHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns information about a block at a block number, hash, or tag.\n *\n * - Docs: https://viem.sh/docs/actions/public/getBlock\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks_fetching-blocks\n * - JSON-RPC Methods:\n *   - Calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber) for `blockNumber` & `blockTag`.\n *   - Calls [`eth_getBlockByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbyhash) for `blockHash`.\n *\n * @param client - Client to use\n * @param parameters - {@link GetBlockParameters}\n * @returns Information about the block. {@link GetBlockReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBlock } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const block = await getBlock(client)\n */\nexport async function getBlock<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n  includeTransactions extends boolean = false,\n  blockTag extends BlockTag = 'latest',\n>(\n  client: Client<Transport, chain, account>,\n  {\n    blockHash,\n    blockNumber,\n    blockTag = client.experimental_blockTag ?? 'latest',\n    includeTransactions: includeTransactions_,\n  }: GetBlockParameters<includeTransactions, blockTag> = {},\n): Promise<GetBlockReturnType<chain, includeTransactions, blockTag>> {\n  const includeTransactions = includeTransactions_ ?? false\n\n  const blockNumberHex =\n    blockNumber !== undefined ? numberToHex(blockNumber) : undefined\n\n  let block: RpcBlock | null = null\n  if (blockHash) {\n    block = await client.request(\n      {\n        method: 'eth_getBlockByHash',\n        params: [blockHash, includeTransactions],\n      },\n      { dedupe: true },\n    )\n  } else {\n    block = await client.request(\n      {\n        method: 'eth_getBlockByNumber',\n        params: [blockNumberHex || blockTag, includeTransactions],\n      },\n      { dedupe: Boolean(blockNumberHex) },\n    )\n  }\n\n  if (!block) throw new BlockNotFoundError({ blockHash, blockNumber })\n\n  const format = client.chain?.formatters?.block?.format || formatBlock\n  return format(block)\n}\n","import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type GetGasPriceReturnType = bigint\n\nexport type GetGasPriceErrorType = RequestErrorType | ErrorType\n\n/**\n * Returns the current price of gas (in wei).\n *\n * - Docs: https://viem.sh/docs/actions/public/getGasPrice\n * - JSON-RPC Methods: [`eth_gasPrice`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gasprice)\n *\n * @param client - Client to use\n * @returns The gas price (in wei). {@link GetGasPriceReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getGasPrice } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const gasPrice = await getGasPrice(client)\n */\nexport async function getGasPrice<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(client: Client<Transport, chain, account>): Promise<GetGasPriceReturnType> {\n  const gasPrice = await client.request({\n    method: 'eth_gasPrice',\n  })\n  return BigInt(gasPrice)\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  Eip1559FeesNotSupportedError,\n  type Eip1559FeesNotSupportedErrorType,\n} from '../../errors/fee.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Block } from '../../types/block.js'\nimport type {\n  Chain,\n  ChainFeesFnParameters,\n  GetChainParameter,\n} from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type HexToBigIntErrorType,\n  hexToBigInt,\n} from '../../utils/encoding/fromHex.js'\nimport { getAction } from '../../utils/getAction.js'\nimport type { PrepareTransactionRequestParameters } from '../wallet/prepareTransactionRequest.js'\nimport { type GetBlockErrorType, getBlock } from './getBlock.js'\nimport { type GetGasPriceErrorType, getGasPrice } from './getGasPrice.js'\n\nexport type EstimateMaxPriorityFeePerGasParameters<\n  chain extends Chain | undefined = Chain | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n> = GetChainParameter<chain, chainOverride>\n\nexport type EstimateMaxPriorityFeePerGasReturnType = bigint\n\nexport type EstimateMaxPriorityFeePerGasErrorType =\n  | GetBlockErrorType\n  | HexToBigIntErrorType\n  | RequestErrorType\n  | GetBlockErrorType\n  | GetGasPriceErrorType\n  | Eip1559FeesNotSupportedErrorType\n  | ErrorType\n\n/**\n * Returns an estimate for the max priority fee per gas (in wei) for a\n * transaction to be likely included in the next block.\n * Defaults to [`chain.fees.defaultPriorityFee`](/docs/clients/chains#fees-defaultpriorityfee) if set.\n *\n * - Docs: https://viem.sh/docs/actions/public/estimateMaxPriorityFeePerGas\n *\n * @param client - Client to use\n * @returns An estimate (in wei) for the max priority fee per gas. {@link EstimateMaxPriorityFeePerGasReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { estimateMaxPriorityFeePerGas } from 'viem/actions'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const maxPriorityFeePerGas = await estimateMaxPriorityFeePerGas(client)\n * // 10000000n\n */\nexport async function estimateMaxPriorityFeePerGas<\n  chain extends Chain | undefined,\n  chainOverride extends Chain | undefined,\n>(\n  client: Client<Transport, chain>,\n  args?:\n    | EstimateMaxPriorityFeePerGasParameters<chain, chainOverride>\n    | undefined,\n): Promise<EstimateMaxPriorityFeePerGasReturnType> {\n  return internal_estimateMaxPriorityFeePerGas(client, args as any)\n}\n\nexport async function internal_estimateMaxPriorityFeePerGas<\n  chain extends Chain | undefined,\n  chainOverride extends Chain | undefined,\n>(\n  client: Client<Transport, chain>,\n  args: EstimateMaxPriorityFeePerGasParameters<chain, chainOverride> & {\n    block?: Block | undefined\n    request?:\n      | PrepareTransactionRequestParameters<\n          chain,\n          Account | undefined,\n          chainOverride\n        >\n      | undefined\n  },\n): Promise<EstimateMaxPriorityFeePerGasReturnType> {\n  const { block: block_, chain = client.chain, request } = args || {}\n\n  try {\n    const maxPriorityFeePerGas =\n      chain?.fees?.maxPriorityFeePerGas ?? chain?.fees?.defaultPriorityFee\n\n    if (typeof maxPriorityFeePerGas === 'function') {\n      const block =\n        block_ || (await getAction(client, getBlock, 'getBlock')({}))\n      const maxPriorityFeePerGas_ = await maxPriorityFeePerGas({\n        block,\n        client,\n        request,\n      } as ChainFeesFnParameters)\n      if (maxPriorityFeePerGas_ === null) throw new Error()\n      return maxPriorityFeePerGas_\n    }\n\n    if (typeof maxPriorityFeePerGas !== 'undefined') return maxPriorityFeePerGas\n\n    const maxPriorityFeePerGasHex = await client.request({\n      method: 'eth_maxPriorityFeePerGas',\n    })\n    return hexToBigInt(maxPriorityFeePerGasHex)\n  } catch {\n    // If the RPC Provider does not support `eth_maxPriorityFeePerGas`\n    // fall back to calculating it manually via `gasPrice - baseFeePerGas`.\n    // See: https://github.com/ethereum/pm/issues/328#:~:text=eth_maxPriorityFeePerGas%20after%20London%20will%20effectively%20return%20eth_gasPrice%20%2D%20baseFee\n    const [block, gasPrice] = await Promise.all([\n      block_\n        ? Promise.resolve(block_)\n        : getAction(client, getBlock, 'getBlock')({}),\n      getAction(client, getGasPrice, 'getGasPrice')({}),\n    ])\n\n    if (typeof block.baseFeePerGas !== 'bigint')\n      throw new Eip1559FeesNotSupportedError()\n\n    const maxPriorityFeePerGas = gasPrice - block.baseFeePerGas\n\n    if (maxPriorityFeePerGas < 0n) return 0n\n    return maxPriorityFeePerGas\n  }\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  BaseFeeScalarError,\n  type BaseFeeScalarErrorType,\n  Eip1559FeesNotSupportedError,\n  type Eip1559FeesNotSupportedErrorType,\n} from '../../errors/fee.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Block } from '../../types/block.js'\nimport type {\n  Chain,\n  ChainEstimateFeesPerGasFnParameters,\n  ChainFeesFnParameters,\n  GetChainParameter,\n} from '../../types/chain.js'\nimport type {\n  FeeValuesEIP1559,\n  FeeValuesLegacy,\n  FeeValuesType,\n} from '../../types/fee.js'\nimport { getAction } from '../../utils/getAction.js'\nimport type { PrepareTransactionRequestParameters } from '../wallet/prepareTransactionRequest.js'\nimport {\n  type EstimateMaxPriorityFeePerGasErrorType,\n  internal_estimateMaxPriorityFeePerGas,\n} from './estimateMaxPriorityFeePerGas.js'\nimport { getBlock } from './getBlock.js'\nimport { type GetGasPriceErrorType, getGasPrice } from './getGasPrice.js'\n\nexport type EstimateFeesPerGasParameters<\n  chain extends Chain | undefined = Chain | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  type extends FeeValuesType = FeeValuesType,\n> = {\n  /**\n   * The type of fee values to return.\n   *\n   * - `legacy`: Returns the legacy gas price.\n   * - `eip1559`: Returns the max fee per gas and max priority fee per gas.\n   *\n   * @default 'eip1559'\n   */\n  type?: type | FeeValuesType | undefined\n} & GetChainParameter<chain, chainOverride>\n\nexport type EstimateFeesPerGasReturnType<\n  type extends FeeValuesType = FeeValuesType,\n> =\n  | (type extends 'legacy' ? FeeValuesLegacy : never)\n  | (type extends 'eip1559' ? FeeValuesEIP1559 : never)\n\nexport type EstimateFeesPerGasErrorType =\n  | BaseFeeScalarErrorType\n  | EstimateMaxPriorityFeePerGasErrorType\n  | GetGasPriceErrorType\n  | Eip1559FeesNotSupportedErrorType\n  | ErrorType\n\n/**\n * Returns an estimate for the fees per gas (in wei) for a\n * transaction to be likely included in the next block.\n * Defaults to [`chain.fees.estimateFeesPerGas`](/docs/clients/chains#fees-estimatefeespergas) if set.\n *\n * - Docs: https://viem.sh/docs/actions/public/estimateFeesPerGas\n *\n * @param client - Client to use\n * @param parameters - {@link EstimateFeesPerGasParameters}\n * @returns An estimate (in wei) for the fees per gas. {@link EstimateFeesPerGasReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { estimateFeesPerGas } from 'viem/actions'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const maxPriorityFeePerGas = await estimateFeesPerGas(client)\n * // { maxFeePerGas: ..., maxPriorityFeePerGas: ... }\n */\nexport async function estimateFeesPerGas<\n  chain extends Chain | undefined,\n  chainOverride extends Chain | undefined,\n  type extends FeeValuesType = 'eip1559',\n>(\n  client: Client<Transport, chain>,\n  args?: EstimateFeesPerGasParameters<chain, chainOverride, type> | undefined,\n): Promise<EstimateFeesPerGasReturnType<type>> {\n  return internal_estimateFeesPerGas(client, args as any)\n}\n\nexport async function internal_estimateFeesPerGas<\n  chain extends Chain | undefined,\n  chainOverride extends Chain | undefined,\n  type extends FeeValuesType = 'eip1559',\n>(\n  client: Client<Transport, chain>,\n  args: EstimateFeesPerGasParameters<chain, chainOverride, type> & {\n    block?: Block | undefined\n    request?: PrepareTransactionRequestParameters<Chain, Account> | undefined\n  },\n): Promise<EstimateFeesPerGasReturnType<type>> {\n  const {\n    block: block_,\n    chain = client.chain,\n    request,\n    type = 'eip1559',\n  } = args || {}\n\n  const baseFeeMultiplier = await (async () => {\n    if (typeof chain?.fees?.baseFeeMultiplier === 'function')\n      return chain.fees.baseFeeMultiplier({\n        block: block_ as Block,\n        client,\n        request,\n      } as ChainFeesFnParameters)\n    return chain?.fees?.baseFeeMultiplier ?? 1.2\n  })()\n  if (baseFeeMultiplier < 1) throw new BaseFeeScalarError()\n\n  const decimals = baseFeeMultiplier.toString().split('.')[1]?.length ?? 0\n  const denominator = 10 ** decimals\n  const multiply = (base: bigint) =>\n    (base * BigInt(Math.ceil(baseFeeMultiplier * denominator))) /\n    BigInt(denominator)\n\n  const block = block_\n    ? block_\n    : await getAction(client, getBlock, 'getBlock')({})\n\n  if (typeof chain?.fees?.estimateFeesPerGas === 'function') {\n    const fees = (await chain.fees.estimateFeesPerGas({\n      block: block_ as Block,\n      client,\n      multiply,\n      request,\n      type,\n    } as ChainEstimateFeesPerGasFnParameters)) as unknown as EstimateFeesPerGasReturnType<type>\n\n    if (fees !== null) return fees\n  }\n\n  if (type === 'eip1559') {\n    if (typeof block.baseFeePerGas !== 'bigint')\n      throw new Eip1559FeesNotSupportedError()\n\n    const maxPriorityFeePerGas =\n      typeof request?.maxPriorityFeePerGas === 'bigint'\n        ? request.maxPriorityFeePerGas\n        : await internal_estimateMaxPriorityFeePerGas(\n            client as Client<Transport, Chain>,\n            {\n              block: block as Block,\n              chain,\n              request,\n            },\n          )\n\n    const baseFeePerGas = multiply(block.baseFeePerGas)\n    const maxFeePerGas =\n      request?.maxFeePerGas ?? baseFeePerGas + maxPriorityFeePerGas\n\n    return {\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n    } as EstimateFeesPerGasReturnType<type>\n  }\n\n  const gasPrice =\n    request?.gasPrice ??\n    multiply(await getAction(client, getGasPrice, 'getGasPrice')({}))\n  return {\n    gasPrice,\n  } as EstimateFeesPerGasReturnType<type>\n}\n","import type { Address } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type HexToNumberErrorType,\n  hexToNumber,\n} from '../../utils/encoding/fromHex.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type GetTransactionCountParameters = {\n  /** The account address. */\n  address: Address\n} & (\n  | {\n      /** The block number. */\n      blockNumber?: bigint | undefined\n      blockTag?: undefined\n    }\n  | {\n      blockNumber?: undefined\n      /** The block tag. Defaults to 'latest'. */\n      blockTag?: BlockTag | undefined\n    }\n)\nexport type GetTransactionCountReturnType = number\n\nexport type GetTransactionCountErrorType =\n  | RequestErrorType\n  | NumberToHexErrorType\n  | HexToNumberErrorType\n  | ErrorType\n\n/**\n * Returns the number of [Transactions](https://viem.sh/docs/glossary/terms#transaction) an Account has sent.\n *\n * - Docs: https://viem.sh/docs/actions/public/getTransactionCount\n * - JSON-RPC Methods: [`eth_getTransactionCount`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gettransactioncount)\n *\n * @param client - Client to use\n * @param parameters - {@link GetTransactionCountParameters}\n * @returns The number of transactions an account has sent. {@link GetTransactionCountReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getTransactionCount } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const transactionCount = await getTransactionCount(client, {\n *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n */\nexport async function getTransactionCount<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: Client<Transport, chain, account>,\n  { address, blockTag = 'latest', blockNumber }: GetTransactionCountParameters,\n): Promise<GetTransactionCountReturnType> {\n  const count = await client.request(\n    {\n      method: 'eth_getTransactionCount',\n      params: [\n        address,\n        typeof blockNumber === 'bigint' ? numberToHex(blockNumber) : blockTag,\n      ],\n    },\n    {\n      dedupe: Boolean(blockNumber),\n    },\n  )\n  return hexToNumber(count)\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { Kzg } from '../../types/kzg.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type HexToBytesErrorType, hexToBytes } from '../encoding/toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from '../encoding/toHex.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type BlobsToCommitmentsParameters<\n  blobs extends readonly ByteArray[] | readonly Hex[] =\n    | readonly ByteArray[]\n    | readonly Hex[],\n  to extends To | undefined = undefined,\n> = {\n  /** Blobs to transform into commitments. */\n  blobs: blobs | readonly ByteArray[] | readonly Hex[]\n  /** KZG implementation. */\n  kzg: Pick<Kzg, 'blobToKzgCommitment'>\n  /** Return type. */\n  to?: to | To | undefined\n}\n\nexport type BlobsToCommitmentsReturnType<to extends To> =\n  | (to extends 'bytes' ? readonly ByteArray[] : never)\n  | (to extends 'hex' ? readonly Hex[] : never)\n\nexport type BlobsToCommitmentsErrorType =\n  | HexToBytesErrorType\n  | BytesToHexErrorType\n  | ErrorType\n\n/**\n * Compute commitments from a list of blobs.\n *\n * @example\n * ```ts\n * import { blobsToCommitments, toBlobs } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * ```\n */\nexport function blobsToCommitments<\n  const blobs extends readonly ByteArray[] | readonly Hex[],\n  to extends To =\n    | (blobs extends readonly Hex[] ? 'hex' : never)\n    | (blobs extends readonly ByteArray[] ? 'bytes' : never),\n>(\n  parameters: BlobsToCommitmentsParameters<blobs, to>,\n): BlobsToCommitmentsReturnType<to> {\n  const { kzg } = parameters\n\n  const to =\n    parameters.to ?? (typeof parameters.blobs[0] === 'string' ? 'hex' : 'bytes')\n  const blobs = (\n    typeof parameters.blobs[0] === 'string'\n      ? parameters.blobs.map((x) => hexToBytes(x as any))\n      : parameters.blobs\n  ) as ByteArray[]\n\n  const commitments: ByteArray[] = []\n  for (const blob of blobs)\n    commitments.push(Uint8Array.from(kzg.blobToKzgCommitment(blob)))\n\n  return (to === 'bytes'\n    ? commitments\n    : commitments.map((x) =>\n        bytesToHex(x),\n      )) as {} as BlobsToCommitmentsReturnType<to>\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { Kzg } from '../../types/kzg.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type HexToBytesErrorType, hexToBytes } from '../encoding/toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from '../encoding/toHex.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type blobsToProofsParameters<\n  blobs extends readonly ByteArray[] | readonly Hex[],\n  commitments extends readonly ByteArray[] | readonly Hex[],\n  to extends To =\n    | (blobs extends readonly Hex[] ? 'hex' : never)\n    | (blobs extends readonly ByteArray[] ? 'bytes' : never),\n  ///\n  _blobsType =\n    | (blobs extends readonly Hex[] ? readonly Hex[] : never)\n    | (blobs extends readonly ByteArray[] ? readonly ByteArray[] : never),\n> = {\n  /** Blobs to transform into proofs. */\n  blobs: blobs\n  /** Commitments for the blobs. */\n  commitments: commitments &\n    (commitments extends _blobsType\n      ? {}\n      : `commitments must be the same type as blobs`)\n  /** KZG implementation. */\n  kzg: Pick<Kzg, 'computeBlobKzgProof'>\n  /** Return type. */\n  to?: to | To | undefined\n}\n\nexport type blobsToProofsReturnType<to extends To> =\n  | (to extends 'bytes' ? ByteArray[] : never)\n  | (to extends 'hex' ? Hex[] : never)\n\nexport type blobsToProofsErrorType =\n  | BytesToHexErrorType\n  | HexToBytesErrorType\n  | ErrorType\n\n/**\n * Compute the proofs for a list of blobs and their commitments.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const proofs = blobsToProofs({ blobs, commitments, kzg })\n * ```\n */\nexport function blobsToProofs<\n  const blobs extends readonly ByteArray[] | readonly Hex[],\n  const commitments extends readonly ByteArray[] | readonly Hex[],\n  to extends To =\n    | (blobs extends readonly Hex[] ? 'hex' : never)\n    | (blobs extends readonly ByteArray[] ? 'bytes' : never),\n>(\n  parameters: blobsToProofsParameters<blobs, commitments, to>,\n): blobsToProofsReturnType<to> {\n  const { kzg } = parameters\n\n  const to =\n    parameters.to ?? (typeof parameters.blobs[0] === 'string' ? 'hex' : 'bytes')\n\n  const blobs = (\n    typeof parameters.blobs[0] === 'string'\n      ? parameters.blobs.map((x) => hexToBytes(x as any))\n      : parameters.blobs\n  ) as ByteArray[]\n  const commitments = (\n    typeof parameters.commitments[0] === 'string'\n      ? parameters.commitments.map((x) => hexToBytes(x as any))\n      : parameters.commitments\n  ) as ByteArray[]\n\n  const proofs: ByteArray[] = []\n  for (let i = 0; i < blobs.length; i++) {\n    const blob = blobs[i]\n    const commitment = commitments[i]\n    proofs.push(Uint8Array.from(kzg.computeBlobKzgProof(blob, commitment)))\n  }\n\n  return (to === 'bytes'\n    ? proofs\n    : proofs.map((x) => bytesToHex(x))) as {} as blobsToProofsReturnType<to>\n}\n","/**\n * SHA2-256 a.k.a. sha256. In JS, it is the fastest hash, even faster than Blake3.\n *\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n *\n * Check out [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n * @deprecated\n */\nimport {\n  SHA224 as SHA224n,\n  sha224 as sha224n,\n  SHA256 as SHA256n,\n  sha256 as sha256n,\n} from './sha2.ts';\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const SHA256: typeof SHA256n = SHA256n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const sha256: typeof sha256n = sha256n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const SHA224: typeof SHA224n = SHA224n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const sha224: typeof sha224n = sha224n;\n","import { sha256 as noble_sha256 } from '@noble/hashes/sha256'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type IsHexErrorType, isHex } from '../data/isHex.js'\nimport { type ToBytesErrorType, toBytes } from '../encoding/toBytes.js'\nimport { type ToHexErrorType, toHex } from '../encoding/toHex.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type Sha256Hash<to extends To> =\n  | (to extends 'bytes' ? ByteArray : never)\n  | (to extends 'hex' ? Hex : never)\n\nexport type Sha256ErrorType =\n  | IsHexErrorType\n  | ToBytesErrorType\n  | ToHexErrorType\n  | ErrorType\n\nexport function sha256<to extends To = 'hex'>(\n  value: Hex | ByteArray,\n  to_?: to | undefined,\n): Sha256Hash<to> {\n  const to = to_ || 'hex'\n  const bytes = noble_sha256(\n    isHex(value, { strict: false }) ? toBytes(value) : value,\n  )\n  if (to === 'bytes') return bytes as Sha256Hash<to>\n  return toHex(bytes) as Sha256Hash<to>\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type BytesToHexErrorType, bytesToHex } from '../encoding/toHex.js'\nimport { type Sha256ErrorType, sha256 } from '../hash/sha256.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type CommitmentToVersionedHashParameters<\n  commitment extends Uint8Array | Hex = Uint8Array | Hex,\n  to extends To | undefined = undefined,\n> = {\n  /** Commitment from blob. */\n  commitment: commitment | Uint8Array | Hex\n  /** Return type. */\n  to?: to | To | undefined\n  /** Version to tag onto the hash. */\n  version?: number | undefined\n}\n\nexport type CommitmentToVersionedHashReturnType<to extends To> =\n  | (to extends 'bytes' ? ByteArray : never)\n  | (to extends 'hex' ? Hex : never)\n\nexport type CommitmentToVersionedHashErrorType =\n  | Sha256ErrorType\n  | BytesToHexErrorType\n  | ErrorType\n\n/**\n * Transform a commitment to it's versioned hash.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   commitmentToVersionedHash,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const [commitment] = blobsToCommitments({ blobs, kzg })\n * const versionedHash = commitmentToVersionedHash({ commitment })\n * ```\n */\nexport function commitmentToVersionedHash<\n  const commitment extends Hex | ByteArray,\n  to extends To =\n    | (commitment extends Hex ? 'hex' : never)\n    | (commitment extends ByteArray ? 'bytes' : never),\n>(\n  parameters: CommitmentToVersionedHashParameters<commitment, to>,\n): CommitmentToVersionedHashReturnType<to> {\n  const { commitment, version = 1 } = parameters\n  const to = parameters.to ?? (typeof commitment === 'string' ? 'hex' : 'bytes')\n\n  const versionedHash = sha256(commitment, 'bytes')\n  versionedHash.set([version], 0)\n  return (\n    to === 'bytes' ? versionedHash : bytesToHex(versionedHash)\n  ) as CommitmentToVersionedHashReturnType<to>\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport {\n  type CommitmentToVersionedHashErrorType,\n  commitmentToVersionedHash,\n} from './commitmentToVersionedHash.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type CommitmentsToVersionedHashesParameters<\n  commitments extends readonly Uint8Array[] | readonly Hex[] =\n    | readonly Uint8Array[]\n    | readonly Hex[],\n  to extends To | undefined = undefined,\n> = {\n  /** Commitments from blobs. */\n  commitments: commitments | readonly Uint8Array[] | readonly Hex[]\n  /** Return type. */\n  to?: to | To | undefined\n  /** Version to tag onto the hashes. */\n  version?: number | undefined\n}\n\nexport type CommitmentsToVersionedHashesReturnType<to extends To> =\n  | (to extends 'bytes' ? readonly ByteArray[] : never)\n  | (to extends 'hex' ? readonly Hex[] : never)\n\nexport type CommitmentsToVersionedHashesErrorType =\n  | CommitmentToVersionedHashErrorType\n  | ErrorType\n\n/**\n * Transform a list of commitments to their versioned hashes.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   commitmentsToVersionedHashes,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const versionedHashes = commitmentsToVersionedHashes({ commitments })\n * ```\n */\nexport function commitmentsToVersionedHashes<\n  const commitments extends readonly Uint8Array[] | readonly Hex[],\n  to extends To =\n    | (commitments extends readonly Hex[] ? 'hex' : never)\n    | (commitments extends readonly ByteArray[] ? 'bytes' : never),\n>(\n  parameters: CommitmentsToVersionedHashesParameters<commitments, to>,\n): CommitmentsToVersionedHashesReturnType<to> {\n  const { commitments, version } = parameters\n\n  const to =\n    parameters.to ?? (typeof commitments[0] === 'string' ? 'hex' : 'bytes')\n\n  const hashes: Uint8Array[] | Hex[] = []\n  for (const commitment of commitments) {\n    hashes.push(\n      commitmentToVersionedHash({\n        commitment,\n        to,\n        version,\n      }) as any,\n    )\n  }\n  return hashes as any\n}\n","// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters\n\n/** Blob limit per transaction. */\nconst blobsPerTransaction = 6\n\n/** The number of bytes in a BLS scalar field element. */\nexport const bytesPerFieldElement = 32\n\n/** The number of field elements in a blob. */\nexport const fieldElementsPerBlob = 4096\n\n/** The number of bytes in a blob. */\nexport const bytesPerBlob = bytesPerFieldElement * fieldElementsPerBlob\n\n/** Blob bytes limit per transaction. */\nexport const maxBytesPerTransaction =\n  bytesPerBlob * blobsPerTransaction -\n  // terminator byte (0x80).\n  1 -\n  // zero byte (0x00) appended to each field element.\n  1 * fieldElementsPerBlob * blobsPerTransaction\n","import { versionedHashVersionKzg } from '../constants/kzg.js'\nimport type { Hash } from '../types/misc.js'\n\nimport { BaseError } from './base.js'\n\nexport type BlobSizeTooLargeErrorType = BlobSizeTooLargeError & {\n  name: 'BlobSizeTooLargeError'\n}\nexport class BlobSizeTooLargeError extends BaseError {\n  constructor({ maxSize, size }: { maxSize: number; size: number }) {\n    super('Blob size is too large.', {\n      metaMessages: [`Max: ${maxSize} bytes`, `Given: ${size} bytes`],\n      name: 'BlobSizeTooLargeError',\n    })\n  }\n}\n\nexport type EmptyBlobErrorType = EmptyBlobError & {\n  name: 'EmptyBlobError'\n}\nexport class EmptyBlobError extends BaseError {\n  constructor() {\n    super('Blob data must not be empty.', { name: 'EmptyBlobError' })\n  }\n}\n\nexport type InvalidVersionedHashSizeErrorType =\n  InvalidVersionedHashSizeError & {\n    name: 'InvalidVersionedHashSizeError'\n  }\nexport class InvalidVersionedHashSizeError extends BaseError {\n  constructor({\n    hash,\n    size,\n  }: {\n    hash: Hash\n    size: number\n  }) {\n    super(`Versioned hash \"${hash}\" size is invalid.`, {\n      metaMessages: ['Expected: 32', `Received: ${size}`],\n      name: 'InvalidVersionedHashSizeError',\n    })\n  }\n}\n\nexport type InvalidVersionedHashVersionErrorType =\n  InvalidVersionedHashVersionError & {\n    name: 'InvalidVersionedHashVersionError'\n  }\nexport class InvalidVersionedHashVersionError extends BaseError {\n  constructor({\n    hash,\n    version,\n  }: {\n    hash: Hash\n    version: number\n  }) {\n    super(`Versioned hash \"${hash}\" version is invalid.`, {\n      metaMessages: [\n        `Expected: ${versionedHashVersionKzg}`,\n        `Received: ${version}`,\n      ],\n      name: 'InvalidVersionedHashVersionError',\n    })\n  }\n}\n","// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters\n\nexport const versionedHashVersionKzg = 1\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { BlobSidecars } from '../../types/eip4844.js'\nimport type { Kzg } from '../../types/kzg.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport type { OneOf } from '../../types/utils.js'\nimport {\n  type BlobsToCommitmentsErrorType,\n  blobsToCommitments,\n} from './blobsToCommitments.js'\nimport { blobsToProofs, type blobsToProofsErrorType } from './blobsToProofs.js'\nimport { type ToBlobsErrorType, toBlobs } from './toBlobs.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type ToBlobSidecarsParameters<\n  data extends Hex | ByteArray | undefined = undefined,\n  blobs extends readonly Hex[] | readonly ByteArray[] | undefined = undefined,\n  to extends To =\n    | (blobs extends readonly Hex[] ? 'hex' : never)\n    | (blobs extends readonly ByteArray[] ? 'bytes' : never),\n  ///\n  _blobsType =\n    | (blobs extends readonly Hex[] ? readonly Hex[] : never)\n    | (blobs extends readonly ByteArray[] ? readonly ByteArray[] : never),\n> = {\n  /** Return type. */\n  to?: to | To | undefined\n} & OneOf<\n  | {\n      /** Data to transform into blobs. */\n      data: data | Hex | ByteArray\n      /** KZG implementation. */\n      kzg: Kzg\n    }\n  | {\n      /** Blobs. */\n      blobs: blobs | readonly Hex[] | readonly ByteArray[]\n      /** Commitment for each blob. */\n      commitments: _blobsType | readonly Hex[] | readonly ByteArray[]\n      /** Proof for each blob. */\n      proofs: _blobsType | readonly Hex[] | readonly ByteArray[]\n    }\n>\n\nexport type ToBlobSidecarsReturnType<to extends To> =\n  | (to extends 'bytes' ? BlobSidecars<ByteArray> : never)\n  | (to extends 'hex' ? BlobSidecars<Hex> : never)\n\nexport type ToBlobSidecarsErrorType =\n  | BlobsToCommitmentsErrorType\n  | ToBlobsErrorType\n  | blobsToProofsErrorType\n  | ErrorType\n\n/**\n * Transforms arbitrary data (or blobs, commitments, & proofs) into a sidecar array.\n *\n * @example\n * ```ts\n * import { toBlobSidecars, stringToHex } from 'viem'\n *\n * const sidecars = toBlobSidecars({ data: stringToHex('hello world') })\n * ```\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   toBlobs,\n *   blobsToProofs,\n *   toBlobSidecars,\n *   stringToHex\n * } from 'viem'\n *\n * const blobs = toBlobs({ data: stringToHex('hello world') })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const proofs = blobsToProofs({ blobs, commitments, kzg })\n *\n * const sidecars = toBlobSidecars({ blobs, commitments, proofs })\n * ```\n */\nexport function toBlobSidecars<\n  const data extends Hex | ByteArray | undefined = undefined,\n  const blobs extends\n    | readonly Hex[]\n    | readonly ByteArray[]\n    | undefined = undefined,\n  to extends To =\n    | (data extends Hex ? 'hex' : never)\n    | (data extends ByteArray ? 'bytes' : never)\n    | (blobs extends readonly Hex[] ? 'hex' : never)\n    | (blobs extends readonly ByteArray[] ? 'bytes' : never),\n>(\n  parameters: ToBlobSidecarsParameters<data, blobs, to>,\n): ToBlobSidecarsReturnType<to> {\n  const { data, kzg, to } = parameters\n  const blobs = parameters.blobs ?? toBlobs({ data: data!, to })\n  const commitments =\n    parameters.commitments ?? blobsToCommitments({ blobs, kzg: kzg!, to })\n  const proofs =\n    parameters.proofs ?? blobsToProofs({ blobs, commitments, kzg: kzg!, to })\n\n  const sidecars: BlobSidecars = []\n  for (let i = 0; i < blobs.length; i++)\n    sidecars.push({\n      blob: blobs[i],\n      commitment: commitments[i],\n      proof: proofs[i],\n    })\n\n  return sidecars as ToBlobSidecarsReturnType<to>\n}\n","import {\n  bytesPerBlob,\n  bytesPerFieldElement,\n  fieldElementsPerBlob,\n  maxBytesPerTransaction,\n} from '../../constants/blob.js'\nimport {\n  BlobSizeTooLargeError,\n  type BlobSizeTooLargeErrorType,\n  EmptyBlobError,\n  type EmptyBlobErrorType,\n} from '../../errors/blob.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type CreateCursorErrorType, createCursor } from '../cursor.js'\nimport { type SizeErrorType, size } from '../data/size.js'\nimport { type HexToBytesErrorType, hexToBytes } from '../encoding/toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from '../encoding/toHex.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type ToBlobsParameters<\n  data extends Hex | ByteArray = Hex | ByteArray,\n  to extends To | undefined = undefined,\n> = {\n  /** Data to transform to a blob. */\n  data: data | Hex | ByteArray\n  /** Return type. */\n  to?: to | To | undefined\n}\n\nexport type ToBlobsReturnType<to extends To> =\n  | (to extends 'bytes' ? readonly ByteArray[] : never)\n  | (to extends 'hex' ? readonly Hex[] : never)\n\nexport type ToBlobsErrorType =\n  | BlobSizeTooLargeErrorType\n  | BytesToHexErrorType\n  | CreateCursorErrorType\n  | EmptyBlobErrorType\n  | HexToBytesErrorType\n  | SizeErrorType\n  | ErrorType\n\n/**\n * Transforms arbitrary data to blobs.\n *\n * @example\n * ```ts\n * import { toBlobs, stringToHex } from 'viem'\n *\n * const blobs = toBlobs({ data: stringToHex('hello world') })\n * ```\n */\nexport function toBlobs<\n  const data extends Hex | ByteArray,\n  to extends To =\n    | (data extends Hex ? 'hex' : never)\n    | (data extends ByteArray ? 'bytes' : never),\n>(parameters: ToBlobsParameters<data, to>): ToBlobsReturnType<to> {\n  const to =\n    parameters.to ?? (typeof parameters.data === 'string' ? 'hex' : 'bytes')\n  const data = (\n    typeof parameters.data === 'string'\n      ? hexToBytes(parameters.data)\n      : parameters.data\n  ) as ByteArray\n\n  const size_ = size(data)\n  if (!size_) throw new EmptyBlobError()\n  if (size_ > maxBytesPerTransaction)\n    throw new BlobSizeTooLargeError({\n      maxSize: maxBytesPerTransaction,\n      size: size_,\n    })\n\n  const blobs = []\n\n  let active = true\n  let position = 0\n  while (active) {\n    const blob = createCursor(new Uint8Array(bytesPerBlob))\n\n    let size = 0\n    while (size < fieldElementsPerBlob) {\n      const bytes = data.slice(position, position + (bytesPerFieldElement - 1))\n\n      // Push a zero byte so the field element doesn't overflow the BLS modulus.\n      blob.pushByte(0x00)\n\n      // Push the current segment of data bytes.\n      blob.pushBytes(bytes)\n\n      // If we detect that the current segment of data bytes is less than 31 bytes,\n      // we can stop processing and push a terminator byte to indicate the end of the blob.\n      if (bytes.length < 31) {\n        blob.pushByte(0x80)\n        active = false\n        break\n      }\n\n      size++\n      position += 31\n    }\n\n    blobs.push(blob)\n  }\n\n  return (\n    to === 'bytes'\n      ? blobs.map((x) => x.bytes)\n      : blobs.map((x) => bytesToHex(x.bytes))\n  ) as any\n}\n","import {\n  InvalidSerializableTransactionError,\n  type InvalidSerializableTransactionErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  FeeValuesEIP1559,\n  FeeValuesEIP4844,\n  FeeValuesLegacy,\n} from '../../index.js'\nimport type {\n  TransactionRequestGeneric,\n  TransactionSerializableEIP2930,\n  TransactionSerializableEIP4844,\n  TransactionSerializableEIP7702,\n  TransactionSerializableGeneric,\n} from '../../types/transaction.js'\nimport type { Assign, ExactPartial, IsNever, OneOf } from '../../types/utils.js'\n\nexport type GetTransactionType<\n  transaction extends OneOf<\n    TransactionSerializableGeneric | TransactionRequestGeneric\n  > = TransactionSerializableGeneric,\n  result =\n    | (transaction extends LegacyProperties ? 'legacy' : never)\n    | (transaction extends EIP1559Properties ? 'eip1559' : never)\n    | (transaction extends EIP2930Properties ? 'eip2930' : never)\n    | (transaction extends EIP4844Properties ? 'eip4844' : never)\n    | (transaction extends EIP7702Properties ? 'eip7702' : never)\n    | (transaction['type'] extends TransactionSerializableGeneric['type']\n        ? Extract<transaction['type'], string>\n        : never),\n> = IsNever<keyof transaction> extends true\n  ? string\n  : IsNever<result> extends false\n    ? result\n    : string\n\nexport type GetTransactionTypeErrorType =\n  | InvalidSerializableTransactionErrorType\n  | ErrorType\n\nexport function getTransactionType<\n  const transaction extends OneOf<\n    TransactionSerializableGeneric | TransactionRequestGeneric\n  >,\n>(transaction: transaction): GetTransactionType<transaction> {\n  if (transaction.type)\n    return transaction.type as GetTransactionType<transaction>\n\n  if (typeof transaction.authorizationList !== 'undefined')\n    return 'eip7702' as any\n\n  if (\n    typeof transaction.blobs !== 'undefined' ||\n    typeof transaction.blobVersionedHashes !== 'undefined' ||\n    typeof transaction.maxFeePerBlobGas !== 'undefined' ||\n    typeof transaction.sidecars !== 'undefined'\n  )\n    return 'eip4844' as any\n\n  if (\n    typeof transaction.maxFeePerGas !== 'undefined' ||\n    typeof transaction.maxPriorityFeePerGas !== 'undefined'\n  ) {\n    return 'eip1559' as any\n  }\n\n  if (typeof transaction.gasPrice !== 'undefined') {\n    if (typeof transaction.accessList !== 'undefined') return 'eip2930' as any\n    return 'legacy' as any\n  }\n\n  throw new InvalidSerializableTransactionError({ transaction })\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////\n// Types\n\ntype BaseProperties = {\n  accessList?: undefined\n  authorizationList?: undefined\n  blobs?: undefined\n  blobVersionedHashes?: undefined\n  gasPrice?: undefined\n  maxFeePerBlobGas?: undefined\n  maxFeePerGas?: undefined\n  maxPriorityFeePerGas?: undefined\n  sidecars?: undefined\n}\n\ntype LegacyProperties = Assign<BaseProperties, FeeValuesLegacy>\ntype EIP1559Properties = Assign<\n  BaseProperties,\n  OneOf<\n    | {\n        maxFeePerGas: FeeValuesEIP1559['maxFeePerGas']\n      }\n    | {\n        maxPriorityFeePerGas: FeeValuesEIP1559['maxPriorityFeePerGas']\n      },\n    FeeValuesEIP1559\n  > & {\n    accessList?: TransactionSerializableEIP2930['accessList'] | undefined\n  }\n>\ntype EIP2930Properties = Assign<\n  ExactPartial<LegacyProperties>,\n  {\n    accessList: TransactionSerializableEIP2930['accessList']\n  }\n>\ntype EIP4844Properties = Assign<\n  ExactPartial<EIP1559Properties>,\n  ExactPartial<FeeValuesEIP4844> &\n    OneOf<\n      | {\n          blobs: TransactionSerializableEIP4844['blobs']\n        }\n      | {\n          blobVersionedHashes: TransactionSerializableEIP4844['blobVersionedHashes']\n        }\n      | {\n          sidecars: TransactionSerializableEIP4844['sidecars']\n        },\n      TransactionSerializableEIP4844\n    >\n>\ntype EIP7702Properties = Assign<\n  ExactPartial<EIP1559Properties>,\n  {\n    authorizationList: TransactionSerializableEIP7702['authorizationList']\n  }\n>\n","import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type HexToNumberErrorType,\n  hexToNumber,\n} from '../../utils/encoding/fromHex.js'\n\nexport type GetChainIdReturnType = number\n\nexport type GetChainIdErrorType =\n  | HexToNumberErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns the chain ID associated with the current network.\n *\n * - Docs: https://viem.sh/docs/actions/public/getChainId\n * - JSON-RPC Methods: [`eth_chainId`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_chainid)\n *\n * @param client - Client to use\n * @returns The current chain ID. {@link GetChainIdReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getChainId } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const chainId = await getChainId(client)\n * // 1\n */\nexport async function getChainId<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(client: Client<Transport, chain, account>): Promise<GetChainIdReturnType> {\n  const chainIdHex = await client.request(\n    {\n      method: 'eth_chainId',\n    },\n    { dedupe: true },\n  )\n  return hexToNumber(chainIdHex)\n}\n","import type { Address } from 'abitype'\nimport type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport {\n  type EstimateFeesPerGasErrorType,\n  internal_estimateFeesPerGas,\n} from '../../actions/public/estimateFeesPerGas.js'\nimport {\n  type EstimateGasErrorType,\n  type EstimateGasParameters,\n  estimateGas,\n} from '../../actions/public/estimateGas.js'\nimport {\n  type GetBlockErrorType,\n  getBlock as getBlock_,\n} from '../../actions/public/getBlock.js'\nimport {\n  type GetTransactionCountErrorType,\n  getTransactionCount,\n} from '../../actions/public/getTransactionCount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { AccountNotFoundErrorType } from '../../errors/account.js'\nimport {\n  Eip1559FeesNotSupportedError,\n  MaxFeePerGasTooLowError,\n} from '../../errors/fee.js'\nimport type { DeriveAccount, GetAccountParameter } from '../../types/account.js'\nimport type { Block } from '../../types/block.js'\nimport type {\n  Chain,\n  DeriveChain,\n  GetChainParameter,\n} from '../../types/chain.js'\nimport type { GetTransactionRequestKzgParameter } from '../../types/kzg.js'\nimport type {\n  TransactionRequest,\n  TransactionRequestEIP1559,\n  TransactionRequestEIP2930,\n  TransactionRequestEIP4844,\n  TransactionRequestEIP7702,\n  TransactionRequestLegacy,\n  TransactionSerializable,\n} from '../../types/transaction.js'\nimport type {\n  ExactPartial,\n  IsNever,\n  Prettify,\n  UnionOmit,\n  UnionRequiredBy,\n} from '../../types/utils.js'\nimport { blobsToCommitments } from '../../utils/blob/blobsToCommitments.js'\nimport { blobsToProofs } from '../../utils/blob/blobsToProofs.js'\nimport { commitmentsToVersionedHashes } from '../../utils/blob/commitmentsToVersionedHashes.js'\nimport { toBlobSidecars } from '../../utils/blob/toBlobSidecars.js'\nimport type { FormattedTransactionRequest } from '../../utils/formatters/transactionRequest.js'\nimport { getAction } from '../../utils/getAction.js'\nimport type { NonceManager } from '../../utils/nonceManager.js'\nimport {\n  type AssertRequestErrorType,\n  type AssertRequestParameters,\n  assertRequest,\n} from '../../utils/transaction/assertRequest.js'\nimport {\n  type GetTransactionType,\n  getTransactionType,\n} from '../../utils/transaction/getTransactionType.js'\nimport { getChainId as getChainId_ } from '../public/getChainId.js'\n\nexport const defaultParameters = [\n  'blobVersionedHashes',\n  'chainId',\n  'fees',\n  'gas',\n  'nonce',\n  'type',\n] as const\n\n/** @internal */\nexport const eip1559NetworkCache = /*#__PURE__*/ new Map<string, boolean>()\n\nexport type PrepareTransactionRequestParameterType =\n  | 'blobVersionedHashes'\n  | 'chainId'\n  | 'fees'\n  | 'gas'\n  | 'nonce'\n  | 'sidecars'\n  | 'type'\ntype ParameterTypeToParameters<\n  parameterType extends PrepareTransactionRequestParameterType,\n> = parameterType extends 'fees'\n  ? 'maxFeePerGas' | 'maxPriorityFeePerGas' | 'gasPrice'\n  : parameterType\n\nexport type PrepareTransactionRequestRequest<\n  chain extends Chain | undefined = Chain | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  ///\n  _derivedChain extends Chain | undefined = DeriveChain<chain, chainOverride>,\n> = UnionOmit<FormattedTransactionRequest<_derivedChain>, 'from'> &\n  GetTransactionRequestKzgParameter & {\n    /**\n     * Nonce manager to use for the transaction request.\n     */\n    nonceManager?: NonceManager | undefined\n    /**\n     * Parameters to prepare for the transaction request.\n     *\n     * @default ['blobVersionedHashes', 'chainId', 'fees', 'gas', 'nonce', 'type']\n     */\n    parameters?: readonly PrepareTransactionRequestParameterType[] | undefined\n  }\n\nexport type PrepareTransactionRequestParameters<\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  accountOverride extends Account | Address | undefined =\n    | Account\n    | Address\n    | undefined,\n  request extends PrepareTransactionRequestRequest<\n    chain,\n    chainOverride\n  > = PrepareTransactionRequestRequest<chain, chainOverride>,\n> = request &\n  GetAccountParameter<account, accountOverride, false, true> &\n  GetChainParameter<chain, chainOverride> &\n  GetTransactionRequestKzgParameter<request> & { chainId?: number | undefined }\n\nexport type PrepareTransactionRequestReturnType<\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  accountOverride extends Account | Address | undefined =\n    | Account\n    | Address\n    | undefined,\n  request extends PrepareTransactionRequestRequest<\n    chain,\n    chainOverride\n  > = PrepareTransactionRequestRequest<chain, chainOverride>,\n  ///\n  _derivedAccount extends Account | Address | undefined = DeriveAccount<\n    account,\n    accountOverride\n  >,\n  _derivedChain extends Chain | undefined = DeriveChain<chain, chainOverride>,\n  _transactionType = request['type'] extends string | undefined\n    ? request['type']\n    : GetTransactionType<request> extends 'legacy'\n      ? unknown\n      : GetTransactionType<request>,\n  _transactionRequest extends TransactionRequest =\n    | (_transactionType extends 'legacy' ? TransactionRequestLegacy : never)\n    | (_transactionType extends 'eip1559' ? TransactionRequestEIP1559 : never)\n    | (_transactionType extends 'eip2930' ? TransactionRequestEIP2930 : never)\n    | (_transactionType extends 'eip4844' ? TransactionRequestEIP4844 : never)\n    | (_transactionType extends 'eip7702' ? TransactionRequestEIP7702 : never),\n> = Prettify<\n  UnionRequiredBy<\n    Extract<\n      UnionOmit<FormattedTransactionRequest<_derivedChain>, 'from'> &\n        (_derivedChain extends Chain\n          ? { chain: _derivedChain }\n          : { chain?: undefined }) &\n        (_derivedAccount extends Account\n          ? { account: _derivedAccount; from: Address }\n          : { account?: undefined; from?: undefined }),\n      IsNever<_transactionRequest> extends true\n        ? unknown\n        : ExactPartial<_transactionRequest>\n    > & { chainId?: number | undefined },\n    ParameterTypeToParameters<\n      request['parameters'] extends readonly PrepareTransactionRequestParameterType[]\n        ? request['parameters'][number]\n        : (typeof defaultParameters)[number]\n    >\n  > &\n    (unknown extends request['kzg'] ? {} : Pick<request, 'kzg'>)\n>\n\nexport type PrepareTransactionRequestErrorType =\n  | AccountNotFoundErrorType\n  | AssertRequestErrorType\n  | ParseAccountErrorType\n  | GetBlockErrorType\n  | GetTransactionCountErrorType\n  | EstimateGasErrorType\n  | EstimateFeesPerGasErrorType\n\n/**\n * Prepares a transaction request for signing.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/prepareTransactionRequest\n *\n * @param args - {@link PrepareTransactionRequestParameters}\n * @returns The transaction request. {@link PrepareTransactionRequestReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { prepareTransactionRequest } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const request = await prepareTransactionRequest(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   to: '0x0000000000000000000000000000000000000000',\n *   value: 1n,\n * })\n *\n * @example\n * // Account Hoisting\n * import { createWalletClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { prepareTransactionRequest } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x…'),\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const request = await prepareTransactionRequest(client, {\n *   to: '0x0000000000000000000000000000000000000000',\n *   value: 1n,\n * })\n */\nexport async function prepareTransactionRequest<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n  const request extends PrepareTransactionRequestRequest<chain, chainOverride>,\n  accountOverride extends Account | Address | undefined = undefined,\n  chainOverride extends Chain | undefined = undefined,\n>(\n  client: Client<Transport, chain, account>,\n  args: PrepareTransactionRequestParameters<\n    chain,\n    account,\n    chainOverride,\n    accountOverride,\n    request\n  >,\n): Promise<\n  PrepareTransactionRequestReturnType<\n    chain,\n    account,\n    chainOverride,\n    accountOverride,\n    request\n  >\n> {\n  const {\n    account: account_ = client.account,\n    blobs,\n    chain,\n    gas,\n    kzg,\n    nonce,\n    nonceManager,\n    parameters = defaultParameters,\n    type,\n  } = args\n  const account = account_ ? parseAccount(account_) : account_\n\n  const request = { ...args, ...(account ? { from: account?.address } : {}) }\n\n  let block: Block | undefined\n  async function getBlock(): Promise<Block> {\n    if (block) return block\n    block = await getAction(\n      client,\n      getBlock_,\n      'getBlock',\n    )({ blockTag: 'latest' })\n    return block\n  }\n\n  let chainId: number | undefined\n  async function getChainId(): Promise<number> {\n    if (chainId) return chainId\n    if (chain) return chain.id\n    if (typeof args.chainId !== 'undefined') return args.chainId\n    const chainId_ = await getAction(client, getChainId_, 'getChainId')({})\n    chainId = chainId_\n    return chainId\n  }\n\n  if (parameters.includes('nonce') && typeof nonce === 'undefined' && account) {\n    if (nonceManager) {\n      const chainId = await getChainId()\n      request.nonce = await nonceManager.consume({\n        address: account.address,\n        chainId,\n        client,\n      })\n    } else {\n      request.nonce = await getAction(\n        client,\n        getTransactionCount,\n        'getTransactionCount',\n      )({\n        address: account.address,\n        blockTag: 'pending',\n      })\n    }\n  }\n\n  if (\n    (parameters.includes('blobVersionedHashes') ||\n      parameters.includes('sidecars')) &&\n    blobs &&\n    kzg\n  ) {\n    const commitments = blobsToCommitments({ blobs, kzg })\n\n    if (parameters.includes('blobVersionedHashes')) {\n      const versionedHashes = commitmentsToVersionedHashes({\n        commitments,\n        to: 'hex',\n      })\n      request.blobVersionedHashes = versionedHashes\n    }\n    if (parameters.includes('sidecars')) {\n      const proofs = blobsToProofs({ blobs, commitments, kzg })\n      const sidecars = toBlobSidecars({\n        blobs,\n        commitments,\n        proofs,\n        to: 'hex',\n      })\n      request.sidecars = sidecars\n    }\n  }\n\n  if (parameters.includes('chainId')) request.chainId = await getChainId()\n\n  if (\n    (parameters.includes('fees') || parameters.includes('type')) &&\n    typeof type === 'undefined'\n  ) {\n    try {\n      request.type = getTransactionType(\n        request as TransactionSerializable,\n      ) as any\n    } catch {\n      let isEip1559Network = eip1559NetworkCache.get(client.uid)\n      if (typeof isEip1559Network === 'undefined') {\n        const block = await getBlock()\n        isEip1559Network = typeof block?.baseFeePerGas === 'bigint'\n        eip1559NetworkCache.set(client.uid, isEip1559Network)\n      }\n      request.type = isEip1559Network ? 'eip1559' : 'legacy'\n    }\n  }\n\n  if (parameters.includes('fees')) {\n    // TODO(4844): derive blob base fees once https://github.com/ethereum/execution-apis/pull/486 is merged.\n\n    if (request.type !== 'legacy' && request.type !== 'eip2930') {\n      // EIP-1559 fees\n      if (\n        typeof request.maxFeePerGas === 'undefined' ||\n        typeof request.maxPriorityFeePerGas === 'undefined'\n      ) {\n        const block = await getBlock()\n        const { maxFeePerGas, maxPriorityFeePerGas } =\n          await internal_estimateFeesPerGas(client, {\n            block: block as Block,\n            chain,\n            request: request as PrepareTransactionRequestParameters,\n          })\n\n        if (\n          typeof args.maxPriorityFeePerGas === 'undefined' &&\n          args.maxFeePerGas &&\n          args.maxFeePerGas < maxPriorityFeePerGas\n        )\n          throw new MaxFeePerGasTooLowError({\n            maxPriorityFeePerGas,\n          })\n\n        request.maxPriorityFeePerGas = maxPriorityFeePerGas\n        request.maxFeePerGas = maxFeePerGas\n      }\n    } else {\n      // Legacy fees\n      if (\n        typeof args.maxFeePerGas !== 'undefined' ||\n        typeof args.maxPriorityFeePerGas !== 'undefined'\n      )\n        throw new Eip1559FeesNotSupportedError()\n\n      if (typeof args.gasPrice === 'undefined') {\n        const block = await getBlock()\n        const { gasPrice: gasPrice_ } = await internal_estimateFeesPerGas(\n          client,\n          {\n            block: block as Block,\n            chain,\n            request: request as PrepareTransactionRequestParameters,\n            type: 'legacy',\n          },\n        )\n        request.gasPrice = gasPrice_\n      }\n    }\n  }\n\n  if (parameters.includes('gas') && typeof gas === 'undefined')\n    request.gas = await getAction(\n      client,\n      estimateGas,\n      'estimateGas',\n    )({\n      ...request,\n      account: account\n        ? { address: account.address, type: 'json-rpc' }\n        : account,\n    } as EstimateGasParameters)\n\n  assertRequest(request as AssertRequestParameters)\n\n  delete request.parameters\n\n  return request as any\n}\n","import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type GetBalanceParameters = {\n  /** The address of the account. */\n  address: Address\n} & (\n  | {\n      /** The balance of the account at a block number. */\n      blockNumber?: bigint | undefined\n      blockTag?: undefined\n    }\n  | {\n      blockNumber?: undefined\n      /** The balance of the account at a block tag. */\n      blockTag?: BlockTag | undefined\n    }\n)\n\nexport type GetBalanceReturnType = bigint\n\nexport type GetBalanceErrorType =\n  | NumberToHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns the balance of an address in wei.\n *\n * - Docs: https://viem.sh/docs/actions/public/getBalance\n * - JSON-RPC Methods: [`eth_getBalance`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getbalance)\n *\n * You can convert the balance to ether units with [`formatEther`](https://viem.sh/docs/utilities/formatEther).\n *\n * ```ts\n * const balance = await getBalance(client, {\n *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   blockTag: 'safe'\n * })\n * const balanceAsEther = formatEther(balance)\n * // \"6.942\"\n * ```\n *\n * @param client - Client to use\n * @param parameters - {@link GetBalanceParameters}\n * @returns The balance of the address in wei. {@link GetBalanceReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBalance } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const balance = await getBalance(client, {\n *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n * // 10000000000000000000000n (wei)\n */\nexport async function getBalance<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  {\n    address,\n    blockNumber,\n    blockTag = client.experimental_blockTag ?? 'latest',\n  }: GetBalanceParameters,\n): Promise<GetBalanceReturnType> {\n  const blockNumberHex =\n    typeof blockNumber === 'bigint' ? numberToHex(blockNumber) : undefined\n\n  const balance = await client.request({\n    method: 'eth_getBalance',\n    params: [address, blockNumberHex || blockTag],\n  })\n  return BigInt(balance)\n}\n","import type { Address } from 'abitype'\nimport type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { BaseError } from '../../errors/base.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { StateOverride } from '../../types/stateOverride.js'\nimport type { TransactionRequest } from '../../types/transaction.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport {\n  type RecoverAuthorizationAddressErrorType,\n  recoverAuthorizationAddress,\n} from '../../utils/authorization/recoverAuthorizationAddress.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport {\n  type GetEstimateGasErrorReturnType,\n  getEstimateGasError,\n} from '../../utils/errors/getEstimateGasError.js'\nimport { extract } from '../../utils/formatters/extract.js'\nimport {\n  type FormattedTransactionRequest,\n  formatTransactionRequest,\n} from '../../utils/formatters/transactionRequest.js'\nimport { serializeStateOverride } from '../../utils/stateOverride.js'\nimport {\n  type AssertRequestErrorType,\n  type AssertRequestParameters,\n  assertRequest,\n} from '../../utils/transaction/assertRequest.js'\nimport {\n  type PrepareTransactionRequestParameters,\n  prepareTransactionRequest,\n} from '../wallet/prepareTransactionRequest.js'\nimport { getBalance } from './getBalance.js'\n\nexport type EstimateGasParameters<\n  chain extends Chain | undefined = Chain | undefined,\n> = UnionOmit<FormattedEstimateGas<chain>, 'from'> & {\n  account?: Account | Address | undefined\n  stateOverride?: StateOverride | undefined\n} & (\n    | {\n        /** The balance of the account at a block number. */\n        blockNumber?: bigint | undefined\n        blockTag?: undefined\n      }\n    | {\n        blockNumber?: undefined\n        /**\n         * The balance of the account at a block tag.\n         * @default 'latest'\n         */\n        blockTag?: BlockTag | undefined\n      }\n  )\ntype FormattedEstimateGas<chain extends Chain | undefined = Chain | undefined> =\n  FormattedTransactionRequest<chain>\n\nexport type EstimateGasReturnType = bigint\n\nexport type EstimateGasErrorType = GetEstimateGasErrorReturnType<\n  | ParseAccountErrorType\n  | NumberToHexErrorType\n  | RequestErrorType\n  | RecoverAuthorizationAddressErrorType\n  | AssertRequestErrorType\n>\n\n/**\n * Estimates the gas necessary to complete a transaction without submitting it to the network.\n *\n * - Docs: https://viem.sh/docs/actions/public/estimateGas\n * - JSON-RPC Methods: [`eth_estimateGas`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_estimategas)\n *\n * @param client - Client to use\n * @param parameters - {@link EstimateGasParameters}\n * @returns The gas estimate (in gas units). {@link EstimateGasReturnType}\n *\n * @example\n * import { createPublicClient, http, parseEther } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { estimateGas } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const gasEstimate = await estimateGas(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *   value: parseEther('1'),\n * })\n */\nexport async function estimateGas<\n  chain extends Chain | undefined,\n  account extends Account | undefined = undefined,\n>(\n  client: Client<Transport, chain, account>,\n  args: EstimateGasParameters<chain>,\n): Promise<EstimateGasReturnType> {\n  const { account: account_ = client.account } = args\n  const account = account_ ? parseAccount(account_) : undefined\n\n  try {\n    const {\n      accessList,\n      authorizationList,\n      blobs,\n      blobVersionedHashes,\n      blockNumber,\n      blockTag,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerBlobGas,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      value,\n      stateOverride,\n      ...rest\n    } = (await prepareTransactionRequest(client, {\n      ...args,\n      parameters:\n        // Some RPC Providers do not compute versioned hashes from blobs. We will need\n        // to compute them.\n        account?.type === 'local' ? undefined : ['blobVersionedHashes'],\n    } as PrepareTransactionRequestParameters)) as EstimateGasParameters\n\n    const blockNumberHex =\n      typeof blockNumber === 'bigint' ? numberToHex(blockNumber) : undefined\n    const block = blockNumberHex || blockTag\n\n    const rpcStateOverride = serializeStateOverride(stateOverride)\n\n    const to = await (async () => {\n      // If `to` exists on the parameters, use that.\n      if (rest.to) return rest.to\n\n      // If no `to` exists, and we are sending a EIP-7702 transaction, use the\n      // address of the first authorization in the list.\n      if (authorizationList && authorizationList.length > 0)\n        return await recoverAuthorizationAddress({\n          authorization: authorizationList[0],\n        }).catch(() => {\n          throw new BaseError(\n            '`to` is required. Could not infer from `authorizationList`',\n          )\n        })\n\n      // Otherwise, we are sending a deployment transaction.\n      return undefined\n    })()\n\n    assertRequest(args as AssertRequestParameters)\n\n    const chainFormat = client.chain?.formatters?.transactionRequest?.format\n    const format = chainFormat || formatTransactionRequest\n\n    const request = format({\n      // Pick out extra data that might exist on the chain's transaction request type.\n      ...extract(rest, { format: chainFormat }),\n      from: account?.address,\n      accessList,\n      authorizationList,\n      blobs,\n      blobVersionedHashes,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerBlobGas,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n    } as TransactionRequest)\n\n    function estimateGas_rpc(parameters: {\n      block: any\n      request: any\n      rpcStateOverride: any\n    }) {\n      const { block, request, rpcStateOverride } = parameters\n      return client.request({\n        method: 'eth_estimateGas',\n        params: rpcStateOverride\n          ? [\n              request,\n              block ?? client.experimental_blockTag ?? 'latest',\n              rpcStateOverride,\n            ]\n          : block\n            ? [request, block]\n            : [request],\n      })\n    }\n\n    let estimate = BigInt(\n      await estimateGas_rpc({ block, request, rpcStateOverride }),\n    )\n\n    // TODO(7702): Remove this once https://github.com/ethereum/execution-apis/issues/561 is resolved.\n    //       Authorization list schema is not implemented on JSON-RPC spec yet, so we need to\n    //       manually estimate the gas.\n    if (authorizationList) {\n      const value = await getBalance(client, { address: request.from })\n      const estimates = await Promise.all(\n        authorizationList.map(async (authorization) => {\n          const { address } = authorization\n          const estimate = await estimateGas_rpc({\n            block,\n            request: {\n              authorizationList: undefined,\n              data,\n              from: account?.address,\n              to: address,\n              value: numberToHex(value),\n            },\n            rpcStateOverride,\n          }).catch(() => 100_000n)\n          return 2n * BigInt(estimate)\n        }),\n      )\n      estimate += estimates.reduce((acc, curr) => acc + curr, 0n)\n    }\n\n    return estimate\n  } catch (err) {\n    throw getEstimateGasError(err as BaseError, {\n      ...args,\n      account,\n      chain: client.chain,\n    })\n  }\n}\n","import type { Account } from '../../accounts/types.js'\nimport type { EstimateGasParameters } from '../../actions/public/estimateGas.js'\nimport type { BaseError } from '../../errors/base.js'\nimport {\n  EstimateGasExecutionError,\n  type EstimateGasExecutionErrorType,\n} from '../../errors/estimateGas.js'\nimport { UnknownNodeError } from '../../errors/node.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\n\nimport {\n  type GetNodeErrorParameters,\n  type GetNodeErrorReturnType,\n  getNodeError,\n} from './getNodeError.js'\n\nexport type GetEstimateGasErrorReturnType<cause = ErrorType> = Omit<\n  EstimateGasExecutionErrorType,\n  'cause'\n> & { cause: cause | GetNodeErrorReturnType }\n\nexport function getEstimateGasError<err extends ErrorType<string>>(\n  err: err,\n  {\n    docsPath,\n    ...args\n  }: Omit<EstimateGasParameters, 'account'> & {\n    account?: Account | undefined\n    chain?: Chain | undefined\n    docsPath?: string | undefined\n  },\n): GetEstimateGasErrorReturnType<err> {\n  const cause = (() => {\n    const cause = getNodeError(\n      err as {} as BaseError,\n      args as GetNodeErrorParameters,\n    )\n    if (cause instanceof UnknownNodeError) return err as {} as BaseError\n    return cause\n  })()\n  return new EstimateGasExecutionError(cause, {\n    docsPath,\n    ...args,\n  }) as GetEstimateGasErrorReturnType<err>\n}\n","import type { ErrorType } from '../../errors/utils.js'\n\n/** @internal */\nexport const promiseCache = /*#__PURE__*/ new Map()\n/** @internal */\nexport const responseCache = /*#__PURE__*/ new Map()\n\nexport type GetCacheErrorType = ErrorType\n\nexport function getCache<data>(cacheKey: string) {\n  const buildCache = <data>(cacheKey: string, cache: Map<string, data>) => ({\n    clear: () => cache.delete(cacheKey),\n    get: () => cache.get(cacheKey),\n    set: (data: data) => cache.set(cacheKey, data),\n  })\n\n  const promise = buildCache<Promise<data>>(cacheKey, promiseCache)\n  const response = buildCache<{ created: Date; data: data }>(\n    cacheKey,\n    responseCache,\n  )\n\n  return {\n    clear: () => {\n      promise.clear()\n      response.clear()\n    },\n    promise,\n    response,\n  }\n}\n\ntype WithCacheParameters = {\n  /** The key to cache the data against. */\n  cacheKey: string\n  /** The time that cached data will remain in memory. Default: Infinity (no expiry) */\n  cacheTime?: number | undefined\n}\n\n/**\n * @description Returns the result of a given promise, and caches the result for\n * subsequent invocations against a provided cache key.\n */\nexport async function withCache<data>(\n  fn: () => Promise<data>,\n  { cacheKey, cacheTime = Number.POSITIVE_INFINITY }: WithCacheParameters,\n) {\n  const cache = getCache<data>(cacheKey)\n\n  // If a response exists in the cache, and it's not expired, return it\n  // and do not invoke the promise.\n  // If the max age is 0, the cache is disabled.\n  const response = cache.response.get()\n  if (response && cacheTime > 0) {\n    const age = Date.now() - response.created.getTime()\n    if (age < cacheTime) return response.data\n  }\n\n  let promise = cache.promise.get()\n  if (!promise) {\n    promise = fn()\n\n    // Store the promise in the cache so that subsequent invocations\n    // will wait for the same promise to resolve (deduping).\n    cache.promise.set(promise)\n  }\n\n  try {\n    const data = await promise\n\n    // Store the response in the cache so that subsequent invocations\n    // will return the same response.\n    cache.response.set({ created: new Date(), data })\n\n    return data\n  } finally {\n    // Clear the promise cache so that subsequent invocations will\n    // invoke the promise again.\n    cache.promise.clear()\n  }\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type GetCacheErrorType,\n  getCache,\n  withCache,\n} from '../../utils/promise/withCache.js'\n\nexport type GetBlockNumberParameters = {\n  /** Time (in ms) that cached block number will remain in memory. */\n  cacheTime?: number | undefined\n}\n\nexport type GetBlockNumberReturnType = bigint\n\nexport type GetBlockNumberErrorType = RequestErrorType | ErrorType\n\nconst cacheKey = (id: string) => `blockNumber.${id}`\n\n/** @internal */\nexport type GetBlockNumberCacheErrorType = GetCacheErrorType | ErrorType\n\n/** @internal */\nexport function getBlockNumberCache(id: string) {\n  return getCache(cacheKey(id))\n}\n\n/**\n * Returns the number of the most recent block seen.\n *\n * - Docs: https://viem.sh/docs/actions/public/getBlockNumber\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks_fetching-blocks\n * - JSON-RPC Methods: [`eth_blockNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blocknumber)\n *\n * @param client - Client to use\n * @param parameters - {@link GetBlockNumberParameters}\n * @returns The number of the block. {@link GetBlockNumberReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBlockNumber } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const blockNumber = await getBlockNumber(client)\n * // 69420n\n */\nexport async function getBlockNumber<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  { cacheTime = client.cacheTime }: GetBlockNumberParameters = {},\n): Promise<GetBlockNumberReturnType> {\n  const blockNumberHex = await withCache(\n    () =>\n      client.request({\n        method: 'eth_blockNumber',\n      }),\n    { cacheKey: cacheKey(client.uid), cacheTime },\n  )\n  return BigInt(blockNumberHex)\n}\n","import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type GetCodeParameters = {\n  address: Address\n} & (\n  | {\n      blockNumber?: undefined\n      blockTag?: BlockTag | undefined\n    }\n  | {\n      blockNumber?: bigint | undefined\n      blockTag?: undefined\n    }\n)\n\nexport type GetCodeReturnType = Hex | undefined\n\nexport type GetCodeErrorType =\n  | NumberToHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Retrieves the bytecode at an address.\n *\n * - Docs: https://viem.sh/docs/contract/getCode\n * - JSON-RPC Methods: [`eth_getCode`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getcode)\n *\n * @param client - Client to use\n * @param parameters - {@link GetCodeParameters}\n * @returns The contract's bytecode. {@link GetCodeReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getCode } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const code = await getCode(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n * })\n */\nexport async function getCode<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  { address, blockNumber, blockTag = 'latest' }: GetCodeParameters,\n): Promise<GetCodeReturnType> {\n  const blockNumberHex =\n    blockNumber !== undefined ? numberToHex(blockNumber) : undefined\n  const hex = await client.request(\n    {\n      method: 'eth_getCode',\n      params: [address, blockNumberHex || blockTag],\n    },\n    { dedupe: Boolean(blockNumberHex) },\n  )\n  if (hex === '0x') return undefined\n  return hex\n}\n","import type { Abi, AbiParameter } from 'abitype'\n\nimport {\n  AbiDecodingDataSizeTooSmallError,\n  type AbiDecodingDataSizeTooSmallErrorType,\n  AbiEventSignatureEmptyTopicsError,\n  type AbiEventSignatureEmptyTopicsErrorType,\n  AbiEventSignatureNotFoundError,\n  type AbiEventSignatureNotFoundErrorType,\n  DecodeLogDataMismatch,\n  type DecodeLogDataMismatchErrorType,\n  DecodeLogTopicsMismatch,\n  type DecodeLogTopicsMismatchErrorType,\n} from '../../errors/abi.js'\nimport { PositionOutOfBoundsError } from '../../errors/cursor.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  ContractEventArgsFromTopics,\n  ContractEventName,\n  EventDefinition,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type {\n  IsNarrowable,\n  Prettify,\n  UnionEvaluate,\n} from '../../types/utils.js'\nimport { size } from '../data/size.js'\nimport {\n  type ToEventSelectorErrorType,\n  toEventSelector,\n} from '../hash/toEventSelector.js'\nimport {\n  type DecodeAbiParametersErrorType,\n  decodeAbiParameters,\n} from './decodeAbiParameters.js'\nimport { type FormatAbiItemErrorType, formatAbiItem } from './formatAbiItem.js'\n\nexport type DecodeEventLogParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  eventName extends ContractEventName<abi> | undefined = ContractEventName<abi>,\n  topics extends Hex[] = Hex[],\n  data extends Hex | undefined = undefined,\n  strict extends boolean = true,\n> = {\n  abi: abi\n  data?: data | undefined\n  eventName?: eventName | ContractEventName<abi> | undefined\n  strict?: strict | boolean | undefined\n  topics: [signature: Hex, ...args: topics] | []\n}\n\nexport type DecodeEventLogReturnType<\n  abi extends Abi | readonly unknown[] = Abi,\n  eventName extends ContractEventName<abi> | undefined = ContractEventName<abi>,\n  topics extends Hex[] = Hex[],\n  data extends Hex | undefined = undefined,\n  strict extends boolean = true,\n  ///\n  allEventNames extends\n    ContractEventName<abi> = eventName extends ContractEventName<abi>\n    ? eventName\n    : ContractEventName<abi>,\n> = IsNarrowable<abi, Abi> extends true\n  ? {\n      [name in allEventNames]: Prettify<\n        {\n          eventName: name\n        } & UnionEvaluate<\n          ContractEventArgsFromTopics<abi, name, strict> extends infer allArgs\n            ? topics extends readonly []\n              ? data extends undefined\n                ? { args?: undefined }\n                : { args?: allArgs | undefined }\n              : { args: allArgs }\n            : never\n        >\n      >\n    }[allEventNames]\n  : {\n      eventName: eventName\n      args: readonly unknown[] | undefined\n    }\n\nexport type DecodeEventLogErrorType =\n  | AbiDecodingDataSizeTooSmallErrorType\n  | AbiEventSignatureEmptyTopicsErrorType\n  | AbiEventSignatureNotFoundErrorType\n  | DecodeAbiParametersErrorType\n  | DecodeLogTopicsMismatchErrorType\n  | DecodeLogDataMismatchErrorType\n  | FormatAbiItemErrorType\n  | ToEventSelectorErrorType\n  | ErrorType\n\nconst docsPath = '/docs/contract/decodeEventLog'\n\nexport function decodeEventLog<\n  const abi extends Abi | readonly unknown[],\n  eventName extends ContractEventName<abi> | undefined = undefined,\n  topics extends Hex[] = Hex[],\n  data extends Hex | undefined = undefined,\n  strict extends boolean = true,\n>(\n  parameters: DecodeEventLogParameters<abi, eventName, topics, data, strict>,\n): DecodeEventLogReturnType<abi, eventName, topics, data, strict> {\n  const {\n    abi,\n    data,\n    strict: strict_,\n    topics,\n  } = parameters as DecodeEventLogParameters\n\n  const strict = strict_ ?? true\n  const [signature, ...argTopics] = topics\n  if (!signature) throw new AbiEventSignatureEmptyTopicsError({ docsPath })\n\n  const abiItem = abi.find(\n    (x) =>\n      x.type === 'event' &&\n      signature === toEventSelector(formatAbiItem(x) as EventDefinition),\n  )\n\n  if (!(abiItem && 'name' in abiItem) || abiItem.type !== 'event')\n    throw new AbiEventSignatureNotFoundError(signature, { docsPath })\n\n  const { name, inputs } = abiItem\n  const isUnnamed = inputs?.some((x) => !('name' in x && x.name))\n\n  const args: any = isUnnamed ? [] : {}\n\n  // Decode topics (indexed args).\n  const indexedInputs = inputs\n    .map((x, i) => [x, i] as const)\n    .filter(([x]) => 'indexed' in x && x.indexed)\n  for (let i = 0; i < indexedInputs.length; i++) {\n    const [param, argIndex] = indexedInputs[i]\n    const topic = argTopics[i]\n    if (!topic)\n      throw new DecodeLogTopicsMismatch({\n        abiItem,\n        param: param as AbiParameter & { indexed: boolean },\n      })\n    args[isUnnamed ? argIndex : param.name || argIndex] = decodeTopic({\n      param,\n      value: topic,\n    })\n  }\n\n  // Decode data (non-indexed args).\n  const nonIndexedInputs = inputs.filter((x) => !('indexed' in x && x.indexed))\n  if (nonIndexedInputs.length > 0) {\n    if (data && data !== '0x') {\n      try {\n        const decodedData = decodeAbiParameters(nonIndexedInputs, data)\n        if (decodedData) {\n          if (isUnnamed)\n            for (let i = 0; i < inputs.length; i++)\n              args[i] = args[i] ?? decodedData.shift()\n          else\n            for (let i = 0; i < nonIndexedInputs.length; i++)\n              args[nonIndexedInputs[i].name!] = decodedData[i]\n        }\n      } catch (err) {\n        if (strict) {\n          if (\n            err instanceof AbiDecodingDataSizeTooSmallError ||\n            err instanceof PositionOutOfBoundsError\n          )\n            throw new DecodeLogDataMismatch({\n              abiItem,\n              data: data,\n              params: nonIndexedInputs,\n              size: size(data),\n            })\n          throw err\n        }\n      }\n    } else if (strict) {\n      throw new DecodeLogDataMismatch({\n        abiItem,\n        data: '0x',\n        params: nonIndexedInputs,\n        size: 0,\n      })\n    }\n  }\n\n  return {\n    eventName: name,\n    args: Object.values(args).length > 0 ? args : undefined,\n  } as unknown as DecodeEventLogReturnType<abi, eventName, topics, data, strict>\n}\n\nfunction decodeTopic({ param, value }: { param: AbiParameter; value: Hex }) {\n  if (\n    param.type === 'string' ||\n    param.type === 'bytes' ||\n    param.type === 'tuple' ||\n    param.type.match(/^(.*)\\[(\\d+)?\\]$/)\n  )\n    return value\n  const decodedArg = decodeAbiParameters([param], value) || []\n  return decodedArg[0]\n}\n","// TODO(v3): checksum address.\n\nimport type { Abi, AbiEvent, AbiEventParameter, Address } from 'abitype'\nimport {\n  AbiEventSignatureNotFoundError,\n  DecodeLogDataMismatch,\n  DecodeLogTopicsMismatch,\n} from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ContractEventName, GetEventArgs } from '../../types/contract.js'\nimport type { Log } from '../../types/log.js'\nimport type { RpcLog } from '../../types/rpc.js'\nimport { isAddressEqual } from '../address/isAddressEqual.js'\nimport { toBytes } from '../encoding/toBytes.js'\nimport { keccak256 } from '../hash/keccak256.js'\nimport { toEventSelector } from '../hash/toEventSelector.js'\nimport {\n  type DecodeEventLogErrorType,\n  decodeEventLog,\n} from './decodeEventLog.js'\n\nexport type ParseEventLogsParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  eventName extends\n    | ContractEventName<abi>\n    | ContractEventName<abi>[]\n    | undefined = ContractEventName<abi>,\n  strict extends boolean | undefined = boolean | undefined,\n  ///\n  allArgs = GetEventArgs<\n    abi,\n    eventName extends ContractEventName<abi>\n      ? eventName\n      : ContractEventName<abi>,\n    {\n      EnableUnion: true\n      IndexedOnly: false\n      Required: false\n    }\n  >,\n> = {\n  /** Contract ABI. */\n  abi: abi\n  /** Arguments for the event. */\n  args?: allArgs | undefined\n  /** Contract event. */\n  eventName?:\n    | eventName\n    | ContractEventName<abi>\n    | ContractEventName<abi>[]\n    | undefined\n  /** List of logs. */\n  logs: (Log | RpcLog)[]\n  strict?: strict | boolean | undefined\n}\n\nexport type ParseEventLogsReturnType<\n  abi extends Abi | readonly unknown[] = Abi,\n  eventName extends\n    | ContractEventName<abi>\n    | ContractEventName<abi>[]\n    | undefined = ContractEventName<abi>,\n  strict extends boolean | undefined = boolean | undefined,\n  ///\n  derivedEventName extends\n    | ContractEventName<abi>\n    | undefined = eventName extends ContractEventName<abi>[]\n    ? eventName[number]\n    : eventName,\n> = Log<bigint, number, false, undefined, strict, abi, derivedEventName>[]\n\nexport type ParseEventLogsErrorType = DecodeEventLogErrorType | ErrorType\n\n/**\n * Extracts & decodes logs matching the provided signature(s) (`abi` + optional `eventName`)\n * from a set of opaque logs.\n *\n * @param parameters - {@link ParseEventLogsParameters}\n * @returns The logs. {@link ParseEventLogsReturnType}\n *\n * @example\n * import { createClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { parseEventLogs } from 'viem/op-stack'\n *\n * const client = createClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const receipt = await getTransactionReceipt(client, {\n *   hash: '0xec23b2ba4bc59ba61554507c1b1bc91649e6586eb2dd00c728e8ed0db8bb37ea',\n * })\n *\n * const logs = parseEventLogs({ logs: receipt.logs })\n * // [{ args: { ... }, eventName: 'TransactionDeposited', ... }, ...]\n */\nexport function parseEventLogs<\n  abi extends Abi | readonly unknown[],\n  strict extends boolean | undefined = true,\n  eventName extends\n    | ContractEventName<abi>\n    | ContractEventName<abi>[]\n    | undefined = undefined,\n>(\n  parameters: ParseEventLogsParameters<abi, eventName, strict>,\n): ParseEventLogsReturnType<abi, eventName, strict> {\n  const { abi, args, logs, strict = true } = parameters\n\n  const eventName = (() => {\n    if (!parameters.eventName) return undefined\n    if (Array.isArray(parameters.eventName)) return parameters.eventName\n    return [parameters.eventName as string]\n  })()\n\n  return logs\n    .map((log) => {\n      try {\n        const abiItem = (abi as Abi).find(\n          (abiItem) =>\n            abiItem.type === 'event' &&\n            log.topics[0] === toEventSelector(abiItem),\n        ) as AbiEvent\n        if (!abiItem) return null\n\n        const event = decodeEventLog({\n          ...log,\n          abi: [abiItem],\n          strict,\n        })\n\n        // Check that the decoded event name matches the provided event name.\n        if (eventName && !eventName.includes(event.eventName)) return null\n\n        // Check that the decoded event args match the provided args.\n        if (\n          !includesArgs({\n            args: event.args,\n            inputs: abiItem.inputs,\n            matchArgs: args,\n          })\n        )\n          return null\n\n        return { ...event, ...log }\n      } catch (err) {\n        let eventName: string | undefined\n        let isUnnamed: boolean | undefined\n\n        if (err instanceof AbiEventSignatureNotFoundError) return null\n        if (\n          err instanceof DecodeLogDataMismatch ||\n          err instanceof DecodeLogTopicsMismatch\n        ) {\n          // If strict mode is on, and log data/topics do not match event definition, skip.\n          if (strict) return null\n          eventName = err.abiItem.name\n          isUnnamed = err.abiItem.inputs?.some((x) => !('name' in x && x.name))\n        }\n\n        // Set args to empty if there is an error decoding (e.g. indexed/non-indexed params mismatch).\n        return { ...log, args: isUnnamed ? [] : {}, eventName }\n      }\n    })\n    .filter(Boolean) as unknown as ParseEventLogsReturnType<\n    abi,\n    eventName,\n    strict\n  >\n}\n\nfunction includesArgs(parameters: {\n  args: unknown\n  inputs: AbiEvent['inputs']\n  matchArgs: unknown\n}) {\n  const { args, inputs, matchArgs } = parameters\n\n  if (!matchArgs) return true\n  if (!args) return false\n\n  function isEqual(input: AbiEventParameter, value: unknown, arg: unknown) {\n    try {\n      if (input.type === 'address')\n        return isAddressEqual(value as Address, arg as Address)\n      if (input.type === 'string' || input.type === 'bytes')\n        return keccak256(toBytes(value as string)) === arg\n      return value === arg\n    } catch {\n      return false\n    }\n  }\n\n  if (Array.isArray(args) && Array.isArray(matchArgs)) {\n    return matchArgs.every((value, index) => {\n      if (value === null || value === undefined) return true\n      const input = inputs[index]\n      if (!input) return false\n      const value_ = Array.isArray(value) ? value : [value]\n      return value_.some((value) => isEqual(input, value, args[index]))\n    })\n  }\n\n  if (\n    typeof args === 'object' &&\n    !Array.isArray(args) &&\n    typeof matchArgs === 'object' &&\n    !Array.isArray(matchArgs)\n  )\n    return Object.entries(matchArgs).every(([key, value]) => {\n      if (value === null || value === undefined) return true\n      const input = inputs.find((input) => input.name === key)\n      if (!input) return false\n      const value_ = Array.isArray(value) ? value : [value]\n      return value_.some((value) =>\n        isEqual(input, value, (args as Record<string, unknown>)[key]),\n      )\n    })\n\n  return false\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { Log } from '../../types/log.js'\nimport type { RpcLog } from '../../types/rpc.js'\nimport type { ExactPartial } from '../../types/utils.js'\n\nexport type FormatLogErrorType = ErrorType\n\nexport function formatLog(\n  log: ExactPartial<RpcLog>,\n  {\n    args,\n    eventName,\n  }: { args?: unknown | undefined; eventName?: string | undefined } = {},\n) {\n  return {\n    ...log,\n    blockHash: log.blockHash ? log.blockHash : null,\n    blockNumber: log.blockNumber ? BigInt(log.blockNumber) : null,\n    logIndex: log.logIndex ? Number(log.logIndex) : null,\n    transactionHash: log.transactionHash ? log.transactionHash : null,\n    transactionIndex: log.transactionIndex\n      ? Number(log.transactionIndex)\n      : null,\n    ...(eventName ? { args, eventName } : {}),\n  } as Log\n}\n","import type { AbiEvent, Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  MaybeAbiEventName,\n  MaybeExtractEventArgsFromAbi,\n} from '../../types/contract.js'\nimport type { Log } from '../../types/log.js'\nimport type { Hash, LogTopic } from '../../types/misc.js'\nimport type { RpcLog } from '../../types/rpc.js'\nimport type { DecodeEventLogErrorType } from '../../utils/abi/decodeEventLog.js'\nimport {\n  type EncodeEventTopicsErrorType,\n  type EncodeEventTopicsParameters,\n  encodeEventTopics,\n} from '../../utils/abi/encodeEventTopics.js'\nimport { parseEventLogs } from '../../utils/abi/parseEventLogs.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport {\n  type FormatLogErrorType,\n  formatLog,\n} from '../../utils/formatters/log.js'\n\nexport type GetLogsParameters<\n  abiEvent extends AbiEvent | undefined = undefined,\n  abiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  //\n  _eventName extends string | undefined = MaybeAbiEventName<abiEvent>,\n> = {\n  /** Address or list of addresses from which logs originated */\n  address?: Address | Address[] | undefined\n} & (\n  | {\n      event: abiEvent\n      events?: undefined\n      args?: MaybeExtractEventArgsFromAbi<abiEvents, _eventName> | undefined\n      /**\n       * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n       * @default false\n       */\n      strict?: strict | undefined\n    }\n  | {\n      event?: undefined\n      events: abiEvents\n      args?: undefined\n      /**\n       * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n       * @default false\n       */\n      strict?: strict | undefined\n    }\n  | {\n      event?: undefined\n      events?: undefined\n      args?: undefined\n      strict?: undefined\n    }\n) &\n  (\n    | {\n        /** Block number or tag after which to include logs */\n        fromBlock?: fromBlock | BlockNumber | BlockTag | undefined\n        /** Block number or tag before which to include logs */\n        toBlock?: toBlock | BlockNumber | BlockTag | undefined\n        blockHash?: undefined\n      }\n    | {\n        fromBlock?: undefined\n        toBlock?: undefined\n        /** Hash of block to include logs from */\n        blockHash?: Hash | undefined\n      }\n  )\n\nexport type GetLogsReturnType<\n  abiEvent extends AbiEvent | undefined = undefined,\n  abiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  //\n  _eventName extends string | undefined = MaybeAbiEventName<abiEvent>,\n  _pending extends boolean =\n    | (fromBlock extends 'pending' ? true : false)\n    | (toBlock extends 'pending' ? true : false),\n> = Log<bigint, number, _pending, abiEvent, strict, abiEvents, _eventName>[]\n\nexport type GetLogsErrorType =\n  | DecodeEventLogErrorType\n  | EncodeEventTopicsErrorType\n  | FormatLogErrorType\n  | NumberToHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns a list of event logs matching the provided parameters.\n *\n * - Docs: https://viem.sh/docs/actions/public/getLogs\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/logs_event-logs\n * - JSON-RPC Methods: [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs)\n *\n * @param client - Client to use\n * @param parameters - {@link GetLogsParameters}\n * @returns A list of event logs. {@link GetLogsReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbiItem } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getLogs } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const logs = await getLogs(client)\n */\nexport async function getLogs<\n  chain extends Chain | undefined,\n  const abiEvent extends AbiEvent | undefined = undefined,\n  const abiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n>(\n  client: Client<Transport, chain>,\n  {\n    address,\n    blockHash,\n    fromBlock,\n    toBlock,\n    event,\n    events: events_,\n    args,\n    strict: strict_,\n  }: GetLogsParameters<abiEvent, abiEvents, strict, fromBlock, toBlock> = {},\n): Promise<GetLogsReturnType<abiEvent, abiEvents, strict, fromBlock, toBlock>> {\n  const strict = strict_ ?? false\n  const events = events_ ?? (event ? [event] : undefined)\n\n  let topics: LogTopic[] = []\n  if (events) {\n    const encoded = (events as AbiEvent[]).flatMap((event) =>\n      encodeEventTopics({\n        abi: [event],\n        eventName: (event as AbiEvent).name,\n        args: events_ ? undefined : args,\n      } as EncodeEventTopicsParameters),\n    )\n    // TODO: Clean up type casting\n    topics = [encoded as LogTopic]\n    if (event) topics = topics[0] as LogTopic[]\n  }\n\n  let logs: RpcLog[]\n  if (blockHash) {\n    logs = await client.request({\n      method: 'eth_getLogs',\n      params: [{ address, topics, blockHash }],\n    })\n  } else {\n    logs = await client.request({\n      method: 'eth_getLogs',\n      params: [\n        {\n          address,\n          topics,\n          fromBlock:\n            typeof fromBlock === 'bigint' ? numberToHex(fromBlock) : fromBlock,\n          toBlock: typeof toBlock === 'bigint' ? numberToHex(toBlock) : toBlock,\n        },\n      ],\n    })\n  }\n\n  const formattedLogs = logs.map((log) => formatLog(log))\n  if (!events)\n    return formattedLogs as GetLogsReturnType<\n      abiEvent,\n      abiEvents,\n      strict,\n      fromBlock,\n      toBlock\n    >\n  return parseEventLogs({\n    abi: events,\n    args: args as any,\n    logs: formattedLogs,\n    strict,\n  }) as unknown as GetLogsReturnType<\n    abiEvent,\n    abiEvents,\n    strict,\n    fromBlock,\n    toBlock\n  >\n}\n","import type { Abi, Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ContractEventArgs,\n  ContractEventName,\n} from '../../types/contract.js'\nimport type { Log } from '../../types/log.js'\nimport type { Hash } from '../../types/misc.js'\nimport {\n  type GetAbiItemErrorType,\n  type GetAbiItemParameters,\n  getAbiItem,\n} from '../../utils/abi/getAbiItem.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type GetLogsErrorType,\n  type GetLogsParameters,\n  getLogs,\n} from './getLogs.js'\n\nexport type GetContractEventsParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  eventName extends ContractEventName<abi> | undefined =\n    | ContractEventName<abi>\n    | undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n> = {\n  /** The address of the contract. */\n  address?: Address | Address[] | undefined\n  /** Contract ABI. */\n  abi: abi\n  args?:\n    | ContractEventArgs<\n        abi,\n        eventName extends ContractEventName<abi>\n          ? eventName\n          : ContractEventName<abi>\n      >\n    | undefined\n  /** Contract event. */\n  eventName?: eventName | ContractEventName<abi> | undefined\n  /**\n   * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n   * @default false\n   */\n  strict?: strict | boolean | undefined\n} & (\n  | {\n      /** Block number or tag after which to include logs */\n      fromBlock?: fromBlock | BlockNumber | BlockTag | undefined\n      /** Block number or tag before which to include logs */\n      toBlock?: toBlock | BlockNumber | BlockTag | undefined\n      blockHash?: undefined\n    }\n  | {\n      fromBlock?: undefined\n      toBlock?: undefined\n      /** Hash of block to include logs from */\n      blockHash?: Hash | undefined\n    }\n)\n\nexport type GetContractEventsReturnType<\n  abi extends Abi | readonly unknown[] = readonly unknown[],\n  eventName extends ContractEventName<abi> | undefined =\n    | ContractEventName<abi>\n    | undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  ///\n  isPending extends boolean =\n    | (fromBlock extends 'pending' ? true : false)\n    | (toBlock extends 'pending' ? true : false),\n> = Log<bigint, number, isPending, undefined, strict, abi, eventName>[]\n\nexport type GetContractEventsErrorType =\n  | GetAbiItemErrorType\n  | GetLogsErrorType\n  | ErrorType\n\n/**\n * Returns a list of event logs emitted by a contract.\n *\n * - Docs: https://viem.sh/docs/contract/getContractEvents#getcontractevents\n * - JSON-RPC Methods: [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs)\n *\n * @param client - Client to use\n * @param parameters - {@link GetContractEventsParameters}\n * @returns A list of event logs. {@link GetContractEventsReturnType}\n *\n * @example\n * import { createClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getContractEvents } from 'viem/public'\n * import { wagmiAbi } from './abi'\n *\n * const client = createClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const logs = await getContractEvents(client, {\n *  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *  abi: wagmiAbi,\n *  eventName: 'Transfer'\n * })\n */\nexport async function getContractEvents<\n  chain extends Chain | undefined,\n  const abi extends Abi | readonly unknown[],\n  eventName extends ContractEventName<abi> | undefined = undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n>(\n  client: Client<Transport, chain>,\n  parameters: GetContractEventsParameters<\n    abi,\n    eventName,\n    strict,\n    fromBlock,\n    toBlock\n  >,\n): Promise<\n  GetContractEventsReturnType<abi, eventName, strict, fromBlock, toBlock>\n> {\n  const {\n    abi,\n    address,\n    args,\n    blockHash,\n    eventName,\n    fromBlock,\n    toBlock,\n    strict,\n  } = parameters\n  const event = eventName\n    ? getAbiItem({ abi, name: eventName } as GetAbiItemParameters)\n    : undefined\n  const events = !event\n    ? (abi as Abi).filter((x) => x.type === 'event')\n    : undefined\n  return getAction(\n    client,\n    getLogs,\n    'getLogs',\n  )({\n    address,\n    args,\n    blockHash,\n    event,\n    events,\n    fromBlock,\n    toBlock,\n    strict,\n  } as {} as GetLogsParameters) as unknown as GetContractEventsReturnType<\n    abi,\n    eventName,\n    strict,\n    fromBlock,\n    toBlock\n  >\n}\n","import type { Address } from 'abitype'\nimport { BaseError } from './base.js'\n\nexport type Eip712DomainNotFoundErrorType = Eip712DomainNotFoundError & {\n  name: 'Eip712DomainNotFoundError'\n}\nexport class Eip712DomainNotFoundError extends BaseError {\n  constructor({ address }: { address: Address }) {\n    super(`No EIP-712 domain found on contract \"${address}\".`, {\n      metaMessages: [\n        'Ensure that:',\n        `- The contract is deployed at the address \"${address}\".`,\n        '- `eip712Domain()` function exists on the contract.',\n        '- `eip712Domain()` function matches signature to ERC-5267 specification.',\n      ],\n      name: 'Eip712DomainNotFoundError',\n    })\n  }\n}\n","import type { Address, TypedDataDomain } from 'abitype'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  Eip712DomainNotFoundError,\n  type Eip712DomainNotFoundErrorType,\n} from '../../errors/eip712.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { RequiredBy } from '../../types/utils.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type ReadContractErrorType,\n  type ReadContractParameters,\n  readContract,\n} from './readContract.js'\n\nexport type GetEip712DomainParameters = {\n  address: Address\n} & Pick<ReadContractParameters, 'factory' | 'factoryData'>\n\nexport type GetEip712DomainReturnType = {\n  domain: RequiredBy<\n    TypedDataDomain,\n    'chainId' | 'name' | 'verifyingContract' | 'salt' | 'version'\n  >\n  fields: Hex\n  extensions: readonly bigint[]\n}\n\nexport type GetEip712DomainErrorType =\n  | Eip712DomainNotFoundErrorType\n  | ReadContractErrorType\n  | ErrorType\n\n/**\n * Reads the EIP-712 domain from a contract, based on the ERC-5267 specification.\n *\n * @param client - A {@link Client} instance.\n * @param parameters - The parameters of the action. {@link GetEip712DomainParameters}\n * @returns The EIP-712 domain, fields, and extensions. {@link GetEip712DomainReturnType}\n *\n * @example\n * ```ts\n * import { createPublicClient, http, getEip712Domain } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const domain = await getEip712Domain(client, {\n *   address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n * })\n * // {\n * //   domain: {\n * //     name: 'ExampleContract',\n * //     version: '1',\n * //     chainId: 1,\n * //     verifyingContract: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n * //   },\n * //   fields: '0x0f',\n * //   extensions: [],\n * // }\n * ```\n */\nexport async function getEip712Domain(\n  client: Client<Transport>,\n  parameters: GetEip712DomainParameters,\n): Promise<GetEip712DomainReturnType> {\n  const { address, factory, factoryData } = parameters\n\n  try {\n    const [\n      fields,\n      name,\n      version,\n      chainId,\n      verifyingContract,\n      salt,\n      extensions,\n    ] = await getAction(\n      client,\n      readContract,\n      'readContract',\n    )({\n      abi,\n      address,\n      functionName: 'eip712Domain',\n      factory,\n      factoryData,\n    })\n\n    return {\n      domain: {\n        name,\n        version,\n        chainId: Number(chainId),\n        verifyingContract,\n        salt,\n      },\n      extensions,\n      fields,\n    }\n  } catch (e) {\n    const error = e as ReadContractErrorType\n    if (\n      error.name === 'ContractFunctionExecutionError' &&\n      error.cause.name === 'ContractFunctionZeroDataError'\n    ) {\n      throw new Eip712DomainNotFoundError({ address })\n    }\n    throw error\n  }\n}\n\nconst abi = [\n  {\n    inputs: [],\n    name: 'eip712Domain',\n    outputs: [\n      { name: 'fields', type: 'bytes1' },\n      { name: 'name', type: 'string' },\n      { name: 'version', type: 'string' },\n      { name: 'chainId', type: 'uint256' },\n      { name: 'verifyingContract', type: 'address' },\n      { name: 'salt', type: 'bytes32' },\n      { name: 'extensions', type: 'uint256[]' },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n] as const\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { FeeHistory } from '../../types/fee.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport {\n  type FormatFeeHistoryErrorType,\n  formatFeeHistory,\n} from '../../utils/formatters/feeHistory.js'\n\nexport type GetFeeHistoryParameters = {\n  /**\n   * Number of blocks in the requested range. Between 1 and 1024 blocks can be requested in a single query. Less than requested may be returned if not all blocks are available.\n   */\n  blockCount: number\n  /**\n   * A monotonically increasing list of percentile values to sample from each block's effective priority fees per gas in ascending order, weighted by gas used.\n   */\n  rewardPercentiles: number[]\n} & (\n  | {\n      blockNumber?: undefined\n      /**\n       * Highest number block of the requested range.\n       * @default 'latest'\n       */\n      blockTag?: BlockTag | undefined\n    }\n  | {\n      /** Highest number block of the requested range. */\n      blockNumber?: bigint | undefined\n      blockTag?: undefined\n    }\n)\nexport type GetFeeHistoryReturnType = FeeHistory\n\nexport type GetFeeHistoryErrorType =\n  | NumberToHexErrorType\n  | RequestErrorType\n  | FormatFeeHistoryErrorType\n\n/**\n * Returns a collection of historical gas information.\n *\n * - Docs: https://viem.sh/docs/actions/public/getFeeHistory\n * - JSON-RPC Methods: [`eth_feeHistory`](https://docs.alchemy.com/reference/eth-feehistory)\n *\n * @param client - Client to use\n * @param parameters - {@link GetFeeHistoryParameters}\n * @returns The gas estimate (in wei). {@link GetFeeHistoryReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getFeeHistory } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const feeHistory = await getFeeHistory(client, {\n *   blockCount: 4,\n *   rewardPercentiles: [25, 75],\n * })\n */\nexport async function getFeeHistory<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  {\n    blockCount,\n    blockNumber,\n    blockTag = 'latest',\n    rewardPercentiles,\n  }: GetFeeHistoryParameters,\n): Promise<GetFeeHistoryReturnType> {\n  const blockNumberHex =\n    typeof blockNumber === 'bigint' ? numberToHex(blockNumber) : undefined\n  const feeHistory = await client.request(\n    {\n      method: 'eth_feeHistory',\n      params: [\n        numberToHex(blockCount),\n        blockNumberHex || blockTag,\n        rewardPercentiles,\n      ],\n    },\n    { dedupe: Boolean(blockNumberHex) },\n  )\n  return formatFeeHistory(feeHistory)\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { FeeHistory } from '../../types/fee.js'\nimport type { RpcFeeHistory } from '../../types/rpc.js'\n\nexport type FormatFeeHistoryErrorType = ErrorType\n\nexport function formatFeeHistory(feeHistory: RpcFeeHistory): FeeHistory {\n  return {\n    baseFeePerGas: feeHistory.baseFeePerGas.map((value) => BigInt(value)),\n    gasUsedRatio: feeHistory.gasUsedRatio,\n    oldestBlock: BigInt(feeHistory.oldestBlock),\n    reward: feeHistory.reward?.map((reward) =>\n      reward.map((value) => BigInt(value)),\n    ),\n  }\n}\n","import type { Abi, AbiEvent, ExtractAbiEvent } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { RpcLog } from '../../index.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Filter, FilterType } from '../../types/filter.js'\nimport type { Log } from '../../types/log.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { DecodeEventLogErrorType } from '../../utils/abi/decodeEventLog.js'\nimport { parseEventLogs } from '../../utils/abi/parseEventLogs.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type FormatLogErrorType,\n  formatLog,\n} from '../../utils/formatters/log.js'\n\nexport type GetFilterChangesParameters<\n  filterType extends FilterType = FilterType,\n  abi extends Abi | readonly unknown[] | undefined = undefined,\n  eventName extends string | undefined = undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n> = {\n  filter: Filter<filterType, abi, eventName, any, strict, fromBlock, toBlock>\n}\n\nexport type GetFilterChangesReturnType<\n  filterType extends FilterType = FilterType,\n  abi extends Abi | readonly unknown[] | undefined = undefined,\n  eventName extends string | undefined = undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  _AbiEvent extends AbiEvent | undefined = abi extends Abi\n    ? eventName extends string\n      ? ExtractAbiEvent<abi, eventName>\n      : undefined\n    : undefined,\n  _Pending extends boolean =\n    | (fromBlock extends 'pending' ? true : false)\n    | (toBlock extends 'pending' ? true : false),\n> = filterType extends 'event'\n  ? Log<bigint, number, _Pending, _AbiEvent, strict, abi, eventName>[]\n  : Hash[]\n\nexport type GetFilterChangesErrorType =\n  | RequestErrorType\n  | DecodeEventLogErrorType\n  | FormatLogErrorType\n  | ErrorType\n\n/**\n * Returns a list of logs or hashes based on a [Filter](/docs/glossary/terms#filter) since the last time it was called.\n *\n * - Docs: https://viem.sh/docs/actions/public/getFilterChanges\n * - JSON-RPC Methods: [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterchanges)\n *\n * A Filter can be created from the following actions:\n *\n * - [`createBlockFilter`](https://viem.sh/docs/actions/public/createBlockFilter)\n * - [`createContractEventFilter`](https://viem.sh/docs/contract/createContractEventFilter)\n * - [`createEventFilter`](https://viem.sh/docs/actions/public/createEventFilter)\n * - [`createPendingTransactionFilter`](https://viem.sh/docs/actions/public/createPendingTransactionFilter)\n *\n * Depending on the type of filter, the return value will be different:\n *\n * - If the filter was created with `createContractEventFilter` or `createEventFilter`, it returns a list of logs.\n * - If the filter was created with `createPendingTransactionFilter`, it returns a list of transaction hashes.\n * - If the filter was created with `createBlockFilter`, it returns a list of block hashes.\n *\n * @param client - Client to use\n * @param parameters - {@link GetFilterChangesParameters}\n * @returns Logs or hashes. {@link GetFilterChangesReturnType}\n *\n * @example\n * // Blocks\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createBlockFilter, getFilterChanges } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createBlockFilter(client)\n * const hashes = await getFilterChanges(client, { filter })\n *\n * @example\n * // Contract Events\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createContractEventFilter, getFilterChanges } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createContractEventFilter(client, {\n *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n *   eventName: 'Transfer',\n * })\n * const logs = await getFilterChanges(client, { filter })\n *\n * @example\n * // Raw Events\n * import { createPublicClient, http, parseAbiItem } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createEventFilter, getFilterChanges } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createEventFilter(client, {\n *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n *   event: parseAbiItem('event Transfer(address indexed, address indexed, uint256)'),\n * })\n * const logs = await getFilterChanges(client, { filter })\n *\n * @example\n * // Transactions\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createPendingTransactionFilter, getFilterChanges } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createPendingTransactionFilter(client)\n * const hashes = await getFilterChanges(client, { filter })\n */\nexport async function getFilterChanges<\n  transport extends Transport,\n  chain extends Chain | undefined,\n  filterType extends FilterType,\n  const abi extends Abi | readonly unknown[] | undefined,\n  eventName extends string | undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n>(\n  _client: Client<transport, chain>,\n  {\n    filter,\n  }: GetFilterChangesParameters<\n    filterType,\n    abi,\n    eventName,\n    strict,\n    fromBlock,\n    toBlock\n  >,\n): Promise<\n  GetFilterChangesReturnType<\n    filterType,\n    abi,\n    eventName,\n    strict,\n    fromBlock,\n    toBlock\n  >\n> {\n  const strict = 'strict' in filter && filter.strict\n\n  const logs = await filter.request({\n    method: 'eth_getFilterChanges',\n    params: [filter.id],\n  })\n\n  if (typeof logs[0] === 'string')\n    return logs as GetFilterChangesReturnType<\n      filterType,\n      abi,\n      eventName,\n      strict,\n      fromBlock,\n      toBlock\n    >\n\n  const formattedLogs = logs.map((log) => formatLog(log as RpcLog))\n  if (!('abi' in filter) || !filter.abi)\n    return formattedLogs as GetFilterChangesReturnType<\n      filterType,\n      abi,\n      eventName,\n      strict,\n      fromBlock,\n      toBlock\n    >\n  return parseEventLogs({\n    abi: filter.abi,\n    logs: formattedLogs,\n    strict,\n  }) as unknown as GetFilterChangesReturnType<\n    filterType,\n    abi,\n    eventName,\n    strict,\n    fromBlock,\n    toBlock\n  >\n}\n","import type { Address } from 'abitype'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { Proof } from '../../types/proof.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport {\n  type FormatProofErrorType,\n  formatProof,\n} from '../../utils/formatters/proof.js'\n\nexport type GetProofParameters = {\n  /** Account address. */\n  address: Address\n  /** Array of storage-keys that should be proofed and included. */\n  storageKeys: Hash[]\n} & (\n  | {\n      /** The block number. */\n      blockNumber?: bigint | undefined\n      blockTag?: undefined\n    }\n  | {\n      blockNumber?: undefined\n      /**\n       * The block tag.\n       * @default 'latest'\n       */\n      blockTag?: BlockTag | undefined\n    }\n)\n\nexport type GetProofReturnType = Proof\n\nexport type GetProofErrorType =\n  | NumberToHexErrorType\n  | FormatProofErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns the account and storage values of the specified account including the Merkle-proof.\n *\n * - Docs: https://viem.sh/docs/actions/public/getProof\n * - JSON-RPC Methods:\n *   - Calls [`eth_getProof`](https://eips.ethereum.org/EIPS/eip-1186)\n *\n * @param client - Client to use\n * @param parameters - {@link GetProofParameters}\n * @returns Proof data. {@link GetProofReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getProof } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const block = await getProof(client, {\n *  address: '0x...',\n *  storageKeys: ['0x...'],\n * })\n */\nexport async function getProof<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  {\n    address,\n    blockNumber,\n    blockTag: blockTag_,\n    storageKeys,\n  }: GetProofParameters,\n): Promise<GetProofReturnType> {\n  const blockTag = blockTag_ ?? 'latest'\n\n  const blockNumberHex =\n    blockNumber !== undefined ? numberToHex(blockNumber) : undefined\n\n  const proof = await client.request({\n    method: 'eth_getProof',\n    params: [address, storageKeys, blockNumberHex || blockTag],\n  })\n\n  return formatProof(proof)\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { Proof } from '../../types/proof.js'\nimport type { RpcProof } from '../../types/rpc.js'\nimport type { ExactPartial } from '../../types/utils.js'\nimport { hexToNumber } from '../index.js'\n\nexport type FormatProofErrorType = ErrorType\n\nfunction formatStorageProof(storageProof: RpcProof['storageProof']) {\n  return storageProof.map((proof) => ({\n    ...proof,\n    value: BigInt(proof.value),\n  }))\n}\n\nexport function formatProof(proof: ExactPartial<RpcProof>) {\n  return {\n    ...proof,\n    balance: proof.balance ? BigInt(proof.balance) : undefined,\n    nonce: proof.nonce ? hexToNumber(proof.nonce) : undefined,\n    storageProof: proof.storageProof\n      ? formatStorageProof(proof.storageProof)\n      : undefined,\n  } as Proof\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  TransactionNotFoundError,\n  type TransactionNotFoundErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { RpcTransaction } from '../../types/rpc.js'\nimport type { Prettify } from '../../types/utils.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport {\n  type FormattedTransaction,\n  formatTransaction,\n} from '../../utils/formatters/transaction.js'\n\nexport type GetTransactionParameters<blockTag extends BlockTag = 'latest'> =\n  | {\n      /** The block hash */\n      blockHash: Hash\n      blockNumber?: undefined\n      blockTag?: undefined\n      hash?: undefined\n      /** The index of the transaction on the block. */\n      index: number\n    }\n  | {\n      blockHash?: undefined\n      /** The block number */\n      blockNumber: bigint\n      blockTag?: undefined\n      hash?: undefined\n      /** The index of the transaction on the block. */\n      index: number\n    }\n  | {\n      blockHash?: undefined\n      blockNumber?: undefined\n      /** The block tag. */\n      blockTag: blockTag | BlockTag\n      hash?: undefined\n      /** The index of the transaction on the block. */\n      index: number\n    }\n  | {\n      blockHash?: undefined\n      blockNumber?: undefined\n      blockTag?: undefined\n      /** The hash of the transaction. */\n      hash: Hash\n      index?: number | undefined\n    }\n\nexport type GetTransactionReturnType<\n  chain extends Chain | undefined = undefined,\n  blockTag extends BlockTag = 'latest',\n> = Prettify<FormattedTransaction<chain, blockTag>>\n\nexport type GetTransactionErrorType =\n  | TransactionNotFoundErrorType\n  | NumberToHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns information about a [Transaction](https://viem.sh/docs/glossary/terms#transaction) given a hash or block identifier.\n *\n * - Docs: https://viem.sh/docs/actions/public/getTransaction\n * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_fetching-transactions\n * - JSON-RPC Methods: [`eth_getTransactionByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionByHash)\n *\n * @param client - Client to use\n * @param parameters - {@link GetTransactionParameters}\n * @returns The transaction information. {@link GetTransactionReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getTransaction } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const transaction = await getTransaction(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function getTransaction<\n  chain extends Chain | undefined,\n  blockTag extends BlockTag = 'latest',\n>(\n  client: Client<Transport, chain>,\n  {\n    blockHash,\n    blockNumber,\n    blockTag: blockTag_,\n    hash,\n    index,\n  }: GetTransactionParameters<blockTag>,\n): Promise<GetTransactionReturnType<chain, blockTag>> {\n  const blockTag = blockTag_ || 'latest'\n\n  const blockNumberHex =\n    blockNumber !== undefined ? numberToHex(blockNumber) : undefined\n\n  let transaction: RpcTransaction | null = null\n  if (hash) {\n    transaction = await client.request(\n      {\n        method: 'eth_getTransactionByHash',\n        params: [hash],\n      },\n      { dedupe: true },\n    )\n  } else if (blockHash) {\n    transaction = await client.request(\n      {\n        method: 'eth_getTransactionByBlockHashAndIndex',\n        params: [blockHash, numberToHex(index)],\n      },\n      { dedupe: true },\n    )\n  } else if (blockNumberHex || blockTag) {\n    transaction = await client.request(\n      {\n        method: 'eth_getTransactionByBlockNumberAndIndex',\n        params: [blockNumberHex || blockTag, numberToHex(index)],\n      },\n      { dedupe: Boolean(blockNumberHex) },\n    )\n  }\n\n  if (!transaction)\n    throw new TransactionNotFoundError({\n      blockHash,\n      blockNumber,\n      blockTag,\n      hash,\n      index,\n    })\n\n  const format =\n    client.chain?.formatters?.transaction?.format || formatTransaction\n  return format(transaction)\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type {\n  Chain,\n  ExtractChainFormatterReturnType,\n} from '../../types/chain.js'\nimport type { RpcTransactionReceipt } from '../../types/rpc.js'\nimport type { TransactionReceipt } from '../../types/transaction.js'\nimport type { ExactPartial } from '../../types/utils.js'\nimport { hexToNumber } from '../encoding/fromHex.js'\n\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\nimport { formatLog } from './log.js'\nimport { transactionType } from './transaction.js'\n\nexport type FormattedTransactionReceipt<\n  chain extends Chain | undefined = undefined,\n> = ExtractChainFormatterReturnType<\n  chain,\n  'transactionReceipt',\n  TransactionReceipt\n>\n\nexport const receiptStatuses = {\n  '0x0': 'reverted',\n  '0x1': 'success',\n} as const\n\nexport type FormatTransactionReceiptErrorType = ErrorType\n\nexport function formatTransactionReceipt(\n  transactionReceipt: ExactPartial<RpcTransactionReceipt>,\n) {\n  const receipt = {\n    ...transactionReceipt,\n    blockNumber: transactionReceipt.blockNumber\n      ? BigInt(transactionReceipt.blockNumber)\n      : null,\n    contractAddress: transactionReceipt.contractAddress\n      ? transactionReceipt.contractAddress\n      : null,\n    cumulativeGasUsed: transactionReceipt.cumulativeGasUsed\n      ? BigInt(transactionReceipt.cumulativeGasUsed)\n      : null,\n    effectiveGasPrice: transactionReceipt.effectiveGasPrice\n      ? BigInt(transactionReceipt.effectiveGasPrice)\n      : null,\n    gasUsed: transactionReceipt.gasUsed\n      ? BigInt(transactionReceipt.gasUsed)\n      : null,\n    logs: transactionReceipt.logs\n      ? transactionReceipt.logs.map((log) => formatLog(log))\n      : null,\n    to: transactionReceipt.to ? transactionReceipt.to : null,\n    transactionIndex: transactionReceipt.transactionIndex\n      ? hexToNumber(transactionReceipt.transactionIndex)\n      : null,\n    status: transactionReceipt.status\n      ? receiptStatuses[transactionReceipt.status]\n      : null,\n    type: transactionReceipt.type\n      ? transactionType[\n          transactionReceipt.type as keyof typeof transactionType\n        ] || transactionReceipt.type\n      : null,\n  } as TransactionReceipt\n\n  if (transactionReceipt.blobGasPrice)\n    receipt.blobGasPrice = BigInt(transactionReceipt.blobGasPrice)\n  if (transactionReceipt.blobGasUsed)\n    receipt.blobGasUsed = BigInt(transactionReceipt.blobGasUsed)\n\n  return receipt\n}\n\nexport type DefineTransactionReceiptErrorType =\n  | DefineFormatterErrorType\n  | ErrorType\n\nexport const defineTransactionReceipt = /*#__PURE__*/ defineFormatter(\n  'transactionReceipt',\n  formatTransactionReceipt,\n)\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  TransactionReceiptNotFoundError,\n  type TransactionReceiptNotFoundErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type FormattedTransactionReceipt,\n  formatTransactionReceipt,\n} from '../../utils/formatters/transactionReceipt.js'\n\nexport type GetTransactionReceiptParameters = {\n  /** The hash of the transaction. */\n  hash: Hash\n}\n\nexport type GetTransactionReceiptReturnType<\n  chain extends Chain | undefined = undefined,\n> = FormattedTransactionReceipt<chain>\n\nexport type GetTransactionReceiptErrorType =\n  | RequestErrorType\n  | TransactionReceiptNotFoundErrorType\n  | ErrorType\n\n/**\n * Returns the [Transaction Receipt](https://viem.sh/docs/glossary/terms#transaction-receipt) given a [Transaction](https://viem.sh/docs/glossary/terms#transaction) hash.\n *\n * - Docs: https://viem.sh/docs/actions/public/getTransactionReceipt\n * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_fetching-transactions\n * - JSON-RPC Methods: [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gettransactionreceipt)\n *\n * @param client - Client to use\n * @param parameters - {@link GetTransactionReceiptParameters}\n * @returns The transaction receipt. {@link GetTransactionReceiptReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getTransactionReceipt } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const transactionReceipt = await getTransactionReceipt(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function getTransactionReceipt<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  { hash }: GetTransactionReceiptParameters,\n) {\n  const receipt = await client.request(\n    {\n      method: 'eth_getTransactionReceipt',\n      params: [hash],\n    },\n    { dedupe: true },\n  )\n\n  if (!receipt) throw new TransactionReceiptNotFoundError({ hash })\n\n  const format =\n    client.chain?.formatters?.transactionReceipt?.format ||\n    formatTransactionReceipt\n  return format(receipt) as GetTransactionReceiptReturnType<chain>\n}\n","import type { Abi, AbiStateMutability, Address, Narrow } from 'abitype'\nimport * as BlockOverrides from 'ox/BlockOverrides'\n\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { AbiDecodingZeroDataError } from '../../errors/abi.js'\nimport type { BaseError } from '../../errors/base.js'\nimport { RawContractError } from '../../errors/contract.js'\nimport { UnknownNodeError } from '../../errors/node.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Block, BlockTag } from '../../types/block.js'\nimport type { Call, Calls } from '../../types/calls.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Log } from '../../types/log.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { MulticallResults } from '../../types/multicall.js'\nimport type { StateOverride } from '../../types/stateOverride.js'\nimport type { TransactionRequest } from '../../types/transaction.js'\nimport type { ExactPartial, UnionOmit } from '../../types/utils.js'\nimport {\n  type DecodeFunctionResultErrorType,\n  decodeFunctionResult,\n} from '../../utils/abi/decodeFunctionResult.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport { concat } from '../../utils/data/concat.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport { getContractError } from '../../utils/errors/getContractError.js'\nimport {\n  type GetNodeErrorReturnType,\n  getNodeError,\n} from '../../utils/errors/getNodeError.js'\nimport {\n  type FormatBlockErrorType,\n  formatBlock,\n} from '../../utils/formatters/block.js'\nimport { formatLog } from '../../utils/formatters/log.js'\nimport {\n  type FormatTransactionRequestErrorType,\n  formatTransactionRequest,\n} from '../../utils/formatters/transactionRequest.js'\nimport {\n  type SerializeStateOverrideErrorType,\n  serializeStateOverride,\n} from '../../utils/stateOverride.js'\nimport {\n  type AssertRequestErrorType,\n  assertRequest,\n} from '../../utils/transaction/assertRequest.js'\n\ntype CallExtraProperties = ExactPartial<\n  UnionOmit<\n    TransactionRequest,\n    'blobs' | 'data' | 'kzg' | 'to' | 'sidecars' | 'value'\n  >\n> & {\n  /** Account attached to the call (msg.sender). */\n  account?: Account | Address | undefined\n  /** Recipient. `null` if contract deployment. */\n  to?: Address | null | undefined\n}\n\nexport type SimulateBlocksParameters<\n  calls extends readonly unknown[] = readonly unknown[],\n> = {\n  /** Blocks to simulate. */\n  blocks: readonly {\n    /** Block overrides. */\n    blockOverrides?: BlockOverrides.BlockOverrides | undefined\n    /** Calls to execute. */\n    calls: Calls<Narrow<calls>, CallExtraProperties>\n    /** State overrides. */\n    stateOverrides?: StateOverride | undefined\n  }[]\n  /** Whether to return the full transactions. */\n  returnFullTransactions?: boolean | undefined\n  /** Whether to trace transfers. */\n  traceTransfers?: boolean | undefined\n  /** Whether to enable validation mode. */\n  validation?: boolean | undefined\n} & (\n  | {\n      /** The balance of the account at a block number. */\n      blockNumber?: bigint | undefined\n      blockTag?: undefined\n    }\n  | {\n      blockNumber?: undefined\n      /**\n       * The balance of the account at a block tag.\n       * @default 'latest'\n       */\n      blockTag?: BlockTag | undefined\n    }\n)\n\nexport type SimulateBlocksReturnType<\n  calls extends readonly unknown[] = readonly unknown[],\n> = readonly (Block & {\n  calls: MulticallResults<\n    Narrow<calls>,\n    true,\n    {\n      extraProperties: {\n        data: Hex\n        gasUsed: bigint\n        logs?: Log[] | undefined\n      }\n      error: Error\n      mutability: AbiStateMutability\n    }\n  >\n})[]\n\nexport type SimulateBlocksErrorType =\n  | AssertRequestErrorType\n  | DecodeFunctionResultErrorType\n  | EncodeFunctionDataErrorType\n  | FormatBlockErrorType\n  | FormatTransactionRequestErrorType\n  | GetNodeErrorReturnType\n  | ParseAccountErrorType\n  | SerializeStateOverrideErrorType\n  | NumberToHexErrorType\n  | ErrorType\n\n/**\n * Simulates a set of calls on block(s) with optional block and state overrides.\n *\n * @example\n * ```ts\n * import { createClient, http, parseEther } from 'viem'\n * import { simulate } from 'viem/actions'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const result = await simulate(client, {\n *   blocks: [{\n *     blockOverrides: {\n *       number: 69420n,\n *     },\n *     calls: [{\n *       {\n *         account: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',\n *         data: '0xdeadbeef',\n *         to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *       },\n *       {\n *         account: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',\n *         to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *         value: parseEther('1'),\n *       },\n *     }],\n *     stateOverrides: [{\n *       address: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',\n *       balance: parseEther('10'),\n *     }],\n *   }]\n * })\n * ```\n *\n * @param client - Client to use.\n * @param parameters - {@link SimulateBlocksParameters}\n * @returns Simulated blocks. {@link SimulateBlocksReturnType}\n */\nexport async function simulateBlocks<\n  chain extends Chain | undefined,\n  const calls extends readonly unknown[],\n>(\n  client: Client<Transport, chain>,\n  parameters: SimulateBlocksParameters<calls>,\n): Promise<SimulateBlocksReturnType<calls>> {\n  const {\n    blockNumber,\n    blockTag = client.experimental_blockTag ?? 'latest',\n    blocks,\n    returnFullTransactions,\n    traceTransfers,\n    validation,\n  } = parameters\n\n  try {\n    const blockStateCalls = []\n    for (const block of blocks) {\n      const blockOverrides = block.blockOverrides\n        ? BlockOverrides.toRpc(block.blockOverrides)\n        : undefined\n      const calls = block.calls.map((call_) => {\n        const call = call_ as Call<unknown, CallExtraProperties>\n        const account = call.account ? parseAccount(call.account) : undefined\n        const data = call.abi ? encodeFunctionData(call) : call.data\n        const request = {\n          ...call,\n          data: call.dataSuffix\n            ? concat([data || '0x', call.dataSuffix])\n            : data,\n          from: call.from ?? account?.address,\n        } as const\n        assertRequest(request)\n        return formatTransactionRequest(request)\n      })\n      const stateOverrides = block.stateOverrides\n        ? serializeStateOverride(block.stateOverrides)\n        : undefined\n\n      blockStateCalls.push({\n        blockOverrides,\n        calls,\n        stateOverrides,\n      })\n    }\n\n    const blockNumberHex =\n      typeof blockNumber === 'bigint' ? numberToHex(blockNumber) : undefined\n    const block = blockNumberHex || blockTag\n\n    const result = await client.request({\n      method: 'eth_simulateV1',\n      params: [\n        { blockStateCalls, returnFullTransactions, traceTransfers, validation },\n        block,\n      ],\n    })\n\n    return result.map((block, i) => ({\n      ...formatBlock(block),\n      calls: block.calls.map((call, j) => {\n        const { abi, args, functionName, to } = blocks[i].calls[j] as Call<\n          unknown,\n          CallExtraProperties\n        >\n\n        const data = call.error?.data ?? call.returnData\n        const gasUsed = BigInt(call.gasUsed)\n        const logs = call.logs?.map((log) => formatLog(log))\n        const status = call.status === '0x1' ? 'success' : 'failure'\n\n        const result =\n          abi && status === 'success' && data !== '0x'\n            ? decodeFunctionResult({\n                abi,\n                data,\n                functionName,\n              })\n            : null\n\n        const error = (() => {\n          if (status === 'success') return undefined\n\n          let error: Error | undefined\n          if (call.error?.data === '0x') error = new AbiDecodingZeroDataError()\n          else if (call.error) error = new RawContractError(call.error)\n\n          if (!error) return undefined\n          return getContractError(error, {\n            abi: (abi ?? []) as Abi,\n            address: to ?? '0x',\n            args,\n            functionName: functionName ?? '<unknown>',\n          })\n        })()\n\n        return {\n          data,\n          gasUsed,\n          logs,\n          status,\n          ...(status === 'success'\n            ? {\n                result,\n              }\n            : {\n                error,\n              }),\n        }\n      }),\n    })) as unknown as SimulateBlocksReturnType<calls>\n  } catch (e) {\n    const cause = e as BaseError\n    const error = getNodeError(cause, {})\n    if (error instanceof UnknownNodeError) throw cause\n    throw error\n  }\n}\n","import type { Abi } from '../abi.js'\nimport type { Narrow } from '../narrow.js'\nimport type { Error, Filter } from '../types.js'\nimport { InvalidAbiItemError } from './errors/abiItem.js'\nimport { isStructSignature } from './runtime/signatures.js'\nimport { parseStructs } from './runtime/structs.js'\nimport { parseSignature } from './runtime/utils.js'\nimport type { Signature, Signatures } from './types/signatures.js'\nimport type { ParseStructs } from './types/structs.js'\nimport type { ParseSignature } from './types/utils.js'\n\n/**\n * Parses human-readable ABI item (e.g. error, event, function) into {@link Abi} item\n *\n * @param signature - Human-readable ABI item\n * @returns Parsed {@link Abi} item\n *\n * @example\n * type Result = ParseAbiItem<'function balanceOf(address owner) view returns (uint256)'>\n * //   ^? type Result = { name: \"balanceOf\"; type: \"function\"; stateMutability: \"view\";...\n *\n * @example\n * type Result = ParseAbiItem<\n *   // ^? type Result = { name: \"foo\"; type: \"function\"; stateMutability: \"view\"; inputs:...\n *   ['function foo(Baz bar) view returns (string)', 'struct Baz { string name; }']\n * >\n */\nexport type ParseAbiItem<\n  signature extends string | readonly string[] | readonly unknown[],\n> =\n  | (signature extends string\n      ? string extends signature\n        ? Abi[number]\n        : signature extends Signature<signature> // Validate signature\n          ? ParseSignature<signature>\n          : never\n      : never)\n  | (signature extends readonly string[]\n      ? string[] extends signature\n        ? Abi[number] // Return generic Abi item since type was no inferrable\n        : signature extends Signatures<signature> // Validate signature\n          ? ParseStructs<signature> extends infer structs\n            ? {\n                [key in keyof signature]: ParseSignature<\n                  signature[key] extends string ? signature[key] : never,\n                  structs\n                >\n              } extends infer mapped extends readonly unknown[]\n              ? // Filter out `never` since those are structs\n                Filter<mapped, never>[0] extends infer result\n                ? result extends undefined // convert `undefined` to `never` (e.g. `ParseAbiItem<['struct Foo { string name; }']>`)\n                  ? never\n                  : result\n                : never\n              : never\n            : never\n          : never\n      : never)\n\n/**\n * Parses human-readable ABI item (e.g. error, event, function) into {@link Abi} item\n *\n * @param signature - Human-readable ABI item\n * @returns Parsed {@link Abi} item\n *\n * @example\n * const abiItem = parseAbiItem('function balanceOf(address owner) view returns (uint256)')\n * //    ^? const abiItem: { name: \"balanceOf\"; type: \"function\"; stateMutability: \"view\";...\n *\n * @example\n * const abiItem = parseAbiItem([\n *   //  ^? const abiItem: { name: \"foo\"; type: \"function\"; stateMutability: \"view\"; inputs:...\n *   'function foo(Baz bar) view returns (string)',\n *   'struct Baz { string name; }',\n * ])\n */\nexport function parseAbiItem<\n  signature extends string | readonly string[] | readonly unknown[],\n>(\n  signature: Narrow<signature> &\n    (\n      | (signature extends string\n          ? string extends signature\n            ? unknown\n            : Signature<signature>\n          : never)\n      | (signature extends readonly string[]\n          ? signature extends readonly [] // empty array\n            ? Error<'At least one signature required.'>\n            : string[] extends signature\n              ? unknown\n              : Signatures<signature>\n          : never)\n    ),\n): ParseAbiItem<signature> {\n  let abiItem: ParseAbiItem<signature> | undefined\n  if (typeof signature === 'string')\n    abiItem = parseSignature(signature) as ParseAbiItem<signature>\n  else {\n    const structs = parseStructs(signature as readonly string[])\n    const length = signature.length as number\n    for (let i = 0; i < length; i++) {\n      const signature_ = (signature as readonly string[])[i]!\n      if (isStructSignature(signature_)) continue\n      abiItem = parseSignature(signature_, structs) as ParseAbiItem<signature>\n      break\n    }\n  }\n\n  if (!abiItem) throw new InvalidAbiItemError({ signature })\n  return abiItem as ParseAbiItem<signature>\n}\n","import * as Bytes from '../Bytes.js'\nimport type * as Errors from '../Errors.js'\n\n/** @internal */\nexport function assertSize(bytes: Bytes.Bytes, size_: number): void {\n  if (Bytes.size(bytes) > size_)\n    throw new Bytes.SizeOverflowError({\n      givenSize: Bytes.size(bytes),\n      maxSize: size_,\n    })\n}\n\n/** @internal */\nexport declare namespace assertSize {\n  type ErrorType =\n    | Bytes.size.ErrorType\n    | Bytes.SizeOverflowError\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function assertStartOffset(\n  value: Bytes.Bytes,\n  start?: number | undefined,\n) {\n  if (typeof start === 'number' && start > 0 && start > Bytes.size(value) - 1)\n    throw new Bytes.SliceOffsetOutOfBoundsError({\n      offset: start,\n      position: 'start',\n      size: Bytes.size(value),\n    })\n}\n\nexport declare namespace assertStartOffset {\n  export type ErrorType =\n    | Bytes.SliceOffsetOutOfBoundsError\n    | Bytes.size.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function assertEndOffset(\n  value: Bytes.Bytes,\n  start?: number | undefined,\n  end?: number | undefined,\n) {\n  if (\n    typeof start === 'number' &&\n    typeof end === 'number' &&\n    Bytes.size(value) !== end - start\n  ) {\n    throw new Bytes.SliceOffsetOutOfBoundsError({\n      offset: end,\n      position: 'end',\n      size: Bytes.size(value),\n    })\n  }\n}\n\n/** @internal */\nexport declare namespace assertEndOffset {\n  type ErrorType =\n    | Bytes.SliceOffsetOutOfBoundsError\n    | Bytes.size.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport const charCodeMap = {\n  zero: 48,\n  nine: 57,\n  A: 65,\n  F: 70,\n  a: 97,\n  f: 102,\n} as const\n\n/** @internal */\nexport function charCodeToBase16(char: number) {\n  if (char >= charCodeMap.zero && char <= charCodeMap.nine)\n    return char - charCodeMap.zero\n  if (char >= charCodeMap.A && char <= charCodeMap.F)\n    return char - (charCodeMap.A - 10)\n  if (char >= charCodeMap.a && char <= charCodeMap.f)\n    return char - (charCodeMap.a - 10)\n  return undefined\n}\n\n/** @internal */\nexport function pad(bytes: Bytes.Bytes, options: pad.Options = {}) {\n  const { dir, size = 32 } = options\n  if (size === 0) return bytes\n  if (bytes.length > size)\n    throw new Bytes.SizeExceedsPaddingSizeError({\n      size: bytes.length,\n      targetSize: size,\n      type: 'Bytes',\n    })\n  const paddedBytes = new Uint8Array(size)\n  for (let i = 0; i < size; i++) {\n    const padEnd = dir === 'right'\n    paddedBytes[padEnd ? i : size - i - 1] =\n      bytes[padEnd ? i : bytes.length - i - 1]!\n  }\n  return paddedBytes\n}\n\n/** @internal */\nexport declare namespace pad {\n  type Options = {\n    dir?: 'left' | 'right' | undefined\n    size?: number | undefined\n  }\n\n  type ReturnType = Bytes.Bytes\n\n  type ErrorType = Bytes.SizeExceedsPaddingSizeError | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function trim(\n  value: Bytes.Bytes,\n  options: trim.Options = {},\n): trim.ReturnType {\n  const { dir = 'left' } = options\n\n  let data = value\n\n  let sliceLength = 0\n  for (let i = 0; i < data.length - 1; i++) {\n    if (data[dir === 'left' ? i : data.length - i - 1]!.toString() === '0')\n      sliceLength++\n    else break\n  }\n  data =\n    dir === 'left'\n      ? data.slice(sliceLength)\n      : data.slice(0, data.length - sliceLength)\n\n  return data as trim.ReturnType\n}\n\n/** @internal */\nexport declare namespace trim {\n  type Options = {\n    dir?: 'left' | 'right' | undefined\n  }\n\n  type ReturnType = Bytes.Bytes\n\n  type ErrorType = Errors.GlobalErrorType\n}\n","import { equalBytes } from '@noble/curves/abstract/utils'\nimport * as Errors from './Errors.js'\nimport * as Hex from './Hex.js'\nimport * as internal from './internal/bytes.js'\nimport * as internal_hex from './internal/hex.js'\nimport * as Json from './Json.js'\n\nconst decoder = /*#__PURE__*/ new TextDecoder()\nconst encoder = /*#__PURE__*/ new TextEncoder()\n\n/** Root type for a Bytes array. */\nexport type Bytes = Uint8Array\n\n/**\n * Asserts if the given value is {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.assert('abc')\n * // @error: Bytes.InvalidBytesTypeError:\n * // @error: Value `\"abc\"` of type `string` is an invalid Bytes value.\n * // @error: Bytes values must be of type `Uint8Array`.\n * ```\n *\n * @param value - Value to assert.\n */\nexport function assert(value: unknown): asserts value is Bytes {\n  if (value instanceof Uint8Array) return\n  if (!value) throw new InvalidBytesTypeError(value)\n  if (typeof value !== 'object') throw new InvalidBytesTypeError(value)\n  if (!('BYTES_PER_ELEMENT' in value)) throw new InvalidBytesTypeError(value)\n  if (value.BYTES_PER_ELEMENT !== 1 || value.constructor.name !== 'Uint8Array')\n    throw new InvalidBytesTypeError(value)\n}\n\nexport declare namespace assert {\n  type ErrorType = InvalidBytesTypeError | Errors.GlobalErrorType\n}\n\n/**\n * Concatenates two or more {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const bytes = Bytes.concat(\n *   Bytes.from([1]),\n *   Bytes.from([69]),\n *   Bytes.from([420, 69]),\n * )\n * // @log: Uint8Array [ 1, 69, 420, 69 ]\n * ```\n *\n * @param values - Values to concatenate.\n * @returns Concatenated {@link ox#Bytes.Bytes}.\n */\nexport function concat(...values: readonly Bytes[]): Bytes {\n  let length = 0\n  for (const arr of values) {\n    length += arr.length\n  }\n  const result = new Uint8Array(length)\n  for (let i = 0, index = 0; i < values.length; i++) {\n    const arr = values[i]\n    result.set(arr!, index)\n    index += arr!.length\n  }\n  return result\n}\n\nexport declare namespace concat {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Instantiates a {@link ox#Bytes.Bytes} value from a `Uint8Array`, a hex string, or an array of unsigned 8-bit integers.\n *\n * :::tip\n *\n * To instantiate from a **Boolean**, **String**, or **Number**, use one of the following:\n *\n * - `Bytes.fromBoolean`\n *\n * - `Bytes.fromString`\n *\n * - `Bytes.fromNumber`\n *\n * :::\n *\n * @example\n * ```ts twoslash\n * // @noErrors\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.from([255, 124, 5, 4])\n * // @log: Uint8Array([255, 124, 5, 4])\n *\n * const data = Bytes.from('0xdeadbeef')\n * // @log: Uint8Array([222, 173, 190, 239])\n * ```\n *\n * @param value - Value to convert.\n * @returns A {@link ox#Bytes.Bytes} instance.\n */\nexport function from(value: Hex.Hex | Bytes | readonly number[]): Bytes {\n  if (value instanceof Uint8Array) return value\n  if (typeof value === 'string') return fromHex(value)\n  return fromArray(value)\n}\n\nexport declare namespace from {\n  type ErrorType =\n    | fromHex.ErrorType\n    | fromArray.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Converts an array of unsigned 8-bit integers into {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromArray([255, 124, 5, 4])\n * // @log: Uint8Array([255, 124, 5, 4])\n * ```\n *\n * @param value - Value to convert.\n * @returns A {@link ox#Bytes.Bytes} instance.\n */\nexport function fromArray(value: readonly number[] | Uint8Array): Bytes {\n  return value instanceof Uint8Array ? value : new Uint8Array(value)\n}\n\nexport declare namespace fromArray {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Encodes a boolean value into {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromBoolean(true)\n * // @log: Uint8Array([1])\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromBoolean(true, { size: 32 })\n * // @log: Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1])\n * ```\n *\n * @param value - Boolean value to encode.\n * @param options - Encoding options.\n * @returns Encoded {@link ox#Bytes.Bytes}.\n */\nexport function fromBoolean(value: boolean, options: fromBoolean.Options = {}) {\n  const { size } = options\n  const bytes = new Uint8Array(1)\n  bytes[0] = Number(value)\n  if (typeof size === 'number') {\n    internal.assertSize(bytes, size)\n    return padLeft(bytes, size)\n  }\n  return bytes\n}\n\nexport declare namespace fromBoolean {\n  type Options = {\n    /** Size of the output bytes. */\n    size?: number | undefined\n  }\n\n  type ErrorType =\n    | internal.assertSize.ErrorType\n    | padLeft.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Encodes a {@link ox#Hex.Hex} value into {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromHex('0x48656c6c6f20776f726c6421')\n * // @log: Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromHex('0x48656c6c6f20776f726c6421', { size: 32 })\n * // @log: Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n * ```\n *\n * @param value - {@link ox#Hex.Hex} value to encode.\n * @param options - Encoding options.\n * @returns Encoded {@link ox#Bytes.Bytes}.\n */\nexport function fromHex(value: Hex.Hex, options: fromHex.Options = {}): Bytes {\n  const { size } = options\n\n  let hex = value\n  if (size) {\n    internal_hex.assertSize(value, size)\n    hex = Hex.padRight(value, size)\n  }\n\n  let hexString = hex.slice(2) as string\n  if (hexString.length % 2) hexString = `0${hexString}`\n\n  const length = hexString.length / 2\n  const bytes = new Uint8Array(length)\n  for (let index = 0, j = 0; index < length; index++) {\n    const nibbleLeft = internal.charCodeToBase16(hexString.charCodeAt(j++))\n    const nibbleRight = internal.charCodeToBase16(hexString.charCodeAt(j++))\n    if (nibbleLeft === undefined || nibbleRight === undefined) {\n      throw new Errors.BaseError(\n        `Invalid byte sequence (\"${hexString[j - 2]}${hexString[j - 1]}\" in \"${hexString}\").`,\n      )\n    }\n    bytes[index] = nibbleLeft * 16 + nibbleRight\n  }\n  return bytes\n}\n\nexport declare namespace fromHex {\n  type Options = {\n    /** Size of the output bytes. */\n    size?: number | undefined\n  }\n\n  type ErrorType =\n    | internal_hex.assertSize.ErrorType\n    | Hex.padRight.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Encodes a number value into {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromNumber(420)\n * // @log: Uint8Array([1, 164])\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromNumber(420, { size: 4 })\n * // @log: Uint8Array([0, 0, 1, 164])\n * ```\n *\n * @param value - Number value to encode.\n * @param options - Encoding options.\n * @returns Encoded {@link ox#Bytes.Bytes}.\n */\nexport function fromNumber(\n  value: bigint | number,\n  options?: fromNumber.Options | undefined,\n) {\n  const hex = Hex.fromNumber(value, options)\n  return fromHex(hex)\n}\n\nexport declare namespace fromNumber {\n  export type Options = Hex.fromNumber.Options\n\n  export type ErrorType =\n    | Hex.fromNumber.ErrorType\n    | fromHex.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Encodes a string into {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromString('Hello world!')\n * // @log: Uint8Array([72, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100, 33])\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromString('Hello world!', { size: 32 })\n * // @log: Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n * ```\n *\n * @param value - String to encode.\n * @param options - Encoding options.\n * @returns Encoded {@link ox#Bytes.Bytes}.\n */\nexport function fromString(\n  value: string,\n  options: fromString.Options = {},\n): Bytes {\n  const { size } = options\n\n  const bytes = encoder.encode(value)\n  if (typeof size === 'number') {\n    internal.assertSize(bytes, size)\n    return padRight(bytes, size)\n  }\n  return bytes\n}\n\nexport declare namespace fromString {\n  type Options = {\n    /** Size of the output bytes. */\n    size?: number | undefined\n  }\n\n  type ErrorType =\n    | internal.assertSize.ErrorType\n    | padRight.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Checks if two {@link ox#Bytes.Bytes} values are equal.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.isEqual(Bytes.from([1]), Bytes.from([1]))\n * // @log: true\n *\n * Bytes.isEqual(Bytes.from([1]), Bytes.from([2]))\n * // @log: false\n * ```\n *\n * @param bytesA - First {@link ox#Bytes.Bytes} value.\n * @param bytesB - Second {@link ox#Bytes.Bytes} value.\n * @returns `true` if the two values are equal, otherwise `false`.\n */\nexport function isEqual(bytesA: Bytes, bytesB: Bytes) {\n  return equalBytes(bytesA, bytesB)\n}\n\nexport declare namespace isEqual {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Pads a {@link ox#Bytes.Bytes} value to the left with zero bytes until it reaches the given `size` (default: 32 bytes).\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.padLeft(Bytes.from([1]), 4)\n * // @log: Uint8Array([0, 0, 0, 1])\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} value to pad.\n * @param size - Size to pad the {@link ox#Bytes.Bytes} value to.\n * @returns Padded {@link ox#Bytes.Bytes} value.\n */\nexport function padLeft(\n  value: Bytes,\n  size?: number | undefined,\n): padLeft.ReturnType {\n  return internal.pad(value, { dir: 'left', size })\n}\n\nexport declare namespace padLeft {\n  type ReturnType = internal.pad.ReturnType\n  type ErrorType = internal.pad.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Pads a {@link ox#Bytes.Bytes} value to the right with zero bytes until it reaches the given `size` (default: 32 bytes).\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.padRight(Bytes.from([1]), 4)\n * // @log: Uint8Array([1, 0, 0, 0])\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} value to pad.\n * @param size - Size to pad the {@link ox#Bytes.Bytes} value to.\n * @returns Padded {@link ox#Bytes.Bytes} value.\n */\nexport function padRight(\n  value: Bytes,\n  size?: number | undefined,\n): padRight.ReturnType {\n  return internal.pad(value, { dir: 'right', size })\n}\n\nexport declare namespace padRight {\n  type ReturnType = internal.pad.ReturnType\n  type ErrorType = internal.pad.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Generates random {@link ox#Bytes.Bytes} of the specified length.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const bytes = Bytes.random(32)\n * // @log: Uint8Array([... x32])\n * ```\n *\n * @param length - Length of the random {@link ox#Bytes.Bytes} to generate.\n * @returns Random {@link ox#Bytes.Bytes} of the specified length.\n */\nexport function random(length: number): Bytes {\n  return crypto.getRandomValues(new Uint8Array(length))\n}\n\nexport declare namespace random {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Retrieves the size of a {@link ox#Bytes.Bytes} value.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.size(Bytes.from([1, 2, 3, 4]))\n * // @log: 4\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} value.\n * @returns Size of the {@link ox#Bytes.Bytes} value.\n */\nexport function size(value: Bytes): number {\n  return value.length\n}\n\nexport declare namespace size {\n  export type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Returns a section of a {@link ox#Bytes.Bytes} value given a start/end bytes offset.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.slice(\n *   Bytes.from([1, 2, 3, 4, 5, 6, 7, 8, 9]),\n *   1,\n *   4,\n * )\n * // @log: Uint8Array([2, 3, 4])\n * ```\n *\n * @param value - The {@link ox#Bytes.Bytes} value.\n * @param start - Start offset.\n * @param end - End offset.\n * @param options - Slice options.\n * @returns Sliced {@link ox#Bytes.Bytes} value.\n */\nexport function slice(\n  value: Bytes,\n  start?: number | undefined,\n  end?: number | undefined,\n  options: slice.Options = {},\n): Bytes {\n  const { strict } = options\n  internal.assertStartOffset(value, start)\n  const value_ = value.slice(start, end)\n  if (strict) internal.assertEndOffset(value_, start, end)\n  return value_\n}\n\nexport declare namespace slice {\n  type Options = {\n    /** Asserts that the sliced value is the same size as the given start/end offsets. */\n    strict?: boolean | undefined\n  }\n\n  export type ErrorType =\n    | internal.assertStartOffset.ErrorType\n    | internal.assertEndOffset.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Decodes a {@link ox#Bytes.Bytes} into a bigint.\n *\n * @example\n * ```ts\n * import { Bytes } from 'ox'\n *\n * Bytes.toBigInt(Bytes.from([1, 164]))\n * // @log: 420n\n * ```\n *\n * @param bytes - The {@link ox#Bytes.Bytes} to decode.\n * @param options - Decoding options.\n * @returns Decoded bigint.\n */\nexport function toBigInt(bytes: Bytes, options: toBigInt.Options = {}): bigint {\n  const { size } = options\n  if (typeof size !== 'undefined') internal.assertSize(bytes, size)\n  const hex = Hex.fromBytes(bytes, options)\n  return Hex.toBigInt(hex, options)\n}\n\nexport declare namespace toBigInt {\n  type Options = {\n    /** Whether or not the number of a signed representation. */\n    signed?: boolean | undefined\n    /** Size of the bytes. */\n    size?: number | undefined\n  }\n\n  type ErrorType =\n    | Hex.fromBytes.ErrorType\n    | Hex.toBigInt.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Decodes a {@link ox#Bytes.Bytes} into a boolean.\n *\n * @example\n * ```ts\n * import { Bytes } from 'ox'\n *\n * Bytes.toBoolean(Bytes.from([1]))\n * // @log: true\n * ```\n *\n * @param bytes - The {@link ox#Bytes.Bytes} to decode.\n * @param options - Decoding options.\n * @returns Decoded boolean.\n */\nexport function toBoolean(\n  bytes: Bytes,\n  options: toBoolean.Options = {},\n): boolean {\n  const { size } = options\n  let bytes_ = bytes\n  if (typeof size !== 'undefined') {\n    internal.assertSize(bytes_, size)\n    bytes_ = trimLeft(bytes_)\n  }\n  if (bytes_.length > 1 || bytes_[0]! > 1)\n    throw new InvalidBytesBooleanError(bytes_)\n  return Boolean(bytes_[0])\n}\n\nexport declare namespace toBoolean {\n  type Options = {\n    /** Size of the bytes. */\n    size?: number | undefined\n  }\n\n  type ErrorType =\n    | internal.assertSize.ErrorType\n    | trimLeft.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Encodes a {@link ox#Bytes.Bytes} value into a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.toHex(Bytes.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))\n * // '0x48656c6c6f20576f726c6421'\n * ```\n *\n * @param value - The {@link ox#Bytes.Bytes} to decode.\n * @param options - Options.\n * @returns Decoded {@link ox#Hex.Hex} value.\n */\nexport function toHex(value: Bytes, options: toHex.Options = {}): Hex.Hex {\n  return Hex.fromBytes(value, options)\n}\n\nexport declare namespace toHex {\n  type Options = {\n    /** Size of the bytes. */\n    size?: number | undefined\n  }\n\n  type ErrorType = Hex.fromBytes.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Decodes a {@link ox#Bytes.Bytes} into a number.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.toNumber(Bytes.from([1, 164]))\n * // @log: 420\n * ```\n */\nexport function toNumber(bytes: Bytes, options: toNumber.Options = {}): number {\n  const { size } = options\n  if (typeof size !== 'undefined') internal.assertSize(bytes, size)\n  const hex = Hex.fromBytes(bytes, options)\n  return Hex.toNumber(hex, options)\n}\n\nexport declare namespace toNumber {\n  type Options = {\n    /** Whether or not the number of a signed representation. */\n    signed?: boolean | undefined\n    /** Size of the bytes. */\n    size?: number | undefined\n  }\n\n  type ErrorType =\n    | Hex.fromBytes.ErrorType\n    | Hex.toNumber.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Decodes a {@link ox#Bytes.Bytes} into a string.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.toString(Bytes.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))\n * // @log: 'Hello world'\n * ```\n *\n * @param bytes - The {@link ox#Bytes.Bytes} to decode.\n * @param options - Options.\n * @returns Decoded string.\n */\nexport function toString(bytes: Bytes, options: toString.Options = {}): string {\n  const { size } = options\n\n  let bytes_ = bytes\n  if (typeof size !== 'undefined') {\n    internal.assertSize(bytes_, size)\n    bytes_ = trimRight(bytes_)\n  }\n  return decoder.decode(bytes_)\n}\n\nexport declare namespace toString {\n  export type Options = {\n    /** Size of the bytes. */\n    size?: number | undefined\n  }\n\n  export type ErrorType =\n    | internal.assertSize.ErrorType\n    | trimRight.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Trims leading zeros from a {@link ox#Bytes.Bytes} value.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.trimLeft(Bytes.from([0, 0, 0, 0, 1, 2, 3]))\n * // @log: Uint8Array([1, 2, 3])\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} value.\n * @returns Trimmed {@link ox#Bytes.Bytes} value.\n */\nexport function trimLeft(value: Bytes): Bytes {\n  return internal.trim(value, { dir: 'left' })\n}\n\nexport declare namespace trimLeft {\n  type ErrorType = internal.trim.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Trims trailing zeros from a {@link ox#Bytes.Bytes} value.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.trimRight(Bytes.from([1, 2, 3, 0, 0, 0, 0]))\n * // @log: Uint8Array([1, 2, 3])\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} value.\n * @returns Trimmed {@link ox#Bytes.Bytes} value.\n */\nexport function trimRight(value: Bytes): Bytes {\n  return internal.trim(value, { dir: 'right' })\n}\n\nexport declare namespace trimRight {\n  export type ErrorType = internal.trim.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Checks if the given value is {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.validate('0x')\n * // @log: false\n *\n * Bytes.validate(Bytes.from([1, 2, 3]))\n * // @log: true\n * ```\n *\n * @param value - Value to check.\n * @returns `true` if the value is {@link ox#Bytes.Bytes}, otherwise `false`.\n */\nexport function validate(value: unknown): value is Bytes {\n  try {\n    assert(value)\n    return true\n  } catch {\n    return false\n  }\n}\n\nexport declare namespace validate {\n  export type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Thrown when the bytes value cannot be represented as a boolean.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.toBoolean(Bytes.from([5]))\n * // @error: Bytes.InvalidBytesBooleanError: Bytes value `[5]` is not a valid boolean.\n * // @error: The bytes array must contain a single byte of either a `0` or `1` value.\n * ```\n */\nexport class InvalidBytesBooleanError extends Errors.BaseError {\n  override readonly name = 'Bytes.InvalidBytesBooleanError'\n\n  constructor(bytes: Bytes) {\n    super(`Bytes value \\`${bytes}\\` is not a valid boolean.`, {\n      metaMessages: [\n        'The bytes array must contain a single byte of either a `0` or `1` value.',\n      ],\n    })\n  }\n}\n\n/**\n * Thrown when a value cannot be converted to bytes.\n *\n * @example\n * ```ts twoslash\n * // @noErrors\n * import { Bytes } from 'ox'\n *\n * Bytes.from('foo')\n * // @error: Bytes.InvalidBytesTypeError: Value `foo` of type `string` is an invalid Bytes value.\n * ```\n */\nexport class InvalidBytesTypeError extends Errors.BaseError {\n  override readonly name = 'Bytes.InvalidBytesTypeError'\n\n  constructor(value: unknown) {\n    super(\n      `Value \\`${typeof value === 'object' ? Json.stringify(value) : value}\\` of type \\`${typeof value}\\` is an invalid Bytes value.`,\n      {\n        metaMessages: ['Bytes values must be of type `Bytes`.'],\n      },\n    )\n  }\n}\n\n/**\n * Thrown when a size exceeds the maximum allowed size.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.fromString('Hello World!', { size: 8 })\n * // @error: Bytes.SizeOverflowError: Size cannot exceed `8` bytes. Given size: `12` bytes.\n * ```\n */\nexport class SizeOverflowError extends Errors.BaseError {\n  override readonly name = 'Bytes.SizeOverflowError'\n\n  constructor({ givenSize, maxSize }: { givenSize: number; maxSize: number }) {\n    super(\n      `Size cannot exceed \\`${maxSize}\\` bytes. Given size: \\`${givenSize}\\` bytes.`,\n    )\n  }\n}\n\n/**\n * Thrown when a slice offset is out-of-bounds.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.slice(Bytes.from([1, 2, 3]), 4)\n * // @error: Bytes.SliceOffsetOutOfBoundsError: Slice starting at offset `4` is out-of-bounds (size: `3`).\n * ```\n */\nexport class SliceOffsetOutOfBoundsError extends Errors.BaseError {\n  override readonly name = 'Bytes.SliceOffsetOutOfBoundsError'\n\n  constructor({\n    offset,\n    position,\n    size,\n  }: { offset: number; position: 'start' | 'end'; size: number }) {\n    super(\n      `Slice ${\n        position === 'start' ? 'starting' : 'ending'\n      } at offset \\`${offset}\\` is out-of-bounds (size: \\`${size}\\`).`,\n    )\n  }\n}\n\n/**\n * Thrown when a the padding size exceeds the maximum allowed size.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.padLeft(Bytes.fromString('Hello World!'), 8)\n * // @error: [Bytes.SizeExceedsPaddingSizeError: Bytes size (`12`) exceeds padding size (`8`).\n * ```\n */\nexport class SizeExceedsPaddingSizeError extends Errors.BaseError {\n  override readonly name = 'Bytes.SizeExceedsPaddingSizeError'\n\n  constructor({\n    size,\n    targetSize,\n    type,\n  }: {\n    size: number\n    targetSize: number\n    type: 'Hex' | 'Bytes'\n  }) {\n    super(\n      `${type.charAt(0).toUpperCase()}${type\n        .slice(1)\n        .toLowerCase()} size (\\`${size}\\`) exceeds padding size (\\`${targetSize}\\`).`,\n    )\n  }\n}\n","import { ripemd160 as noble_ripemd160 } from '@noble/hashes/ripemd160'\nimport { keccak_256 as noble_keccak256 } from '@noble/hashes/sha3'\nimport { sha256 as noble_sha256 } from '@noble/hashes/sha256'\nimport * as Bytes from './Bytes.js'\nimport type * as Errors from './Errors.js'\nimport * as Hex from './Hex.js'\n\n/**\n * Calculates the [Keccak256](https://en.wikipedia.org/wiki/SHA-3) hash of a {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n *\n * This function is a re-export of `keccak_256` from [`@noble/hashes`](https://github.com/paulmillr/noble-hashes), an audited & minimal JS hashing library.\n *\n * @example\n * ```ts twoslash\n * import { Hash } from 'ox'\n *\n * Hash.keccak256('0xdeadbeef')\n * // @log: '0xd4fd4e189132273036449fc9e11198c739161b4c0116a9a2dccdfa1c492006f1'\n * ```\n *\n * @example\n * ### Calculate Hash of a String\n *\n * ```ts twoslash\n * import { Hash, Hex } from 'ox'\n *\n * Hash.keccak256(Hex.fromString('hello world'))\n * // @log: '0x3ea2f1d0abf3fc66cf29eebb70cbd4e7fe762ef8a09bcc06c8edf641230afec0'\n * ```\n *\n * @example\n * ### Configure Return Type\n *\n * ```ts twoslash\n * import { Hash } from 'ox'\n *\n * Hash.keccak256('0xdeadbeef', { as: 'Bytes' })\n * // @log: Uint8Array [...]\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n * @param options - Options.\n * @returns Keccak256 hash.\n */\nexport function keccak256<\n  value extends Hex.Hex | Bytes.Bytes,\n  as extends 'Hex' | 'Bytes' =\n    | (value extends Hex.Hex ? 'Hex' : never)\n    | (value extends Bytes.Bytes ? 'Bytes' : never),\n>(\n  value: value | Hex.Hex | Bytes.Bytes,\n  options: keccak256.Options<as> = {},\n): keccak256.ReturnType<as> {\n  const { as = typeof value === 'string' ? 'Hex' : 'Bytes' } = options\n  const bytes = noble_keccak256(Bytes.from(value))\n  if (as === 'Bytes') return bytes as never\n  return Hex.fromBytes(bytes) as never\n}\n\nexport declare namespace keccak256 {\n  type Options<as extends 'Hex' | 'Bytes' = 'Hex' | 'Bytes'> = {\n    /** The return type. @default 'Hex' */\n    as?: as | 'Hex' | 'Bytes' | undefined\n  }\n\n  type ReturnType<as extends 'Hex' | 'Bytes' = 'Hex' | 'Bytes'> =\n    | (as extends 'Bytes' ? Bytes.Bytes : never)\n    | (as extends 'Hex' ? Hex.Hex : never)\n\n  type ErrorType =\n    | Bytes.from.ErrorType\n    | Hex.fromBytes.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Calculates the [Ripemd160](https://en.wikipedia.org/wiki/RIPEMD) hash of a {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n *\n * This function is a re-export of `ripemd160` from [`@noble/hashes`](https://github.com/paulmillr/noble-hashes), an audited & minimal JS hashing library.\n *\n * @example\n * ```ts twoslash\n * import { Hash } from 'ox'\n *\n * Hash.ripemd160('0xdeadbeef')\n * // '0x226821c2f5423e11fe9af68bd285c249db2e4b5a'\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n * @param options - Options.\n * @returns Ripemd160 hash.\n */\nexport function ripemd160<\n  value extends Hex.Hex | Bytes.Bytes,\n  as extends 'Hex' | 'Bytes' =\n    | (value extends Hex.Hex ? 'Hex' : never)\n    | (value extends Bytes.Bytes ? 'Bytes' : never),\n>(\n  value: value | Hex.Hex | Bytes.Bytes,\n  options: ripemd160.Options<as> = {},\n): ripemd160.ReturnType<as> {\n  const { as = typeof value === 'string' ? 'Hex' : 'Bytes' } = options\n  const bytes = noble_ripemd160(Bytes.from(value))\n  if (as === 'Bytes') return bytes as never\n  return Hex.fromBytes(bytes) as never\n}\n\nexport declare namespace ripemd160 {\n  type Options<as extends 'Hex' | 'Bytes' = 'Hex' | 'Bytes'> = {\n    /** The return type. @default 'Hex' */\n    as?: as | 'Hex' | 'Bytes' | undefined\n  }\n\n  type ReturnType<as extends 'Hex' | 'Bytes' = 'Hex' | 'Bytes'> =\n    | (as extends 'Bytes' ? Bytes.Bytes : never)\n    | (as extends 'Hex' ? Hex.Hex : never)\n\n  type ErrorType =\n    | Bytes.from.ErrorType\n    | Hex.fromBytes.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Calculates the [Sha256](https://en.wikipedia.org/wiki/SHA-256) hash of a {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n *\n * This function is a re-export of `sha256` from [`@noble/hashes`](https://github.com/paulmillr/noble-hashes), an audited & minimal JS hashing library.\n *\n * @example\n * ```ts twoslash\n * import { Hash } from 'ox'\n *\n * Hash.sha256('0xdeadbeef')\n * // '0x5f78c33274e43fa9de5659265c1d917e25c03722dcb0b8d27db8d5feaa813953'\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n * @param options - Options.\n * @returns Sha256 hash.\n */\nexport function sha256<\n  value extends Hex.Hex | Bytes.Bytes,\n  as extends 'Hex' | 'Bytes' =\n    | (value extends Hex.Hex ? 'Hex' : never)\n    | (value extends Bytes.Bytes ? 'Bytes' : never),\n>(\n  value: value | Hex.Hex | Bytes.Bytes,\n  options: sha256.Options<as> = {},\n): sha256.ReturnType<as> {\n  const { as = typeof value === 'string' ? 'Hex' : 'Bytes' } = options\n  const bytes = noble_sha256(Bytes.from(value))\n  if (as === 'Bytes') return bytes as never\n  return Hex.fromBytes(bytes) as never\n}\n\nexport declare namespace sha256 {\n  type Options<as extends 'Hex' | 'Bytes' = 'Hex'> = {\n    /** The return type. @default 'Hex' */\n    as?: as | 'Hex' | 'Bytes' | undefined\n  }\n\n  type ReturnType<as extends 'Hex' | 'Bytes' = 'Hex'> =\n    | (as extends 'Bytes' ? Bytes.Bytes : never)\n    | (as extends 'Hex' ? Hex.Hex : never)\n\n  type ErrorType =\n    | Bytes.from.ErrorType\n    | Hex.fromBytes.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Checks if a string is a valid hash value.\n *\n * @example\n * ```ts twoslash\n * import { Hash } from 'ox'\n *\n * Hash.validate('0x')\n * // @log: false\n *\n * Hash.validate('0x3ea2f1d0abf3fc66cf29eebb70cbd4e7fe762ef8a09bcc06c8edf641230afec0')\n * // @log: true\n * ```\n *\n * @param value - Value to check.\n * @returns Whether the value is a valid hash.\n */\nexport function validate(value: string): value is Hex.Hex {\n  return Hex.validate(value) && Hex.size(value) === 32\n}\n\nexport declare namespace validate {\n  type ErrorType =\n    | Hex.validate.ErrorType\n    | Hex.size.ErrorType\n    | Errors.GlobalErrorType\n}\n","/**\n * @internal\n *\n * Map with a LRU (Least recently used) policy.\n * @see https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU\n */\nexport class LruMap<value = unknown> extends Map<string, value> {\n  maxSize: number\n\n  constructor(size: number) {\n    super()\n    this.maxSize = size\n  }\n\n  override get(key: string) {\n    const value = super.get(key)\n\n    if (super.has(key) && value !== undefined) {\n      this.delete(key)\n      super.set(key, value)\n    }\n\n    return value\n  }\n\n  override set(key: string, value: value) {\n    super.set(key, value)\n    if (this.maxSize && this.size > this.maxSize) {\n      const firstKey = this.keys().next().value\n      if (firstKey) this.delete(firstKey)\n    }\n    return this\n  }\n}\n","import type * as Address from './Address.js'\nimport { LruMap } from './internal/lru.js'\n\nconst caches = {\n  checksum: /*#__PURE__*/ new LruMap<Address.Address>(8192),\n}\n\nexport const checksum = caches.checksum\n\n/**\n * Clears all global caches.\n *\n * @example\n * ```ts\n * import { Caches } from 'ox'\n * Caches.clear()\n * ```\n */\nexport function clear() {\n  for (const cache of Object.values(caches)) cache.clear()\n}\n","import type { Address as abitype_Address } from 'abitype'\nimport * as Bytes from './Bytes.js'\nimport * as Caches from './Caches.js'\nimport * as Errors from './Errors.js'\nimport * as Hash from './Hash.js'\nimport * as PublicKey from './PublicKey.js'\n\nconst addressRegex = /^0x[a-fA-F0-9]{40}$/\n\n/** Root type for Address. */\nexport type Address = abitype_Address\n\n/**\n * Asserts that the given value is a valid {@link ox#Address.Address}.\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.assert('0xA0Cf798816D4b9b9866b5330EEa46a18382f251e')\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.assert('0xdeadbeef')\n * // @error: InvalidAddressError: Address \"0xdeadbeef\" is invalid.\n * ```\n *\n * @param value - Value to assert if it is a valid address.\n * @param options - Assertion options.\n */\nexport function assert(\n  value: string,\n  options: assert.Options = {},\n): asserts value is Address {\n  const { strict = true } = options\n\n  if (!addressRegex.test(value))\n    throw new InvalidAddressError({\n      address: value,\n      cause: new InvalidInputError(),\n    })\n\n  if (strict) {\n    if (value.toLowerCase() === value) return\n    if (checksum(value as Address) !== value)\n      throw new InvalidAddressError({\n        address: value,\n        cause: new InvalidChecksumError(),\n      })\n  }\n}\n\nexport declare namespace assert {\n  type Options = {\n    /**\n     * Enables strict mode. Whether or not to compare the address against its checksum.\n     *\n     * @default true\n     */\n    strict?: boolean | undefined\n  }\n\n  type ErrorType = InvalidAddressError | Errors.GlobalErrorType\n}\n\n/**\n * Computes the checksum address for the given {@link ox#Address.Address}.\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.checksum('0xa0cf798816d4b9b9866b5330eea46a18382f251e')\n * // @log: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'\n * ```\n *\n * @param address - The address to compute the checksum for.\n * @returns The checksummed address.\n */\nexport function checksum(address: string): Address {\n  if (Caches.checksum.has(address)) return Caches.checksum.get(address)!\n\n  assert(address, { strict: false })\n\n  const hexAddress = address.substring(2).toLowerCase()\n  const hash = Hash.keccak256(Bytes.fromString(hexAddress), { as: 'Bytes' })\n\n  const characters = hexAddress.split('')\n  for (let i = 0; i < 40; i += 2) {\n    if (hash[i >> 1]! >> 4 >= 8 && characters[i]) {\n      characters[i] = characters[i]!.toUpperCase()\n    }\n    if ((hash[i >> 1]! & 0x0f) >= 8 && characters[i + 1]) {\n      characters[i + 1] = characters[i + 1]!.toUpperCase()\n    }\n  }\n\n  const result = `0x${characters.join('')}` as const\n  Caches.checksum.set(address, result)\n  return result\n}\n\nexport declare namespace checksum {\n  type ErrorType =\n    | assert.ErrorType\n    | Hash.keccak256.ErrorType\n    | Bytes.fromString.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Converts a stringified address to a typed (checksummed) {@link ox#Address.Address}.\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.from('0xa0cf798816d4b9b9866b5330eea46a18382f251e')\n * // @log: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.from('0xa0cf798816d4b9b9866b5330eea46a18382f251e', {\n *   checksum: false\n * })\n * // @log: '0xa0cf798816d4b9b9866b5330eea46a18382f251e'\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.from('hello')\n * // @error: InvalidAddressError: Address \"0xa\" is invalid.\n * ```\n *\n * @param address - An address string to convert to a typed Address.\n * @param options - Conversion options.\n * @returns The typed Address.\n */\nexport function from(address: string, options: from.Options = {}): Address {\n  const { checksum: checksumVal = false } = options\n  assert(address)\n  if (checksumVal) return checksum(address)\n  return address as Address\n}\n\nexport declare namespace from {\n  type Options = {\n    /**\n     * Whether to checksum the address.\n     *\n     * @default false\n     */\n    checksum?: boolean | undefined\n  }\n\n  type ErrorType =\n    | assert.ErrorType\n    | checksum.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Converts an ECDSA public key to an {@link ox#Address.Address}.\n *\n * @example\n * ```ts twoslash\n * import { Address, PublicKey } from 'ox'\n *\n * const publicKey = PublicKey.from(\n *   '0x048318535b54105d4a7aae60c08fc45f9687181b4fdfc625bd1a753fa7397fed753547f11ca8696646f2f3acb08e31016afac23e630c5d11f59f61fef57b0d2aa5',\n * )\n * const address = Address.fromPublicKey(publicKey)\n * // @log: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266'\n * ```\n *\n * @param publicKey - The ECDSA public key to convert to an {@link ox#Address.Address}.\n * @param options - Conversion options.\n * @returns The {@link ox#Address.Address} corresponding to the public key.\n */\nexport function fromPublicKey(\n  publicKey: PublicKey.PublicKey,\n  options: fromPublicKey.Options = {},\n): Address {\n  const address = Hash.keccak256(\n    `0x${PublicKey.toHex(publicKey).slice(4)}`,\n  ).substring(26)\n  return from(`0x${address}`, options)\n}\n\nexport declare namespace fromPublicKey {\n  type Options = {\n    /**\n     * Whether to checksum the address.\n     *\n     * @default false\n     */\n    checksum?: boolean | undefined\n  }\n\n  type ErrorType =\n    | Hash.keccak256.ErrorType\n    | PublicKey.toHex.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Checks if two {@link ox#Address.Address} are equal.\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.isEqual(\n *   '0xa0cf798816d4b9b9866b5330eea46a18382f251e',\n *   '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'\n * )\n * // @log: true\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.isEqual(\n *   '0xa0cf798816d4b9b9866b5330eea46a18382f251e',\n *   '0xA0Cf798816D4b9b9866b5330EEa46a18382f251f'\n * )\n * // @log: false\n * ```\n *\n * @param addressA - The first address to compare.\n * @param addressB - The second address to compare.\n * @returns Whether the addresses are equal.\n */\nexport function isEqual(addressA: Address, addressB: Address): boolean {\n  assert(addressA, { strict: false })\n  assert(addressB, { strict: false })\n  return addressA.toLowerCase() === addressB.toLowerCase()\n}\n\nexport declare namespace isEqual {\n  type ErrorType = assert.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Checks if the given address is a valid {@link ox#Address.Address}.\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.validate('0xA0Cf798816D4b9b9866b5330EEa46a18382f251e')\n * // @log: true\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.validate('0xdeadbeef')\n * // @log: false\n * ```\n *\n * @param address - Value to check if it is a valid address.\n * @param options - Check options.\n * @returns Whether the address is a valid address.\n */\nexport function validate(\n  address: string,\n  options: validate.Options = {},\n): address is Address {\n  const { strict = true } = options ?? {}\n  try {\n    assert(address, { strict })\n    return true\n  } catch {\n    return false\n  }\n}\n\nexport declare namespace validate {\n  type Options = {\n    /**\n     * Enables strict mode. Whether or not to compare the address against its checksum.\n     *\n     * @default true\n     */\n    strict?: boolean | undefined\n  }\n}\n\n/**\n * Thrown when an address is invalid.\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.from('0x123')\n * // @error: Address.InvalidAddressError: Address `0x123` is invalid.\n * ```\n */\nexport class InvalidAddressError<\n  cause extends InvalidInputError | InvalidChecksumError =\n    | InvalidInputError\n    | InvalidChecksumError,\n> extends Errors.BaseError<cause> {\n  override readonly name = 'Address.InvalidAddressError'\n\n  constructor({ address, cause }: { address: string; cause: cause }) {\n    super(`Address \"${address}\" is invalid.`, {\n      cause,\n    })\n  }\n}\n\n/** Thrown when an address is not a 20 byte (40 hexadecimal character) value. */\nexport class InvalidInputError extends Errors.BaseError {\n  override readonly name = 'Address.InvalidInputError'\n\n  constructor() {\n    super('Address is not a 20 byte (40 hexadecimal character) value.')\n  }\n}\n\n/** Thrown when an address does not match its checksum counterpart. */\nexport class InvalidChecksumError extends Errors.BaseError {\n  override readonly name = 'Address.InvalidChecksumError'\n\n  constructor() {\n    super('Address does not match its checksum counterpart.')\n  }\n}\n","import type * as abitype from 'abitype'\nimport type * as Abi from '../Abi.js'\nimport type * as AbiItem from '../AbiItem.js'\nimport type * as AbiParameters from '../AbiParameters.js'\nimport * as Address from '../Address.js'\nimport * as Errors from '../Errors.js'\nimport type {\n  Compute,\n  IsNever,\n  IsUnion,\n  TypeErrorMessage,\n  UnionToTuple,\n} from './types.js'\n\n/** @internal */\nexport type ExtractArgs<\n  abi extends Abi.Abi | readonly unknown[] = Abi.Abi,\n  name extends AbiItem.Name<abi> = AbiItem.Name<abi>,\n> = abitype.AbiParametersToPrimitiveTypes<\n  AbiItem.FromAbi<abi extends Abi.Abi ? abi : Abi.Abi, name>['inputs'],\n  'inputs'\n> extends infer args\n  ? [args] extends [never]\n    ? readonly unknown[]\n    : args\n  : readonly unknown[]\n\n/** @internal */\nexport type ExtractForArgs<\n  abi extends Abi.Abi,\n  name extends AbiItem.Name<abi>,\n  args extends ExtractArgs<abi, name>,\n> = IsUnion<name> extends true\n  ? {\n      [key in keyof abi]: abi[key] extends { name: name } ? abi[key] : never\n    }[number]\n  : AbiItem.FromAbi<abi, name> extends infer abiItem extends AbiItem.AbiItem & {\n        inputs: readonly abitype.AbiParameter[]\n      }\n    ? IsUnion<abiItem> extends true // narrow overloads using `args` by converting to tuple and filtering out overloads that don't match\n      ? UnionToTuple<abiItem> extends infer abiItems extends\n          readonly (AbiItem.AbiItem & {\n            inputs: readonly abitype.AbiParameter[]\n          })[]\n        ? IsNever<TupleToUnion<abiItems, abi, name, args>> extends true\n          ? Compute<\n              abiItems[0] & {\n                readonly overloads: UnionToTuple<\n                  Exclude<abiItems[number], abiItems[0]>\n                >\n              }\n            >\n          : TupleToUnion<abiItems, abi, name, args> // convert back to union (removes `never` tuple entries: `['foo', never, 'bar'][number]` => `'foo' | 'bar'`)\n        : never\n      : abiItem\n    : never\n\n/** @internal */\nexport type TupleToUnion<\n  abiItems extends readonly {\n    inputs: readonly abitype.AbiParameter[]\n  }[],\n  abi extends Abi.Abi,\n  name extends AbiItem.Name<abi>,\n  args extends ExtractArgs<abi, name>,\n> = {\n  [k in keyof abiItems]: (\n    readonly [] extends args\n      ? readonly [] // fallback to `readonly []` if `args` has no value (e.g. `args` property not provided)\n      : args\n  ) extends abitype.AbiParametersToPrimitiveTypes<\n    abiItems[k]['inputs'],\n    'inputs'\n  >\n    ? abiItems[k]\n    : never\n}[number]\n\n/** @internal */\nexport type ErrorSignature<\n  name extends string = string,\n  parameters extends string = string,\n> = `error ${name}(${parameters})`\n\n/** @internal */\nexport type IsErrorSignature<signature extends string> =\n  signature extends ErrorSignature<infer name> ? IsName<name> : false\n\n/** @internal */\nexport type EventSignature<\n  name extends string = string,\n  parameters extends string = string,\n> = `event ${name}(${parameters})`\n\n/** @internal */\nexport type IsEventSignature<signature extends string> =\n  signature extends EventSignature<infer name> ? IsName<name> : false\n\n/** @internal */\nexport type FunctionSignature<\n  name extends string = string,\n  tail extends string = string,\n> = `function ${name}(${tail}`\nexport type IsFunctionSignature<signature> =\n  signature extends FunctionSignature<infer name>\n    ? IsName<name> extends true\n      ? signature extends ValidFunctionSignatures\n        ? true\n        : // Check that `Parameters` is not absorbing other types (e.g. `returns`)\n          signature extends `function ${string}(${infer parameters})`\n          ? parameters extends InvalidFunctionParameters\n            ? false\n            : true\n          : false\n      : false\n    : false\n/** @internal */\nexport type Scope = 'public' | 'external' // `internal` or `private` functions wouldn't make it to ABI so can ignore\n\n/** @internal */\nexport type Returns = `returns (${string})` | `returns(${string})`\n\n// Almost all valid function signatures, except `function ${string}(${infer parameters})` since `parameters` can absorb returns\n/** @internal */\nexport type ValidFunctionSignatures =\n  | `function ${string}()`\n  // basic\n  | `function ${string}() ${Returns}`\n  | `function ${string}() ${abitype.AbiStateMutability}`\n  | `function ${string}() ${Scope}`\n  // combinations\n  | `function ${string}() ${abitype.AbiStateMutability} ${Returns}`\n  | `function ${string}() ${Scope} ${Returns}`\n  | `function ${string}() ${Scope} ${abitype.AbiStateMutability}`\n  | `function ${string}() ${Scope} ${abitype.AbiStateMutability} ${Returns}`\n  // Parameters\n  | `function ${string}(${string}) ${Returns}`\n  | `function ${string}(${string}) ${abitype.AbiStateMutability}`\n  | `function ${string}(${string}) ${Scope}`\n  | `function ${string}(${string}) ${abitype.AbiStateMutability} ${Returns}`\n  | `function ${string}(${string}) ${Scope} ${Returns}`\n  | `function ${string}(${string}) ${Scope} ${abitype.AbiStateMutability}`\n  | `function ${string}(${string}) ${Scope} ${abitype.AbiStateMutability} ${Returns}`\n\n/** @internal */\nexport type StructSignature<\n  name extends string = string,\n  properties extends string = string,\n> = `struct ${name} {${properties}}`\n\n/** @internal */\nexport type IsStructSignature<signature extends string> =\n  signature extends StructSignature<infer name> ? IsName<name> : false\n\n/** @internal */\nexport type ConstructorSignature<tail extends string = string> =\n  `constructor(${tail}`\n\n/** @internal */\nexport type IsConstructorSignature<signature> =\n  signature extends ConstructorSignature\n    ? signature extends ValidConstructorSignatures\n      ? true\n      : false\n    : false\n\n/** @internal */\nexport type ValidConstructorSignatures =\n  | `constructor(${string})`\n  | `constructor(${string}) payable`\n\n/** @internal */\nexport type FallbackSignature<abiStateMutability extends '' | ' payable' = ''> =\n  `fallback() external${abiStateMutability}`\n\n/** @internal */\nexport type ReceiveSignature = 'receive() external payable'\n\n// TODO: Maybe use this for signature validation one day\n// https://twitter.com/devanshj__/status/1610423724708343808\n/** @internal */\nexport type IsSignature<type extends string> =\n  | (IsErrorSignature<type> extends true ? true : never)\n  | (IsEventSignature<type> extends true ? true : never)\n  | (IsFunctionSignature<type> extends true ? true : never)\n  | (IsStructSignature<type> extends true ? true : never)\n  | (IsConstructorSignature<type> extends true ? true : never)\n  | (type extends FallbackSignature ? true : never)\n  | (type extends ReceiveSignature ? true : never) extends infer condition\n  ? [condition] extends [never]\n    ? false\n    : true\n  : false\n\n/** @internal */\nexport type Signature<\n  string1 extends string,\n  string2 extends string | unknown = unknown,\n> = IsSignature<string1> extends true\n  ? string1\n  : string extends string1 // if exactly `string` (not narrowed), then pass through as valid\n    ? string1\n    : TypeErrorMessage<`Signature \"${string1}\" is invalid${string2 extends string\n        ? ` at position ${string2}`\n        : ''}.`>\n\n/** @internal */\nexport type Signatures<signatures extends readonly string[]> = {\n  [key in keyof signatures]: Signature<signatures[key], key>\n}\n\n/** @internal */\nexport type IsName<name extends string> = name extends ''\n  ? false\n  : ValidateName<name> extends name\n    ? true\n    : false\n\n/** @internal */\nexport type ValidateName<\n  name extends string,\n  checkCharacters extends boolean = false,\n> = name extends `${string}${' '}${string}`\n  ? TypeErrorMessage<`Identifier \"${name}\" cannot contain whitespace.`>\n  : IsSolidityKeyword<name> extends true\n    ? TypeErrorMessage<`\"${name}\" is a protected Solidity keyword.`>\n    : name extends `${number}`\n      ? TypeErrorMessage<`Identifier \"${name}\" cannot be a number string.`>\n      : name extends `${number}${string}`\n        ? TypeErrorMessage<`Identifier \"${name}\" cannot start with a number.`>\n        : checkCharacters extends true\n          ? IsValidCharacter<name> extends true\n            ? name\n            : TypeErrorMessage<`\"${name}\" contains invalid character.`>\n          : name\n\n/** @internal */\nexport type IsSolidityKeyword<type extends string> =\n  type extends SolidityKeywords ? true : false\n\n/** @internal */\nexport type SolidityKeywords =\n  | 'after'\n  | 'alias'\n  | 'anonymous'\n  | 'apply'\n  | 'auto'\n  | 'byte'\n  | 'calldata'\n  | 'case'\n  | 'catch'\n  | 'constant'\n  | 'copyof'\n  | 'default'\n  | 'defined'\n  | 'error'\n  | 'event'\n  | 'external'\n  | 'false'\n  | 'final'\n  | 'function'\n  | 'immutable'\n  | 'implements'\n  | 'in'\n  | 'indexed'\n  | 'inline'\n  | 'internal'\n  | 'let'\n  | 'mapping'\n  | 'match'\n  | 'memory'\n  | 'mutable'\n  | 'null'\n  | 'of'\n  | 'override'\n  | 'partial'\n  | 'private'\n  | 'promise'\n  | 'public'\n  | 'pure'\n  | 'reference'\n  | 'relocatable'\n  | 'return'\n  | 'returns'\n  | 'sizeof'\n  | 'static'\n  | 'storage'\n  | 'struct'\n  | 'super'\n  | 'supports'\n  | 'switch'\n  | 'this'\n  | 'true'\n  | 'try'\n  | 'typedef'\n  | 'typeof'\n  | 'var'\n  | 'view'\n  | 'virtual'\n  | `address${`[${string}]` | ''}`\n  | `bool${`[${string}]` | ''}`\n  | `string${`[${string}]` | ''}`\n  | `tuple${`[${string}]` | ''}`\n  | `bytes${number | ''}${`[${string}]` | ''}`\n  | `${'u' | ''}int${number | ''}${`[${string}]` | ''}`\n\n/** @internal */\nexport type IsValidCharacter<character extends string> =\n  character extends `${ValidCharacters}${infer tail}`\n    ? tail extends ''\n      ? true\n      : IsValidCharacter<tail>\n    : false\n\n// biome-ignore format: no formatting\n/** @internal */\nexport type ValidCharacters =\n  // uppercase letters\n  | 'A' | 'B' | 'C' | 'D' | 'E' | 'F' | 'G' | 'H' | 'I' | 'J' | 'K' | 'L' | 'M' | 'N' | 'O' | 'P' | 'Q' | 'R' | 'S' | 'T' | 'U' | 'V' | 'W' | 'X' | 'Y' | 'Z'\n  // lowercase letters\n  | 'a' | 'b' | 'c' | 'd' | 'e' | 'f' | 'g' | 'h' | 'i' | 'j' | 'k' | 'l' | 'm' | 'n' | 'o' | 'p' | 'q' | 'r' | 's' | 't' | 'u' | 'v' | 'w' | 'x' | 'y' | 'z'\n  // numbers\n  | '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9'\n  // special characters\n  | '_' | '$'\n\n// Template string inference can absorb `returns`:\n// type Result = `function foo(string) return s (uint256)` extends `function ${string}(${infer Parameters})` ? Parameters : never\n// //   ^? type Result = \"string ) return s (uint256\"\n// So we need to validate against `returns` keyword with all combinations of whitespace\n/** @internal */\nexport type InvalidFunctionParameters =\n  | `${string}${MangledReturns} (${string}`\n  | `${string}) ${MangledReturns}${string}`\n  | `${string})${string}${MangledReturns}${string}(${string}`\n\n// r_e_t_u_r_n_s\n/** @internal */\nexport type MangledReturns =\n  // Single\n  | `r${string}eturns`\n  | `re${string}turns`\n  | `ret${string}urns`\n  | `retu${string}rns`\n  | `retur${string}ns`\n  | `return${string}s`\n  // Double\n  // `r_e*`\n  | `r${string}e${string}turns`\n  | `r${string}et${string}urns`\n  | `r${string}etu${string}rns`\n  | `r${string}etur${string}ns`\n  | `r${string}eturn${string}s`\n  // `re_t*`\n  | `re${string}t${string}urns`\n  | `re${string}tu${string}rns`\n  | `re${string}tur${string}ns`\n  | `re${string}turn${string}s`\n  // `ret_u*`\n  | `ret${string}u${string}rns`\n  | `ret${string}ur${string}ns`\n  | `ret${string}urn${string}s`\n  // `retu_r*`\n  | `retu${string}r${string}ns`\n  | `retu${string}rn${string}s`\n  // `retur_n*`\n  | `retur${string}n${string}s`\n  // Triple\n  // `r_e_t*`\n  | `r${string}e${string}t${string}urns`\n  | `r${string}e${string}tu${string}rns`\n  | `r${string}e${string}tur${string}ns`\n  | `r${string}e${string}turn${string}s`\n  // `re_t_u*`\n  | `re${string}t${string}u${string}rns`\n  | `re${string}t${string}ur${string}ns`\n  | `re${string}t${string}urn${string}s`\n  // `ret_u_r*`\n  | `ret${string}u${string}r${string}ns`\n  | `ret${string}u${string}rn${string}s`\n  // `retu_r_n*`\n  | `retu${string}r${string}n${string}s`\n  // Quadruple\n  // `r_e_t_u*`\n  | `r${string}e${string}t${string}u${string}rns`\n  | `r${string}e${string}t${string}ur${string}ns`\n  | `r${string}e${string}t${string}urn${string}s`\n  // `re_t_u_r*`\n  | `re${string}t${string}u${string}r${string}ns`\n  | `re${string}t${string}u${string}rn${string}s`\n  // `ret_u_r_n*`\n  | `ret${string}u${string}r${string}n${string}s`\n  // Quintuple\n  // `r_e_t_u_r*`\n  | `r${string}e${string}t${string}u${string}r${string}ns`\n  | `r${string}e${string}t${string}u${string}rn${string}s`\n  // `re_t_u_r_n*`\n  | `re${string}t${string}u${string}r${string}n${string}s`\n  // Sextuple\n  // `r_e_t_u_r_n_s`\n  | `r${string}e${string}t${string}u${string}r${string}n${string}s`\n\n/** @internal */\nexport type Widen<type> =\n  | ([unknown] extends [type] ? unknown : never)\n  | (type extends Function ? type : never)\n  | (type extends abitype.ResolvedRegister['bigIntType'] ? bigint : never)\n  | (type extends boolean ? boolean : never)\n  | (type extends abitype.ResolvedRegister['intType'] ? number : never)\n  | (type extends string\n      ? type extends abitype.ResolvedRegister['addressType']\n        ? abitype.ResolvedRegister['addressType']\n        : type extends abitype.ResolvedRegister['bytesType']['inputs']\n          ? abitype.ResolvedRegister['bytesType']\n          : string\n      : never)\n  | (type extends readonly [] ? readonly [] : never)\n  | (type extends Record<string, unknown>\n      ? { [K in keyof type]: Widen<type[K]> }\n      : never)\n  | (type extends { length: number }\n      ? {\n          [K in keyof type]: Widen<type[K]>\n        } extends infer Val extends readonly unknown[]\n        ? readonly [...Val]\n        : never\n      : never)\n\n/** @internal */\nexport function normalizeSignature(signature: string): string {\n  let active = true\n  let current = ''\n  let level = 0\n  let result = ''\n  let valid = false\n\n  for (let i = 0; i < signature.length; i++) {\n    const char = signature[i]!\n\n    // If the character is a separator, we want to reactivate.\n    if (['(', ')', ','].includes(char)) active = true\n\n    // If the character is a \"level\" token, we want to increment/decrement.\n    if (char === '(') level++\n    if (char === ')') level--\n\n    // If we aren't active, we don't want to mutate the result.\n    if (!active) continue\n\n    // If level === 0, we are at the definition level.\n    if (level === 0) {\n      if (char === ' ' && ['event', 'function', 'error', ''].includes(result))\n        result = ''\n      else {\n        result += char\n\n        // If we are at the end of the definition, we must be finished.\n        if (char === ')') {\n          valid = true\n          break\n        }\n      }\n\n      continue\n    }\n\n    // Ignore spaces\n    if (char === ' ') {\n      // If the previous character is a separator, and the current section isn't empty, we want to deactivate.\n      if (signature[i - 1] !== ',' && current !== ',' && current !== ',(') {\n        current = ''\n        active = false\n      }\n      continue\n    }\n\n    result += char\n    current += char\n  }\n\n  if (!valid) throw new Errors.BaseError('Unable to normalize signature.')\n\n  return result\n}\n\n/** @internal */\nexport declare namespace normalizeSignature {\n  export type ErrorType = Errors.BaseError | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function isArgOfType(\n  arg: unknown,\n  abiParameter: AbiParameters.Parameter,\n): boolean {\n  const argType = typeof arg\n  const abiParameterType = abiParameter.type\n  switch (abiParameterType) {\n    case 'address':\n      return Address.validate(arg as Address.Address, { strict: false })\n    case 'bool':\n      return argType === 'boolean'\n    case 'function':\n      return argType === 'string'\n    case 'string':\n      return argType === 'string'\n    default: {\n      if (abiParameterType === 'tuple' && 'components' in abiParameter)\n        return Object.values(abiParameter.components).every(\n          (component, index) => {\n            return isArgOfType(\n              Object.values(arg as unknown[] | Record<string, unknown>)[index],\n              component as AbiParameters.Parameter,\n            )\n          },\n        )\n\n      // `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\n      // https://regexr.com/6v8hp\n      if (\n        /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/.test(\n          abiParameterType,\n        )\n      )\n        return argType === 'number' || argType === 'bigint'\n\n      // `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\n      // https://regexr.com/6va55\n      if (/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/.test(abiParameterType))\n        return argType === 'string' || arg instanceof Uint8Array\n\n      // fixed-length (`<type>[M]`) and dynamic (`<type>[]`) arrays\n      // https://regexr.com/6va6i\n      if (/[a-z]+[1-9]{0,3}(\\[[0-9]{0,}\\])+$/.test(abiParameterType)) {\n        return (\n          Array.isArray(arg) &&\n          arg.every((x: unknown) =>\n            isArgOfType(x, {\n              ...abiParameter,\n              // Pop off `[]` or `[M]` from end of type\n              type: abiParameterType.replace(/(\\[[0-9]{0,}\\])$/, ''),\n            } as AbiParameters.Parameter),\n          )\n        )\n      }\n\n      return false\n    }\n  }\n}\n\n/** @internal */\nexport function getAmbiguousTypes(\n  sourceParameters: readonly AbiParameters.Parameter[],\n  targetParameters: readonly AbiParameters.Parameter[],\n  args: ExtractArgs,\n): AbiParameters.Parameter['type'][] | undefined {\n  for (const parameterIndex in sourceParameters) {\n    const sourceParameter = sourceParameters[parameterIndex]!\n    const targetParameter = targetParameters[parameterIndex]!\n\n    if (\n      sourceParameter.type === 'tuple' &&\n      targetParameter.type === 'tuple' &&\n      'components' in sourceParameter &&\n      'components' in targetParameter\n    )\n      return getAmbiguousTypes(\n        sourceParameter.components,\n        targetParameter.components,\n        (args as any)[parameterIndex],\n      )\n\n    const types = [sourceParameter.type, targetParameter.type]\n\n    const ambiguous = (() => {\n      if (types.includes('address') && types.includes('bytes20')) return true\n      if (types.includes('address') && types.includes('string'))\n        return Address.validate(args[parameterIndex] as Address.Address, {\n          strict: false,\n        })\n      if (types.includes('address') && types.includes('bytes'))\n        return Address.validate(args[parameterIndex] as Address.Address, {\n          strict: false,\n        })\n      return false\n    })()\n\n    if (ambiguous) return types\n  }\n\n  return\n}\n","import * as abitype from 'abitype'\nimport type * as Abi from './Abi.js'\nimport * as Errors from './Errors.js'\nimport * as Hash from './Hash.js'\nimport * as Hex from './Hex.js'\nimport * as internal from './internal/abiItem.js'\nimport type { UnionCompute } from './internal/types.js'\n\n/** Root type for an item on an {@link ox#Abi.Abi}. */\nexport type AbiItem = Abi.Abi[number]\n\n/**\n * Extracts an {@link ox#AbiItem.AbiItem} item from an {@link ox#Abi.Abi}, given a name.\n *\n * @example\n * ```ts twoslash\n * import { Abi, AbiItem } from 'ox'\n *\n * const abi = Abi.from([\n *   'error Foo(string)',\n *   'function foo(string)',\n *   'event Bar(uint256)',\n * ])\n *\n * type Foo = AbiItem.FromAbi<typeof abi, 'Foo'>\n * //   ^?\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n */\nexport type FromAbi<\n  abi extends Abi.Abi,\n  name extends ExtractNames<abi>,\n> = Extract<abi[number], { name: name }>\n\n/**\n * Extracts the names of all {@link ox#AbiItem.AbiItem} items in an {@link ox#Abi.Abi}.\n *\n * @example\n * ```ts twoslash\n * import { Abi, AbiItem } from 'ox'\n *\n * const abi = Abi.from([\n *   'error Foo(string)',\n *   'function foo(string)',\n *   'event Bar(uint256)',\n * ])\n *\n * type names = AbiItem.Name<typeof abi>\n * //   ^?\n *\n * ```\n */\nexport type Name<abi extends Abi.Abi | readonly unknown[] = Abi.Abi> =\n  abi extends Abi.Abi ? ExtractNames<abi> : string\n\nexport type ExtractNames<abi extends Abi.Abi> = Extract<\n  abi[number],\n  { name: string }\n>['name']\n\n/**\n * Formats an {@link ox#AbiItem.AbiItem} into a **Human Readable ABI Item**.\n *\n * @example\n * ```ts twoslash\n * import { AbiItem } from 'ox'\n *\n * const formatted = AbiItem.format({\n *   type: 'function',\n *   name: 'approve',\n *   stateMutability: 'nonpayable',\n *   inputs: [\n *     {\n *       name: 'spender',\n *       type: 'address',\n *     },\n *     {\n *       name: 'amount',\n *       type: 'uint256',\n *     },\n *   ],\n *   outputs: [{ type: 'bool' }],\n * })\n *\n * formatted\n * //    ^?\n *\n *\n * ```\n *\n * @param abiItem - The ABI Item to format.\n * @returns The formatted ABI Item  .\n */\nexport function format<const abiItem extends AbiItem>(\n  abiItem: abiItem | AbiItem,\n): abitype.FormatAbiItem<abiItem> {\n  return abitype.formatAbiItem(abiItem) as never\n}\n\nexport declare namespace format {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Parses an arbitrary **JSON ABI Item** or **Human Readable ABI Item** into a typed {@link ox#AbiItem.AbiItem}.\n *\n * @example\n * ### JSON ABIs\n *\n * ```ts twoslash\n * import { AbiItem } from 'ox'\n *\n * const abiItem = AbiItem.from({\n *   type: 'function',\n *   name: 'approve',\n *   stateMutability: 'nonpayable',\n *   inputs: [\n *     {\n *       name: 'spender',\n *       type: 'address',\n *     },\n *     {\n *       name: 'amount',\n *       type: 'uint256',\n *     },\n *   ],\n *   outputs: [{ type: 'bool' }],\n * })\n *\n * abiItem\n * //^?\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n * @example\n * ### Human Readable ABIs\n *\n * A Human Readable ABI can be parsed into a typed ABI object:\n *\n * ```ts twoslash\n * import { AbiItem } from 'ox'\n *\n * const abiItem = AbiItem.from(\n *   'function approve(address spender, uint256 amount) returns (bool)' // [!code hl]\n * )\n *\n * abiItem\n * //^?\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n * @example\n * It is possible to specify `struct`s along with your definitions:\n *\n * ```ts twoslash\n * import { AbiItem } from 'ox'\n *\n * const abiItem = AbiItem.from([\n *   'struct Foo { address spender; uint256 amount; }', // [!code hl]\n *   'function approve(Foo foo) returns (bool)',\n * ])\n *\n * abiItem\n * //^?\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n *\n *\n * @param abiItem - The ABI Item to parse.\n * @returns The typed ABI Item.\n */\nexport function from<\n  const abiItem extends AbiItem | string | readonly string[],\n>(\n  abiItem: (abiItem | AbiItem | string | readonly string[]) &\n    (\n      | (abiItem extends string ? internal.Signature<abiItem> : never)\n      | (abiItem extends readonly string[]\n          ? internal.Signatures<abiItem>\n          : never)\n      | AbiItem\n    ),\n  options: from.Options = {},\n): from.ReturnType<abiItem> {\n  const { prepare = true } = options\n  const item = (() => {\n    if (Array.isArray(abiItem)) return abitype.parseAbiItem(abiItem)\n    if (typeof abiItem === 'string')\n      return abitype.parseAbiItem(abiItem as never)\n    return abiItem\n  })() as AbiItem\n  return {\n    ...item,\n    ...(prepare ? { hash: getSignatureHash(item) } : {}),\n  } as never\n}\n\nexport declare namespace from {\n  type Options = {\n    /**\n     * Whether or not to prepare the extracted item (optimization for encoding performance).\n     * When `true`, the `hash` property is computed and included in the returned value.\n     *\n     * @default true\n     */\n    prepare?: boolean | undefined\n  }\n\n  type ReturnType<abiItem extends AbiItem | string | readonly string[]> =\n    abiItem extends string\n      ? abitype.ParseAbiItem<abiItem>\n      : abiItem extends readonly string[]\n        ? abitype.ParseAbiItem<abiItem>\n        : abiItem\n\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Extracts an {@link ox#AbiItem.AbiItem} from an {@link ox#Abi.Abi} given a name and optional arguments.\n *\n * @example\n * ABI Items can be extracted by their name using the `name` option:\n *\n * ```ts twoslash\n * import { Abi, AbiItem } from 'ox'\n *\n * const abi = Abi.from([\n *   'function foo()',\n *   'event Transfer(address owner, address to, uint256 tokenId)',\n *   'function bar(string a) returns (uint256 x)',\n * ])\n *\n * const item = AbiItem.fromAbi(abi, 'Transfer') // [!code focus]\n * //    ^?\n *\n *\n *\n *\n *\n *\n * ```\n *\n * @example\n * ### Extracting by Selector\n *\n * ABI Items can be extract by their selector when {@link ox#Hex.Hex} is provided to `name`.\n *\n * ```ts twoslash\n * import { Abi, AbiItem } from 'ox'\n *\n * const abi = Abi.from([\n *   'function foo()',\n *   'event Transfer(address owner, address to, uint256 tokenId)',\n *   'function bar(string a) returns (uint256 x)',\n * ])\n * const item = AbiItem.fromAbi(abi, '0x095ea7b3') // [!code focus]\n * //    ^?\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n * :::note\n *\n * Extracting via a hex selector is useful when extracting an ABI Item from an `eth_call` RPC response,\n * a Transaction `input`, or from Event Log `topics`.\n *\n * :::\n *\n * @param abi - The ABI to extract from.\n * @param name - The name (or selector) of the ABI item to extract.\n * @param options - Extraction options.\n * @returns The ABI item.\n */\nexport function fromAbi<\n  const abi extends Abi.Abi | readonly unknown[],\n  name extends Name<abi>,\n  const args extends internal.ExtractArgs<abi, name> | undefined = undefined,\n  //\n  allNames = Name<abi>,\n>(\n  abi: abi | Abi.Abi | readonly unknown[],\n  name: Hex.Hex | (name extends allNames ? name : never),\n  options?: fromAbi.Options<abi, name, args>,\n): fromAbi.ReturnType<abi, name, args> {\n  const { args = [], prepare = true } = (options ??\n    {}) as unknown as fromAbi.Options\n\n  const isSelector = Hex.validate(name, { strict: false })\n  const abiItems = (abi as Abi.Abi).filter((abiItem) => {\n    if (isSelector) {\n      if (abiItem.type === 'function' || abiItem.type === 'error')\n        return getSelector(abiItem) === Hex.slice(name, 0, 4)\n      if (abiItem.type === 'event') return getSignatureHash(abiItem) === name\n      return false\n    }\n    return 'name' in abiItem && abiItem.name === name\n  })\n\n  if (abiItems.length === 0) throw new NotFoundError({ name: name as string })\n  if (abiItems.length === 1)\n    return {\n      ...abiItems[0],\n      ...(prepare ? { hash: getSignatureHash(abiItems[0]!) } : {}),\n    } as never\n\n  let matchedAbiItem: AbiItem | undefined\n  for (const abiItem of abiItems) {\n    if (!('inputs' in abiItem)) continue\n    if (!args || args.length === 0) {\n      if (!abiItem.inputs || abiItem.inputs.length === 0)\n        return {\n          ...abiItem,\n          ...(prepare ? { hash: getSignatureHash(abiItem) } : {}),\n        } as never\n      continue\n    }\n    if (!abiItem.inputs) continue\n    if (abiItem.inputs.length === 0) continue\n    if (abiItem.inputs.length !== args.length) continue\n    const matched = args.every((arg, index) => {\n      const abiParameter = 'inputs' in abiItem && abiItem.inputs![index]\n      if (!abiParameter) return false\n      return internal.isArgOfType(arg, abiParameter)\n    })\n    if (matched) {\n      // Check for ambiguity against already matched parameters (e.g. `address` vs `bytes20`).\n      if (\n        matchedAbiItem &&\n        'inputs' in matchedAbiItem &&\n        matchedAbiItem.inputs\n      ) {\n        const ambiguousTypes = internal.getAmbiguousTypes(\n          abiItem.inputs,\n          matchedAbiItem.inputs,\n          args as readonly unknown[],\n        )\n        if (ambiguousTypes)\n          throw new AmbiguityError(\n            {\n              abiItem,\n              type: ambiguousTypes[0]!,\n            },\n            {\n              abiItem: matchedAbiItem,\n              type: ambiguousTypes[1]!,\n            },\n          )\n      }\n\n      matchedAbiItem = abiItem\n    }\n  }\n\n  const abiItem = (() => {\n    if (matchedAbiItem) return matchedAbiItem\n    const [abiItem, ...overloads] = abiItems\n    return { ...abiItem!, overloads }\n  })()\n\n  if (!abiItem) throw new NotFoundError({ name: name as string })\n  return {\n    ...abiItem,\n    ...(prepare ? { hash: getSignatureHash(abiItem) } : {}),\n  } as never\n}\n\nexport declare namespace fromAbi {\n  type Options<\n    abi extends Abi.Abi | readonly unknown[] = Abi.Abi,\n    name extends Name<abi> = Name<abi>,\n    args extends\n      | internal.ExtractArgs<abi, name>\n      | undefined = internal.ExtractArgs<abi, name>,\n    ///\n    allArgs = internal.ExtractArgs<abi, name>,\n  > = {\n    /**\n     * Whether or not to prepare the extracted item (optimization for encoding performance).\n     * When `true`, the `hash` property is computed and included in the returned value.\n     *\n     * @default true\n     */\n    prepare?: boolean | undefined\n  } & UnionCompute<\n    readonly [] extends allArgs\n      ? {\n          args?:\n            | allArgs // show all options\n            // infer value, widen inferred value of `args` conditionally to match `allArgs`\n            | (abi extends Abi.Abi\n                ? args extends allArgs\n                  ? internal.Widen<args>\n                  : never\n                : never)\n            | undefined\n        }\n      : {\n          args?:\n            | allArgs // show all options\n            | (internal.Widen<args> & (args extends allArgs ? unknown : never)) // infer value, widen inferred value of `args` match `allArgs` (e.g. avoid union `args: readonly [123n] | readonly [bigint]`)\n            | undefined\n        }\n  >\n\n  type ReturnType<\n    abi extends Abi.Abi | readonly unknown[] = Abi.Abi,\n    name extends Name<abi> = Name<abi>,\n    args extends\n      | internal.ExtractArgs<abi, name>\n      | undefined = internal.ExtractArgs<abi, name>,\n    fallback = AbiItem,\n  > = abi extends Abi.Abi\n    ? Abi.Abi extends abi\n      ? fallback\n      : internal.ExtractForArgs<\n          abi,\n          name,\n          args extends internal.ExtractArgs<abi, name>\n            ? args\n            : internal.ExtractArgs<abi, name>\n        >\n    : fallback\n\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Computes the [4-byte selector](https://solidity-by-example.org/function-selector/) for an {@link ox#AbiItem.AbiItem}.\n *\n * Useful for computing function selectors for calldata.\n *\n * @example\n * ```ts twoslash\n * import { AbiItem } from 'ox'\n *\n * const selector = AbiItem.getSelector('function ownerOf(uint256 tokenId)')\n * // @log: '0x6352211e'\n * ```\n *\n * @example\n * ```ts twoslash\n * import { AbiItem } from 'ox'\n *\n * const selector = AbiItem.getSelector({\n *   inputs: [{ type: 'uint256' }],\n *   name: 'ownerOf',\n *   outputs: [],\n *   stateMutability: 'view',\n *   type: 'function'\n * })\n * // @log: '0x6352211e'\n * ```\n *\n * @param abiItem - The ABI item to compute the selector for. Can be a signature or an ABI item for an error, event, function, etc.\n * @returns The first 4 bytes of the {@link ox#Hash.(keccak256:function)} hash of the function signature.\n */\nexport function getSelector(abiItem: string | AbiItem): Hex.Hex {\n  return Hex.slice(getSignatureHash(abiItem), 0, 4)\n}\n\nexport declare namespace getSelector {\n  type ErrorType =\n    | getSignatureHash.ErrorType\n    | Hex.slice.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Computes the stringified signature for a given {@link ox#AbiItem.AbiItem}.\n *\n * @example\n * ```ts twoslash\n * import { AbiItem } from 'ox'\n *\n * const signature = AbiItem.getSignature('function ownerOf(uint256 tokenId)')\n * // @log: 'ownerOf(uint256)'\n * ```\n *\n * @example\n * ```ts twoslash\n * import { AbiItem } from 'ox'\n *\n * const signature = AbiItem.getSignature({\n *   name: 'ownerOf',\n *   type: 'function',\n *   inputs: [{ name: 'tokenId', type: 'uint256' }],\n *   outputs: [],\n *   stateMutability: 'view',\n * })\n * // @log: 'ownerOf(uint256)'\n * ```\n *\n * @param abiItem - The ABI Item to compute the signature for.\n * @returns The stringified signature of the ABI Item.\n */\nexport function getSignature(abiItem: string | AbiItem): string {\n  const signature = (() => {\n    if (typeof abiItem === 'string') return abiItem\n    return abitype.formatAbiItem(abiItem)\n  })()\n  return internal.normalizeSignature(signature)\n}\n\nexport declare namespace getSignature {\n  type ErrorType =\n    | internal.normalizeSignature.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Computes the signature hash for an {@link ox#AbiItem.AbiItem}.\n *\n * Useful for computing Event Topic values.\n *\n * @example\n * ```ts twoslash\n * import { AbiItem } from 'ox'\n *\n * const hash = AbiItem.getSignatureHash('event Transfer(address indexed from, address indexed to, uint256 amount)')\n * // @log: '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef'\n * ```\n *\n * @example\n * ```ts twoslash\n * import { AbiItem } from 'ox'\n *\n * const hash = AbiItem.getSignatureHash({\n *   name: 'Transfer',\n *   type: 'event',\n *   inputs: [\n *     { name: 'from', type: 'address', indexed: true },\n *     { name: 'to', type: 'address', indexed: true },\n *     { name: 'amount', type: 'uint256', indexed: false },\n *   ],\n * })\n * // @log: '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef'\n * ```\n *\n * @param abiItem - The ABI Item to compute the signature hash for.\n * @returns The {@link ox#Hash.(keccak256:function)} hash of the ABI item's signature.\n */\nexport function getSignatureHash(abiItem: string | AbiItem): Hex.Hex {\n  if (typeof abiItem !== 'string' && 'hash' in abiItem && abiItem.hash)\n    return abiItem.hash as Hex.Hex\n  return Hash.keccak256(Hex.fromString(getSignature(abiItem)))\n}\n\nexport declare namespace getSignatureHash {\n  type ErrorType =\n    | getSignature.ErrorType\n    | Hash.keccak256.ErrorType\n    | Hex.fromString.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Throws when ambiguous types are found on overloaded ABI items.\n *\n * @example\n * ```ts twoslash\n * import { Abi, AbiFunction } from 'ox'\n *\n * const foo = Abi.from(['function foo(address)', 'function foo(bytes20)'])\n * AbiFunction.fromAbi(foo, 'foo', {\n *   args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],\n * })\n * // @error: AbiItem.AmbiguityError: Found ambiguous types in overloaded ABI Items.\n * // @error: `bytes20` in `foo(bytes20)`, and\n * // @error: `address` in `foo(address)`\n * // @error: These types encode differently and cannot be distinguished at runtime.\n * // @error: Remove one of the ambiguous items in the ABI.\n * ```\n *\n * ### Solution\n *\n * Remove one of the ambiguous types from the ABI.\n *\n * ```ts twoslash\n * import { Abi, AbiFunction } from 'ox'\n *\n * const foo = Abi.from([\n *   'function foo(address)',\n *   'function foo(bytes20)' // [!code --]\n * ])\n * AbiFunction.fromAbi(foo, 'foo', {\n *   args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],\n * })\n * // @error: AbiItem.AmbiguityError: Found ambiguous types in overloaded ABI Items.\n * // @error: `bytes20` in `foo(bytes20)`, and\n * // @error: `address` in `foo(address)`\n * // @error: These types encode differently and cannot be distinguished at runtime.\n * // @error: Remove one of the ambiguous items in the ABI.\n * ```\n */\nexport class AmbiguityError extends Errors.BaseError {\n  override readonly name = 'AbiItem.AmbiguityError'\n  constructor(\n    x: { abiItem: Abi.Abi[number]; type: string },\n    y: { abiItem: Abi.Abi[number]; type: string },\n  ) {\n    super('Found ambiguous types in overloaded ABI Items.', {\n      metaMessages: [\n        // TODO: abitype to add support for signature-formatted ABI items.\n        `\\`${x.type}\\` in \\`${internal.normalizeSignature(abitype.formatAbiItem(x.abiItem))}\\`, and`,\n        `\\`${y.type}\\` in \\`${internal.normalizeSignature(abitype.formatAbiItem(y.abiItem))}\\``,\n        '',\n        'These types encode differently and cannot be distinguished at runtime.',\n        'Remove one of the ambiguous items in the ABI.',\n      ],\n    })\n  }\n}\n\n/**\n * Throws when an ABI item is not found in the ABI.\n *\n * @example\n * ```ts twoslash\n * // @noErrors\n * import { Abi, AbiFunction } from 'ox'\n *\n * const foo = Abi.from([\n *   'function foo(address)',\n *   'function bar(uint)'\n * ])\n * AbiFunction.fromAbi(foo, 'baz')\n * // @error: AbiItem.NotFoundError: ABI function with name \"baz\" not found.\n * ```\n *\n * ### Solution\n *\n * Ensure the ABI item exists on the ABI.\n *\n * ```ts twoslash\n * // @noErrors\n * import { Abi, AbiFunction } from 'ox'\n *\n * const foo = Abi.from([\n *   'function foo(address)',\n *   'function bar(uint)',\n *   'function baz(bool)' // [!code ++]\n * ])\n * AbiFunction.fromAbi(foo, 'baz')\n * ```\n */\nexport class NotFoundError extends Errors.BaseError {\n  override readonly name = 'AbiItem.NotFoundError'\n  constructor({\n    name,\n    data,\n    type = 'item',\n  }: {\n    name?: string | undefined\n    data?: Hex.Hex | undefined\n    type?: string | undefined\n  }) {\n    const selector = (() => {\n      if (name) return ` with name \"${name}\"`\n      if (data) return ` with data \"${data}\"`\n      return ''\n    })()\n    super(`ABI ${type}${selector} not found.`)\n  }\n}\n\n/**\n * Throws when the selector size is invalid.\n *\n * @example\n * ```ts twoslash\n * import { Abi, AbiFunction } from 'ox'\n *\n * const foo = Abi.from([\n *   'function foo(address)',\n *   'function bar(uint)'\n * ])\n * AbiFunction.fromAbi(foo, '0xaaa')\n * // @error: AbiItem.InvalidSelectorSizeError: Selector size is invalid. Expected 4 bytes. Received 2 bytes (\"0xaaa\").\n * ```\n *\n * ### Solution\n *\n * Ensure the selector size is 4 bytes.\n *\n * ```ts twoslash\n * // @noErrors\n * import { Abi, AbiFunction } from 'ox'\n *\n * const foo = Abi.from([\n *   'function foo(address)',\n *   'function bar(uint)'\n * ])\n * AbiFunction.fromAbi(foo, '0x7af82b1a')\n * ```\n */\nexport class InvalidSelectorSizeError extends Errors.BaseError {\n  override readonly name = 'AbiItem.InvalidSelectorSizeError'\n  constructor({ data }: { data: Hex.Hex }) {\n    super(\n      `Selector size is invalid. Expected 4 bytes. Received ${Hex.size(data)} bytes (\"${data}\").`,\n    )\n  }\n}\n","import type { AbiParameter } from '../abi.js'\nimport type { Narrow } from '../narrow.js'\nimport type { Error, Filter } from '../types.js'\nimport { InvalidAbiParametersError } from './errors/abiParameter.js'\nimport { isStructSignature, modifiers } from './runtime/signatures.js'\nimport { parseStructs } from './runtime/structs.js'\nimport { splitParameters } from './runtime/utils.js'\nimport { parseAbiParameter as parseAbiParameter_ } from './runtime/utils.js'\nimport type { IsStructSignature, Modifier } from './types/signatures.js'\nimport type { ParseStructs } from './types/structs.js'\nimport type { SplitParameters } from './types/utils.js'\nimport type { ParseAbiParameters as ParseAbiParameters_ } from './types/utils.js'\n\n/**\n * Parses human-readable ABI parameters into {@link AbiParameter}s\n *\n * @param params - Human-readable ABI parameters\n * @returns Parsed {@link AbiParameter}s\n *\n * @example\n * type Result = ParseAbiParameters('address from, address to, uint256 amount')\n * //   ^? type Result: [{ type: \"address\"; name: \"from\"; }, { type: \"address\";...\n *\n * @example\n * type Result = ParseAbiParameters<\n *   // ^? type Result: [{ type: \"tuple\"; components: [{ type: \"string\"; name:...\n *   ['Baz bar', 'struct Baz { string name; }']\n * >\n */\nexport type ParseAbiParameters<\n  params extends string | readonly string[] | readonly unknown[],\n> =\n  | (params extends string\n      ? params extends ''\n        ? never\n        : string extends params\n          ? readonly AbiParameter[]\n          : ParseAbiParameters_<SplitParameters<params>, { modifier: Modifier }>\n      : never)\n  | (params extends readonly string[]\n      ? string[] extends params\n        ? AbiParameter // Return generic AbiParameter item since type was no inferrable\n        : ParseStructs<params> extends infer structs\n          ? {\n              [key in keyof params]: params[key] extends string\n                ? IsStructSignature<params[key]> extends true\n                  ? never\n                  : ParseAbiParameters_<\n                      SplitParameters<params[key]>,\n                      { modifier: Modifier; structs: structs }\n                    >\n                : never\n            } extends infer mapped extends readonly unknown[]\n            ? Filter<mapped, never> extends readonly [...infer content]\n              ? content['length'] extends 0\n                ? never\n                : DeepFlatten<content>\n              : never\n            : never\n          : never\n      : never)\n\n/**\n * Flatten all members of {@link T}\n *\n * @param T - List of items to flatten\n * @param Acc - The accumulator used while recursing\n * @returns The flattened array\n *\n * @example\n * type Result = DeepFlatten<[['a', 'b'], [['c']]]>\n * //   ^? type Result = ['a', 'b', 'c']\n */\ntype DeepFlatten<\n  T extends readonly unknown[],\n  Acc extends readonly unknown[] = readonly [],\n> = T extends readonly [infer head, ...infer tail]\n  ? tail extends undefined\n    ? never\n    : head extends readonly unknown[]\n      ? DeepFlatten<tail, readonly [...Acc, ...DeepFlatten<head>]>\n      : DeepFlatten<tail, readonly [...Acc, head]>\n  : Acc\n\n/**\n * Parses human-readable ABI parameters into {@link AbiParameter}s\n *\n * @param params - Human-readable ABI parameters\n * @returns Parsed {@link AbiParameter}s\n *\n * @example\n * const abiParameters = parseAbiParameters('address from, address to, uint256 amount')\n * //    ^? const abiParameters: [{ type: \"address\"; name: \"from\"; }, { type: \"address\";...\n *\n * @example\n * const abiParameters = parseAbiParameters([\n *   //  ^? const abiParameters: [{ type: \"tuple\"; components: [{ type: \"string\"; name:...\n *   'Baz bar',\n *   'struct Baz { string name; }',\n * ])\n */\nexport function parseAbiParameters<\n  params extends string | readonly string[] | readonly unknown[],\n>(\n  params: Narrow<params> &\n    (\n      | (params extends string\n          ? params extends ''\n            ? Error<'Empty string is not allowed.'>\n            : unknown\n          : never)\n      | (params extends readonly string[]\n          ? params extends readonly [] // empty array\n            ? Error<'At least one parameter required.'>\n            : string[] extends params\n              ? unknown\n              : unknown // TODO: Validate param string\n          : never)\n    ),\n): ParseAbiParameters<params> {\n  const abiParameters: AbiParameter[] = []\n  if (typeof params === 'string') {\n    const parameters = splitParameters(params)\n    const length = parameters.length\n    for (let i = 0; i < length; i++) {\n      abiParameters.push(parseAbiParameter_(parameters[i]!, { modifiers }))\n    }\n  } else {\n    const structs = parseStructs(params as readonly string[])\n    const length = params.length as number\n    for (let i = 0; i < length; i++) {\n      const signature = (params as readonly string[])[i]!\n      if (isStructSignature(signature)) continue\n      const parameters = splitParameters(signature)\n      const length = parameters.length\n      for (let k = 0; k < length; k++) {\n        abiParameters.push(\n          parseAbiParameter_(parameters[k]!, { modifiers, structs }),\n        )\n      }\n    }\n  }\n\n  if (abiParameters.length === 0)\n    throw new InvalidAbiParametersError({ params })\n\n  return abiParameters as ParseAbiParameters<params>\n}\n","export const arrayRegex = /^(.*)\\[([0-9]*)\\]$/\n\n// `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\n// https://regexr.com/6va55\nexport const bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/\n\n// `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\n// https://regexr.com/6v8hp\nexport const integerRegex =\n  /^(u?int)(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/\n\nexport const maxInt8 = 2n ** (8n - 1n) - 1n\nexport const maxInt16 = 2n ** (16n - 1n) - 1n\nexport const maxInt24 = 2n ** (24n - 1n) - 1n\nexport const maxInt32 = 2n ** (32n - 1n) - 1n\nexport const maxInt40 = 2n ** (40n - 1n) - 1n\nexport const maxInt48 = 2n ** (48n - 1n) - 1n\nexport const maxInt56 = 2n ** (56n - 1n) - 1n\nexport const maxInt64 = 2n ** (64n - 1n) - 1n\nexport const maxInt72 = 2n ** (72n - 1n) - 1n\nexport const maxInt80 = 2n ** (80n - 1n) - 1n\nexport const maxInt88 = 2n ** (88n - 1n) - 1n\nexport const maxInt96 = 2n ** (96n - 1n) - 1n\nexport const maxInt104 = 2n ** (104n - 1n) - 1n\nexport const maxInt112 = 2n ** (112n - 1n) - 1n\nexport const maxInt120 = 2n ** (120n - 1n) - 1n\nexport const maxInt128 = 2n ** (128n - 1n) - 1n\nexport const maxInt136 = 2n ** (136n - 1n) - 1n\nexport const maxInt144 = 2n ** (144n - 1n) - 1n\nexport const maxInt152 = 2n ** (152n - 1n) - 1n\nexport const maxInt160 = 2n ** (160n - 1n) - 1n\nexport const maxInt168 = 2n ** (168n - 1n) - 1n\nexport const maxInt176 = 2n ** (176n - 1n) - 1n\nexport const maxInt184 = 2n ** (184n - 1n) - 1n\nexport const maxInt192 = 2n ** (192n - 1n) - 1n\nexport const maxInt200 = 2n ** (200n - 1n) - 1n\nexport const maxInt208 = 2n ** (208n - 1n) - 1n\nexport const maxInt216 = 2n ** (216n - 1n) - 1n\nexport const maxInt224 = 2n ** (224n - 1n) - 1n\nexport const maxInt232 = 2n ** (232n - 1n) - 1n\nexport const maxInt240 = 2n ** (240n - 1n) - 1n\nexport const maxInt248 = 2n ** (248n - 1n) - 1n\nexport const maxInt256 = 2n ** (256n - 1n) - 1n\n\nexport const minInt8 = -(2n ** (8n - 1n))\nexport const minInt16 = -(2n ** (16n - 1n))\nexport const minInt24 = -(2n ** (24n - 1n))\nexport const minInt32 = -(2n ** (32n - 1n))\nexport const minInt40 = -(2n ** (40n - 1n))\nexport const minInt48 = -(2n ** (48n - 1n))\nexport const minInt56 = -(2n ** (56n - 1n))\nexport const minInt64 = -(2n ** (64n - 1n))\nexport const minInt72 = -(2n ** (72n - 1n))\nexport const minInt80 = -(2n ** (80n - 1n))\nexport const minInt88 = -(2n ** (88n - 1n))\nexport const minInt96 = -(2n ** (96n - 1n))\nexport const minInt104 = -(2n ** (104n - 1n))\nexport const minInt112 = -(2n ** (112n - 1n))\nexport const minInt120 = -(2n ** (120n - 1n))\nexport const minInt128 = -(2n ** (128n - 1n))\nexport const minInt136 = -(2n ** (136n - 1n))\nexport const minInt144 = -(2n ** (144n - 1n))\nexport const minInt152 = -(2n ** (152n - 1n))\nexport const minInt160 = -(2n ** (160n - 1n))\nexport const minInt168 = -(2n ** (168n - 1n))\nexport const minInt176 = -(2n ** (176n - 1n))\nexport const minInt184 = -(2n ** (184n - 1n))\nexport const minInt192 = -(2n ** (192n - 1n))\nexport const minInt200 = -(2n ** (200n - 1n))\nexport const minInt208 = -(2n ** (208n - 1n))\nexport const minInt216 = -(2n ** (216n - 1n))\nexport const minInt224 = -(2n ** (224n - 1n))\nexport const minInt232 = -(2n ** (232n - 1n))\nexport const minInt240 = -(2n ** (240n - 1n))\nexport const minInt248 = -(2n ** (248n - 1n))\nexport const minInt256 = -(2n ** (256n - 1n))\n\nexport const maxUint8 = 2n ** 8n - 1n\nexport const maxUint16 = 2n ** 16n - 1n\nexport const maxUint24 = 2n ** 24n - 1n\nexport const maxUint32 = 2n ** 32n - 1n\nexport const maxUint40 = 2n ** 40n - 1n\nexport const maxUint48 = 2n ** 48n - 1n\nexport const maxUint56 = 2n ** 56n - 1n\nexport const maxUint64 = 2n ** 64n - 1n\nexport const maxUint72 = 2n ** 72n - 1n\nexport const maxUint80 = 2n ** 80n - 1n\nexport const maxUint88 = 2n ** 88n - 1n\nexport const maxUint96 = 2n ** 96n - 1n\nexport const maxUint104 = 2n ** 104n - 1n\nexport const maxUint112 = 2n ** 112n - 1n\nexport const maxUint120 = 2n ** 120n - 1n\nexport const maxUint128 = 2n ** 128n - 1n\nexport const maxUint136 = 2n ** 136n - 1n\nexport const maxUint144 = 2n ** 144n - 1n\nexport const maxUint152 = 2n ** 152n - 1n\nexport const maxUint160 = 2n ** 160n - 1n\nexport const maxUint168 = 2n ** 168n - 1n\nexport const maxUint176 = 2n ** 176n - 1n\nexport const maxUint184 = 2n ** 184n - 1n\nexport const maxUint192 = 2n ** 192n - 1n\nexport const maxUint200 = 2n ** 200n - 1n\nexport const maxUint208 = 2n ** 208n - 1n\nexport const maxUint216 = 2n ** 216n - 1n\nexport const maxUint224 = 2n ** 224n - 1n\nexport const maxUint232 = 2n ** 232n - 1n\nexport const maxUint240 = 2n ** 240n - 1n\nexport const maxUint248 = 2n ** 248n - 1n\nexport const maxUint256 = 2n ** 256n - 1n\n","import type {\n  AbiParameter,\n  AbiParameterKind,\n  AbiParametersToPrimitiveTypes,\n  AbiParameterToPrimitiveType,\n} from 'abitype'\nimport * as AbiParameters from '../AbiParameters.js'\nimport * as Address from '../Address.js'\nimport * as Bytes from '../Bytes.js'\nimport * as Errors from '../Errors.js'\nimport * as Hex from '../Hex.js'\nimport { integerRegex } from '../Solidity.js'\nimport type * as Cursor from './cursor.js'\nimport type { Compute, IsNarrowable, UnionToIntersection } from './types.js'\n\n/** @internal */\nexport type ParameterToPrimitiveType<\n  abiParameter extends AbiParameter | { name: string; type: unknown },\n  abiParameterKind extends AbiParameterKind = AbiParameterKind,\n> = AbiParameterToPrimitiveType<abiParameter, abiParameterKind>\n\n/** @internal */\nexport type PreparedParameter = { dynamic: boolean; encoded: Hex.Hex }\n\n/** @internal */\nexport type ToObject<\n  parameters extends readonly AbiParameter[],\n  kind extends AbiParameterKind = AbiParameterKind,\n> = IsNarrowable<parameters, AbiParameters.AbiParameters> extends true\n  ? Compute<\n      UnionToIntersection<\n        {\n          [index in keyof parameters]: parameters[index] extends {\n            name: infer name extends string\n          }\n            ? {\n                [key in name]: AbiParameterToPrimitiveType<\n                  parameters[index],\n                  kind\n                >\n              }\n            : {\n                [key in index]: AbiParameterToPrimitiveType<\n                  parameters[index],\n                  kind\n                >\n              }\n        }[number]\n      >\n    >\n  : unknown\n\n/** @internal */\nexport type ToPrimitiveTypes<\n  abiParameters extends readonly AbiParameter[],\n  abiParameterKind extends AbiParameterKind = AbiParameterKind,\n> = AbiParametersToPrimitiveTypes<abiParameters, abiParameterKind>\n\n/** @internal */\nexport type Tuple = ParameterToPrimitiveType<TupleAbiParameter>\n\n/** @internal */\nexport function decodeParameter(\n  cursor: Cursor.Cursor,\n  param: AbiParameters.Parameter,\n  options: { checksumAddress?: boolean | undefined; staticPosition: number },\n) {\n  const { checksumAddress, staticPosition } = options\n  const arrayComponents = getArrayComponents(param.type)\n  if (arrayComponents) {\n    const [length, type] = arrayComponents\n    return decodeArray(\n      cursor,\n      { ...param, type },\n      { checksumAddress, length, staticPosition },\n    )\n  }\n  if (param.type === 'tuple')\n    return decodeTuple(cursor, param as TupleAbiParameter, {\n      checksumAddress,\n      staticPosition,\n    })\n  if (param.type === 'address')\n    return decodeAddress(cursor, { checksum: checksumAddress })\n  if (param.type === 'bool') return decodeBool(cursor)\n  if (param.type.startsWith('bytes'))\n    return decodeBytes(cursor, param, { staticPosition })\n  if (param.type.startsWith('uint') || param.type.startsWith('int'))\n    return decodeNumber(cursor, param)\n  if (param.type === 'string') return decodeString(cursor, { staticPosition })\n  throw new AbiParameters.InvalidTypeError(param.type)\n}\n\nexport declare namespace decodeParameter {\n  type ErrorType =\n    | decodeArray.ErrorType\n    | decodeTuple.ErrorType\n    | decodeAddress.ErrorType\n    | decodeBool.ErrorType\n    | decodeBytes.ErrorType\n    | decodeNumber.ErrorType\n    | decodeString.ErrorType\n    | AbiParameters.InvalidTypeError\n    | Errors.GlobalErrorType\n}\n\nconst sizeOfLength = 32\nconst sizeOfOffset = 32\n\n/** @internal */\nexport function decodeAddress(\n  cursor: Cursor.Cursor,\n  options: { checksum?: boolean | undefined } = {},\n) {\n  const { checksum = false } = options\n  const value = cursor.readBytes(32)\n  const wrap = (address: Hex.Hex) =>\n    checksum ? Address.checksum(address) : address\n  return [wrap(Hex.fromBytes(Bytes.slice(value, -20))), 32]\n}\n\nexport declare namespace decodeAddress {\n  type ErrorType =\n    | Hex.fromBytes.ErrorType\n    | Bytes.slice.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function decodeArray(\n  cursor: Cursor.Cursor,\n  param: AbiParameters.Parameter,\n  options: {\n    checksumAddress?: boolean | undefined\n    length: number | null\n    staticPosition: number\n  },\n) {\n  const { checksumAddress, length, staticPosition } = options\n\n  // If the length of the array is not known in advance (dynamic array),\n  // this means we will need to wonder off to the pointer and decode.\n  if (!length) {\n    // Dealing with a dynamic type, so get the offset of the array data.\n    const offset = Bytes.toNumber(cursor.readBytes(sizeOfOffset))\n\n    // Start is the static position of current slot + offset.\n    const start = staticPosition + offset\n    const startOfData = start + sizeOfLength\n\n    // Get the length of the array from the offset.\n    cursor.setPosition(start)\n    const length = Bytes.toNumber(cursor.readBytes(sizeOfLength))\n\n    // Check if the array has any dynamic children.\n    const dynamicChild = hasDynamicChild(param)\n\n    let consumed = 0\n    const value: unknown[] = []\n    for (let i = 0; i < length; ++i) {\n      // If any of the children is dynamic, then all elements will be offset pointer, thus size of one slot (32 bytes).\n      // Otherwise, elements will be the size of their encoding (consumed bytes).\n      cursor.setPosition(startOfData + (dynamicChild ? i * 32 : consumed))\n      const [data, consumed_] = decodeParameter(cursor, param, {\n        checksumAddress,\n        staticPosition: startOfData,\n      })\n      consumed += consumed_\n      value.push(data)\n    }\n\n    // As we have gone wondering, restore to the original position + next slot.\n    cursor.setPosition(staticPosition + 32)\n    return [value, 32]\n  }\n\n  // If the length of the array is known in advance,\n  // and the length of an element deeply nested in the array is not known,\n  // we need to decode the offset of the array data.\n  if (hasDynamicChild(param)) {\n    // Dealing with dynamic types, so get the offset of the array data.\n    const offset = Bytes.toNumber(cursor.readBytes(sizeOfOffset))\n\n    // Start is the static position of current slot + offset.\n    const start = staticPosition + offset\n\n    const value: unknown[] = []\n    for (let i = 0; i < length; ++i) {\n      // Move cursor along to the next slot (next offset pointer).\n      cursor.setPosition(start + i * 32)\n      const [data] = decodeParameter(cursor, param, {\n        checksumAddress,\n        staticPosition: start,\n      })\n      value.push(data)\n    }\n\n    // As we have gone wondering, restore to the original position + next slot.\n    cursor.setPosition(staticPosition + 32)\n    return [value, 32]\n  }\n\n  // If the length of the array is known in advance and the array is deeply static,\n  // then we can just decode each element in sequence.\n  let consumed = 0\n  const value: unknown[] = []\n  for (let i = 0; i < length; ++i) {\n    const [data, consumed_] = decodeParameter(cursor, param, {\n      checksumAddress,\n      staticPosition: staticPosition + consumed,\n    })\n    consumed += consumed_\n    value.push(data)\n  }\n  return [value, consumed]\n}\n\nexport declare namespace decodeArray {\n  type ErrorType = Bytes.toNumber.ErrorType | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function decodeBool(cursor: Cursor.Cursor) {\n  return [Bytes.toBoolean(cursor.readBytes(32), { size: 32 }), 32]\n}\n\nexport declare namespace decodeBool {\n  type ErrorType = Bytes.toBoolean.ErrorType | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function decodeBytes(\n  cursor: Cursor.Cursor,\n  param: AbiParameters.Parameter,\n  { staticPosition }: { staticPosition: number },\n) {\n  const [_, size] = param.type.split('bytes')\n  if (!size) {\n    // Dealing with dynamic types, so get the offset of the bytes data.\n    const offset = Bytes.toNumber(cursor.readBytes(32))\n\n    // Set position of the cursor to start of bytes data.\n    cursor.setPosition(staticPosition + offset)\n\n    const length = Bytes.toNumber(cursor.readBytes(32))\n\n    // If there is no length, we have zero data.\n    if (length === 0) {\n      // As we have gone wondering, restore to the original position + next slot.\n      cursor.setPosition(staticPosition + 32)\n      return ['0x', 32]\n    }\n\n    const data = cursor.readBytes(length)\n\n    // As we have gone wondering, restore to the original position + next slot.\n    cursor.setPosition(staticPosition + 32)\n    return [Hex.fromBytes(data), 32]\n  }\n\n  const value = Hex.fromBytes(cursor.readBytes(Number.parseInt(size, 10), 32))\n  return [value, 32]\n}\n\nexport declare namespace decodeBytes {\n  type ErrorType =\n    | Hex.fromBytes.ErrorType\n    | Bytes.toNumber.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function decodeNumber(\n  cursor: Cursor.Cursor,\n  param: AbiParameters.Parameter,\n) {\n  const signed = param.type.startsWith('int')\n  const size = Number.parseInt(param.type.split('int')[1] || '256', 10)\n  const value = cursor.readBytes(32)\n  return [\n    size > 48\n      ? Bytes.toBigInt(value, { signed })\n      : Bytes.toNumber(value, { signed }),\n    32,\n  ]\n}\n\nexport declare namespace decodeNumber {\n  type ErrorType =\n    | Bytes.toNumber.ErrorType\n    | Bytes.toBigInt.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport type TupleAbiParameter = AbiParameters.Parameter & {\n  components: readonly AbiParameters.Parameter[]\n}\n\n/** @internal */\nexport function decodeTuple(\n  cursor: Cursor.Cursor,\n  param: TupleAbiParameter,\n  options: { checksumAddress?: boolean | undefined; staticPosition: number },\n) {\n  const { checksumAddress, staticPosition } = options\n\n  // Tuples can have unnamed components (i.e. they are arrays), so we must\n  // determine whether the tuple is named or unnamed. In the case of a named\n  // tuple, the value will be an object where each property is the name of the\n  // component. In the case of an unnamed tuple, the value will be an array.\n  const hasUnnamedChild =\n    param.components.length === 0 || param.components.some(({ name }) => !name)\n\n  // Initialize the value to an object or an array, depending on whether the\n  // tuple is named or unnamed.\n  const value: any = hasUnnamedChild ? [] : {}\n  let consumed = 0\n\n  // If the tuple has a dynamic child, we must first decode the offset to the\n  // tuple data.\n  if (hasDynamicChild(param)) {\n    // Dealing with dynamic types, so get the offset of the tuple data.\n    const offset = Bytes.toNumber(cursor.readBytes(sizeOfOffset))\n\n    // Start is the static position of referencing slot + offset.\n    const start = staticPosition + offset\n\n    for (let i = 0; i < param.components.length; ++i) {\n      const component = param.components[i]!\n      cursor.setPosition(start + consumed)\n      const [data, consumed_] = decodeParameter(cursor, component, {\n        checksumAddress,\n        staticPosition: start,\n      })\n      consumed += consumed_\n      value[hasUnnamedChild ? i : component?.name!] = data\n    }\n\n    // As we have gone wondering, restore to the original position + next slot.\n    cursor.setPosition(staticPosition + 32)\n    return [value, 32]\n  }\n\n  // If the tuple has static children, we can just decode each component\n  // in sequence.\n  for (let i = 0; i < param.components.length; ++i) {\n    const component = param.components[i]!\n    const [data, consumed_] = decodeParameter(cursor, component, {\n      checksumAddress,\n      staticPosition,\n    })\n    value[hasUnnamedChild ? i : component?.name!] = data\n    consumed += consumed_\n  }\n  return [value, consumed]\n}\n\nexport declare namespace decodeTuple {\n  type ErrorType = Bytes.toNumber.ErrorType | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function decodeString(\n  cursor: Cursor.Cursor,\n  { staticPosition }: { staticPosition: number },\n) {\n  // Get offset to start of string data.\n  const offset = Bytes.toNumber(cursor.readBytes(32))\n\n  // Start is the static position of current slot + offset.\n  const start = staticPosition + offset\n  cursor.setPosition(start)\n\n  const length = Bytes.toNumber(cursor.readBytes(32))\n\n  // If there is no length, we have zero data (empty string).\n  if (length === 0) {\n    cursor.setPosition(staticPosition + 32)\n    return ['', 32]\n  }\n\n  const data = cursor.readBytes(length, 32)\n  const value = Bytes.toString(Bytes.trimLeft(data))\n\n  // As we have gone wondering, restore to the original position + next slot.\n  cursor.setPosition(staticPosition + 32)\n\n  return [value, 32]\n}\n\nexport declare namespace decodeString {\n  type ErrorType =\n    | Bytes.toNumber.ErrorType\n    | Bytes.toString.ErrorType\n    | Bytes.trimLeft.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function prepareParameters<\n  const parameters extends AbiParameters.AbiParameters,\n>({\n  checksumAddress,\n  parameters,\n  values,\n}: {\n  checksumAddress?: boolean | undefined\n  parameters: parameters\n  values: parameters extends AbiParameters.AbiParameters\n    ? ToPrimitiveTypes<parameters>\n    : never\n}) {\n  const preparedParameters: PreparedParameter[] = []\n  for (let i = 0; i < parameters.length; i++) {\n    preparedParameters.push(\n      prepareParameter({\n        checksumAddress,\n        parameter: parameters[i]!,\n        value: values[i],\n      }),\n    )\n  }\n  return preparedParameters\n}\n\n/** @internal */\nexport declare namespace prepareParameters {\n  type ErrorType = prepareParameter.ErrorType | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function prepareParameter<\n  const parameter extends AbiParameters.Parameter,\n>({\n  checksumAddress = false,\n  parameter: parameter_,\n  value,\n}: {\n  parameter: parameter\n  value: parameter extends AbiParameters.Parameter\n    ? ParameterToPrimitiveType<parameter>\n    : never\n  checksumAddress?: boolean | undefined\n}): PreparedParameter {\n  const parameter = parameter_ as AbiParameters.Parameter\n\n  const arrayComponents = getArrayComponents(parameter.type)\n  if (arrayComponents) {\n    const [length, type] = arrayComponents\n    return encodeArray(value, {\n      checksumAddress,\n      length,\n      parameter: {\n        ...parameter,\n        type,\n      },\n    })\n  }\n  if (parameter.type === 'tuple') {\n    return encodeTuple(value as unknown as Tuple, {\n      checksumAddress,\n      parameter: parameter as TupleAbiParameter,\n    })\n  }\n  if (parameter.type === 'address') {\n    return encodeAddress(value as unknown as Hex.Hex, {\n      checksum: checksumAddress,\n    })\n  }\n  if (parameter.type === 'bool') {\n    return encodeBoolean(value as unknown as boolean)\n  }\n  if (parameter.type.startsWith('uint') || parameter.type.startsWith('int')) {\n    const signed = parameter.type.startsWith('int')\n    const [, , size = '256'] = integerRegex.exec(parameter.type) ?? []\n    return encodeNumber(value as unknown as number, {\n      signed,\n      size: Number(size),\n    })\n  }\n  if (parameter.type.startsWith('bytes')) {\n    return encodeBytes(value as unknown as Hex.Hex, { type: parameter.type })\n  }\n  if (parameter.type === 'string') {\n    return encodeString(value as unknown as string)\n  }\n  throw new AbiParameters.InvalidTypeError(parameter.type)\n}\n\n/** @internal */\nexport declare namespace prepareParameter {\n  type ErrorType =\n    | encodeArray.ErrorType\n    | encodeTuple.ErrorType\n    | encodeAddress.ErrorType\n    | encodeBoolean.ErrorType\n    | encodeBytes.ErrorType\n    | encodeString.ErrorType\n    | AbiParameters.InvalidTypeError\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function encode(preparedParameters: PreparedParameter[]): Hex.Hex {\n  // 1. Compute the size of the static part of the parameters.\n  let staticSize = 0\n  for (let i = 0; i < preparedParameters.length; i++) {\n    const { dynamic, encoded } = preparedParameters[i]!\n    if (dynamic) staticSize += 32\n    else staticSize += Hex.size(encoded)\n  }\n\n  // 2. Split the parameters into static and dynamic parts.\n  const staticParameters: Hex.Hex[] = []\n  const dynamicParameters: Hex.Hex[] = []\n  let dynamicSize = 0\n  for (let i = 0; i < preparedParameters.length; i++) {\n    const { dynamic, encoded } = preparedParameters[i]!\n    if (dynamic) {\n      staticParameters.push(\n        Hex.fromNumber(staticSize + dynamicSize, { size: 32 }),\n      )\n      dynamicParameters.push(encoded)\n      dynamicSize += Hex.size(encoded)\n    } else {\n      staticParameters.push(encoded)\n    }\n  }\n\n  // 3. Concatenate static and dynamic parts.\n  return Hex.concat(...staticParameters, ...dynamicParameters)\n}\n\n/** @internal */\nexport declare namespace encode {\n  type ErrorType =\n    | Hex.concat.ErrorType\n    | Hex.fromNumber.ErrorType\n    | Hex.size.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function encodeAddress(\n  value: Hex.Hex,\n  options: { checksum: boolean },\n): PreparedParameter {\n  const { checksum = false } = options\n  Address.assert(value, { strict: checksum })\n  return {\n    dynamic: false,\n    encoded: Hex.padLeft(value.toLowerCase() as Hex.Hex),\n  }\n}\n\n/** @internal */\nexport declare namespace encodeAddress {\n  type ErrorType =\n    | Address.assert.ErrorType\n    | Hex.padLeft.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function encodeArray<const parameter extends AbiParameters.Parameter>(\n  value: ParameterToPrimitiveType<parameter>,\n  options: {\n    checksumAddress?: boolean | undefined\n    length: number | null\n    parameter: parameter\n  },\n): PreparedParameter {\n  const { checksumAddress, length, parameter } = options\n\n  const dynamic = length === null\n\n  if (!Array.isArray(value)) throw new AbiParameters.InvalidArrayError(value)\n  if (!dynamic && value.length !== length)\n    throw new AbiParameters.ArrayLengthMismatchError({\n      expectedLength: length!,\n      givenLength: value.length,\n      type: `${parameter.type}[${length}]`,\n    })\n\n  let dynamicChild = false\n  const preparedParameters: PreparedParameter[] = []\n  for (let i = 0; i < value.length; i++) {\n    const preparedParam = prepareParameter({\n      checksumAddress,\n      parameter,\n      value: value[i],\n    })\n    if (preparedParam.dynamic) dynamicChild = true\n    preparedParameters.push(preparedParam)\n  }\n\n  if (dynamic || dynamicChild) {\n    const data = encode(preparedParameters)\n    if (dynamic) {\n      const length = Hex.fromNumber(preparedParameters.length, { size: 32 })\n      return {\n        dynamic: true,\n        encoded:\n          preparedParameters.length > 0 ? Hex.concat(length, data) : length,\n      }\n    }\n    if (dynamicChild) return { dynamic: true, encoded: data }\n  }\n  return {\n    dynamic: false,\n    encoded: Hex.concat(...preparedParameters.map(({ encoded }) => encoded)),\n  }\n}\n\n/** @internal */\nexport declare namespace encodeArray {\n  type ErrorType =\n    | AbiParameters.InvalidArrayError\n    | AbiParameters.ArrayLengthMismatchError\n    | Hex.concat.ErrorType\n    | Hex.fromNumber.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function encodeBytes(\n  value: Hex.Hex,\n  { type }: { type: string },\n): PreparedParameter {\n  const [, parametersize] = type.split('bytes')\n  const bytesSize = Hex.size(value)\n  if (!parametersize) {\n    let value_ = value\n    // If the size is not divisible by 32 bytes, pad the end\n    // with empty bytes to the ceiling 32 bytes.\n    if (bytesSize % 32 !== 0)\n      value_ = Hex.padRight(value_, Math.ceil((value.length - 2) / 2 / 32) * 32)\n    return {\n      dynamic: true,\n      encoded: Hex.concat(\n        Hex.padLeft(Hex.fromNumber(bytesSize, { size: 32 })),\n        value_,\n      ),\n    }\n  }\n  if (bytesSize !== Number.parseInt(parametersize, 10))\n    throw new AbiParameters.BytesSizeMismatchError({\n      expectedSize: Number.parseInt(parametersize, 10),\n      value,\n    })\n  return { dynamic: false, encoded: Hex.padRight(value) }\n}\n\n/** @internal */\nexport declare namespace encodeBytes {\n  type ErrorType =\n    | Hex.padLeft.ErrorType\n    | Hex.padRight.ErrorType\n    | Hex.fromNumber.ErrorType\n    | Hex.slice.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function encodeBoolean(value: boolean): PreparedParameter {\n  if (typeof value !== 'boolean')\n    throw new Errors.BaseError(\n      `Invalid boolean value: \"${value}\" (type: ${typeof value}). Expected: \\`true\\` or \\`false\\`.`,\n    )\n  return { dynamic: false, encoded: Hex.padLeft(Hex.fromBoolean(value)) }\n}\n\n/** @internal */\nexport declare namespace encodeBoolean {\n  type ErrorType =\n    | Hex.padLeft.ErrorType\n    | Hex.fromBoolean.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function encodeNumber(\n  value: number,\n  { signed, size }: { signed: boolean; size: number },\n): PreparedParameter {\n  if (typeof size === 'number') {\n    const max = 2n ** (BigInt(size) - (signed ? 1n : 0n)) - 1n\n    const min = signed ? -max - 1n : 0n\n    if (value > max || value < min)\n      throw new Hex.IntegerOutOfRangeError({\n        max: max.toString(),\n        min: min.toString(),\n        signed,\n        size: size / 8,\n        value: value.toString(),\n      })\n  }\n  return {\n    dynamic: false,\n    encoded: Hex.fromNumber(value, {\n      size: 32,\n      signed,\n    }),\n  }\n}\n\n/** @internal */\nexport declare namespace encodeNumber {\n  type ErrorType = Hex.fromNumber.ErrorType | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function encodeString(value: string): PreparedParameter {\n  const hexValue = Hex.fromString(value)\n  const partsLength = Math.ceil(Hex.size(hexValue) / 32)\n  const parts: Hex.Hex[] = []\n  for (let i = 0; i < partsLength; i++) {\n    parts.push(Hex.padRight(Hex.slice(hexValue, i * 32, (i + 1) * 32)))\n  }\n  return {\n    dynamic: true,\n    encoded: Hex.concat(\n      Hex.padRight(Hex.fromNumber(Hex.size(hexValue), { size: 32 })),\n      ...parts,\n    ),\n  }\n}\n\n/** @internal */\nexport declare namespace encodeString {\n  type ErrorType =\n    | Hex.fromNumber.ErrorType\n    | Hex.padRight.ErrorType\n    | Hex.slice.ErrorType\n    | Hex.size.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function encodeTuple<\n  const parameter extends AbiParameters.Parameter & {\n    components: readonly AbiParameters.Parameter[]\n  },\n>(\n  value: ParameterToPrimitiveType<parameter>,\n  options: {\n    checksumAddress?: boolean | undefined\n    parameter: parameter\n  },\n): PreparedParameter {\n  const { checksumAddress, parameter } = options\n\n  let dynamic = false\n  const preparedParameters: PreparedParameter[] = []\n  for (let i = 0; i < parameter.components.length; i++) {\n    const param_ = parameter.components[i]!\n    const index = Array.isArray(value) ? i : param_.name\n    const preparedParam = prepareParameter({\n      checksumAddress,\n      parameter: param_,\n      value: (value as any)[index!] as readonly unknown[],\n    })\n    preparedParameters.push(preparedParam)\n    if (preparedParam.dynamic) dynamic = true\n  }\n  return {\n    dynamic,\n    encoded: dynamic\n      ? encode(preparedParameters)\n      : Hex.concat(...preparedParameters.map(({ encoded }) => encoded)),\n  }\n}\n\n/** @internal */\nexport declare namespace encodeTuple {\n  type ErrorType = Hex.concat.ErrorType | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function getArrayComponents(\n  type: string,\n): [length: number | null, innerType: string] | undefined {\n  const matches = type.match(/^(.*)\\[(\\d+)?\\]$/)\n  return matches\n    ? // Return `null` if the array is dynamic.\n      [matches[2]! ? Number(matches[2]!) : null, matches[1]!]\n    : undefined\n}\n\n/** @internal */\nexport function hasDynamicChild(param: AbiParameters.Parameter) {\n  const { type } = param\n  if (type === 'string') return true\n  if (type === 'bytes') return true\n  if (type.endsWith('[]')) return true\n\n  if (type === 'tuple') return (param as any).components?.some(hasDynamicChild)\n\n  const arrayComponents = getArrayComponents(param.type)\n  if (\n    arrayComponents &&\n    hasDynamicChild({\n      ...param,\n      type: arrayComponents[1],\n    } as AbiParameters.Parameter)\n  )\n    return true\n\n  return false\n}\n","import type { Bytes } from '../Bytes.js'\nimport * as Errors from '../Errors.js'\n\n/** @internal */\nexport type Cursor = {\n  bytes: Bytes\n  dataView: DataView\n  position: number\n  positionReadCount: Map<number, number>\n  recursiveReadCount: number\n  recursiveReadLimit: number\n  remaining: number\n  assertReadLimit(position?: number): void\n  assertPosition(position: number): void\n  decrementPosition(offset: number): void\n  getReadCount(position?: number): number\n  incrementPosition(offset: number): void\n  inspectByte(position?: number): Bytes[number]\n  inspectBytes(length: number, position?: number): Bytes\n  inspectUint8(position?: number): number\n  inspectUint16(position?: number): number\n  inspectUint24(position?: number): number\n  inspectUint32(position?: number): number\n  pushByte(byte: Bytes[number]): void\n  pushBytes(bytes: Bytes): void\n  pushUint8(value: number): void\n  pushUint16(value: number): void\n  pushUint24(value: number): void\n  pushUint32(value: number): void\n  readByte(): Bytes[number]\n  readBytes(length: number, size?: number): Bytes\n  readUint8(): number\n  readUint16(): number\n  readUint24(): number\n  readUint32(): number\n  setPosition(position: number): () => void\n  _touch(): void\n}\n\nconst staticCursor: Cursor = {\n  bytes: new Uint8Array(),\n  dataView: new DataView(new ArrayBuffer(0)),\n  position: 0,\n  positionReadCount: new Map(),\n  recursiveReadCount: 0,\n  recursiveReadLimit: Number.POSITIVE_INFINITY,\n  assertReadLimit() {\n    if (this.recursiveReadCount >= this.recursiveReadLimit)\n      throw new RecursiveReadLimitExceededError({\n        count: this.recursiveReadCount + 1,\n        limit: this.recursiveReadLimit,\n      })\n  },\n  assertPosition(position) {\n    if (position < 0 || position > this.bytes.length - 1)\n      throw new PositionOutOfBoundsError({\n        length: this.bytes.length,\n        position,\n      })\n  },\n  decrementPosition(offset) {\n    if (offset < 0) throw new NegativeOffsetError({ offset })\n    const position = this.position - offset\n    this.assertPosition(position)\n    this.position = position\n  },\n  getReadCount(position) {\n    return this.positionReadCount.get(position || this.position) || 0\n  },\n  incrementPosition(offset) {\n    if (offset < 0) throw new NegativeOffsetError({ offset })\n    const position = this.position + offset\n    this.assertPosition(position)\n    this.position = position\n  },\n  inspectByte(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position)\n    return this.bytes[position]!\n  },\n  inspectBytes(length, position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + length - 1)\n    return this.bytes.subarray(position, position + length)\n  },\n  inspectUint8(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position)\n    return this.bytes[position]!\n  },\n  inspectUint16(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + 1)\n    return this.dataView.getUint16(position)\n  },\n  inspectUint24(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + 2)\n    return (\n      (this.dataView.getUint16(position) << 8) +\n      this.dataView.getUint8(position + 2)\n    )\n  },\n  inspectUint32(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + 3)\n    return this.dataView.getUint32(position)\n  },\n  pushByte(byte: Bytes[number]) {\n    this.assertPosition(this.position)\n    this.bytes[this.position] = byte\n    this.position++\n  },\n  pushBytes(bytes: Bytes) {\n    this.assertPosition(this.position + bytes.length - 1)\n    this.bytes.set(bytes, this.position)\n    this.position += bytes.length\n  },\n  pushUint8(value: number) {\n    this.assertPosition(this.position)\n    this.bytes[this.position] = value\n    this.position++\n  },\n  pushUint16(value: number) {\n    this.assertPosition(this.position + 1)\n    this.dataView.setUint16(this.position, value)\n    this.position += 2\n  },\n  pushUint24(value: number) {\n    this.assertPosition(this.position + 2)\n    this.dataView.setUint16(this.position, value >> 8)\n    this.dataView.setUint8(this.position + 2, value & ~4294967040)\n    this.position += 3\n  },\n  pushUint32(value: number) {\n    this.assertPosition(this.position + 3)\n    this.dataView.setUint32(this.position, value)\n    this.position += 4\n  },\n  readByte() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectByte()\n    this.position++\n    return value\n  },\n  readBytes(length, size) {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectBytes(length)\n    this.position += size ?? length\n    return value\n  },\n  readUint8() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectUint8()\n    this.position += 1\n    return value\n  },\n  readUint16() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectUint16()\n    this.position += 2\n    return value\n  },\n  readUint24() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectUint24()\n    this.position += 3\n    return value\n  },\n  readUint32() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectUint32()\n    this.position += 4\n    return value\n  },\n  get remaining() {\n    return this.bytes.length - this.position\n  },\n  setPosition(position) {\n    const oldPosition = this.position\n    this.assertPosition(position)\n    this.position = position\n    return () => (this.position = oldPosition)\n  },\n  _touch() {\n    if (this.recursiveReadLimit === Number.POSITIVE_INFINITY) return\n    const count = this.getReadCount()\n    this.positionReadCount.set(this.position, count + 1)\n    if (count > 0) this.recursiveReadCount++\n  },\n}\n\n/** @internal */\nexport function create(\n  bytes: Bytes,\n  { recursiveReadLimit = 8_192 }: create.Config = {},\n): Cursor {\n  const cursor: Cursor = Object.create(staticCursor)\n  cursor.bytes = bytes\n  cursor.dataView = new DataView(\n    bytes.buffer,\n    bytes.byteOffset,\n    bytes.byteLength,\n  )\n  cursor.positionReadCount = new Map()\n  cursor.recursiveReadLimit = recursiveReadLimit\n  return cursor\n}\n\n/** @internal */\nexport declare namespace create {\n  type Config = { recursiveReadLimit?: number | undefined }\n\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/** @internal */\nexport class NegativeOffsetError extends Errors.BaseError {\n  override readonly name = 'Cursor.NegativeOffsetError'\n\n  constructor({ offset }: { offset: number }) {\n    super(`Offset \\`${offset}\\` cannot be negative.`)\n  }\n}\n\n/** @internal */\nexport class PositionOutOfBoundsError extends Errors.BaseError {\n  override readonly name = 'Cursor.PositionOutOfBoundsError'\n\n  constructor({ length, position }: { length: number; position: number }) {\n    super(\n      `Position \\`${position}\\` is out of bounds (\\`0 < position < ${length}\\`).`,\n    )\n  }\n}\n\n/** @internal */\nexport class RecursiveReadLimitExceededError extends Errors.BaseError {\n  override readonly name = 'Cursor.RecursiveReadLimitExceededError'\n\n  constructor({ count, limit }: { count: number; limit: number }) {\n    super(\n      `Recursive read limit of \\`${limit}\\` exceeded (recursive read count: \\`${count}\\`).`,\n    )\n  }\n}\n","import * as abitype from 'abitype'\nimport * as Address from './Address.js'\nimport * as Bytes from './Bytes.js'\nimport * as Errors from './Errors.js'\nimport * as Hex from './Hex.js'\nimport * as internal from './internal/abiParameters.js'\nimport * as Cursor from './internal/cursor.js'\nimport * as Solidity from './Solidity.js'\n\n/** Root type for ABI parameters. */\nexport type AbiParameters = readonly abitype.AbiParameter[]\n\n/** A parameter on an {@link ox#AbiParameters.AbiParameters}. */\nexport type Parameter = abitype.AbiParameter\n\n/** A packed ABI type. */\nexport type PackedAbiType =\n  | abitype.SolidityAddress\n  | abitype.SolidityBool\n  | abitype.SolidityBytes\n  | abitype.SolidityInt\n  | abitype.SolidityString\n  | abitype.SolidityArrayWithoutTuple\n\n/**\n * Decodes ABI-encoded data into its respective primitive values based on ABI Parameters.\n *\n * @example\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const data = AbiParameters.decode(\n *   AbiParameters.from(['string', 'uint', 'bool']),\n *   '0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001a4000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000057761676d69000000000000000000000000000000000000000000000000000000',\n * )\n * // @log: ['wagmi', 420n, true]\n * ```\n *\n * @example\n * ### JSON Parameters\n *\n * You can pass **JSON ABI** Parameters:\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const data = AbiParameters.decode(\n *   [\n *     { name: 'x', type: 'string' },\n *     { name: 'y', type: 'uint' },\n *     { name: 'z', type: 'bool' },\n *   ],\n *   '0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001a4000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000057761676d69000000000000000000000000000000000000000000000000000000',\n * )\n * // @log: ['wagmi', 420n, true]\n * ```\n *\n * @param parameters - The set of ABI parameters to decode, in the shape of the `inputs` or `outputs` attribute of an ABI Item. These parameters must include valid [ABI types](https://docs.soliditylang.org/en/latest/types.html).\n * @param data - ABI encoded data.\n * @param options - Decoding options.\n * @returns Array of decoded values.\n */\nexport function decode<\n  const parameters extends AbiParameters,\n  as extends 'Object' | 'Array' = 'Array',\n>(\n  parameters: parameters,\n  data: Bytes.Bytes | Hex.Hex,\n  options?: decode.Options<as>,\n): decode.ReturnType<parameters, as>\n\n// eslint-disable-next-line jsdoc/require-jsdoc\nexport function decode(\n  parameters: AbiParameters,\n  data: Bytes.Bytes | Hex.Hex,\n  options: {\n    as?: 'Array' | 'Object' | undefined\n    checksumAddress?: boolean | undefined\n  } = {},\n): readonly unknown[] | Record<string, unknown> {\n  const { as = 'Array', checksumAddress = false } = options\n\n  const bytes = typeof data === 'string' ? Bytes.fromHex(data) : data\n  const cursor = Cursor.create(bytes)\n\n  if (Bytes.size(bytes) === 0 && parameters.length > 0)\n    throw new ZeroDataError()\n  if (Bytes.size(bytes) && Bytes.size(bytes) < 32)\n    throw new DataSizeTooSmallError({\n      data: typeof data === 'string' ? data : Hex.fromBytes(data),\n      parameters: parameters as readonly Parameter[],\n      size: Bytes.size(bytes),\n    })\n\n  let consumed = 0\n  const values: any = as === 'Array' ? [] : {}\n  for (let i = 0; i < parameters.length; ++i) {\n    const param = parameters[i] as Parameter\n    cursor.setPosition(consumed)\n    const [data, consumed_] = internal.decodeParameter(cursor, param, {\n      checksumAddress,\n      staticPosition: 0,\n    })\n    consumed += consumed_\n    if (as === 'Array') values.push(data)\n    else values[param.name ?? i] = data\n  }\n  return values\n}\n\nexport declare namespace decode {\n  type Options<as extends 'Object' | 'Array'> = {\n    /**\n     * Whether the decoded values should be returned as an `Object` or `Array`.\n     *\n     * @default \"Array\"\n     */\n    as?: as | 'Object' | 'Array' | undefined\n    /**\n     * Whether decoded addresses should be checksummed.\n     *\n     * @default false\n     */\n    checksumAddress?: boolean | undefined\n  }\n\n  type ReturnType<\n    parameters extends AbiParameters = AbiParameters,\n    as extends 'Object' | 'Array' = 'Array',\n  > = parameters extends readonly []\n    ? as extends 'Object'\n      ? {}\n      : []\n    : as extends 'Object'\n      ? internal.ToObject<parameters>\n      : internal.ToPrimitiveTypes<parameters>\n\n  type ErrorType =\n    | Bytes.fromHex.ErrorType\n    | internal.decodeParameter.ErrorType\n    | ZeroDataError\n    | DataSizeTooSmallError\n    | Errors.GlobalErrorType\n}\n\n/**\n * Encodes primitive values into ABI encoded data as per the [Application Binary Interface (ABI) Specification](https://docs.soliditylang.org/en/latest/abi-spec).\n *\n * @example\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const data = AbiParameters.encode(\n *   AbiParameters.from(['string', 'uint', 'bool']),\n *   ['wagmi', 420n, true],\n * )\n * ```\n *\n * @example\n * ### JSON Parameters\n *\n * Specify **JSON ABI** Parameters as schema:\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const data = AbiParameters.encode(\n *   [\n *     { type: 'string', name: 'name' },\n *     { type: 'uint', name: 'age' },\n *     { type: 'bool', name: 'isOwner' },\n *   ],\n *   ['wagmi', 420n, true],\n * )\n * ```\n *\n * @param parameters - The set of ABI parameters to encode, in the shape of the `inputs` or `outputs` attribute of an ABI Item. These parameters must include valid [ABI types](https://docs.soliditylang.org/en/latest/types.html).\n * @param values - The set of primitive values that correspond to the ABI types defined in `parameters`.\n * @returns ABI encoded data.\n */\nexport function encode<\n  const parameters extends AbiParameters | readonly unknown[],\n>(\n  parameters: parameters,\n  values: parameters extends AbiParameters\n    ? internal.ToPrimitiveTypes<parameters>\n    : never,\n  options?: encode.Options,\n): Hex.Hex {\n  const { checksumAddress = false } = options ?? {}\n\n  if (parameters.length !== values.length)\n    throw new LengthMismatchError({\n      expectedLength: parameters.length as number,\n      givenLength: values.length as any,\n    })\n  // Prepare the parameters to determine dynamic types to encode.\n  const preparedParameters = internal.prepareParameters({\n    checksumAddress,\n    parameters: parameters as readonly Parameter[],\n    values: values as any,\n  })\n  const data = internal.encode(preparedParameters)\n  if (data.length === 0) return '0x'\n  return data\n}\n\nexport declare namespace encode {\n  type ErrorType =\n    | LengthMismatchError\n    | internal.encode.ErrorType\n    | internal.prepareParameters.ErrorType\n    | Errors.GlobalErrorType\n\n  type Options = {\n    /**\n     * Whether addresses should be checked against their checksum.\n     *\n     * @default false\n     */\n    checksumAddress?: boolean | undefined\n  }\n}\n\n/**\n * Encodes an array of primitive values to a [packed ABI encoding](https://docs.soliditylang.org/en/latest/abi-spec.html#non-standard-packed-mode).\n *\n * @example\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const encoded = AbiParameters.encodePacked(\n *   ['address', 'string'],\n *   ['0xd8da6bf26964af9d7eed9e03e53415d37aa96045', 'hello world'],\n * )\n * // @log: '0xd8da6bf26964af9d7eed9e03e53415d37aa9604568656c6c6f20776f726c64'\n * ```\n *\n * @param types - Set of ABI types to pack encode.\n * @param values - The set of primitive values that correspond to the ABI types defined in `types`.\n * @returns The encoded packed data.\n */\nexport function encodePacked<\n  const packedAbiTypes extends readonly PackedAbiType[] | readonly unknown[],\n>(types: packedAbiTypes, values: encodePacked.Values<packedAbiTypes>): Hex.Hex {\n  if (types.length !== values.length)\n    throw new LengthMismatchError({\n      expectedLength: types.length as number,\n      givenLength: values.length as number,\n    })\n\n  const data: Hex.Hex[] = []\n  for (let i = 0; i < (types as unknown[]).length; i++) {\n    const type = types[i]\n    const value = values[i]\n    data.push(encodePacked.encode(type, value))\n  }\n  return Hex.concat(...data)\n}\n\nexport namespace encodePacked {\n  export type ErrorType =\n    | Hex.concat.ErrorType\n    | LengthMismatchError\n    | Errors.GlobalErrorType\n\n  export type Values<\n    packedAbiTypes extends readonly PackedAbiType[] | readonly unknown[],\n  > = {\n    [key in keyof packedAbiTypes]: packedAbiTypes[key] extends abitype.AbiType\n      ? abitype.AbiParameterToPrimitiveType<{ type: packedAbiTypes[key] }>\n      : unknown\n  }\n\n  // eslint-disable-next-line jsdoc/require-jsdoc\n  export function encode<const packedAbiType extends PackedAbiType | unknown>(\n    type: packedAbiType,\n    value: Values<[packedAbiType]>[0],\n    isArray = false,\n  ): Hex.Hex {\n    if (type === 'address') {\n      const address = value as Address.Address\n      Address.assert(address)\n      return Hex.padLeft(\n        address.toLowerCase() as Hex.Hex,\n        isArray ? 32 : 0,\n      ) as Address.Address\n    }\n    if (type === 'string') return Hex.fromString(value as string)\n    if (type === 'bytes') return value as Hex.Hex\n    if (type === 'bool')\n      return Hex.padLeft(Hex.fromBoolean(value as boolean), isArray ? 32 : 1)\n\n    const intMatch = (type as string).match(Solidity.integerRegex)\n    if (intMatch) {\n      const [_type, baseType, bits = '256'] = intMatch\n      const size = Number.parseInt(bits, 10) / 8\n      return Hex.fromNumber(value as number, {\n        size: isArray ? 32 : size,\n        signed: baseType === 'int',\n      })\n    }\n\n    const bytesMatch = (type as string).match(Solidity.bytesRegex)\n    if (bytesMatch) {\n      const [_type, size] = bytesMatch\n      if (Number.parseInt(size!, 10) !== ((value as Hex.Hex).length - 2) / 2)\n        throw new BytesSizeMismatchError({\n          expectedSize: Number.parseInt(size!, 10),\n          value: value as Hex.Hex,\n        })\n      return Hex.padRight(value as Hex.Hex, isArray ? 32 : 0) as Hex.Hex\n    }\n\n    const arrayMatch = (type as string).match(Solidity.arrayRegex)\n    if (arrayMatch && Array.isArray(value)) {\n      const [_type, childType] = arrayMatch\n      const data: Hex.Hex[] = []\n      for (let i = 0; i < value.length; i++) {\n        data.push(encode(childType, value[i], true))\n      }\n      if (data.length === 0) return '0x'\n      return Hex.concat(...data)\n    }\n\n    throw new InvalidTypeError(type as string)\n  }\n}\n\n/**\n * Formats {@link ox#AbiParameters.AbiParameters} into **Human Readable ABI Parameters**.\n *\n * @example\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const formatted = AbiParameters.format([\n *   {\n *     name: 'spender',\n *     type: 'address',\n *   },\n *   {\n *     name: 'amount',\n *     type: 'uint256',\n *   },\n * ])\n *\n * formatted\n * //    ^?\n *\n *\n * ```\n *\n * @param parameters - The ABI Parameters to format.\n * @returns The formatted ABI Parameters  .\n */\nexport function format<\n  const parameters extends readonly [\n    Parameter | abitype.AbiEventParameter,\n    ...(readonly (Parameter | abitype.AbiEventParameter)[]),\n  ],\n>(\n  parameters:\n    | parameters\n    | readonly [\n        Parameter | abitype.AbiEventParameter,\n        ...(readonly (Parameter | abitype.AbiEventParameter)[]),\n      ],\n): abitype.FormatAbiParameters<parameters> {\n  return abitype.formatAbiParameters(parameters)\n}\n\nexport declare namespace format {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Parses arbitrary **JSON ABI Parameters** or **Human Readable ABI Parameters** into typed {@link ox#AbiParameters.AbiParameters}.\n *\n * @example\n * ### JSON Parameters\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const parameters = AbiParameters.from([\n *   {\n *     name: 'spender',\n *     type: 'address',\n *   },\n *   {\n *     name: 'amount',\n *     type: 'uint256',\n *   },\n * ])\n *\n * parameters\n * //^?\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n * @example\n * ### Human Readable Parameters\n *\n * Human Readable ABI Parameters can be parsed into a typed {@link ox#AbiParameters.AbiParameters}:\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const parameters = AbiParameters.from('address spender, uint256 amount')\n *\n * parameters\n * //^?\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n * @example\n * It is possible to specify `struct`s along with your definitions:\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const parameters = AbiParameters.from([\n *   'struct Foo { address spender; uint256 amount; }', // [!code hl]\n *   'Foo foo, address bar',\n * ])\n *\n * parameters\n * //^?\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n *\n *\n * @param parameters - The ABI Parameters to parse.\n * @returns The typed ABI Parameters.\n */\nexport function from<\n  const parameters extends AbiParameters | string | readonly string[],\n>(\n  parameters: parameters | AbiParameters | string | readonly string[],\n): from.ReturnType<parameters> {\n  if (Array.isArray(parameters) && typeof parameters[0] === 'string')\n    return abitype.parseAbiParameters(parameters) as never\n  if (typeof parameters === 'string')\n    return abitype.parseAbiParameters(parameters) as never\n  return parameters as never\n}\n\nexport declare namespace from {\n  type ReturnType<\n    parameters extends AbiParameters | string | readonly string[],\n  > = parameters extends string\n    ? abitype.ParseAbiParameters<parameters>\n    : parameters extends readonly string[]\n      ? abitype.ParseAbiParameters<parameters>\n      : parameters\n\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Throws when the data size is too small for the given parameters.\n *\n * @example\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * AbiParameters.decode([{ type: 'uint256' }], '0x010f')\n * //                                             ↑ ❌ 2 bytes\n * // @error: AbiParameters.DataSizeTooSmallError: Data size of 2 bytes is too small for given parameters.\n * // @error: Params: (uint256)\n * // @error: Data:   0x010f (2 bytes)\n * ```\n *\n * ### Solution\n *\n * Pass a valid data size.\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * AbiParameters.decode([{ type: 'uint256' }], '0x00000000000000000000000000000000000000000000000000000000000010f')\n * //                                             ↑ ✅ 32 bytes\n * ```\n */\nexport class DataSizeTooSmallError extends Errors.BaseError {\n  override readonly name = 'AbiParameters.DataSizeTooSmallError'\n  constructor({\n    data,\n    parameters,\n    size,\n  }: { data: Hex.Hex; parameters: readonly Parameter[]; size: number }) {\n    super(`Data size of ${size} bytes is too small for given parameters.`, {\n      metaMessages: [\n        `Params: (${abitype.formatAbiParameters(parameters as readonly [Parameter])})`,\n        `Data:   ${data} (${size} bytes)`,\n      ],\n    })\n  }\n}\n\n/**\n * Throws when zero data is provided, but data is expected.\n *\n * @example\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * AbiParameters.decode([{ type: 'uint256' }], '0x')\n * //                                           ↑ ❌ zero data\n * // @error: AbiParameters.DataSizeTooSmallError: Data size of 2 bytes is too small for given parameters.\n * // @error: Params: (uint256)\n * // @error: Data:   0x010f (2 bytes)\n * ```\n *\n * ### Solution\n *\n * Pass valid data.\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * AbiParameters.decode([{ type: 'uint256' }], '0x00000000000000000000000000000000000000000000000000000000000010f')\n * //                                             ↑ ✅ 32 bytes\n * ```\n */\nexport class ZeroDataError extends Errors.BaseError {\n  override readonly name = 'AbiParameters.ZeroDataError'\n  constructor() {\n    super('Cannot decode zero data (\"0x\") with ABI parameters.')\n  }\n}\n\n/**\n * The length of the array value does not match the length specified in the corresponding ABI parameter.\n *\n * ### Example\n *\n * ```ts twoslash\n * // @noErrors\n * import { AbiParameters } from 'ox'\n * // ---cut---\n * AbiParameters.encode(AbiParameters.from('uint256[3]'), [[69n, 420n]])\n * //                                               ↑ expected: 3  ↑ ❌ length: 2\n * // @error: AbiParameters.ArrayLengthMismatchError: ABI encoding array length mismatch\n * // @error: for type `uint256[3]`. Expected: `3`. Given: `2`.\n * ```\n *\n * ### Solution\n *\n * Pass an array of the correct length.\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n * // ---cut---\n * AbiParameters.encode(AbiParameters.from(['uint256[3]']), [[69n, 420n, 69n]])\n * //                                                         ↑ ✅ length: 3\n * ```\n */\nexport class ArrayLengthMismatchError extends Errors.BaseError {\n  override readonly name = 'AbiParameters.ArrayLengthMismatchError'\n  constructor({\n    expectedLength,\n    givenLength,\n    type,\n  }: { expectedLength: number; givenLength: number; type: string }) {\n    super(\n      `Array length mismatch for type \\`${type}\\`. Expected: \\`${expectedLength}\\`. Given: \\`${givenLength}\\`.`,\n    )\n  }\n}\n\n/**\n * The size of the bytes value does not match the size specified in the corresponding ABI parameter.\n *\n * ### Example\n *\n * ```ts twoslash\n * // @noErrors\n * import { AbiParameters } from 'ox'\n * // ---cut---\n * AbiParameters.encode(AbiParameters.from('bytes8'), [['0xdeadbeefdeadbeefdeadbeef']])\n * //                                            ↑ expected: 8 bytes  ↑ ❌ size: 12 bytes\n * // @error: BytesSizeMismatchError: Size of bytes \"0xdeadbeefdeadbeefdeadbeef\"\n * // @error: (bytes12) does not match expected size (bytes8).\n * ```\n *\n * ### Solution\n *\n * Pass a bytes value of the correct size.\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n * // ---cut---\n * AbiParameters.encode(AbiParameters.from(['bytes8']), ['0xdeadbeefdeadbeef'])\n * //                                                       ↑ ✅ size: 8 bytes\n * ```\n */\nexport class BytesSizeMismatchError extends Errors.BaseError {\n  override readonly name = 'AbiParameters.BytesSizeMismatchError'\n  constructor({\n    expectedSize,\n    value,\n  }: { expectedSize: number; value: Hex.Hex }) {\n    super(\n      `Size of bytes \"${value}\" (bytes${Hex.size(\n        value,\n      )}) does not match expected size (bytes${expectedSize}).`,\n    )\n  }\n}\n\n/**\n * The length of the values to encode does not match the length of the ABI parameters.\n *\n * ### Example\n *\n * ```ts twoslash\n * // @noErrors\n * import { AbiParameters } from 'ox'\n * // ---cut---\n * AbiParameters.encode(AbiParameters.from(['string', 'uint256']), ['hello'])\n * // @error: LengthMismatchError: ABI encoding params/values length mismatch.\n * // @error: Expected length (params): 2\n * // @error: Given length (values): 1\n * ```\n *\n * ### Solution\n *\n * Pass the correct number of values to encode.\n *\n * ### Solution\n *\n * Pass a [valid ABI type](https://docs.soliditylang.org/en/develop/abi-spec.html#types).\n */\nexport class LengthMismatchError extends Errors.BaseError {\n  override readonly name = 'AbiParameters.LengthMismatchError'\n  constructor({\n    expectedLength,\n    givenLength,\n  }: { expectedLength: number; givenLength: number }) {\n    super(\n      [\n        'ABI encoding parameters/values length mismatch.',\n        `Expected length (parameters): ${expectedLength}`,\n        `Given length (values): ${givenLength}`,\n      ].join('\\n'),\n    )\n  }\n}\n\n/**\n * The value provided is not a valid array as specified in the corresponding ABI parameter.\n *\n * ### Example\n *\n * ```ts twoslash\n * // @noErrors\n * import { AbiParameters } from 'ox'\n * // ---cut---\n * AbiParameters.encode(AbiParameters.from(['uint256[3]']), [69])\n * ```\n *\n * ### Solution\n *\n * Pass an array value.\n */\nexport class InvalidArrayError extends Errors.BaseError {\n  override readonly name = 'AbiParameters.InvalidArrayError'\n  constructor(value: unknown) {\n    super(`Value \\`${value}\\` is not a valid array.`)\n  }\n}\n\n/**\n * Throws when the ABI parameter type is invalid.\n *\n * @example\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * AbiParameters.decode([{ type: 'lol' }], '0x00000000000000000000000000000000000000000000000000000000000010f')\n * //                             ↑ ❌ invalid type\n * // @error: AbiParameters.InvalidTypeError: Type `lol` is not a valid ABI Type.\n * ```\n */\nexport class InvalidTypeError extends Errors.BaseError {\n  override readonly name = 'AbiParameters.InvalidTypeError'\n  constructor(type: string) {\n    super(`Type \\`${type}\\` is not a valid ABI Type.`)\n  }\n}\n","import * as abitype from 'abitype'\nimport type * as Abi from './Abi.js'\nimport * as AbiItem from './AbiItem.js'\nimport * as AbiParameters from './AbiParameters.js'\nimport type * as Errors from './Errors.js'\nimport * as Hex from './Hex.js'\nimport type * as internal from './internal/abiFunction.js'\nimport type * as AbiItem_internal from './internal/abiItem.js'\nimport type * as AbiParameters_internal from './internal/abiParameters.js'\nimport type { IsNarrowable } from './internal/types.js'\n\n/** Root type for an {@link ox#AbiItem.AbiItem} with a `function` type. */\nexport type AbiFunction = abitype.AbiFunction & {\n  hash?: Hex.Hex | undefined\n  overloads?: readonly AbiFunction[] | undefined\n}\n\n/**\n * Extracts an {@link ox#AbiFunction.AbiFunction} item from an {@link ox#Abi.Abi}, given a name.\n *\n * @example\n * ```ts twoslash\n * import { Abi, AbiFunction } from 'ox'\n *\n * const abi = Abi.from([\n *   'function foo(string)',\n *   'function bar(uint256)',\n * ])\n *\n * type Foo = AbiFunction.FromAbi<typeof abi, 'foo'>\n * //   ^?\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n */\nexport type FromAbi<\n  abi extends Abi.Abi,\n  name extends ExtractNames<abi>,\n> = abitype.ExtractAbiFunction<abi, name>\n\n/**\n * Extracts the names of all {@link ox#AbiFunction.AbiFunction} items in an {@link ox#Abi.Abi}.\n *\n * @example\n * ```ts twoslash\n * import { Abi, AbiFunction } from 'ox'\n *\n * const abi = Abi.from([\n *   'function foo(string)',\n *   'function bar(uint256)',\n * ])\n *\n * type names = AbiFunction.Name<typeof abi>\n * //   ^?\n *\n *\n * ```\n */\nexport type Name<abi extends Abi.Abi | readonly unknown[] = Abi.Abi> =\n  abi extends Abi.Abi ? ExtractNames<abi> : string\n\nexport type ExtractNames<\n  abi extends Abi.Abi,\n  abiStateMutability extends\n    abitype.AbiStateMutability = abitype.AbiStateMutability,\n> = abitype.ExtractAbiFunctionNames<abi, abiStateMutability>\n\n/**\n * ABI-decodes function arguments according to the ABI Item's input types (`inputs`).\n *\n * @example\n * ```ts twoslash\n * import { AbiFunction } from 'ox'\n *\n * const approve = AbiFunction.from('function approve(address, uint256)')\n *\n * const data = AbiFunction.encodeData(\n *   approve,\n *   ['0xd8da6bf26964af9d7eed9e03e53415d37aa96045', 69420n]\n * )\n * // '0x095ea7b3000000000000000000000000d8da6bf26964af9d7eed9e03e53415d37aa960450000000000000000000000000000000000000000000000000000000000010f2c'\n *\n * const input = AbiFunction.decodeData(approve, data) // [!code focus]\n * // @log: ['0xd8da6bf26964af9d7eed9e03e53415d37aa96045', 69420n]\n * ```\n *\n * @param abiFunction - The ABI Item to decode.\n * @param data - The data to decode.\n */\nexport function decodeData<const abiItem extends AbiFunction>(\n  abiFunction: abiItem | AbiFunction,\n  data: Hex.Hex,\n): decodeData.ReturnType<abiItem> {\n  const { overloads } = abiFunction\n\n  if (Hex.size(data) < 4) throw new AbiItem.InvalidSelectorSizeError({ data })\n  if (abiFunction.inputs.length === 0) return undefined\n\n  const item = overloads\n    ? fromAbi([abiFunction, ...overloads], data as never)\n    : abiFunction\n\n  if (Hex.size(data) <= 4) return undefined\n  return AbiParameters.decode(item.inputs, Hex.slice(data, 4))\n}\n\nexport declare namespace decodeData {\n  type ReturnType<abiFunction extends AbiFunction = AbiFunction> = IsNarrowable<\n    abiFunction,\n    AbiFunction\n  > extends true\n    ? abiFunction['inputs'] extends readonly []\n      ? undefined\n      :\n          | AbiParameters_internal.ToPrimitiveTypes<abiFunction['inputs']>\n          | (abiFunction['overloads'] extends readonly AbiFunction[]\n              ? AbiParameters_internal.ToPrimitiveTypes<\n                  abiFunction['overloads'][number]['inputs']\n                >\n              : never)\n    : unknown\n\n  type ErrorType =\n    | fromAbi.ErrorType\n    | AbiParameters.decode.ErrorType\n    | Hex.size.ErrorType\n    | Hex.slice.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * ABI-decodes a function's result according to the ABI Item's output types (`outputs`).\n *\n * :::tip\n *\n * This function is typically used to decode contract function return values (e.g. the response of an `eth_call` or the `input` property of a Transaction).\n *\n * See the [End-to-end Example](#end-to-end).\n *\n * :::\n *\n * @example\n * ```ts twoslash\n * import { AbiFunction } from 'ox'\n *\n * const data = '0x000000000000000000000000000000000000000000000000000000000000002a'\n *\n * const totalSupply = AbiFunction.from('function totalSupply() returns (uint256)')\n *\n * const output = AbiFunction.decodeResult(totalSupply, data)\n * // @log: 42n\n * ```\n *\n * @example\n * You can extract an ABI Function from a JSON ABI with {@link ox#AbiFunction.(fromAbi:function)}:\n *\n * ```ts twoslash\n * // @noErrors\n * import { Abi, AbiFunction } from 'ox'\n *\n * const data = '0x000000000000000000000000000000000000000000000000000000000000002a'\n *\n * const erc20Abi = Abi.from([...]) // [!code hl]\n * const totalSupply = AbiFunction.fromAbi(erc20Abi, 'totalSupply') // [!code hl]\n *\n * const output = AbiFunction.decodeResult(totalSupply, data)\n * // @log: 42n\n * ```\n *\n * @example\n * ### End-to-end\n *\n * Below is an end-to-end example of using `AbiFunction.decodeResult` to decode the result of a `balanceOf` contract call on the [Wagmi Mint Example contract](https://etherscan.io/address/0xfba3912ca04dd458c843e2ee08967fc04f3579c2).\n *\n * ```ts twoslash\n * import 'ox/window'\n * import { Abi, AbiFunction } from 'ox'\n *\n * // 1. Extract the Function from the Contract's ABI.\n * const abi = Abi.from([\n *   // ...\n *   {\n *     name: 'balanceOf',\n *     type: 'function',\n *     inputs: [{ name: 'account', type: 'address' }],\n *     outputs: [{ name: 'balance', type: 'uint256' }],\n *     stateMutability: 'view',\n *   },\n *   // ...\n * ])\n * const balanceOf = AbiFunction.fromAbi(abi, 'balanceOf')\n *\n * // 2. Encode the Function Input.\n * const data = AbiFunction.encodeData(\n *   balanceOf,\n *   ['0xd2135CfB216b74109775236E36d4b433F1DF507B']\n * )\n *\n * // 3. Perform the Contract Call.\n * const response = await window.ethereum!.request({\n *   method: 'eth_call',\n *   params: [\n *     {\n *       data,\n *       to: '0xfba3912ca04dd458c843e2ee08967fc04f3579c2',\n *     },\n *   ],\n * })\n *\n * // 4. Decode the Function Output. // [!code focus]\n * const balance = AbiFunction.decodeResult(balanceOf, response) // [!code focus]\n * // @log: 42n\n * ```\n *\n * :::note\n *\n * For simplicity, the above example uses `window.ethereum.request`, but you can use any\n * type of JSON-RPC interface.\n *\n * :::\n *\n * @param abiFunction - ABI Function to decode\n * @param data - ABI-encoded function output\n * @param options - Decoding options\n * @returns Decoded function output\n */\nexport function decodeResult<\n  const abiFunction extends AbiFunction,\n  as extends 'Object' | 'Array' = 'Array',\n>(\n  abiFunction: abiFunction | AbiFunction,\n  data: Hex.Hex,\n  options: decodeResult.Options<as> = {},\n): decodeResult.ReturnType<abiFunction, as> {\n  const values = AbiParameters.decode(abiFunction.outputs, data, options)\n  if (values && Object.keys(values).length === 0) return undefined\n  if (values && Object.keys(values).length === 1) {\n    if (Array.isArray(values)) return values[0]\n    return Object.values(values)[0]\n  }\n  return values\n}\n\nexport declare namespace decodeResult {\n  type Options<as extends 'Object' | 'Array'> = {\n    /**\n     * Whether the decoded values should be returned as an `Object` or `Array`.\n     *\n     * @default \"Array\"\n     */\n    as?: as | 'Array' | 'Object' | undefined\n  }\n\n  type ReturnType<\n    abiFunction extends AbiFunction = AbiFunction,\n    as extends 'Object' | 'Array' = 'Array',\n  > = IsNarrowable<abiFunction, AbiFunction> extends true\n    ? abiFunction['outputs'] extends readonly []\n      ? undefined\n      : abiFunction['outputs'] extends readonly [\n            infer type extends abitype.AbiParameter,\n          ]\n        ? abitype.AbiParameterToPrimitiveType<type>\n        : AbiParameters.decode.ReturnType<\n              abiFunction['outputs'],\n              as\n            > extends infer types\n          ? types extends readonly []\n            ? undefined\n            : types extends readonly [infer type]\n              ? type\n              : types\n          : never\n    : unknown\n\n  type ErrorType = AbiParameters.decode.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * ABI-encodes function arguments (`inputs`), prefixed with the 4 byte function selector.\n *\n * :::tip\n *\n * This function is typically used to encode a contract function and its arguments for contract calls (e.g. `data` parameter of an `eth_call` or `eth_sendTransaction`).\n *\n * See the [End-to-end Example](#end-to-end).\n *\n * :::\n *\n * @example\n * ```ts twoslash\n * import { AbiFunction } from 'ox'\n *\n * const approve = AbiFunction.from('function approve(address, uint256)')\n *\n * const data = AbiFunction.encodeData( // [!code focus]\n *   approve, // [!code focus]\n *   ['0xd8da6bf26964af9d7eed9e03e53415d37aa96045', 69420n] // [!code focus]\n * ) // [!code focus]\n * // @log: '0x095ea7b3000000000000000000000000d8da6bf26964af9d7eed9e03e53415d37aa960450000000000000000000000000000000000000000000000000000000000010f2c'\n * ```\n *\n * @example\n * You can extract an ABI Function from a JSON ABI with {@link ox#AbiFunction.(fromAbi:function)}:\n *\n * ```ts twoslash\n * // @noErrors\n * import { Abi, AbiFunction } from 'ox'\n *\n * const erc20Abi = Abi.from([...]) // [!code hl]\n * const approve = AbiFunction.fromAbi(erc20Abi, 'approve') // [!code hl]\n *\n * const data = AbiFunction.encodeData(\n *   approve,\n *   ['0xd8da6bf26964af9d7eed9e03e53415d37aa96045', 69420n]\n * )\n * // @log: '0x095ea7b3000000000000000000000000d8da6bf26964af9d7eed9e03e53415d37aa960450000000000000000000000000000000000000000000000000000000000010f2c'\n * ```\n *\n * @example\n * ### End-to-end\n *\n * Below is an end-to-end example of using `AbiFunction.encodeData` to encode the input of a `balanceOf` contract call on the [Wagmi Mint Example contract](https://etherscan.io/address/0xfba3912ca04dd458c843e2ee08967fc04f3579c2).\n *\n * ```ts twoslash\n * import 'ox/window'\n * import { Abi, AbiFunction } from 'ox'\n *\n * // 1. Extract the Function from the Contract's ABI.\n * const abi = Abi.from([\n *   // ...\n *   {\n *     name: 'balanceOf',\n *     type: 'function',\n *     inputs: [{ name: 'account', type: 'address' }],\n *     outputs: [{ name: 'balance', type: 'uint256' }],\n *     stateMutability: 'view',\n *   },\n *   // ...\n * ])\n * const balanceOf = AbiFunction.fromAbi(abi, 'balanceOf')\n *\n * // 2. Encode the Function Input. // [!code focus]\n * const data = AbiFunction.encodeData( // [!code focus]\n *   balanceOf, // [!code focus]\n *   ['0xd2135CfB216b74109775236E36d4b433F1DF507B'] // [!code focus]\n * ) // [!code focus]\n *\n * // 3. Perform the Contract Call.\n * const response = await window.ethereum!.request({\n *   method: 'eth_call',\n *   params: [\n *     {\n *       data,\n *       to: '0xfba3912ca04dd458c843e2ee08967fc04f3579c2',\n *     },\n *   ],\n * })\n *\n * // 4. Decode the Function Output.\n * const balance = AbiFunction.decodeResult(balanceOf, response)\n * ```\n *\n * :::note\n *\n * For simplicity, the above example uses `window.ethereum.request`, but you can use any\n * type of JSON-RPC interface.\n *\n * :::\n *\n * @param abiFunction - ABI Function to encode\n * @param args - Function arguments\n * @returns ABI-encoded function name and arguments\n */\nexport function encodeData<const abiFunction extends AbiFunction>(\n  abiFunction: abiFunction | AbiFunction,\n  ...args: encodeData.Args<abiFunction>\n): Hex.Hex {\n  const { overloads } = abiFunction\n\n  const item = overloads\n    ? (fromAbi([abiFunction as AbiFunction, ...overloads], abiFunction.name, {\n        args: (args as any)[0],\n      }) as AbiFunction)\n    : abiFunction\n\n  const selector = getSelector(item)\n\n  const data =\n    args.length > 0\n      ? AbiParameters.encode(item.inputs, (args as any)[0])\n      : undefined\n\n  return data ? Hex.concat(selector, data) : selector\n}\n\nexport declare namespace encodeData {\n  type Args<abiFunction extends AbiFunction = AbiFunction> = IsNarrowable<\n    abiFunction,\n    AbiFunction\n  > extends true\n    ?\n        | (abitype.AbiParametersToPrimitiveTypes<\n            abiFunction['inputs']\n          > extends readonly []\n            ? []\n            : [abitype.AbiParametersToPrimitiveTypes<abiFunction['inputs']>])\n        | (abiFunction['overloads'] extends readonly AbiFunction[]\n            ? [\n                abitype.AbiParametersToPrimitiveTypes<\n                  abiFunction['overloads'][number]['inputs']\n                >,\n              ]\n            : [])\n    : readonly unknown[]\n\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * ABI-encodes a function's result (`outputs`).\n *\n * @example\n * ```ts twoslash\n * import { AbiFunction } from 'ox'\n *\n * const totalSupply = AbiFunction.from('function totalSupply() returns (uint256)')\n * const output = AbiFunction.decodeResult(totalSupply, '0x000000000000000000000000000000000000000000000000000000000000002a')\n * // 42n\n *\n * const data = AbiFunction.encodeResult(totalSupply, 42n) // [!code focus]\n * // @log: '0x000000000000000000000000000000000000000000000000000000000000002a'\n * ```\n *\n * @param abiFunction - The ABI item to encode the function output for.\n * @param output - The function output to encode.\n * @param options - Encoding options.\n * @returns The encoded function output.\n */\nexport function encodeResult<\n  const abiFunction extends AbiFunction,\n  as extends 'Object' | 'Array' = 'Array',\n>(\n  abiFunction: abiFunction | AbiFunction,\n  output: encodeResult.Output<abiFunction, as>,\n  options: encodeResult.Options<as> = {},\n): Hex.Hex {\n  const { as = 'Array' } = options\n\n  const values = (() => {\n    if (abiFunction.outputs.length === 1) return [output]\n    if (Array.isArray(output)) return output\n    if (as === 'Object') return Object.values(output as any)\n    return [output]\n  })()\n\n  return AbiParameters.encode(abiFunction.outputs, values)\n}\n\nexport declare namespace encodeResult {\n  type Output<\n    abiFunction extends AbiFunction = AbiFunction,\n    as extends 'Object' | 'Array' = 'Array',\n  > = abiFunction['outputs'] extends readonly []\n    ? never\n    : abiFunction['outputs']['length'] extends 1\n      ? AbiParameters_internal.ToPrimitiveTypes<abiFunction['outputs']>[0]\n      : as extends 'Object'\n        ? AbiParameters_internal.ToObject<abiFunction['outputs']>\n        : AbiParameters_internal.ToPrimitiveTypes<abiFunction['outputs']>\n\n  type Options<as extends 'Object' | 'Array'> = {\n    as?: as | 'Object' | 'Array' | undefined\n  }\n\n  type ErrorType = AbiParameters.encode.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Formats an {@link ox#AbiFunction.AbiFunction} into a **Human Readable ABI Function**.\n *\n * @example\n * ```ts twoslash\n * import { AbiFunction } from 'ox'\n *\n * const formatted = AbiFunction.format({\n *   type: 'function',\n *   name: 'approve',\n *   stateMutability: 'nonpayable',\n *   inputs: [\n *     {\n *       name: 'spender',\n *       type: 'address',\n *     },\n *     {\n *       name: 'amount',\n *       type: 'uint256',\n *     },\n *   ],\n *   outputs: [{ type: 'bool' }],\n * })\n *\n * formatted\n * //    ^?\n *\n *\n * ```\n *\n * @param abiFunction - The ABI Function to format.\n * @returns The formatted ABI Function.\n */\nexport function format<const abiFunction extends AbiFunction>(\n  abiFunction: abiFunction | AbiFunction,\n): abitype.FormatAbiItem<abiFunction> {\n  return abitype.formatAbiItem(abiFunction) as never\n}\n\nexport declare namespace format {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Parses an arbitrary **JSON ABI Function** or **Human Readable ABI Function** into a typed {@link ox#AbiFunction.AbiFunction}.\n *\n * @example\n * ### JSON ABIs\n *\n * ```ts twoslash\n * import { AbiFunction } from 'ox'\n *\n * const approve = AbiFunction.from({\n *   type: 'function',\n *   name: 'approve',\n *   stateMutability: 'nonpayable',\n *   inputs: [\n *     {\n *       name: 'spender',\n *       type: 'address',\n *     },\n *     {\n *       name: 'amount',\n *       type: 'uint256',\n *     },\n *   ],\n *   outputs: [{ type: 'bool' }],\n * })\n *\n * approve\n * //^?\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n * @example\n * ### Human Readable ABIs\n *\n * A Human Readable ABI can be parsed into a typed ABI object:\n *\n * ```ts twoslash\n * import { AbiFunction } from 'ox'\n *\n * const approve = AbiFunction.from(\n *   'function approve(address spender, uint256 amount) returns (bool)' // [!code hl]\n * )\n *\n * approve\n * //^?\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n * @example\n * It is possible to specify `struct`s along with your definitions:\n *\n * ```ts twoslash\n * import { AbiFunction } from 'ox'\n *\n * const approve = AbiFunction.from([\n *   'struct Foo { address spender; uint256 amount; }', // [!code hl]\n *   'function approve(Foo foo) returns (bool)',\n * ])\n *\n * approve\n * //^?\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n *\n *\n * @param abiFunction - The ABI Function to parse.\n * @returns Typed ABI Function.\n */\nexport function from<\n  const abiFunction extends AbiFunction | string | readonly string[],\n>(\n  abiFunction: (abiFunction | AbiFunction | string | readonly string[]) &\n    (\n      | (abiFunction extends string ? internal.Signature<abiFunction> : never)\n      | (abiFunction extends readonly string[]\n          ? internal.Signatures<abiFunction>\n          : never)\n      | AbiFunction\n    ),\n  options: from.Options = {},\n): from.ReturnType<abiFunction> {\n  return AbiItem.from(abiFunction as AbiFunction, options) as never\n}\n\nexport declare namespace from {\n  type Options = {\n    /**\n     * Whether or not to prepare the extracted function (optimization for encoding performance).\n     * When `true`, the `hash` property is computed and included in the returned value.\n     *\n     * @default true\n     */\n    prepare?: boolean | undefined\n  }\n\n  type ReturnType<\n    abiFunction extends AbiFunction | string | readonly string[],\n  > = AbiItem.from.ReturnType<abiFunction>\n\n  type ErrorType = AbiItem.from.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Extracts an {@link ox#AbiFunction.AbiFunction} from an {@link ox#Abi.Abi} given a name and optional arguments.\n *\n * @example\n * ### Extracting by Name\n *\n * ABI Functions can be extracted by their name using the `name` option:\n *\n * ```ts twoslash\n * import { Abi, AbiFunction } from 'ox'\n *\n * const abi = Abi.from([\n *   'function foo()',\n *   'event Transfer(address owner, address to, uint256 tokenId)',\n *   'function bar(string a) returns (uint256 x)',\n * ])\n *\n * const item = AbiFunction.fromAbi(abi, 'foo') // [!code focus]\n * //    ^?\n *\n *\n *\n *\n *\n *\n * ```\n *\n * @example\n * ### Extracting by Selector\n *\n * ABI Functions can be extract by their selector when {@link ox#Hex.Hex} is provided to `name`.\n *\n * ```ts twoslash\n * import { Abi, AbiFunction } from 'ox'\n *\n * const abi = Abi.from([\n *   'function foo()',\n *   'event Transfer(address owner, address to, uint256 tokenId)',\n *   'function bar(string a) returns (uint256 x)',\n * ])\n * const item = AbiFunction.fromAbi(abi, '0x095ea7b3') // [!code focus]\n * //    ^?\n *\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n * :::note\n *\n * Extracting via a hex selector is useful when extracting an ABI Function from an `eth_call` RPC response or\n * from a Transaction `input`.\n *\n * :::\n *\n * @param abi - The ABI to extract from.\n * @param name - The name (or selector) of the ABI item to extract.\n * @param options - Extraction options.\n * @returns The ABI item.\n */\nexport function fromAbi<\n  const abi extends Abi.Abi | readonly unknown[],\n  name extends Name<abi>,\n  const args extends\n    | AbiItem_internal.ExtractArgs<abi, name>\n    | undefined = undefined,\n  //\n  allNames = Name<abi>,\n>(\n  abi: abi | Abi.Abi | readonly unknown[],\n  name: Hex.Hex | (name extends allNames ? name : never),\n  options?: AbiItem.fromAbi.Options<\n    abi,\n    name,\n    args,\n    AbiItem_internal.ExtractArgs<abi, name>\n  >,\n): AbiItem.fromAbi.ReturnType<abi, name, args, AbiFunction> {\n  const item = AbiItem.fromAbi(abi, name, options as any)\n  if (item.type !== 'function')\n    throw new AbiItem.NotFoundError({ name, type: 'function' })\n  return item as never\n}\n\nexport declare namespace fromAbi {\n  type ErrorType = AbiItem.fromAbi.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Computes the [4-byte selector](https://solidity-by-example.org/function-selector/) for an {@link ox#AbiFunction.AbiFunction}.\n *\n * Useful for computing function selectors for calldata.\n *\n * @example\n * ```ts twoslash\n * import { AbiFunction } from 'ox'\n *\n * const selector = AbiFunction.getSelector('function ownerOf(uint256 tokenId)')\n * // @log: '0x6352211e'\n * ```\n *\n * @example\n * ```ts twoslash\n * import { AbiFunction } from 'ox'\n *\n * const selector = AbiFunction.getSelector({\n *   inputs: [{ type: 'uint256' }],\n *   name: 'ownerOf',\n *   outputs: [],\n *   stateMutability: 'view',\n *   type: 'function'\n * })\n * // @log: '0x6352211e'\n * ```\n *\n * @param abiItem - The ABI item to compute the selector for.\n * @returns The first 4 bytes of the {@link ox#Hash.(keccak256:function)} hash of the function signature.\n */\nexport function getSelector(abiItem: string | AbiFunction): Hex.Hex {\n  return AbiItem.getSelector(abiItem)\n}\n\nexport declare namespace getSelector {\n  type ErrorType = AbiItem.getSelector.ErrorType | Errors.GlobalErrorType\n}\n","export const entryPoint06Address =\n  '0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789' as const\nexport const entryPoint07Address =\n  '0x0000000071727De22E5E9d8BAf0edAc6f37da032' as const\nexport const entryPoint08Address =\n  '0x4337084D9E255Ff0702461CF8895CE9E3b5Ff108' as const\n\nexport const ethAddress = '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee' as const\n\nexport const zeroAddress = '0x0000000000000000000000000000000000000000' as const\n","import type { AbiStateMutability, Address, Narrow } from 'abitype'\nimport * as AbiConstructor from 'ox/AbiConstructor'\nimport * as AbiFunction from 'ox/AbiFunction'\n\nimport { parseAccount } from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { ethAddress, zeroAddress } from '../../constants/address.js'\nimport { deploylessCallViaBytecodeBytecode } from '../../constants/contracts.js'\nimport { BaseError } from '../../errors/base.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Block } from '../../types/block.js'\nimport type { Call, Calls } from '../../types/calls.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Log } from '../../types/log.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { MulticallResults } from '../../types/multicall.js'\nimport type { StateOverride } from '../../types/stateOverride.js'\nimport type { Mutable } from '../../types/utils.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport { hexToBigInt } from '../../utils/index.js'\nimport {\n  type CreateAccessListErrorType,\n  createAccessList,\n} from './createAccessList.js'\nimport {\n  type SimulateBlocksErrorType,\n  type SimulateBlocksParameters,\n  simulateBlocks,\n} from './simulateBlocks.js'\n\nconst getBalanceCode =\n  '0x6080604052348015600e575f80fd5b5061016d8061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063f8b2cb4f1461002d575b5f80fd5b610047600480360381019061004291906100db565b61005d565b604051610054919061011e565b60405180910390f35b5f8173ffffffffffffffffffffffffffffffffffffffff16319050919050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100aa82610081565b9050919050565b6100ba816100a0565b81146100c4575f80fd5b50565b5f813590506100d5816100b1565b92915050565b5f602082840312156100f0576100ef61007d565b5b5f6100fd848285016100c7565b91505092915050565b5f819050919050565b61011881610106565b82525050565b5f6020820190506101315f83018461010f565b9291505056fea26469706673582212203b9fe929fe995c7cf9887f0bdba8a36dd78e8b73f149b17d2d9ad7cd09d2dc6264736f6c634300081a0033'\n\nexport type SimulateCallsParameters<\n  calls extends readonly unknown[] = readonly unknown[],\n  account extends Account | Address | undefined = Account | Address | undefined,\n> = Omit<SimulateBlocksParameters, 'blocks' | 'returnFullTransactions'> & {\n  /** Account attached to the calls (msg.sender). */\n  account?: account | undefined\n  /** Calls to simulate. */\n  calls: Calls<Narrow<calls>>\n  /** State overrides. */\n  stateOverrides?: StateOverride | undefined\n  /** Whether to trace asset changes. */\n  traceAssetChanges?: boolean | undefined\n}\n\nexport type SimulateCallsReturnType<\n  calls extends readonly unknown[] = readonly unknown[],\n> = {\n  /** Asset changes. */\n  assetChanges: readonly {\n    token: {\n      address: Address\n      decimals?: number | undefined\n      symbol?: string | undefined\n    }\n    value: { pre: bigint; post: bigint; diff: bigint }\n  }[]\n  /** Block results. */\n  block: Block\n  /** Call results. */\n  results: MulticallResults<\n    Narrow<calls>,\n    true,\n    {\n      extraProperties: {\n        data: Hex\n        gasUsed: bigint\n        logs?: Log[] | undefined\n      }\n      error: Error\n      mutability: AbiStateMutability\n    }\n  >\n}\n\nexport type SimulateCallsErrorType =\n  | AbiFunction.encodeData.ErrorType\n  | AbiFunction.from.ErrorType\n  | CreateAccessListErrorType\n  | EncodeFunctionDataErrorType\n  | SimulateBlocksErrorType\n  | ErrorType\n\n/**\n * Simulates execution of a batch of calls.\n *\n * @param client - Client to use\n * @param parameters - {@link SimulateCallsParameters}\n * @returns Results. {@link SimulateCallsReturnType}\n *\n * @example\n * ```ts\n * import { createPublicClient, http, parseEther } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { simulateCalls } from 'viem/actions'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const result = await simulateCalls(client, {\n *   account: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',\n *   calls: [{\n *     {\n *       data: '0xdeadbeef',\n *       to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *     },\n *     {\n *       to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *       value: parseEther('1'),\n *     },\n *   ]\n * })\n * ```\n */\nexport async function simulateCalls<\n  const calls extends readonly unknown[],\n  chain extends Chain | undefined,\n  account extends Account | Address | undefined = undefined,\n>(\n  client: Client<Transport, chain>,\n  parameters: SimulateCallsParameters<calls, account>,\n): Promise<SimulateCallsReturnType<calls>> {\n  const {\n    blockNumber,\n    blockTag,\n    calls,\n    stateOverrides,\n    traceAssetChanges,\n    traceTransfers,\n    validation,\n  } = parameters\n\n  const account = parameters.account\n    ? parseAccount(parameters.account)\n    : undefined\n\n  if (traceAssetChanges && !account)\n    throw new BaseError(\n      '`account` is required when `traceAssetChanges` is true',\n    )\n\n  // Derive bytecode to extract ETH balance via a contract call.\n  const getBalanceData = account\n    ? AbiConstructor.encode(AbiConstructor.from('constructor(bytes, bytes)'), {\n        bytecode: deploylessCallViaBytecodeBytecode,\n        args: [\n          getBalanceCode,\n          AbiFunction.encodeData(\n            AbiFunction.from('function getBalance(address)'),\n            [account.address],\n          ),\n        ],\n      })\n    : undefined\n\n  // Fetch ERC20/721 addresses that were \"touched\" from the calls.\n  const assetAddresses = traceAssetChanges\n    ? await Promise.all(\n        parameters.calls.map(async (call: any) => {\n          if (!call.data && !call.abi) return\n          const { accessList } = await createAccessList(client, {\n            account: account!.address,\n            ...call,\n            data: call.abi ? encodeFunctionData(call) : call.data,\n          })\n          return accessList.map(({ address, storageKeys }) =>\n            storageKeys.length > 0 ? address : null,\n          )\n        }),\n      ).then((x) => x.flat().filter(Boolean))\n    : []\n\n  const blocks = await simulateBlocks(client, {\n    blockNumber,\n    blockTag: blockTag as undefined,\n    blocks: [\n      ...(traceAssetChanges\n        ? [\n            // ETH pre balances\n            {\n              calls: [{ data: getBalanceData }],\n              stateOverrides,\n            },\n\n            // Asset pre balances\n            {\n              calls: assetAddresses.map((address, i) => ({\n                abi: [\n                  AbiFunction.from(\n                    'function balanceOf(address) returns (uint256)',\n                  ),\n                ],\n                functionName: 'balanceOf',\n                args: [account!.address],\n                to: address,\n                from: zeroAddress,\n                nonce: i,\n              })),\n              stateOverrides: [\n                {\n                  address: zeroAddress,\n                  nonce: 0,\n                },\n              ],\n            },\n          ]\n        : []),\n\n      {\n        calls: [...calls, {}].map((call) => ({\n          ...(call as Call),\n          from: account?.address,\n        })) as any,\n        stateOverrides,\n      },\n\n      ...(traceAssetChanges\n        ? [\n            // ETH post balances\n            {\n              calls: [{ data: getBalanceData }],\n            },\n\n            // Asset post balances\n            {\n              calls: assetAddresses.map((address, i) => ({\n                abi: [\n                  AbiFunction.from(\n                    'function balanceOf(address) returns (uint256)',\n                  ),\n                ],\n                functionName: 'balanceOf',\n                args: [account!.address],\n                to: address,\n                from: zeroAddress,\n                nonce: i,\n              })),\n              stateOverrides: [\n                {\n                  address: zeroAddress,\n                  nonce: 0,\n                },\n              ],\n            },\n\n            // Decimals\n            {\n              calls: assetAddresses.map((address, i) => ({\n                to: address,\n                abi: [\n                  AbiFunction.from('function decimals() returns (uint256)'),\n                ],\n                functionName: 'decimals',\n                from: zeroAddress,\n                nonce: i,\n              })),\n              stateOverrides: [\n                {\n                  address: zeroAddress,\n                  nonce: 0,\n                },\n              ],\n            },\n\n            // Token URI\n            {\n              calls: assetAddresses.map((address, i) => ({\n                to: address,\n                abi: [\n                  AbiFunction.from(\n                    'function tokenURI(uint256) returns (string)',\n                  ),\n                ],\n                functionName: 'tokenURI',\n                args: [0n],\n                from: zeroAddress,\n                nonce: i,\n              })),\n              stateOverrides: [\n                {\n                  address: zeroAddress,\n                  nonce: 0,\n                },\n              ],\n            },\n\n            // Symbols\n            {\n              calls: assetAddresses.map((address, i) => ({\n                to: address,\n                abi: [AbiFunction.from('function symbol() returns (string)')],\n                functionName: 'symbol',\n                from: zeroAddress,\n                nonce: i,\n              })),\n              stateOverrides: [\n                {\n                  address: zeroAddress,\n                  nonce: 0,\n                },\n              ],\n            },\n          ]\n        : []),\n    ],\n    traceTransfers,\n    validation,\n  })\n\n  const block_results = traceAssetChanges ? blocks[2] : blocks[0]\n  const [\n    block_ethPre,\n    block_assetsPre,\n    ,\n    block_ethPost,\n    block_assetsPost,\n    block_decimals,\n    block_tokenURI,\n    block_symbols,\n  ] = traceAssetChanges ? blocks : []\n\n  // Extract call results from the simulation.\n  const { calls: block_calls, ...block } = block_results\n  const results = block_calls.slice(0, -1) ?? []\n\n  // Extract pre-execution ETH and asset balances.\n  const ethPre = block_ethPre?.calls ?? []\n  const assetsPre = block_assetsPre?.calls ?? []\n  const balancesPre = [...ethPre, ...assetsPre].map((call) =>\n    call.status === 'success' ? hexToBigInt(call.data) : null,\n  )\n\n  // Extract post-execution ETH and asset balances.\n  const ethPost = block_ethPost?.calls ?? []\n  const assetsPost = block_assetsPost?.calls ?? []\n  const balancesPost = [...ethPost, ...assetsPost].map((call) =>\n    call.status === 'success' ? hexToBigInt(call.data) : null,\n  )\n\n  // Extract asset symbols & decimals.\n  const decimals = (block_decimals?.calls ?? []).map((x) =>\n    x.status === 'success' ? x.result : null,\n  ) as (number | null)[]\n  const symbols = (block_symbols?.calls ?? []).map((x) =>\n    x.status === 'success' ? x.result : null,\n  ) as (string | null)[]\n  const tokenURI = (block_tokenURI?.calls ?? []).map((x) =>\n    x.status === 'success' ? x.result : null,\n  ) as (string | null)[]\n\n  const changes: Mutable<SimulateCallsReturnType<calls>['assetChanges']> = []\n  for (const [i, balancePost] of balancesPost.entries()) {\n    const balancePre = balancesPre[i]\n\n    if (typeof balancePost !== 'bigint') continue\n    if (typeof balancePre !== 'bigint') continue\n\n    const decimals_ = decimals[i - 1]\n    const symbol_ = symbols[i - 1]\n    const tokenURI_ = tokenURI[i - 1]\n\n    const token = (() => {\n      if (i === 0)\n        return {\n          address: ethAddress,\n          decimals: 18,\n          symbol: 'ETH',\n        }\n\n      return {\n        address: assetAddresses[i - 1]! as Address,\n        decimals: tokenURI_ || decimals_ ? Number(decimals_ ?? 1) : undefined,\n        symbol: symbol_ ?? undefined,\n      }\n    })()\n\n    if (changes.some((change) => change.token.address === token.address))\n      continue\n\n    changes.push({\n      token,\n      value: {\n        pre: balancePre,\n        post: balancePost,\n        diff: balancePost - balancePre,\n      },\n    })\n  }\n\n  return {\n    assetChanges: changes,\n    block,\n    results,\n  } as unknown as SimulateCallsReturnType<calls>\n}\n","import * as abitype from 'abitype'\nimport type * as Abi from './Abi.js'\nimport * as AbiItem from './AbiItem.js'\nimport * as AbiParameters from './AbiParameters.js'\nimport type * as Errors from './Errors.js'\nimport * as Hex from './Hex.js'\nimport type * as internal from './internal/abiConstructor.js'\nimport type { IsNarrowable } from './internal/types.js'\n\n/** Root type for an {@link ox#AbiItem.AbiItem} with a `constructor` type. */\nexport type AbiConstructor = abitype.AbiConstructor\n\n/** @internal */\nexport function decode<const abiConstructor extends AbiConstructor>(\n  abiConstructor: abiConstructor,\n  options: decode.Options,\n): decode.ReturnType<abiConstructor>\n/**\n * ABI-decodes the provided constructor input (`inputs`).\n *\n * @example\n * ```ts twoslash\n * import { AbiConstructor } from 'ox'\n *\n * const constructor = AbiConstructor.from('constructor(address, uint256)')\n *\n * const bytecode = '0x...'\n *\n * const data = AbiConstructor.encode(constructor, {\n *   bytecode,\n *   args: ['0xd8da6bf26964af9d7eed9e03e53415d37aa96045', 123n],\n * })\n *\n * const decoded = AbiConstructor.decode(constructor, { // [!code focus]\n *   bytecode, // [!code focus]\n *   data, // [!code focus]\n * }) // [!code focus]\n * ```\n *\n * @param abiConstructor - The ABI Constructor to decode.\n * @param options - Decoding options.\n * @returns The decoded constructor inputs.\n */\nexport function decode(\n  abiConstructor: AbiConstructor,\n  options: decode.Options,\n): readonly unknown[] | undefined\n/** @internal */\nexport function decode(\n  abiConstructor: AbiConstructor,\n  options: decode.Options,\n): decode.ReturnType {\n  const { bytecode } = options\n  if (abiConstructor.inputs.length === 0) return undefined\n  const data = options.data.replace(bytecode, '0x') as Hex.Hex\n  return AbiParameters.decode(abiConstructor.inputs, data)\n}\n\nexport declare namespace decode {\n  interface Options {\n    /** The bytecode of the contract. */\n    bytecode: Hex.Hex\n    /** The encoded constructor. */\n    data: Hex.Hex\n  }\n\n  type ReturnType<abiConstructor extends AbiConstructor = AbiConstructor> =\n    | (abiConstructor['inputs']['length'] extends 0\n        ? undefined\n        : abitype.AbiParametersToPrimitiveTypes<abiConstructor['inputs']>)\n    | (IsNarrowable<abiConstructor, AbiConstructor> extends true\n        ? never\n        : undefined)\n\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * ABI-encodes the provided constructor input (`inputs`).\n *\n * @example\n * ```ts twoslash\n * import { AbiConstructor } from 'ox'\n *\n * const constructor = AbiConstructor.from('constructor(address, uint256)')\n *\n * const data = AbiConstructor.encode(constructor, {\n *   bytecode: '0x...',\n *   args: ['0xd8da6bf26964af9d7eed9e03e53415d37aa96045', 123n],\n * })\n * ```\n *\n * @example\n * ### End-to-end\n *\n * Below is an end-to-end example of using `AbiConstructor.encode` to encode the constructor of a contract and deploy it.\n *\n * ```ts twoslash\n * import 'ox/window'\n * import { AbiConstructor, Hex } from 'ox'\n *\n * // 1. Instantiate the ABI Constructor.\n * const constructor = AbiConstructor.from(\n *   'constructor(address owner, uint256 amount)',\n * )\n *\n * // 2. Encode the ABI Constructor.\n * const data = AbiConstructor.encode(constructor, {\n *   bytecode: '0x...',\n *   args: ['0xd8da6bf26964af9d7eed9e03e53415d37aa96045', 123n],\n * })\n *\n * // 3. Deploy the contract.\n * const hash = await window.ethereum!.request({\n *   method: 'eth_sendTransaction',\n *   params: [{ data }],\n * })\n * ```\n *\n * :::note\n *\n * For simplicity, the above example uses `window.ethereum.request`, but you can use any\n * type of JSON-RPC interface.\n *\n * :::\n *\n * @param abiConstructor - The ABI Constructor to encode.\n * @param options - Encoding options.\n * @returns The encoded constructor.\n */\nexport function encode<const abiConstructor extends AbiConstructor>(\n  abiConstructor: abiConstructor,\n  options: encode.Options<abiConstructor>,\n): encode.ReturnType {\n  const { bytecode, args } = options\n  return Hex.concat(\n    bytecode,\n    abiConstructor.inputs?.length && args?.length\n      ? AbiParameters.encode(abiConstructor.inputs, args as readonly unknown[])\n      : '0x',\n  )\n}\n\nexport declare namespace encode {\n  type Options<\n    abiConstructor extends AbiConstructor = AbiConstructor,\n    ///\n    args extends abitype.AbiParametersToPrimitiveTypes<\n      abiConstructor['inputs']\n    > = abitype.AbiParametersToPrimitiveTypes<abiConstructor['inputs']>,\n  > = {\n    /** The bytecode of the contract. */\n    bytecode: Hex.Hex\n    /** The constructor arguments to encode. */\n    args?: args | undefined\n  } & (readonly [] extends args\n    ? {}\n    : {\n        /** The constructor arguments to encode. */\n        args: args\n      })\n\n  type ReturnType = Hex.Hex\n\n  type ErrorType =\n    | Hex.concat.ErrorType\n    | AbiParameters.encode.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function format<const abiConstructor extends AbiConstructor>(\n  abiConstructor: abiConstructor,\n): format.ReturnType<abiConstructor>\n/**\n * Formats an {@link ox#AbiConstructor.AbiConstructor} into a **Human Readable ABI Function**.\n *\n * @example\n * ```ts twoslash\n * import { AbiConstructor } from 'ox'\n *\n * const formatted = AbiConstructor.format({\n *   inputs: [\n *     { name: 'owner', type: 'address' },\n *   ],\n *   payable: false,\n *   stateMutability: 'nonpayable',\n *   type: 'constructor',\n * })\n *\n * formatted\n * //    ^?\n *\n *\n * ```\n *\n * @param abiConstructor - The ABI Constructor to format.\n * @returns The formatted ABI Constructor.\n */\nexport function format(abiConstructor: AbiConstructor): string\n/** @internal */\nexport function format(abiConstructor: AbiConstructor): format.ReturnType {\n  return abitype.formatAbiItem(abiConstructor)\n}\n\nexport declare namespace format {\n  type ReturnType<abiConstructor extends AbiConstructor = AbiConstructor> =\n    abitype.FormatAbiItem<abiConstructor>\n\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function from<\n  const abiConstructor extends AbiConstructor | string | readonly string[],\n>(\n  abiConstructor: (abiConstructor | string | readonly string[]) &\n    (\n      | (abiConstructor extends string\n          ? internal.Signature<abiConstructor>\n          : never)\n      | (abiConstructor extends readonly string[]\n          ? internal.Signatures<abiConstructor>\n          : never)\n      | AbiConstructor\n    ),\n): from.ReturnType<abiConstructor>\n/**\n * Parses an arbitrary **JSON ABI Constructor** or **Human Readable ABI Constructor** into a typed {@link ox#AbiConstructor.AbiConstructor}.\n *\n * @example\n * ### JSON ABIs\n *\n * ```ts twoslash\n * import { AbiConstructor } from 'ox'\n *\n * const constructor = AbiConstructor.from({\n *   inputs: [\n *     { name: 'owner', type: 'address' },\n *   ],\n *   payable: false,\n *   stateMutability: 'nonpayable',\n *   type: 'constructor',\n * })\n *\n * constructor\n * //^?\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n * @example\n * ### Human Readable ABIs\n *\n * A Human Readable ABI can be parsed into a typed ABI object:\n *\n * ```ts twoslash\n * import { AbiConstructor } from 'ox'\n *\n * const constructor = AbiConstructor.from(\n *   'constructor(address owner)' // [!code hl]\n * )\n *\n * constructor\n * //^?\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n * @example\n * It is possible to specify `struct`s along with your definitions:\n *\n * ```ts twoslash\n * import { AbiConstructor } from 'ox'\n *\n * const constructor = AbiConstructor.from([\n *   'struct Foo { address owner; uint256 amount; }', // [!code hl]\n *   'constructor(Foo foo)',\n * ])\n *\n * constructor\n * //^?\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n *\n *\n * @param abiConstructor - The ABI Constructor to parse.\n * @returns Typed ABI Constructor.\n */\nexport function from(\n  abiConstructor: AbiConstructor | string | readonly string[],\n): AbiConstructor\n/** @internal */\nexport function from(\n  abiConstructor: AbiConstructor | string | readonly string[],\n): from.ReturnType {\n  return AbiItem.from(abiConstructor as AbiConstructor)\n}\n\nexport declare namespace from {\n  type ReturnType<\n    abiConstructor extends\n      | AbiConstructor\n      | string\n      | readonly string[] = AbiConstructor,\n  > = AbiItem.from.ReturnType<abiConstructor>\n\n  type ErrorType = AbiItem.from.ErrorType | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function fromAbi<const abi extends Abi.Abi | readonly unknown[]>(\n  abi: abi | Abi.Abi | readonly unknown[],\n): fromAbi.ReturnType<abi>\n/**\n * Extracts an {@link ox#AbiConstructor.AbiConstructor} from an {@link ox#Abi.Abi} given a name and optional arguments.\n *\n * @example\n * ### Extracting by Name\n *\n * ABI Events can be extracted by their name using the `name` option:\n *\n * ```ts twoslash\n * import { Abi, AbiConstructor } from 'ox'\n *\n * const abi = Abi.from([\n *   'constructor(address owner)',\n *   'function foo()',\n *   'event Transfer(address owner, address to, uint256 tokenId)',\n *   'function bar(string a) returns (uint256 x)',\n * ])\n *\n * const item = AbiConstructor.fromAbi(abi) // [!code focus]\n * //    ^?\n *\n *\n *\n *\n *\n *\n * ```\n *\n * @returns The ABI constructor.\n */\nexport function fromAbi(abi: Abi.Abi | readonly unknown[]): AbiConstructor\n/** @internal */\nexport function fromAbi(abi: Abi.Abi | readonly unknown[]): fromAbi.ReturnType {\n  const item = (abi as Abi.Abi).find((item) => item.type === 'constructor')\n  if (!item) throw new AbiItem.NotFoundError({ name: 'constructor' })\n  return item\n}\n\nexport declare namespace fromAbi {\n  type ReturnType<abi extends Abi.Abi | readonly unknown[] = Abi.Abi> = Extract<\n    abi[number],\n    { type: 'constructor' }\n  >\n\n  type ErrorType = AbiItem.NotFoundError | Errors.GlobalErrorType\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type UninstallFilterParameters = {\n  filter: Filter<any>\n}\nexport type UninstallFilterReturnType = boolean\n\nexport type UninstallFilterErrorType = RequestErrorType | ErrorType\n\n/**\n * Destroys a [`Filter`](https://viem.sh/docs/glossary/types#filter).\n *\n * - Docs: https://viem.sh/docs/actions/public/uninstallFilter\n * - JSON-RPC Methods: [`eth_uninstallFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_uninstallFilter)\n *\n * Destroys a Filter that was created from one of the following Actions:\n * - [`createBlockFilter`](https://viem.sh/docs/actions/public/createBlockFilter)\n * - [`createEventFilter`](https://viem.sh/docs/actions/public/createEventFilter)\n * - [`createPendingTransactionFilter`](https://viem.sh/docs/actions/public/createPendingTransactionFilter)\n *\n * @param client - Client to use\n * @param parameters - {@link UninstallFilterParameters}\n * @returns A boolean indicating if the Filter was successfully uninstalled. {@link UninstallFilterReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createPendingTransactionFilter, uninstallFilter } from 'viem/public'\n *\n * const filter = await createPendingTransactionFilter(client)\n * const uninstalled = await uninstallFilter(client, { filter })\n * // true\n */\nexport async function uninstallFilter<\n  transport extends Transport,\n  chain extends Chain | undefined,\n>(\n  _client: Client<transport, chain>,\n  { filter }: UninstallFilterParameters,\n): Promise<UninstallFilterReturnType> {\n  return filter.request({\n    method: 'eth_uninstallFilter',\n    params: [filter.id],\n  })\n}\n","import type * as Abi from '../core/Abi.js'\nimport * as AbiParameters from '../core/AbiParameters.js'\nimport type * as Address from '../core/Address.js'\nimport * as Errors from '../core/Errors.js'\nimport * as Hex from '../core/Hex.js'\nimport type * as Signature from '../core/Signature.js'\n\n/** Unwrapped ERC-6492 signature. */\nexport type Unwrapped = {\n  /** Calldata to pass to the target address for counterfactual verification. */\n  data: Hex.Hex\n  /** The original signature. */\n  signature: Hex.Hex\n  /** The target address to use for counterfactual verification. */\n  to: Address.Address\n}\n\n/** Wrapped ERC-6492 signature. */\nexport type Wrapped = Hex.Hex\n\n/**\n * Magic bytes used to identify ERC-6492 wrapped signatures.\n */\nexport const magicBytes =\n  '0x6492649264926492649264926492649264926492649264926492649264926492' as const\n\n/**\n * Deployless ERC-6492 signature verification bytecode.\n */\nexport const universalSignatureValidatorBytecode =\n  '0x608060405234801561001057600080fd5b5060405161069438038061069483398101604081905261002f9161051e565b600061003c848484610048565b9050806000526001601ff35b60007f64926492649264926492649264926492649264926492649264926492649264926100748361040c565b036101e7576000606080848060200190518101906100929190610577565b60405192955090935091506000906001600160a01b038516906100b69085906105dd565b6000604051808303816000865af19150503d80600081146100f3576040519150601f19603f3d011682016040523d82523d6000602084013e6100f8565b606091505b50509050876001600160a01b03163b60000361016057806101605760405162461bcd60e51b815260206004820152601e60248201527f5369676e617475726556616c696461746f723a206465706c6f796d656e74000060448201526064015b60405180910390fd5b604051630b135d3f60e11b808252906001600160a01b038a1690631626ba7e90610190908b9087906004016105f9565b602060405180830381865afa1580156101ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d19190610633565b6001600160e01b03191614945050505050610405565b6001600160a01b0384163b1561027a57604051630b135d3f60e11b808252906001600160a01b03861690631626ba7e9061022790879087906004016105f9565b602060405180830381865afa158015610244573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102689190610633565b6001600160e01b031916149050610405565b81516041146102df5760405162461bcd60e51b815260206004820152603a602482015260008051602061067483398151915260448201527f3a20696e76616c6964207369676e6174757265206c656e6774680000000000006064820152608401610157565b6102e7610425565b5060208201516040808401518451859392600091859190811061030c5761030c61065d565b016020015160f81c9050601b811480159061032b57508060ff16601c14155b1561038c5760405162461bcd60e51b815260206004820152603b602482015260008051602061067483398151915260448201527f3a20696e76616c6964207369676e617475726520762076616c756500000000006064820152608401610157565b60408051600081526020810180835289905260ff83169181019190915260608101849052608081018390526001600160a01b0389169060019060a0016020604051602081039080840390855afa1580156103ea573d6000803e3d6000fd5b505050602060405103516001600160a01b0316149450505050505b9392505050565b600060208251101561041d57600080fd5b508051015190565b60405180606001604052806003906020820280368337509192915050565b6001600160a01b038116811461045857600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561048c578181015183820152602001610474565b50506000910152565b600082601f8301126104a657600080fd5b81516001600160401b038111156104bf576104bf61045b565b604051601f8201601f19908116603f011681016001600160401b03811182821017156104ed576104ed61045b565b60405281815283820160200185101561050557600080fd5b610516826020830160208701610471565b949350505050565b60008060006060848603121561053357600080fd5b835161053e81610443565b6020850151604086015191945092506001600160401b0381111561056157600080fd5b61056d86828701610495565b9150509250925092565b60008060006060848603121561058c57600080fd5b835161059781610443565b60208501519093506001600160401b038111156105b357600080fd5b6105bf86828701610495565b604086015190935090506001600160401b0381111561056157600080fd5b600082516105ef818460208701610471565b9190910192915050565b828152604060208201526000825180604084015261061e816060850160208701610471565b601f01601f1916919091016060019392505050565b60006020828403121561064557600080fd5b81516001600160e01b03198116811461040557600080fd5b634e487b7160e01b600052603260045260246000fdfe5369676e617475726556616c696461746f72237265636f7665725369676e6572'\n\n/**\n * ABI for the ERC-6492 universal deployless signature validator contract.\n *\n * Constructor return value is `0x1` (valid) or `0x0` (invalid).\n */\nexport const universalSignatureValidatorAbi = [\n  {\n    inputs: [\n      {\n        name: '_signer',\n        type: 'address',\n      },\n      {\n        name: '_hash',\n        type: 'bytes32',\n      },\n      {\n        name: '_signature',\n        type: 'bytes',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n  {\n    inputs: [\n      {\n        name: '_signer',\n        type: 'address',\n      },\n      {\n        name: '_hash',\n        type: 'bytes32',\n      },\n      {\n        name: '_signature',\n        type: 'bytes',\n      },\n    ],\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n    name: 'isValidSig',\n  },\n] as const satisfies Abi.Abi\n\n/**\n * Asserts that the wrapped signature is valid.\n *\n * @example\n * ```ts twoslash\n * import { SignatureErc6492 } from 'ox/erc6492'\n *\n * SignatureErc6492.assert('0xdeadbeef')\n * // @error: InvalidWrappedSignatureError: Value `0xdeadbeef` is an invalid ERC-6492 wrapped signature.\n * ```\n *\n * @param wrapped - The wrapped signature to assert.\n */\nexport function assert(wrapped: Wrapped) {\n  if (Hex.slice(wrapped, -32) !== magicBytes)\n    throw new InvalidWrappedSignatureError(wrapped)\n}\n\nexport declare namespace assert {\n  type ErrorType =\n    | InvalidWrappedSignatureError\n    | Hex.slice.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Parses an [ERC-6492 wrapped signature](https://eips.ethereum.org/EIPS/eip-6492#specification) into its constituent parts.\n *\n * @example\n * ```ts twoslash\n * // @noErrors\n * import { Secp256k1 } from 'ox'\n * import { SignatureErc6492 } from 'ox/erc6492' // [!code focus]\n *\n * const signature = Secp256k1.sign({\n *   payload: '0x...',\n *   privateKey: '0x...',\n * })\n *\n * // Instantiate from serialized format. // [!code focus]\n * const wrapped = SignatureErc6492.from('0x...') // [!code focus]\n * // @log: { data: '0x...', signature: { ... }, to: '0x...', } // [!code focus]\n *\n * // Instantiate from constituent parts. // [!code focus]\n * const wrapped = SignatureErc6492.from({ // [!code focus]\n *   data: '0x...', // [!code focus]\n *   signature, // [!code focus]\n *   to: '0x...', // [!code focus]\n * })\n * // @log: { data: '0x...', signature: { ... }, to: '0x...', }\n * ```\n *\n * @param wrapped - Wrapped signature to parse.\n * @returns Wrapped signature.\n */\nexport function from(wrapped: Unwrapped | Wrapped): Unwrapped {\n  if (typeof wrapped === 'string') return unwrap(wrapped)\n  return wrapped\n}\n\nexport declare namespace from {\n  type ReturnType = Unwrapped\n\n  type ErrorType =\n    | AbiParameters.from.ErrorType\n    | AbiParameters.decode.ErrorType\n    | Signature.fromHex.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Parses an [ERC-6492 wrapped signature](https://eips.ethereum.org/EIPS/eip-6492#specification) into its constituent parts.\n *\n * @example\n * ```ts twoslash\n * import { SignatureErc6492 } from 'ox/erc6492'\n *\n * const { data, signature, to } = SignatureErc6492.unwrap('0x...')\n * ```\n *\n * @param wrapped - Wrapped signature to parse.\n * @returns Wrapped signature.\n */\nexport function unwrap(wrapped: Wrapped): Unwrapped {\n  assert(wrapped)\n\n  const [to, data, signature] = AbiParameters.decode(\n    AbiParameters.from('address, bytes, bytes'),\n    wrapped,\n  )\n\n  return { data, signature, to }\n}\n\nexport declare namespace unwrap {\n  type ErrorType =\n    | AbiParameters.from.ErrorType\n    | AbiParameters.decode.ErrorType\n    | Signature.fromHex.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Serializes an [ERC-6492 wrapped signature](https://eips.ethereum.org/EIPS/eip-6492#specification).\n *\n * @example\n * ```ts twoslash\n * import { Secp256k1 } from 'ox'\n * import { SignatureErc6492 } from 'ox/erc6492' // [!code focus]\n *\n * const signature = Secp256k1.sign({\n *   payload: '0x...',\n *   privateKey: '0x...',\n * })\n *\n * const wrapped = SignatureErc6492.wrap({ // [!code focus]\n *   data: '0xdeadbeef', // [!code focus]\n *   signature, // [!code focus]\n *   to: '0x00000000219ab540356cBB839Cbe05303d7705Fa', // [!code focus]\n * }) // [!code focus]\n * ```\n *\n * @param value - Wrapped signature to serialize.\n * @returns Serialized wrapped signature.\n */\nexport function wrap(value: Unwrapped): Wrapped {\n  const { data, signature, to } = value\n\n  return Hex.concat(\n    AbiParameters.encode(AbiParameters.from('address, bytes, bytes'), [\n      to,\n      data,\n      signature,\n    ]),\n    magicBytes,\n  )\n}\n\nexport declare namespace wrap {\n  type ErrorType =\n    | AbiParameters.encode.ErrorType\n    | Hex.concat.ErrorType\n    | Signature.toHex.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Validates a wrapped signature. Returns `true` if the wrapped signature is valid, `false` otherwise.\n *\n * @example\n * ```ts twoslash\n * import { SignatureErc6492 } from 'ox/erc6492'\n *\n * const valid = SignatureErc6492.validate('0xdeadbeef')\n * // @log: false\n * ```\n *\n * @param wrapped - The wrapped signature to validate.\n * @returns `true` if the wrapped signature is valid, `false` otherwise.\n */\nexport function validate(wrapped: Wrapped): boolean {\n  try {\n    assert(wrapped)\n    return true\n  } catch {\n    return false\n  }\n}\n\nexport declare namespace validate {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/** Thrown when the ERC-6492 wrapped signature is invalid. */\nexport class InvalidWrappedSignatureError extends Errors.BaseError {\n  override readonly name = 'SignatureErc6492.InvalidWrappedSignatureError'\n\n  constructor(wrapped: Wrapped) {\n    super(`Value \\`${wrapped}\\` is an invalid ERC-6492 wrapped signature.`)\n  }\n}\n","import { secp256k1 } from '@noble/curves/secp256k1'\nimport * as Bytes from './Bytes.js'\nimport * as Errors from './Errors.js'\nimport * as Hex from './Hex.js'\nimport type { Compute, ExactPartial, OneOf } from './internal/types.js'\nimport * as Json from './Json.js'\nimport * as Solidity from './Solidity.js'\n\n/** Root type for an ECDSA signature. */\nexport type Signature<\n  recovered extends boolean = true,\n  bigintType = bigint,\n  numberType = number,\n> = Compute<\n  recovered extends true\n    ? {\n        r: bigintType\n        s: bigintType\n        yParity: numberType\n      }\n    : {\n        r: bigintType\n        s: bigintType\n        yParity?: numberType | undefined\n      }\n>\n\n/** RPC-formatted ECDSA signature. */\nexport type Rpc<recovered extends boolean = true> = Signature<\n  recovered,\n  Hex.Hex,\n  Hex.Hex\n>\n\n/** (Legacy) ECDSA signature. */\nexport type Legacy<bigintType = bigint, numberType = number> = {\n  r: bigintType\n  s: bigintType\n  v: numberType\n}\n\n/** RPC-formatted (Legacy) ECDSA signature. */\nexport type LegacyRpc = Legacy<Hex.Hex, Hex.Hex>\n\nexport type Tuple = readonly [yParity: Hex.Hex, r: Hex.Hex, s: Hex.Hex]\n\n/**\n * Asserts that a Signature is valid.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * Signature.assert({\n *   r: -49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n *   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n *   yParity: 1,\n * })\n * // @error: InvalidSignatureRError:\n * // @error: Value `-549...n` is an invalid r value.\n * // @error: r must be a positive integer less than 2^256.\n * ```\n *\n * @param signature - The signature object to assert.\n */\nexport function assert(\n  signature: ExactPartial<Signature>,\n  options: assert.Options = {},\n): asserts signature is Signature {\n  const { recovered } = options\n  if (typeof signature.r === 'undefined')\n    throw new MissingPropertiesError({ signature })\n  if (typeof signature.s === 'undefined')\n    throw new MissingPropertiesError({ signature })\n  if (recovered && typeof signature.yParity === 'undefined')\n    throw new MissingPropertiesError({ signature })\n  if (signature.r < 0n || signature.r > Solidity.maxUint256)\n    throw new InvalidRError({ value: signature.r })\n  if (signature.s < 0n || signature.s > Solidity.maxUint256)\n    throw new InvalidSError({ value: signature.s })\n  if (\n    typeof signature.yParity === 'number' &&\n    signature.yParity !== 0 &&\n    signature.yParity !== 1\n  )\n    throw new InvalidYParityError({ value: signature.yParity })\n}\n\nexport declare namespace assert {\n  type Options = {\n    /** Whether or not the signature should be recovered (contain `yParity`). */\n    recovered?: boolean\n  }\n\n  type ErrorType =\n    | MissingPropertiesError\n    | InvalidRError\n    | InvalidSError\n    | InvalidYParityError\n    | Errors.GlobalErrorType\n}\n\n/**\n * Deserializes a {@link ox#Bytes.Bytes} signature into a structured {@link ox#Signature.Signature}.\n *\n * @example\n * ```ts twoslash\n * // @noErrors\n * import { Signature } from 'ox'\n *\n * Signature.fromBytes(new Uint8Array([128, 3, 131, ...]))\n * // @log: { r: 5231...n, s: 3522...n, yParity: 0 }\n * ```\n *\n * @param signature - The serialized signature.\n * @returns The deserialized {@link ox#Signature.Signature}.\n */\nexport function fromBytes(signature: Bytes.Bytes): Signature {\n  return fromHex(Hex.fromBytes(signature))\n}\n\nexport declare namespace fromBytes {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Deserializes a {@link ox#Hex.Hex} signature into a structured {@link ox#Signature.Signature}.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * Signature.fromHex('0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db81c')\n * // @log: { r: 5231...n, s: 3522...n, yParity: 0 }\n * ```\n *\n * @param serialized - The serialized signature.\n * @returns The deserialized {@link ox#Signature.Signature}.\n */\nexport function fromHex(signature: Hex.Hex): Signature {\n  if (signature.length !== 130 && signature.length !== 132)\n    throw new InvalidSerializedSizeError({ signature })\n\n  const r = BigInt(Hex.slice(signature, 0, 32))\n  const s = BigInt(Hex.slice(signature, 32, 64))\n\n  const yParity = (() => {\n    const yParity = Number(`0x${signature.slice(130)}`)\n    if (Number.isNaN(yParity)) return undefined\n    try {\n      return vToYParity(yParity)\n    } catch {\n      throw new InvalidYParityError({ value: yParity })\n    }\n  })()\n\n  if (typeof yParity === 'undefined')\n    return {\n      r,\n      s,\n    } as never\n  return {\n    r,\n    s,\n    yParity,\n  } as never\n}\n\nexport declare namespace fromHex {\n  type ErrorType =\n    | Hex.from.ErrorType\n    | InvalidSerializedSizeError\n    | Errors.GlobalErrorType\n}\n\n/**\n * Extracts a {@link ox#Signature.Signature} from an arbitrary object that may include signature properties.\n *\n * @example\n * ```ts twoslash\n * // @noErrors\n * import { Signature } from 'ox'\n *\n * Signature.extract({\n *   baz: 'barry',\n *   foo: 'bar',\n *   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n *   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n *   yParity: 1,\n *   zebra: 'stripes',\n * })\n * // @log: {\n * // @log:   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n * // @log:   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n * // @log:   yParity: 1\n * // @log: }\n * ```\n *\n * @param value - The arbitrary object to extract the signature from.\n * @returns The extracted {@link ox#Signature.Signature}.\n */\nexport function extract(value: extract.Value): Signature | undefined {\n  if (typeof value.r === 'undefined') return undefined\n  if (typeof value.s === 'undefined') return undefined\n  return from(value as any)\n}\n\nexport declare namespace extract {\n  type Value = {\n    r?: bigint | Hex.Hex | undefined\n    s?: bigint | Hex.Hex | undefined\n    yParity?: number | Hex.Hex | undefined\n    v?: number | Hex.Hex | undefined\n  }\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Instantiates a typed {@link ox#Signature.Signature} object from a {@link ox#Signature.Signature}, {@link ox#Signature.Legacy}, {@link ox#Bytes.Bytes}, or {@link ox#Hex.Hex}.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * Signature.from({\n *   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n *   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n *   yParity: 1,\n * })\n * // @log: {\n * // @log:   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n * // @log:   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n * // @log:   yParity: 1\n * // @log: }\n * ```\n *\n * @example\n * ### From Serialized\n *\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * Signature.from('0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db801')\n * // @log: {\n * // @log:   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n * // @log:   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n * // @log:   yParity: 1,\n * // @log: }\n * ```\n *\n * @example\n * ### From Legacy\n *\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * Signature.from({\n *   r: 47323457007453657207889730243826965761922296599680473886588287015755652701072n,\n *   s: 57228803202727131502949358313456071280488184270258293674242124340113824882788n,\n *   v: 27,\n * })\n * // @log: {\n * // @log:   r: 47323457007453657207889730243826965761922296599680473886588287015755652701072n,\n * // @log:   s: 57228803202727131502949358313456071280488184270258293674242124340113824882788n,\n * // @log:   yParity: 0\n * // @log: }\n * ```\n *\n * @param signature - The signature value to instantiate.\n * @returns The instantiated {@link ox#Signature.Signature}.\n */\nexport function from<\n  const signature extends\n    | OneOf<Signature<boolean> | Rpc<boolean> | Legacy | LegacyRpc>\n    | Hex.Hex\n    | Bytes.Bytes,\n>(\n  signature:\n    | signature\n    | OneOf<Signature<boolean> | Rpc<boolean> | Legacy | LegacyRpc>\n    | Hex.Hex\n    | Bytes.Bytes,\n): from.ReturnType<signature> {\n  const signature_ = (() => {\n    if (typeof signature === 'string') return fromHex(signature)\n    if (signature instanceof Uint8Array) return fromBytes(signature)\n    if (typeof signature.r === 'string') return fromRpc(signature)\n    if (signature.v) return fromLegacy(signature)\n    return {\n      r: signature.r,\n      s: signature.s,\n      ...(typeof signature.yParity !== 'undefined'\n        ? { yParity: signature.yParity }\n        : {}),\n    }\n  })()\n  assert(signature_)\n  return signature_ as never\n}\n\nexport declare namespace from {\n  type ReturnType<\n    signature extends\n      | OneOf<Signature<boolean> | Rpc<boolean> | Legacy | LegacyRpc>\n      | Hex.Hex\n      | Bytes.Bytes,\n  > = signature extends Signature<boolean> & { v?: undefined }\n    ? signature\n    : Signature\n\n  type ErrorType =\n    | assert.ErrorType\n    | fromBytes.ErrorType\n    | fromHex.ErrorType\n    | vToYParity.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Converts a DER-encoded signature to a {@link ox#Signature.Signature}.\n *\n * @example\n * ```ts twoslash\n * // @noErrors\n * import { Signature } from 'ox'\n *\n * const signature = Signature.fromDerBytes(new Uint8Array([132, 51, 23, ...]))\n * // @log: {\n * // @log:   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n * // @log:   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n * // @log: }\n * ```\n *\n * @param signature - The DER-encoded signature to convert.\n * @returns The {@link ox#Signature.Signature}.\n */\nexport function fromDerBytes(signature: Bytes.Bytes): Signature<false> {\n  return fromDerHex(Hex.fromBytes(signature))\n}\n\nexport declare namespace fromDerBytes {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Converts a DER-encoded signature to a {@link ox#Signature.Signature}.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const signature = Signature.fromDerHex('0x304402206e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf02204a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db8')\n * // @log: {\n * // @log:   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n * // @log:   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n * // @log: }\n * ```\n *\n * @param signature - The DER-encoded signature to convert.\n * @returns The {@link ox#Signature.Signature}.\n */\nexport function fromDerHex(signature: Hex.Hex): Signature<false> {\n  const { r, s } = secp256k1.Signature.fromDER(Hex.from(signature).slice(2))\n  return { r, s }\n}\n\nexport declare namespace fromDerHex {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Converts a {@link ox#Signature.Legacy} into a {@link ox#Signature.Signature}.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const legacy = Signature.fromLegacy({ r: 1n, s: 2n, v: 28 })\n * // @log: { r: 1n, s: 2n, yParity: 1 }\n * ```\n *\n * @param signature - The {@link ox#Signature.Legacy} to convert.\n * @returns The converted {@link ox#Signature.Signature}.\n */\nexport function fromLegacy(signature: Legacy): Signature {\n  return {\n    r: signature.r,\n    s: signature.s,\n    yParity: vToYParity(signature.v),\n  }\n}\n\nexport declare namespace fromLegacy {\n  type ErrorType = vToYParity.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Converts a {@link ox#Signature.Rpc} into a {@link ox#Signature.Signature}.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const signature = Signature.fromRpc({\n *   r: '0x635dc2033e60185bb36709c29c75d64ea51dfbd91c32ef4be198e4ceb169fb4d',\n *   s: '0x50c2667ac4c771072746acfdcf1f1483336dcca8bd2df47cd83175dbe60f0540',\n *   yParity: '0x0',\n * })\n * ```\n *\n * @param signature - The {@link ox#Signature.Rpc} to convert.\n * @returns The converted {@link ox#Signature.Signature}.\n */\nexport function fromRpc(signature: {\n  r: Hex.Hex\n  s: Hex.Hex\n  yParity?: Hex.Hex | undefined\n  v?: Hex.Hex | undefined\n}): Signature {\n  const yParity = (() => {\n    const v = signature.v ? Number(signature.v) : undefined\n    let yParity = signature.yParity ? Number(signature.yParity) : undefined\n    if (typeof v === 'number' && typeof yParity !== 'number')\n      yParity = vToYParity(v)\n    if (typeof yParity !== 'number')\n      throw new InvalidYParityError({ value: signature.yParity })\n    return yParity\n  })()\n\n  return {\n    r: BigInt(signature.r),\n    s: BigInt(signature.s),\n    yParity,\n  }\n}\n\nexport declare namespace fromRpc {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Converts a {@link ox#Signature.Tuple} to a {@link ox#Signature.Signature}.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const signature = Signature.fromTuple(['0x01', '0x7b', '0x1c8'])\n * // @log: {\n * // @log:   r: 123n,\n * // @log:   s: 456n,\n * // @log:   yParity: 1,\n * // @log: }\n * ```\n *\n * @param tuple - The {@link ox#Signature.Tuple} to convert.\n * @returns The {@link ox#Signature.Signature}.\n */\nexport function fromTuple(tuple: Tuple): Signature {\n  const [yParity, r, s] = tuple\n  return from({\n    r: r === '0x' ? 0n : BigInt(r),\n    s: s === '0x' ? 0n : BigInt(s),\n    yParity: yParity === '0x' ? 0 : Number(yParity),\n  })\n}\n\nexport declare namespace fromTuple {\n  type ErrorType = from.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Serializes a {@link ox#Signature.Signature} to {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const signature = Signature.toBytes({\n *   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n *   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n *   yParity: 1\n * })\n * // @log: Uint8Array [102, 16, 10, ...]\n * ```\n *\n * @param signature - The signature to serialize.\n * @returns The serialized signature.\n */\nexport function toBytes(signature: Signature<boolean>): Bytes.Bytes {\n  return Bytes.fromHex(toHex(signature))\n}\n\nexport declare namespace toBytes {\n  type ErrorType =\n    | toHex.ErrorType\n    | Bytes.fromHex.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Serializes a {@link ox#Signature.Signature} to {@link ox#Hex.Hex}.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const signature = Signature.toHex({\n *   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n *   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n *   yParity: 1\n * })\n * // @log: '0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db81c'\n * ```\n *\n * @param signature - The signature to serialize.\n * @returns The serialized signature.\n */\nexport function toHex(signature: Signature<boolean>): Hex.Hex {\n  assert(signature)\n\n  const r = signature.r\n  const s = signature.s\n\n  const signature_ = Hex.concat(\n    Hex.fromNumber(r, { size: 32 }),\n    Hex.fromNumber(s, { size: 32 }),\n    // If the signature is recovered, add the recovery byte to the signature.\n    typeof signature.yParity === 'number'\n      ? Hex.fromNumber(yParityToV(signature.yParity), { size: 1 })\n      : '0x',\n  )\n\n  return signature_\n}\n\nexport declare namespace toHex {\n  type ErrorType =\n    | Hex.concat.ErrorType\n    | Hex.fromNumber.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Converts a {@link ox#Signature.Signature} to DER-encoded format.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const signature = Signature.from({\n *   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n *   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n * })\n *\n * const signature_der = Signature.toDerBytes(signature)\n * // @log: Uint8Array [132, 51, 23, ...]\n * ```\n *\n * @param signature - The signature to convert.\n * @returns The DER-encoded signature.\n */\nexport function toDerBytes(signature: Signature<boolean>): Bytes.Bytes {\n  const sig = new secp256k1.Signature(signature.r, signature.s)\n  return sig.toDERRawBytes()\n}\n\nexport declare namespace toDerBytes {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Converts a {@link ox#Signature.Signature} to DER-encoded format.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const signature = Signature.from({\n *   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n *   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n * })\n *\n * const signature_der = Signature.toDerHex(signature)\n * // @log: '0x304402206e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf02204a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db8'\n * ```\n *\n * @param signature - The signature to convert.\n * @returns The DER-encoded signature.\n */\nexport function toDerHex(signature: Signature<boolean>): Hex.Hex {\n  const sig = new secp256k1.Signature(signature.r, signature.s)\n  return `0x${sig.toDERHex()}`\n}\n\nexport declare namespace toDerHex {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Converts a {@link ox#Signature.Signature} into a {@link ox#Signature.Legacy}.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const legacy = Signature.toLegacy({ r: 1n, s: 2n, yParity: 1 })\n * // @log: { r: 1n, s: 2n, v: 28 }\n * ```\n *\n * @param signature - The {@link ox#Signature.Signature} to convert.\n * @returns The converted {@link ox#Signature.Legacy}.\n */\nexport function toLegacy(signature: Signature): Legacy {\n  return {\n    r: signature.r,\n    s: signature.s,\n    v: yParityToV(signature.yParity),\n  }\n}\n\nexport declare namespace toLegacy {\n  type ErrorType = yParityToV.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Converts a {@link ox#Signature.Signature} into a {@link ox#Signature.Rpc}.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const signature = Signature.toRpc({\n *   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n *   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n *   yParity: 1\n * })\n * ```\n *\n * @param signature - The {@link ox#Signature.Signature} to convert.\n * @returns The converted {@link ox#Signature.Rpc}.\n */\nexport function toRpc(signature: Signature): Rpc {\n  const { r, s, yParity } = signature\n  return {\n    r: Hex.fromNumber(r, { size: 32 }),\n    s: Hex.fromNumber(s, { size: 32 }),\n    yParity: yParity === 0 ? '0x0' : '0x1',\n  }\n}\n\nexport declare namespace toRpc {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Converts a {@link ox#Signature.Signature} to a serialized {@link ox#Signature.Tuple} to be used for signatures in Transaction Envelopes, EIP-7702 Authorization Lists, etc.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const signatureTuple = Signature.toTuple({\n *   r: 123n,\n *   s: 456n,\n *   yParity: 1,\n * })\n * // @log: [yParity: '0x01', r: '0x7b', s: '0x1c8']\n * ```\n *\n * @param signature - The {@link ox#Signature.Signature} to convert.\n * @returns The {@link ox#Signature.Tuple}.\n */\nexport function toTuple(signature: Signature): Tuple {\n  const { r, s, yParity } = signature\n\n  return [\n    yParity ? '0x01' : '0x',\n    r === 0n ? '0x' : Hex.trimLeft(Hex.fromNumber(r!)),\n    s === 0n ? '0x' : Hex.trimLeft(Hex.fromNumber(s!)),\n  ] as const\n}\n\nexport declare namespace toTuple {\n  type ErrorType =\n    | Hex.trimLeft.ErrorType\n    | Hex.fromNumber.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Validates a Signature. Returns `true` if the signature is valid, `false` otherwise.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const valid = Signature.validate({\n *   r: -49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n *   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n *   yParity: 1,\n * })\n * // @log: false\n * ```\n *\n * @param signature - The signature object to assert.\n */\nexport function validate(\n  signature: ExactPartial<Signature>,\n  options: validate.Options = {},\n): boolean {\n  try {\n    assert(signature, options)\n    return true\n  } catch {\n    return false\n  }\n}\n\nexport declare namespace validate {\n  type Options = {\n    /** Whether or not the signature should be recovered (contain `yParity`). */\n    recovered?: boolean\n  }\n\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Converts a ECDSA `v` value to a `yParity` value.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const yParity = Signature.vToYParity(28)\n * // @log: 1\n * ```\n *\n * @param v - The ECDSA `v` value to convert.\n * @returns The `yParity` value.\n */\nexport function vToYParity(v: number): Signature['yParity'] {\n  if (v === 0 || v === 27) return 0\n  if (v === 1 || v === 28) return 1\n  if (v >= 35) return v % 2 === 0 ? 1 : 0\n  throw new InvalidVError({ value: v })\n}\n\nexport declare namespace vToYParity {\n  type ErrorType = InvalidVError | Errors.GlobalErrorType\n}\n\n/**\n * Converts a ECDSA `v` value to a `yParity` value.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const v = Signature.yParityToV(1)\n * // @log: 28\n * ```\n *\n * @param yParity - The ECDSA `yParity` value to convert.\n * @returns The `v` value.\n */\nexport function yParityToV(yParity: number): number {\n  if (yParity === 0) return 27\n  if (yParity === 1) return 28\n  throw new InvalidYParityError({ value: yParity })\n}\n\nexport declare namespace yParityToV {\n  type ErrorType = InvalidVError | Errors.GlobalErrorType\n}\n\n/** Thrown when the serialized signature is of an invalid size. */\nexport class InvalidSerializedSizeError extends Errors.BaseError {\n  override readonly name = 'Signature.InvalidSerializedSizeError'\n\n  constructor({ signature }: { signature: Hex.Hex | Bytes.Bytes }) {\n    super(`Value \\`${signature}\\` is an invalid signature size.`, {\n      metaMessages: [\n        'Expected: 64 bytes or 65 bytes.',\n        `Received ${Hex.size(Hex.from(signature))} bytes.`,\n      ],\n    })\n  }\n}\n\n/** Thrown when the signature is missing either an `r`, `s`, or `yParity` property. */\nexport class MissingPropertiesError extends Errors.BaseError {\n  override readonly name = 'Signature.MissingPropertiesError'\n\n  constructor({ signature }: { signature: unknown }) {\n    super(\n      `Signature \\`${Json.stringify(signature)}\\` is missing either an \\`r\\`, \\`s\\`, or \\`yParity\\` property.`,\n    )\n  }\n}\n\n/** Thrown when the signature has an invalid `r` value. */\nexport class InvalidRError extends Errors.BaseError {\n  override readonly name = 'Signature.InvalidRError'\n\n  constructor({ value }: { value: unknown }) {\n    super(\n      `Value \\`${value}\\` is an invalid r value. r must be a positive integer less than 2^256.`,\n    )\n  }\n}\n\n/** Thrown when the signature has an invalid `s` value. */\nexport class InvalidSError extends Errors.BaseError {\n  override readonly name = 'Signature.InvalidSError'\n\n  constructor({ value }: { value: unknown }) {\n    super(\n      `Value \\`${value}\\` is an invalid s value. s must be a positive integer less than 2^256.`,\n    )\n  }\n}\n\n/** Thrown when the signature has an invalid `yParity` value. */\nexport class InvalidYParityError extends Errors.BaseError {\n  override readonly name = 'Signature.InvalidYParityError'\n\n  constructor({ value }: { value: unknown }) {\n    super(\n      `Value \\`${value}\\` is an invalid y-parity value. Y-parity must be 0 or 1.`,\n    )\n  }\n}\n\n/** Thrown when the signature has an invalid `v` value. */\nexport class InvalidVError extends Errors.BaseError {\n  override readonly name = 'Signature.InvalidVError'\n\n  constructor({ value }: { value: number }) {\n    super(`Value \\`${value}\\` is an invalid v value. v must be 27, 28 or >=35.`)\n  }\n}\n","import type * as Address from './Address.js'\nimport type * as Errors from './Errors.js'\nimport * as Hash from './Hash.js'\nimport * as Hex from './Hex.js'\nimport type { Compute, Mutable, Undefined } from './internal/types.js'\nimport * as Rlp from './Rlp.js'\nimport * as Signature from './Signature.js'\n\n/** Root type for an EIP-7702 Authorization. */\nexport type Authorization<\n  signed extends boolean = boolean,\n  bigintType = bigint,\n  numberType = number,\n> = Compute<\n  {\n    /** Address of the contract to set as code for the Authority. */\n    address: Address.Address\n    /** Chain ID to authorize. */\n    chainId: numberType\n    /** Nonce of the Authority to authorize. */\n    nonce: bigintType\n  } & (signed extends true\n    ? Signature.Signature<true, bigintType, numberType>\n    : Undefined<Signature.Signature>)\n>\n\n/** RPC representation of an {@link ox#Authorization.Authorization}. */\nexport type Rpc = Authorization<true, Hex.Hex, Hex.Hex>\n\n/** List of {@link ox#Authorization.Authorization}. */\nexport type List<\n  signed extends boolean = boolean,\n  bigintType = bigint,\n  numberType = number,\n> = Compute<readonly Authorization<signed, bigintType, numberType>[]>\n\n/** RPC representation of an {@link ox#Authorization.List}. */\nexport type ListRpc = List<true, Hex.Hex, Hex.Hex>\n\n/** Signed representation of a list of {@link ox#Authorization.Authorization}. */\nexport type ListSigned<bigintType = bigint, numberType = number> = List<\n  true,\n  bigintType,\n  numberType\n>\n\n/** Signed representation of an {@link ox#Authorization.Authorization}. */\nexport type Signed<bigintType = bigint, numberType = number> = Authorization<\n  true,\n  bigintType,\n  numberType\n>\n\n/** Tuple representation of an {@link ox#Authorization.Authorization}. */\nexport type Tuple<signed extends boolean = boolean> = signed extends true\n  ? readonly [\n      chainId: Hex.Hex,\n      address: Hex.Hex,\n      nonce: Hex.Hex,\n      yParity: Hex.Hex,\n      r: Hex.Hex,\n      s: Hex.Hex,\n    ]\n  : readonly [chainId: Hex.Hex, address: Hex.Hex, nonce: Hex.Hex]\n\n/** Tuple representation of a signed {@link ox#Authorization.Authorization}. */\nexport type TupleSigned = Tuple<true>\n\n/** Tuple representation of a list of {@link ox#Authorization.Authorization}. */\nexport type TupleList<signed extends boolean = boolean> =\n  readonly Tuple<signed>[]\n\n/** Tuple representation of a list of signed {@link ox#Authorization.Authorization}. */\nexport type TupleListSigned = TupleList<true>\n\n/**\n * Converts an [EIP-7702](https://eips.ethereum.org/EIPS/eip-7702) Authorization object into a typed {@link ox#Authorization.Authorization}.\n *\n * @example\n * An Authorization can be instantiated from an [EIP-7702](https://eips.ethereum.org/EIPS/eip-7702) Authorization tuple in object format.\n *\n * ```ts twoslash\n * import { Authorization } from 'ox'\n *\n * const authorization = Authorization.from({\n *   address: '0x1234567890abcdef1234567890abcdef12345678',\n *   chainId: 1,\n *   nonce: 69n,\n * })\n * ```\n *\n * @example\n * ### Attaching Signatures\n *\n * A {@link ox#Signature.Signature} can be attached with the `signature` option. The example below demonstrates signing\n * an Authorization with {@link ox#Secp256k1.(sign:function)}.\n *\n * ```ts twoslash\n * import { Authorization, Secp256k1 } from 'ox'\n *\n * const authorization = Authorization.from({\n *   address: '0xbe95c3f554e9fc85ec51be69a3d807a0d55bcf2c',\n *   chainId: 1,\n *   nonce: 40n,\n * })\n *\n * const signature = Secp256k1.sign({\n *   payload: Authorization.getSignPayload(authorization),\n *   privateKey: '0x...',\n * })\n *\n * const authorization_signed = Authorization.from(authorization, { signature }) // [!code focus]\n * ```\n *\n * @param authorization - An [EIP-7702](https://eips.ethereum.org/EIPS/eip-7702) Authorization tuple in object format.\n * @param options - Authorization options.\n * @returns The {@link ox#Authorization.Authorization}.\n */\nexport function from<\n  const authorization extends Authorization | Rpc,\n  const signature extends Signature.Signature | undefined = undefined,\n>(\n  authorization: authorization | Authorization,\n  options: from.Options<signature> = {},\n): from.ReturnType<authorization, signature> {\n  if (typeof authorization.chainId === 'string')\n    return fromRpc(authorization) as never\n  return { ...authorization, ...options.signature } as never\n}\n\nexport declare namespace from {\n  type Options<\n    signature extends Signature.Signature | undefined =\n      | Signature.Signature\n      | undefined,\n  > = {\n    /** The {@link ox#Signature.Signature} to attach to the Authorization. */\n    signature?: signature | Signature.Signature | undefined\n  }\n\n  type ReturnType<\n    authorization extends Authorization | Rpc = Authorization,\n    signature extends Signature.Signature | undefined =\n      | Signature.Signature\n      | undefined,\n  > = Compute<\n    authorization extends Rpc\n      ? Signed\n      : authorization &\n          (signature extends Signature.Signature ? Readonly<signature> : {})\n  >\n\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Converts an {@link ox#Authorization.Rpc} to an {@link ox#Authorization.Authorization}.\n *\n * @example\n * ```ts twoslash\n * import { Authorization } from 'ox'\n *\n * const authorization = Authorization.fromRpc({\n *   address: '0x0000000000000000000000000000000000000000',\n *   chainId: '0x1',\n *   nonce: '0x1',\n *   r: '0x635dc2033e60185bb36709c29c75d64ea51dfbd91c32ef4be198e4ceb169fb4d',\n *   s: '0x50c2667ac4c771072746acfdcf1f1483336dcca8bd2df47cd83175dbe60f0540',\n *   yParity: '0x0',\n * })\n * ```\n *\n * @param authorization - The RPC-formatted Authorization.\n * @returns A signed {@link ox#Authorization.Authorization}.\n */\nexport function fromRpc(authorization: Rpc): Signed {\n  const { address, chainId, nonce } = authorization\n  const signature = Signature.extract(authorization)!\n\n  return {\n    address,\n    chainId: Number(chainId),\n    nonce: BigInt(nonce),\n    ...signature,\n  }\n}\n\nexport declare namespace fromRpc {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Converts an {@link ox#Authorization.ListRpc} to an {@link ox#Authorization.List}.\n *\n * @example\n * ```ts twoslash\n * import { Authorization } from 'ox'\n *\n * const authorizationList = Authorization.fromRpcList([{\n *   address: '0x0000000000000000000000000000000000000000',\n *   chainId: '0x1',\n *   nonce: '0x1',\n *   r: '0x635dc2033e60185bb36709c29c75d64ea51dfbd91c32ef4be198e4ceb169fb4d',\n *   s: '0x50c2667ac4c771072746acfdcf1f1483336dcca8bd2df47cd83175dbe60f0540',\n *   yParity: '0x0',\n * }])\n * ```\n *\n * @param authorizationList - The RPC-formatted Authorization list.\n * @returns A signed {@link ox#Authorization.List}.\n */\nexport function fromRpcList(authorizationList: ListRpc): ListSigned {\n  return authorizationList.map(fromRpc)\n}\n\nexport declare namespace fromRpcList {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Converts an {@link ox#Authorization.Tuple} to an {@link ox#Authorization.Authorization}.\n *\n * @example\n * ```ts twoslash\n * import { Authorization } from 'ox'\n *\n * const authorization = Authorization.fromTuple([\n *   '0x1',\n *   '0xbe95c3f554e9fc85ec51be69a3d807a0d55bcf2c',\n *   '0x3'\n * ])\n * // @log: {\n * // @log:   address: '0xbe95c3f554e9fc85ec51be69a3d807a0d55bcf2c',\n * // @log:   chainId: 1,\n * // @log:   nonce: 3n\n * // @log: }\n * ```\n *\n * @example\n * It is also possible to append a Signature tuple to the end of an Authorization tuple.\n *\n * ```ts twoslash\n * import { Authorization } from 'ox'\n *\n * const authorization = Authorization.fromTuple([\n *   '0x1',\n *   '0xbe95c3f554e9fc85ec51be69a3d807a0d55bcf2c',\n *   '0x3',\n *   '0x1',\n *   '0x68a020a209d3d56c46f38cc50a33f704f4a9a10a59377f8dd762ac66910e9b90',\n *   '0x7e865ad05c4035ab5792787d4a0297a43617ae897930a6fe4d822b8faea52064',\n * ])\n * // @log: {\n * // @log:   address: '0xbe95c3f554e9fc85ec51be69a3d807a0d55bcf2c',\n * // @log:   chainId: 1,\n * // @log:   nonce: 3n\n * // @log:   r: BigInt('0x68a020a209d3d56c46f38cc50a33f704f4a9a10a59377f8dd762ac66910e9b90'),\n * // @log:   s: BigInt('0x7e865ad05c4035ab5792787d4a0297a43617ae897930a6fe4d822b8faea52064'),\n * // @log:   yParity: 0,\n * // @log: }\n * ```\n *\n * @param tuple - The [EIP-7702](https://eips.ethereum.org/EIPS/eip-7702) Authorization tuple.\n * @returns The {@link ox#Authorization.Authorization}.\n */\nexport function fromTuple<const tuple extends Tuple>(\n  tuple: tuple,\n): fromTuple.ReturnType<tuple> {\n  const [chainId, address, nonce, yParity, r, s] = tuple\n  let args = {\n    address,\n    chainId: chainId === '0x' ? 0 : Number(chainId),\n    nonce: nonce === '0x' ? 0n : BigInt(nonce),\n  }\n  if (yParity && r && s)\n    args = { ...args, ...Signature.fromTuple([yParity, r, s]) }\n  return from(args) as never\n}\n\nexport declare namespace fromTuple {\n  type ReturnType<authorization extends Tuple = Tuple> = Compute<\n    Authorization<authorization extends Tuple<true> ? true : false>\n  >\n\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Converts an {@link ox#Authorization.TupleList} to an {@link ox#Authorization.List}.\n *\n * @example\n * ```ts twoslash\n * import { Authorization } from 'ox'\n *\n * const authorizationList = Authorization.fromTupleList([\n *   ['0x1', '0xbe95c3f554e9fc85ec51be69a3d807a0d55bcf2c', '0x3'],\n *   ['0x3', '0xbe95c3f554e9fc85ec51be69a3d807a0d55bcf2c', '0x14'],\n * ])\n * // @log: [\n * // @log:   {\n * // @log:     address: '0xbe95c3f554e9fc85ec51be69a3d807a0d55bcf2c',\n * // @log:     chainId: 1,\n * // @log:     nonce: 3n,\n * // @log:   },\n * // @log:   {\n * // @log:     address: '0xbe95c3f554e9fc85ec51be69a3d807a0d55bcf2c',\n * // @log:     chainId: 3,\n * // @log:     nonce: 20n,\n * // @log:   },\n * // @log: ]\n * ```\n *\n * @example\n * It is also possible to append a Signature tuple to the end of an Authorization tuple.\n *\n * ```ts twoslash\n * import { Authorization } from 'ox'\n *\n * const authorizationList = Authorization.fromTupleList([\n *   ['0x1', '0xbe95c3f554e9fc85ec51be69a3d807a0d55bcf2c', '0x3', '0x1', '0x68a020a209d3d56c46f38cc50a33f704f4a9a10a59377f8dd762ac66910e9b90', '0x7e865ad05c4035ab5792787d4a0297a43617ae897930a6fe4d822b8faea52064'],\n *   ['0x3', '0xbe95c3f554e9fc85ec51be69a3d807a0d55bcf2c', '0x14', '0x1', '0x68a020a209d3d56c46f38cc50a33f704f4a9a10a59377f8dd762ac66910e9b90', '0x7e865ad05c4035ab5792787d4a0297a43617ae897930a6fe4d822b8faea52064'],\n * ])\n * // @log: [\n * // @log:   {\n * // @log:     address: '0xbe95c3f554e9fc85ec51be69a3d807a0d55bcf2c',\n * // @log:     chainId: 1,\n * // @log:     nonce: 3n,\n * // @log:     r: BigInt('0x68a020a209d3d56c46f38cc50a33f704f4a9a10a59377f8dd762ac66910e9b90'),\n * // @log:     s: BigInt('0x7e865ad05c4035ab5792787d4a0297a43617ae897930a6fe4d822b8faea52064'),\n * // @log:     yParity: 0,\n * // @log:   },\n * // @log:   {\n * // @log:     address: '0xbe95c3f554e9fc85ec51be69a3d807a0d55bcf2c',\n * // @log:     chainId: 3,\n * // @log:     nonce: 20n,\n * // @log:     r: BigInt('0x68a020a209d3d56c46f38cc50a33f704f4a9a10a59377f8dd762ac66910e9b90'),\n * // @log:     s: BigInt('0x7e865ad05c4035ab5792787d4a0297a43617ae897930a6fe4d822b8faea52064'),\n * // @log:     yParity: 0,\n * // @log:   },\n * // @log: ]\n * ```\n *\n * @param tupleList - The [EIP-7702](https://eips.ethereum.org/EIPS/eip-7702) Authorization tuple list.\n * @returns An {@link ox#Authorization.List}.\n */\nexport function fromTupleList<const tupleList extends TupleList>(\n  tupleList: tupleList,\n): fromTupleList.ReturnType<tupleList> {\n  const list: Mutable<List> = []\n  for (const tuple of tupleList) list.push(fromTuple(tuple))\n  return list as never\n}\n\nexport declare namespace fromTupleList {\n  type ReturnType<tupleList extends TupleList> = Compute<\n    TupleList<tupleList extends TupleList<true> ? true : false>\n  >\n\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Computes the sign payload for an {@link ox#Authorization.Authorization} in [EIP-7702 format](https://eips.ethereum.org/EIPS/eip-7702): `keccak256('0x05' || rlp([chain_id, address, nonce]))`.\n *\n * @example\n * The example below demonstrates computing the sign payload for an {@link ox#Authorization.Authorization}. This payload\n * can then be passed to signing functions like {@link ox#Secp256k1.(sign:function)}.\n *\n * ```ts twoslash\n * import { Authorization, Secp256k1 } from 'ox'\n *\n * const authorization = Authorization.from({\n *   address: '0x1234567890abcdef1234567890abcdef12345678',\n *   chainId: 1,\n *   nonce: 69n,\n * })\n *\n * const payload = Authorization.getSignPayload(authorization) // [!code focus]\n *\n * const signature = Secp256k1.sign({\n *   payload,\n *   privateKey: '0x...',\n * })\n * ```\n *\n * @param authorization - The {@link ox#Authorization.Authorization}.\n * @returns The sign payload.\n */\nexport function getSignPayload(authorization: Authorization): Hex.Hex {\n  return hash(authorization, { presign: true })\n}\n\nexport declare namespace getSignPayload {\n  type ErrorType = hash.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Computes the hash for an {@link ox#Authorization.Authorization} in [EIP-7702 format](https://eips.ethereum.org/EIPS/eip-7702): `keccak256('0x05' || rlp([chain_id, address, nonce]))`.\n *\n * @example\n * ```ts twoslash\n * import { Authorization } from 'ox'\n *\n * const authorization = Authorization.from({\n *   address: '0x1234567890abcdef1234567890abcdef12345678',\n *   chainId: 1,\n *   nonce: 69n,\n * })\n *\n * const hash = Authorization.hash(authorization) // [!code focus]\n * ```\n *\n * @param authorization - The {@link ox#Authorization.Authorization}.\n * @returns The hash.\n */\nexport function hash(\n  authorization: Authorization,\n  options: hash.Options = {},\n): Hex.Hex {\n  const { presign } = options\n  return Hash.keccak256(\n    Hex.concat(\n      '0x05',\n      Rlp.fromHex(\n        toTuple(\n          presign\n            ? {\n                address: authorization.address,\n                chainId: authorization.chainId,\n                nonce: authorization.nonce,\n              }\n            : authorization,\n        ),\n      ),\n    ),\n  )\n}\n\nexport declare namespace hash {\n  type ErrorType =\n    | toTuple.ErrorType\n    | Hash.keccak256.ErrorType\n    | Hex.concat.ErrorType\n    | Rlp.fromHex.ErrorType\n    | Errors.GlobalErrorType\n\n  type Options = {\n    /** Whether to hash this authorization for signing. @default false */\n    presign?: boolean | undefined\n  }\n}\n\n/**\n * Converts an {@link ox#Authorization.Authorization} to an {@link ox#Authorization.Rpc}.\n *\n * @example\n * ```ts twoslash\n * import { Authorization } from 'ox'\n *\n * const authorization = Authorization.toRpc({\n *   address: '0x0000000000000000000000000000000000000000',\n *   chainId: 1,\n *   nonce: 1n,\n *   r: 44944627813007772897391531230081695102703289123332187696115181104739239197517n,\n *   s: 36528503505192438307355164441104001310566505351980369085208178712678799181120n,\n *   yParity: 0,\n * })\n * ```\n *\n * @param authorization - An Authorization.\n * @returns An RPC-formatted Authorization.\n */\nexport function toRpc(authorization: Signed): Rpc {\n  const { address, chainId, nonce, ...signature } = authorization\n\n  return {\n    address,\n    chainId: Hex.fromNumber(chainId),\n    nonce: Hex.fromNumber(nonce),\n    ...Signature.toRpc(signature),\n  }\n}\n\nexport declare namespace toRpc {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Converts an {@link ox#Authorization.List} to an {@link ox#Authorization.ListRpc}.\n *\n * @example\n * ```ts twoslash\n * import { Authorization } from 'ox'\n *\n * const authorization = Authorization.toRpcList([{\n *   address: '0x0000000000000000000000000000000000000000',\n *   chainId: 1,\n *   nonce: 1n,\n *   r: 44944627813007772897391531230081695102703289123332187696115181104739239197517n,\n *   s: 36528503505192438307355164441104001310566505351980369085208178712678799181120n,\n *   yParity: 0,\n * }])\n * ```\n *\n * @param authorizationList - An Authorization List.\n * @returns An RPC-formatted Authorization List.\n */\nexport function toRpcList(authorizationList: ListSigned): ListRpc {\n  return authorizationList.map(toRpc)\n}\n\nexport declare namespace toRpcList {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Converts an {@link ox#Authorization.Authorization} to an {@link ox#Authorization.Tuple}.\n *\n * @example\n * ```ts twoslash\n * import { Authorization } from 'ox'\n *\n * const authorization = Authorization.from({\n *   address: '0x1234567890abcdef1234567890abcdef12345678',\n *   chainId: 1,\n *   nonce: 69n,\n * })\n *\n * const tuple = Authorization.toTuple(authorization) // [!code focus]\n * // @log: [\n * // @log:   address: '0x1234567890abcdef1234567890abcdef12345678',\n * // @log:   chainId: 1,\n * // @log:   nonce: 69n,\n * // @log: ]\n * ```\n *\n * @param authorization - The {@link ox#Authorization.Authorization}.\n * @returns An [EIP-7702](https://eips.ethereum.org/EIPS/eip-7702) Authorization tuple.\n */\nexport function toTuple<const authorization extends Authorization>(\n  authorization: authorization,\n): toTuple.ReturnType<authorization> {\n  const { address, chainId, nonce } = authorization\n  const signature = Signature.extract(authorization)\n  return [\n    chainId ? Hex.fromNumber(chainId) : '0x',\n    address,\n    nonce ? Hex.fromNumber(nonce) : '0x',\n    ...(signature ? Signature.toTuple(signature) : []),\n  ] as never\n}\n\nexport declare namespace toTuple {\n  type ReturnType<authorization extends Authorization = Authorization> =\n    Compute<Tuple<authorization extends Signature.Signature ? true : false>>\n\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Converts an {@link ox#Authorization.List} to an {@link ox#Authorization.TupleList}.\n *\n * @example\n * ```ts twoslash\n * import { Authorization } from 'ox'\n *\n * const authorization_1 = Authorization.from({\n *   address: '0x1234567890abcdef1234567890abcdef12345678',\n *   chainId: 1,\n *   nonce: 69n,\n * })\n * const authorization_2 = Authorization.from({\n *   address: '0x1234567890abcdef1234567890abcdef12345678',\n *   chainId: 3,\n *   nonce: 20n,\n * })\n *\n * const tuple = Authorization.toTupleList([authorization_1, authorization_2]) // [!code focus]\n * // @log: [\n * // @log:   [\n * // @log:     address: '0x1234567890abcdef1234567890abcdef12345678',\n * // @log:     chainId: 1,\n * // @log:     nonce: 69n,\n * // @log:   ],\n * // @log:   [\n * // @log:     address: '0x1234567890abcdef1234567890abcdef12345678',\n * // @log:     chainId: 3,\n * // @log:     nonce: 20n,\n * // @log:   ],\n * // @log: ]\n * ```\n *\n * @param list - An {@link ox#Authorization.List}.\n * @returns An [EIP-7702](https://eips.ethereum.org/EIPS/eip-7702) Authorization tuple list.\n */\nexport function toTupleList<\n  const list extends\n    | readonly Authorization<true>[]\n    | readonly Authorization<false>[],\n>(list?: list | undefined): toTupleList.ReturnType<list> {\n  if (!list || list.length === 0) return []\n\n  const tupleList: Mutable<TupleList> = []\n  for (const authorization of list) tupleList.push(toTuple(authorization))\n\n  return tupleList as never\n}\n\nexport declare namespace toTupleList {\n  type ReturnType<\n    list extends\n      | readonly Authorization<true>[]\n      | readonly Authorization<false>[],\n  > = Compute<\n    TupleList<list extends readonly Authorization<true>[] ? true : false>\n  >\n\n  type ErrorType = Errors.GlobalErrorType\n}\n","import * as AbiParameters from '../core/AbiParameters.js'\nimport type * as Address from '../core/Address.js'\nimport * as Authorization from '../core/Authorization.js'\nimport * as Errors from '../core/Errors.js'\nimport * as Hex from '../core/Hex.js'\nimport * as Secp256k1 from '../core/Secp256k1.js'\nimport * as Signature from '../core/Signature.js'\n\n/** Unwrapped ERC-8010 signature. */\nexport type Unwrapped = {\n  /** Authorization signed by the delegatee. */\n  authorization: Authorization.Authorization<true>\n  /** Data to initialize the delegation. */\n  data?: Hex.Hex | undefined\n  /** The original signature. */\n  signature: Hex.Hex\n  /** Address of the initializer. */\n  to?: Address.Address | undefined\n}\n\n/** Wrapped ERC-8010 signature. */\nexport type Wrapped = Hex.Hex\n\n/**\n * Magic bytes used to identify ERC-8010 wrapped signatures.\n */\nexport const magicBytes =\n  '0x8010801080108010801080108010801080108010801080108010801080108010' as const\n\n/** Suffix ABI parameters for the ERC-8010 wrapped signature. */\nexport const suffixParameters = AbiParameters.from(\n  '(uint256 chainId, address delegation, uint256 nonce, uint8 yParity, uint256 r, uint256 s), address to, bytes data',\n)\n\n/**\n * Asserts that the wrapped signature is valid.\n *\n * @example\n * ```ts twoslash\n * import { SignatureErc8010 } from 'ox/erc8010'\n *\n * SignatureErc8010.assert('0xdeadbeef')\n * // @error: InvalidWrappedSignatureError: Value `0xdeadbeef` is an invalid ERC-8010 wrapped signature.\n * ```\n *\n * @param value - The value to assert.\n */\nexport function assert(value: Unwrapped | Wrapped) {\n  if (typeof value === 'string') {\n    if (Hex.slice(value, -32) !== magicBytes)\n      throw new InvalidWrappedSignatureError(value)\n  } else Signature.assert(value.authorization)\n}\n\nexport declare namespace assert {\n  type ErrorType =\n    | InvalidWrappedSignatureError\n    | Hex.slice.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Parses an [ERC-8010 wrapped signature](https://github.com/jxom/ERCs/blob/16f7e3891fff2e1e9c25dea0485497739db8a816/ERCS/erc-8010.md) into its constituent parts.\n *\n * @example\n * ```ts twoslash\n * // @noErrors\n * import { Secp256k1 } from 'ox'\n * import { SignatureErc8010 } from 'ox/erc8010' // [!code focus]\n *\n * const signature = Secp256k1.sign({\n *   payload: '0x...',\n *   privateKey: '0x...',\n * })\n *\n * // Instantiate from serialized format. // [!code focus]\n * const wrapped = SignatureErc8010.from('0x...') // [!code focus]\n * // @log: { authorization: { ... }, data: '0x...', signature: { ... } } // [!code focus]\n *\n * // Instantiate from constituent parts. // [!code focus]\n * const wrapped = SignatureErc8010.from({ // [!code focus]\n *   authorization: { ... }, // [!code focus]\n *   data: '0x...', // [!code focus]\n *   signature, // [!code focus]\n * })\n * // @log: { authorization: { ... }, data: '0x...', signature: { ... } }\n * ```\n *\n * @param value - Value to parse.\n * @returns Parsed value.\n */\nexport function from(value: Unwrapped | Wrapped): Unwrapped {\n  if (typeof value === 'string') return unwrap(value)\n  return value\n}\n\nexport declare namespace from {\n  type ErrorType = unwrap.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Unwraps an [ERC-8010 wrapped signature](https://github.com/jxom/ERCs/blob/16f7e3891fff2e1e9c25dea0485497739db8a816/ERCS/erc-8010.md) into its constituent parts.\n *\n * @example\n * ```ts twoslash\n * import { SignatureErc8010 } from 'ox/erc8010'\n *\n * const { authorization, data, signature } = SignatureErc8010.unwrap('0x...')\n * ```\n *\n * @param wrapped - Wrapped signature to unwrap.\n * @returns Unwrapped signature.\n */\nexport function unwrap(wrapped: Wrapped): Unwrapped {\n  assert(wrapped)\n\n  const suffixLength = Hex.toNumber(Hex.slice(wrapped, -64, -32))\n  const suffix = Hex.slice(wrapped, -suffixLength - 64, -64)\n  const signature = Hex.slice(wrapped, 0, -suffixLength - 64)\n\n  const [auth, to, data] = AbiParameters.decode(suffixParameters, suffix)\n\n  const authorization = Authorization.from({\n    address: auth.delegation,\n    chainId: Number(auth.chainId),\n    nonce: auth.nonce,\n    yParity: auth.yParity,\n    r: auth.r,\n    s: auth.s,\n  })\n\n  return {\n    authorization,\n    signature,\n    ...(data && data !== '0x' ? { data, to } : {}),\n  }\n}\n\nexport declare namespace unwrap {\n  type ErrorType = assert.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Wraps a signature into [ERC-8010 format](https://github.com/jxom/ERCs/blob/16f7e3891fff2e1e9c25dea0485497739db8a816/ERCS/erc-8010.md).\n *\n * @example\n * ```ts twoslash\n * // @noErrors\n * import { Secp256k1 } from 'ox'\n * import { SignatureErc8010 } from 'ox/erc8010' // [!code focus]\n *\n * const signature = Secp256k1.sign({\n *   payload: '0x...',\n *   privateKey: '0x...',\n * })\n *\n * const wrapped = SignatureErc8010.wrap({ // [!code focus]\n *   authorization: { ... }, // [!code focus]\n *   data: '0xdeadbeef', // [!code focus]\n *   signature, // [!code focus]\n * }) // [!code focus]\n * ```\n *\n * @param value - Values to wrap.\n * @returns Wrapped signature.\n */\nexport function wrap(value: Unwrapped): Wrapped {\n  const { data, signature } = value\n\n  assert(value)\n\n  const self = Secp256k1.recoverAddress({\n    payload: Authorization.getSignPayload(value.authorization),\n    signature: Signature.from(value.authorization),\n  })\n\n  const suffix = AbiParameters.encode(suffixParameters, [\n    {\n      ...value.authorization,\n      delegation: value.authorization.address,\n      chainId: BigInt(value.authorization.chainId),\n    },\n    value.to ?? self,\n    data ?? '0x',\n  ])\n  const suffixLength = Hex.fromNumber(Hex.size(suffix), { size: 32 })\n  return Hex.concat(signature, suffix, suffixLength, magicBytes)\n}\n\nexport declare namespace wrap {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Validates a wrapped signature. Returns `true` if the wrapped signature is valid, `false` otherwise.\n *\n * @example\n * ```ts twoslash\n * import { SignatureErc8010 } from 'ox/erc8010'\n *\n * const valid = SignatureErc8010.validate('0xdeadbeef')\n * // @log: false\n * ```\n *\n * @param value - The value to validate.\n * @returns `true` if the value is valid, `false` otherwise.\n */\nexport function validate(value: Unwrapped | Wrapped): boolean {\n  try {\n    assert(value)\n    return true\n  } catch {\n    return false\n  }\n}\n\nexport declare namespace validate {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/** Thrown when the ERC-8010 wrapped signature is invalid. */\nexport class InvalidWrappedSignatureError extends Errors.BaseError {\n  override readonly name = 'SignatureErc8010.InvalidWrappedSignatureError'\n\n  constructor(wrapped: Wrapped) {\n    super(`Value \\`${wrapped}\\` is an invalid ERC-8010 wrapped signature.`)\n  }\n}\n","import type { Address } from 'abitype'\nimport { SignatureErc6492 } from 'ox/erc6492'\nimport { SignatureErc8010 } from 'ox/erc8010'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  erc1271Abi,\n  erc6492SignatureValidatorAbi,\n  multicall3Abi,\n} from '../../constants/abis.js'\nimport {\n  erc6492SignatureValidatorByteCode,\n  multicall3Bytecode,\n} from '../../constants/contracts.js'\nimport {\n  CallExecutionError,\n  ContractFunctionExecutionError,\n} from '../../errors/contract.js'\nimport type { InvalidHexBooleanError } from '../../errors/encoding.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { ByteArray, Hex, Signature } from '../../types/misc.js'\nimport type { OneOf } from '../../types/utils.js'\nimport {\n  type EncodeDeployDataErrorType,\n  encodeDeployData,\n} from '../../utils/abi/encodeDeployData.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport {\n  type GetAddressErrorType,\n  getAddress,\n} from '../../utils/address/getAddress.js'\nimport {\n  type IsAddressEqualErrorType,\n  isAddressEqual,\n} from '../../utils/address/isAddressEqual.js'\nimport { verifyAuthorization } from '../../utils/authorization/verifyAuthorization.js'\nimport { type ConcatHexErrorType, concatHex } from '../../utils/data/concat.js'\nimport { type IsHexErrorType, isHex } from '../../utils/data/isHex.js'\nimport { hexToBool } from '../../utils/encoding/fromHex.js'\nimport {\n  type BytesToHexErrorType,\n  bytesToHex,\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type RecoverAddressErrorType,\n  recoverAddress,\n} from '../../utils/signature/recoverAddress.js'\nimport {\n  type SerializeSignatureErrorType,\n  serializeSignature,\n} from '../../utils/signature/serializeSignature.js'\nimport { type CallErrorType, type CallParameters, call } from './call.js'\nimport { type GetCodeErrorType, getCode } from './getCode.js'\nimport { type ReadContractErrorType, readContract } from './readContract.js'\n\nexport type VerifyHashParameters = Pick<\n  CallParameters,\n  'blockNumber' | 'blockTag'\n> & {\n  /** The address that signed the original message. */\n  address: Address\n  /** The address of the ERC-6492 signature verifier contract. */\n  erc6492VerifierAddress?: Address | undefined\n  /** The hash to be verified. */\n  hash: Hex\n  /** Multicall3 address for ERC-8010 verification. */\n  multicallAddress?: Address | undefined\n  /** The signature that was generated by signing the message with the address's private key. */\n  signature: Hex | ByteArray | Signature\n  /** @deprecated use `erc6492VerifierAddress` instead. */\n  universalSignatureVerifierAddress?: Address | undefined\n} & OneOf<{ factory: Address; factoryData: Hex } | {}>\n\nexport type VerifyHashReturnType = boolean\n\nexport type VerifyHashErrorType =\n  | BytesToHexErrorType\n  | CallErrorType\n  | ConcatHexErrorType\n  | EncodeDeployDataErrorType\n  | EncodeFunctionDataErrorType\n  | ErrorType\n  | GetAddressErrorType\n  | GetCodeErrorType\n  | InvalidHexBooleanError\n  | IsAddressEqualErrorType\n  | IsHexErrorType\n  | NumberToHexErrorType\n  | ReadContractErrorType\n  | RecoverAddressErrorType\n  | SerializeSignatureErrorType\n\n/**\n * Verifies a message hash onchain using ERC-6492.\n *\n * @param client - Client to use.\n * @param parameters - {@link VerifyHashParameters}\n * @returns Whether or not the signature is valid. {@link VerifyHashReturnType}\n */\nexport async function verifyHash<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  parameters: VerifyHashParameters,\n): Promise<VerifyHashReturnType> {\n  const {\n    address,\n    hash,\n    erc6492VerifierAddress:\n      verifierAddress = parameters.universalSignatureVerifierAddress ??\n      client.chain?.contracts?.erc6492Verifier?.address,\n    multicallAddress = parameters.multicallAddress ??\n      client.chain?.contracts?.multicall3?.address,\n  } = parameters\n\n  const signature = (() => {\n    const signature = parameters.signature\n    if (isHex(signature)) return signature\n    if (typeof signature === 'object' && 'r' in signature && 's' in signature)\n      return serializeSignature(signature)\n    return bytesToHex(signature)\n  })()\n\n  try {\n    if (SignatureErc8010.validate(signature))\n      return await verifyErc8010(client, {\n        ...parameters,\n        multicallAddress,\n        signature,\n      })\n    return await verifyErc6492(client, {\n      ...parameters,\n      verifierAddress,\n      signature,\n    })\n  } catch (error) {\n    // Fallback attempt to verify the signature via ECDSA recovery.\n    try {\n      const verified = isAddressEqual(\n        getAddress(address),\n        await recoverAddress({ hash, signature }),\n      )\n      if (verified) return true\n    } catch {}\n\n    if (error instanceof VerificationError) {\n      // if the execution fails, the signature was not valid and an internal method inside of the validator reverted\n      // this can happen for many reasons, for example if signer can not be recovered from the signature\n      // or if the signature has no valid format\n      return false\n    }\n\n    throw error\n  }\n}\n\n/** @internal */\nexport async function verifyErc8010(\n  client: Client,\n  parameters: verifyErc8010.Parameters,\n) {\n  const { address, blockNumber, blockTag, hash, multicallAddress } = parameters\n\n  const {\n    authorization: authorization_ox,\n    data: initData,\n    signature,\n    to,\n  } = SignatureErc8010.unwrap(parameters.signature)\n\n  // Check if already delegated\n  const code = await getCode(client, {\n    address,\n    blockNumber,\n    blockTag,\n  } as never)\n\n  // If already delegated, perform standard ERC-1271 verification.\n  if (code === concatHex(['0xef0100', authorization_ox.address]))\n    return await verifyErc1271(client, {\n      address,\n      blockNumber,\n      blockTag,\n      hash,\n      signature,\n    })\n\n  const authorization = {\n    address: authorization_ox.address,\n    chainId: Number(authorization_ox.chainId),\n    nonce: Number(authorization_ox.nonce),\n    r: numberToHex(authorization_ox.r, { size: 32 }),\n    s: numberToHex(authorization_ox.s, { size: 32 }),\n    yParity: authorization_ox.yParity,\n  } as const\n\n  const valid = await verifyAuthorization({\n    address,\n    authorization,\n  })\n  if (!valid) throw new VerificationError()\n\n  // Deployless verification.\n  const results = await getAction(\n    client,\n    readContract,\n    'readContract',\n  )({\n    ...(multicallAddress\n      ? { address: multicallAddress }\n      : { code: multicall3Bytecode }),\n    authorizationList: [authorization],\n    abi: multicall3Abi,\n    blockNumber,\n    blockTag: 'pending',\n    functionName: 'aggregate3',\n    args: [\n      [\n        ...(initData\n          ? [\n              {\n                allowFailure: true,\n                target: to ?? address,\n                callData: initData,\n              },\n            ]\n          : []),\n        {\n          allowFailure: true,\n          target: address,\n          callData: encodeFunctionData({\n            abi: erc1271Abi,\n            functionName: 'isValidSignature',\n            args: [hash, signature],\n          }),\n        },\n      ],\n    ],\n  })\n\n  const data = results[results.length - 1]?.returnData\n\n  if (data?.startsWith('0x1626ba7e')) return true\n  throw new VerificationError()\n}\n\nexport namespace verifyErc8010 {\n  export type Parameters = Pick<CallParameters, 'blockNumber' | 'blockTag'> & {\n    /** The address that signed the original message. */\n    address: Address\n    /** The hash to be verified. */\n    hash: Hex\n    /** Multicall3 address for ERC-8010 verification. */\n    multicallAddress?: Address | undefined\n    /** The signature that was generated by signing the message with the address's private key. */\n    signature: Hex\n  }\n}\n\n/** @internal */\n// biome-ignore lint/correctness/noUnusedVariables: _\nasync function verifyErc6492(\n  client: Client,\n  parameters: verifyErc6492.Parameters,\n) {\n  const {\n    address,\n    factory,\n    factoryData,\n    hash,\n    signature,\n    verifierAddress,\n    ...rest\n  } = parameters\n\n  const wrappedSignature = await (async () => {\n    // If no `factory` or `factoryData` is provided, it is assumed that the\n    // address is not a Smart Account, or the Smart Account is already deployed.\n    if (!factory && !factoryData) return signature\n\n    // If the signature is already wrapped, return the signature.\n    if (SignatureErc6492.validate(signature)) return signature\n\n    // If the Smart Account is not deployed, wrap the signature with a 6492 wrapper\n    // to perform counterfactual validation.\n    return SignatureErc6492.wrap({\n      data: factoryData!,\n      signature,\n      to: factory!,\n    })\n  })()\n\n  const args = verifierAddress\n    ? ({\n        to: verifierAddress,\n        data: encodeFunctionData({\n          abi: erc6492SignatureValidatorAbi,\n          functionName: 'isValidSig',\n          args: [address, hash, wrappedSignature],\n        }),\n        ...rest,\n      } as unknown as CallParameters)\n    : ({\n        data: encodeDeployData({\n          abi: erc6492SignatureValidatorAbi,\n          args: [address, hash, wrappedSignature],\n          bytecode: erc6492SignatureValidatorByteCode,\n        }),\n        ...rest,\n      } as unknown as CallParameters)\n\n  const { data } = await getAction(\n    client,\n    call,\n    'call',\n  )(args).catch((error) => {\n    if (error instanceof CallExecutionError) throw new VerificationError()\n    throw error\n  })\n\n  if (hexToBool(data ?? '0x0')) return true\n  throw new VerificationError()\n}\n\nexport namespace verifyErc6492 {\n  export type Parameters = Pick<CallParameters, 'blockNumber' | 'blockTag'> & {\n    /** The address that signed the original message. */\n    address: Address\n    /** The hash to be verified. */\n    hash: Hex\n    /** The signature that was generated by signing the message with the address's private key. */\n    signature: Hex\n    /** The address of the ERC-6492 signature verifier contract. */\n    verifierAddress?: Address | undefined\n  } & OneOf<{ factory: Address; factoryData: Hex } | {}>\n}\n\n/** @internal */\nexport async function verifyErc1271(\n  client: Client,\n  parameters: verifyErc1271.Parameters,\n) {\n  const { address, blockNumber, blockTag, hash, signature } = parameters\n\n  const result = await getAction(\n    client,\n    readContract,\n    'readContract',\n  )({\n    address,\n    abi: erc1271Abi,\n    args: [hash, signature],\n    blockNumber,\n    blockTag,\n    functionName: 'isValidSignature',\n  }).catch((error) => {\n    if (error instanceof ContractFunctionExecutionError)\n      throw new VerificationError()\n    throw error\n  })\n\n  if (result.startsWith('0x1626ba7e')) return true\n  throw new VerificationError()\n}\n\nexport namespace verifyErc1271 {\n  export type Parameters = Pick<CallParameters, 'blockNumber' | 'blockTag'> & {\n    /** The address that signed the original message. */\n    address: Address\n    /** The hash to be verified. */\n    hash: Hex\n    /** The signature that was generated by signing the message with the address's private key. */\n    signature: Hex\n  }\n}\n\nclass VerificationError extends Error {}\n","import { secp256k1 } from '@noble/curves/secp256k1'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex, Signature } from '../../types/misc.js'\nimport { type HexToBigIntErrorType, hexToBigInt } from '../encoding/fromHex.js'\nimport { hexToBytes } from '../encoding/toBytes.js'\nimport type { ToHexErrorType } from '../encoding/toHex.js'\n\ntype To = 'bytes' | 'hex'\n\nexport type SerializeSignatureParameters<to extends To = 'hex'> = Signature & {\n  to?: to | To | undefined\n}\n\nexport type SerializeSignatureReturnType<to extends To = 'hex'> =\n  | (to extends 'hex' ? Hex : never)\n  | (to extends 'bytes' ? ByteArray : never)\n\nexport type SerializeSignatureErrorType =\n  | HexToBigIntErrorType\n  | ToHexErrorType\n  | ErrorType\n\n/**\n * @description Converts a signature into hex format.\n *\n * @param signature The signature to convert.\n * @returns The signature in hex format.\n *\n * @example\n * serializeSignature({\n *   r: '0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf',\n *   s: '0x4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db8',\n *   yParity: 1\n * })\n * // \"0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db81c\"\n */\nexport function serializeSignature<to extends To = 'hex'>({\n  r,\n  s,\n  to = 'hex',\n  v,\n  yParity,\n}: SerializeSignatureParameters<to>): SerializeSignatureReturnType<to> {\n  const yParity_ = (() => {\n    if (yParity === 0 || yParity === 1) return yParity\n    if (v && (v === 27n || v === 28n || v >= 35n)) return v % 2n === 0n ? 1 : 0\n    throw new Error('Invalid `v` or `yParity` value')\n  })()\n  const signature = `0x${new secp256k1.Signature(\n    hexToBigInt(r),\n    hexToBigInt(s),\n  ).toCompactHex()}${yParity_ === 0 ? '1b' : '1c'}` as const\n\n  if (to === 'hex') return signature as SerializeSignatureReturnType<to>\n  return hexToBytes(signature) as SerializeSignatureReturnType<to>\n}\n","import type { Address } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { type GetAddressErrorType, getAddress } from '../address/getAddress.js'\nimport {\n  type IsAddressEqualErrorType,\n  isAddressEqual,\n} from '../address/isAddressEqual.js'\nimport {\n  type RecoverAuthorizationAddressErrorType,\n  type RecoverAuthorizationAddressParameters,\n  recoverAuthorizationAddress,\n} from './recoverAuthorizationAddress.js'\n\nexport type VerifyAuthorizationParameters =\n  RecoverAuthorizationAddressParameters & {\n    /** The address that signed the Authorization object. */\n    address: Address\n  }\n\nexport type VerifyAuthorizationReturnType = boolean\n\nexport type VerifyAuthorizationErrorType =\n  | IsAddressEqualErrorType\n  | GetAddressErrorType\n  | RecoverAuthorizationAddressErrorType\n  | ErrorType\n\n/**\n * Verify that an Authorization object was signed by the provided address.\n *\n * - Docs {@link https://viem.sh/docs/utilities/verifyAuthorization}\n *\n * @param parameters - {@link VerifyAuthorizationParameters}\n * @returns Whether or not the signature is valid. {@link VerifyAuthorizationReturnType}\n */\nexport async function verifyAuthorization({\n  address,\n  authorization,\n  signature,\n}: VerifyAuthorizationParameters): Promise<VerifyAuthorizationReturnType> {\n  return isAddressEqual(\n    getAddress(address),\n    await recoverAuthorizationAddress({\n      authorization,\n      signature,\n    }),\n  )\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex, SignableMessage } from '../../types/misc.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\nimport { toPrefixedMessage } from './toPrefixedMessage.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type HashMessageReturnType<to extends To> =\n  | (to extends 'bytes' ? ByteArray : never)\n  | (to extends 'hex' ? Hex : never)\n\nexport type HashMessageErrorType = Keccak256ErrorType | ErrorType\n\nexport function hashMessage<to extends To = 'hex'>(\n  message: SignableMessage,\n  to_?: to | undefined,\n): HashMessageReturnType<to> {\n  return keccak256(toPrefixedMessage(message), to_)\n}\n","import { presignMessagePrefix } from '../../constants/strings.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex, SignableMessage } from '../../types/misc.js'\nimport { type ConcatErrorType, concat } from '../data/concat.js'\nimport { size } from '../data/size.js'\nimport {\n  type BytesToHexErrorType,\n  bytesToHex,\n  type StringToHexErrorType,\n  stringToHex,\n} from '../encoding/toHex.js'\n\nexport type ToPrefixedMessageErrorType =\n  | ConcatErrorType\n  | StringToHexErrorType\n  | BytesToHexErrorType\n  | ErrorType\n\nexport function toPrefixedMessage(message_: SignableMessage): Hex {\n  const message = (() => {\n    if (typeof message_ === 'string') return stringToHex(message_)\n    if (typeof message_.raw === 'string') return message_.raw\n    return bytesToHex(message_.raw)\n  })()\n  const prefix = stringToHex(`${presignMessagePrefix}${size(message)}`)\n  return concat([prefix, message])\n}\n","export const presignMessagePrefix = '\\x19Ethereum Signed Message:\\n'\n","import type { TypedData } from 'abitype'\n\nimport { stringify } from '../utils/stringify.js'\nimport { BaseError } from './base.js'\n\nexport type InvalidDomainErrorType = InvalidDomainError & {\n  name: 'InvalidDomainError'\n}\nexport class InvalidDomainError extends BaseError {\n  constructor({ domain }: { domain: unknown }) {\n    super(`Invalid domain \"${stringify(domain)}\".`, {\n      metaMessages: ['Must be a valid EIP-712 domain.'],\n    })\n  }\n}\n\nexport type InvalidPrimaryTypeErrorType = InvalidPrimaryTypeError & {\n  name: 'InvalidPrimaryTypeError'\n}\nexport class InvalidPrimaryTypeError extends BaseError {\n  constructor({\n    primaryType,\n    types,\n  }: { primaryType: string; types: TypedData | Record<string, unknown> }) {\n    super(\n      `Invalid primary type \\`${primaryType}\\` must be one of \\`${JSON.stringify(Object.keys(types))}\\`.`,\n      {\n        docsPath: '/api/glossary/Errors#typeddatainvalidprimarytypeerror',\n        metaMessages: ['Check that the primary type is a key in `types`.'],\n      },\n    )\n  }\n}\n\nexport type InvalidStructTypeErrorType = InvalidStructTypeError & {\n  name: 'InvalidStructTypeError'\n}\nexport class InvalidStructTypeError extends BaseError {\n  constructor({ type }: { type: string }) {\n    super(`Struct type \"${type}\" is invalid.`, {\n      metaMessages: ['Struct type must not be a Solidity type.'],\n      name: 'InvalidStructTypeError',\n    })\n  }\n}\n","import type { TypedData, TypedDataDomain, TypedDataParameter } from 'abitype'\n\nimport { BytesSizeMismatchError } from '../errors/abi.js'\nimport { InvalidAddressError } from '../errors/address.js'\nimport {\n  InvalidDomainError,\n  InvalidPrimaryTypeError,\n  InvalidStructTypeError,\n} from '../errors/typedData.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport type { Hex } from '../types/misc.js'\nimport type { TypedDataDefinition } from '../types/typedData.js'\nimport { type IsAddressErrorType, isAddress } from './address/isAddress.js'\nimport { type SizeErrorType, size } from './data/size.js'\nimport { type NumberToHexErrorType, numberToHex } from './encoding/toHex.js'\nimport { bytesRegex, integerRegex } from './regex.js'\nimport {\n  type HashDomainErrorType,\n  hashDomain,\n} from './signature/hashTypedData.js'\nimport { stringify } from './stringify.js'\n\nexport type SerializeTypedDataErrorType =\n  | HashDomainErrorType\n  | IsAddressErrorType\n  | NumberToHexErrorType\n  | SizeErrorType\n  | ErrorType\n\nexport function serializeTypedData<\n  const typedData extends TypedData | Record<string, unknown>,\n  primaryType extends keyof typedData | 'EIP712Domain',\n>(parameters: TypedDataDefinition<typedData, primaryType>) {\n  const {\n    domain: domain_,\n    message: message_,\n    primaryType,\n    types,\n  } = parameters as unknown as TypedDataDefinition\n\n  const normalizeData = (\n    struct: readonly TypedDataParameter[],\n    data_: Record<string, unknown>,\n  ) => {\n    const data = { ...data_ }\n    for (const param of struct) {\n      const { name, type } = param\n      if (type === 'address') data[name] = (data[name] as string).toLowerCase()\n    }\n    return data\n  }\n\n  const domain = (() => {\n    if (!types.EIP712Domain) return {}\n    if (!domain_) return {}\n    return normalizeData(types.EIP712Domain, domain_)\n  })()\n\n  const message = (() => {\n    if (primaryType === 'EIP712Domain') return undefined\n    return normalizeData(types[primaryType], message_)\n  })()\n\n  return stringify({ domain, message, primaryType, types })\n}\n\nexport type ValidateTypedDataErrorType =\n  | HashDomainErrorType\n  | IsAddressErrorType\n  | NumberToHexErrorType\n  | SizeErrorType\n  | ErrorType\n\nexport function validateTypedData<\n  const typedData extends TypedData | Record<string, unknown>,\n  primaryType extends keyof typedData | 'EIP712Domain',\n>(parameters: TypedDataDefinition<typedData, primaryType>) {\n  const { domain, message, primaryType, types } =\n    parameters as unknown as TypedDataDefinition\n\n  const validateData = (\n    struct: readonly TypedDataParameter[],\n    data: Record<string, unknown>,\n  ) => {\n    for (const param of struct) {\n      const { name, type } = param\n      const value = data[name]\n\n      const integerMatch = type.match(integerRegex)\n      if (\n        integerMatch &&\n        (typeof value === 'number' || typeof value === 'bigint')\n      ) {\n        const [_type, base, size_] = integerMatch\n        // If number cannot be cast to a sized hex value, it is out of range\n        // and will throw.\n        numberToHex(value, {\n          signed: base === 'int',\n          size: Number.parseInt(size_, 10) / 8,\n        })\n      }\n\n      if (type === 'address' && typeof value === 'string' && !isAddress(value))\n        throw new InvalidAddressError({ address: value })\n\n      const bytesMatch = type.match(bytesRegex)\n      if (bytesMatch) {\n        const [_type, size_] = bytesMatch\n        if (size_ && size(value as Hex) !== Number.parseInt(size_, 10))\n          throw new BytesSizeMismatchError({\n            expectedSize: Number.parseInt(size_, 10),\n            givenSize: size(value as Hex),\n          })\n      }\n\n      const struct = types[type]\n      if (struct) {\n        validateReference(type)\n        validateData(struct, value as Record<string, unknown>)\n      }\n    }\n  }\n\n  // Validate domain types.\n  if (types.EIP712Domain && domain) {\n    if (typeof domain !== 'object') throw new InvalidDomainError({ domain })\n    validateData(types.EIP712Domain, domain)\n  }\n\n  // Validate message types.\n  if (primaryType !== 'EIP712Domain') {\n    if (types[primaryType]) validateData(types[primaryType], message)\n    else throw new InvalidPrimaryTypeError({ primaryType, types })\n  }\n}\n\nexport type GetTypesForEIP712DomainErrorType = ErrorType\n\nexport function getTypesForEIP712Domain({\n  domain,\n}: {\n  domain?: TypedDataDomain | undefined\n}): TypedDataParameter[] {\n  return [\n    typeof domain?.name === 'string' && { name: 'name', type: 'string' },\n    domain?.version && { name: 'version', type: 'string' },\n    (typeof domain?.chainId === 'number' ||\n      typeof domain?.chainId === 'bigint') && {\n      name: 'chainId',\n      type: 'uint256',\n    },\n    domain?.verifyingContract && {\n      name: 'verifyingContract',\n      type: 'address',\n    },\n    domain?.salt && { name: 'salt', type: 'bytes32' },\n  ].filter(Boolean) as TypedDataParameter[]\n}\n\nexport type DomainSeparatorErrorType =\n  | GetTypesForEIP712DomainErrorType\n  | HashDomainErrorType\n  | ErrorType\n\nexport function domainSeparator({ domain }: { domain: TypedDataDomain }): Hex {\n  return hashDomain({\n    domain,\n    types: {\n      EIP712Domain: getTypesForEIP712Domain({ domain }),\n    },\n  })\n}\n\n/** @internal */\nfunction validateReference(type: string) {\n  // Struct type must not be a Solidity type.\n  if (\n    type === 'address' ||\n    type === 'bool' ||\n    type === 'string' ||\n    type.startsWith('bytes') ||\n    type.startsWith('uint') ||\n    type.startsWith('int')\n  )\n    throw new InvalidStructTypeError({ type })\n}\n","// Implementation forked and adapted from https://github.com/MetaMask/eth-sig-util/blob/main/src/sign-typed-data.ts\n\nimport type { AbiParameter, TypedData, TypedDataDomain } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { TypedDataDefinition } from '../../types/typedData.js'\nimport {\n  type EncodeAbiParametersErrorType,\n  encodeAbiParameters,\n} from '../abi/encodeAbiParameters.js'\nimport { concat } from '../data/concat.js'\nimport { type ToHexErrorType, toHex } from '../encoding/toHex.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\nimport {\n  type GetTypesForEIP712DomainErrorType,\n  getTypesForEIP712Domain,\n  type ValidateTypedDataErrorType,\n  validateTypedData,\n} from '../typedData.js'\n\ntype MessageTypeProperty = {\n  name: string\n  type: string\n}\n\nexport type HashTypedDataParameters<\n  typedData extends TypedData | Record<string, unknown> = TypedData,\n  primaryType extends keyof typedData | 'EIP712Domain' = keyof typedData,\n> = TypedDataDefinition<typedData, primaryType>\n\nexport type HashTypedDataReturnType = Hex\n\nexport type HashTypedDataErrorType =\n  | GetTypesForEIP712DomainErrorType\n  | HashDomainErrorType\n  | HashStructErrorType\n  | ValidateTypedDataErrorType\n  | ErrorType\n\nexport function hashTypedData<\n  const typedData extends TypedData | Record<string, unknown>,\n  primaryType extends keyof typedData | 'EIP712Domain',\n>(\n  parameters: HashTypedDataParameters<typedData, primaryType>,\n): HashTypedDataReturnType {\n  const {\n    domain = {},\n    message,\n    primaryType,\n  } = parameters as HashTypedDataParameters\n  const types = {\n    EIP712Domain: getTypesForEIP712Domain({ domain }),\n    ...parameters.types,\n  }\n\n  // Need to do a runtime validation check on addresses, byte ranges, integer ranges, etc\n  // as we can't statically check this with TypeScript.\n  validateTypedData({\n    domain,\n    message,\n    primaryType,\n    types,\n  })\n\n  const parts: Hex[] = ['0x1901']\n  if (domain)\n    parts.push(\n      hashDomain({\n        domain,\n        types: types as Record<string, MessageTypeProperty[]>,\n      }),\n    )\n\n  if (primaryType !== 'EIP712Domain')\n    parts.push(\n      hashStruct({\n        data: message,\n        primaryType,\n        types: types as Record<string, MessageTypeProperty[]>,\n      }),\n    )\n\n  return keccak256(concat(parts))\n}\n\nexport type HashDomainErrorType = HashStructErrorType | ErrorType\n\nexport function hashDomain({\n  domain,\n  types,\n}: {\n  domain: TypedDataDomain\n  types: Record<string, MessageTypeProperty[]>\n}) {\n  return hashStruct({\n    data: domain,\n    primaryType: 'EIP712Domain',\n    types,\n  })\n}\n\nexport type HashStructErrorType =\n  | EncodeDataErrorType\n  | Keccak256ErrorType\n  | ErrorType\n\nexport function hashStruct({\n  data,\n  primaryType,\n  types,\n}: {\n  data: Record<string, unknown>\n  primaryType: string\n  types: Record<string, readonly MessageTypeProperty[]>\n}) {\n  const encoded = encodeData({\n    data,\n    primaryType,\n    types,\n  })\n  return keccak256(encoded)\n}\n\ntype EncodeDataErrorType =\n  | EncodeAbiParametersErrorType\n  | EncodeFieldErrorType\n  | HashTypeErrorType\n  | ErrorType\n\nfunction encodeData({\n  data,\n  primaryType,\n  types,\n}: {\n  data: Record<string, unknown>\n  primaryType: string\n  types: Record<string, readonly MessageTypeProperty[]>\n}) {\n  const encodedTypes: AbiParameter[] = [{ type: 'bytes32' }]\n  const encodedValues: unknown[] = [hashType({ primaryType, types })]\n\n  for (const field of types[primaryType]) {\n    const [type, value] = encodeField({\n      types,\n      name: field.name,\n      type: field.type,\n      value: data[field.name],\n    })\n    encodedTypes.push(type)\n    encodedValues.push(value)\n  }\n\n  return encodeAbiParameters(encodedTypes, encodedValues)\n}\n\ntype HashTypeErrorType =\n  | ToHexErrorType\n  | EncodeTypeErrorType\n  | Keccak256ErrorType\n  | ErrorType\n\nfunction hashType({\n  primaryType,\n  types,\n}: {\n  primaryType: string\n  types: Record<string, readonly MessageTypeProperty[]>\n}) {\n  const encodedHashType = toHex(encodeType({ primaryType, types }))\n  return keccak256(encodedHashType)\n}\n\ntype EncodeTypeErrorType = FindTypeDependenciesErrorType\n\nexport function encodeType({\n  primaryType,\n  types,\n}: {\n  primaryType: string\n  types: Record<string, readonly MessageTypeProperty[]>\n}) {\n  let result = ''\n  const unsortedDeps = findTypeDependencies({ primaryType, types })\n  unsortedDeps.delete(primaryType)\n\n  const deps = [primaryType, ...Array.from(unsortedDeps).sort()]\n  for (const type of deps) {\n    result += `${type}(${types[type]\n      .map(({ name, type: t }) => `${t} ${name}`)\n      .join(',')})`\n  }\n\n  return result\n}\n\ntype FindTypeDependenciesErrorType = ErrorType\n\nfunction findTypeDependencies(\n  {\n    primaryType: primaryType_,\n    types,\n  }: {\n    primaryType: string\n    types: Record<string, readonly MessageTypeProperty[]>\n  },\n  results: Set<string> = new Set(),\n): Set<string> {\n  const match = primaryType_.match(/^\\w*/u)\n  const primaryType = match?.[0]!\n  if (results.has(primaryType) || types[primaryType] === undefined) {\n    return results\n  }\n\n  results.add(primaryType)\n\n  for (const field of types[primaryType]) {\n    findTypeDependencies({ primaryType: field.type, types }, results)\n  }\n  return results\n}\n\ntype EncodeFieldErrorType =\n  | Keccak256ErrorType\n  | EncodeAbiParametersErrorType\n  | ToHexErrorType\n  | ErrorType\n\nfunction encodeField({\n  types,\n  name,\n  type,\n  value,\n}: {\n  types: Record<string, readonly MessageTypeProperty[]>\n  name: string\n  type: string\n  value: any\n}): [type: AbiParameter, value: any] {\n  if (types[type] !== undefined) {\n    return [\n      { type: 'bytes32' },\n      keccak256(encodeData({ data: value, primaryType: type, types })),\n    ]\n  }\n\n  if (type === 'bytes') {\n    const prepend = value.length % 2 ? '0' : ''\n    value = `0x${prepend + value.slice(2)}`\n    return [{ type: 'bytes32' }, keccak256(value)]\n  }\n\n  if (type === 'string') return [{ type: 'bytes32' }, keccak256(toHex(value))]\n\n  if (type.lastIndexOf(']') === type.length - 1) {\n    const parsedType = type.slice(0, type.lastIndexOf('['))\n    const typeValuePairs = (value as [AbiParameter, any][]).map((item) =>\n      encodeField({\n        name,\n        type: parsedType,\n        types,\n        value: item,\n      }),\n    )\n    return [\n      { type: 'bytes32' },\n      keccak256(\n        encodeAbiParameters(\n          typeValuePairs.map(([t]) => t),\n          typeValuePairs.map(([, v]) => v),\n        ),\n      ),\n    ]\n  }\n\n  return [{ type }, value]\n}\n","import type { ErrorType } from '../errors/utils.js'\nimport type { MaybePromise } from '../types/utils.js'\n\ntype Callback = ((...args: any[]) => any) | undefined\ntype Callbacks = Record<string, Callback>\n\nexport type ObserveErrorType = ErrorType\n\n/** @internal */\nexport const listenersCache = /*#__PURE__*/ new Map<\n  string,\n  { id: number; fns: Callbacks }[]\n>()\n/** @internal */\nexport const cleanupCache = /*#__PURE__*/ new Map<\n  string,\n  () => void | Promise<void>\n>()\n\ntype EmitFunction<callbacks extends Callbacks> = (\n  emit: callbacks,\n) => MaybePromise<void | (() => void) | (() => Promise<void>)>\n\nlet callbackCount = 0\n\n/**\n * @description Sets up an observer for a given function. If another function\n * is set up under the same observer id, the function will only be called once\n * for both instances of the observer.\n */\nexport function observe<callbacks extends Callbacks>(\n  observerId: string,\n  callbacks: callbacks,\n  fn: EmitFunction<callbacks>,\n) {\n  const callbackId = ++callbackCount\n\n  const getListeners = () => listenersCache.get(observerId) || []\n\n  const unsubscribe = () => {\n    const listeners = getListeners()\n    listenersCache.set(\n      observerId,\n      listeners.filter((cb: any) => cb.id !== callbackId),\n    )\n  }\n\n  const unwatch = () => {\n    const listeners = getListeners()\n    if (!listeners.some((cb: any) => cb.id === callbackId)) return\n    const cleanup = cleanupCache.get(observerId)\n    if (listeners.length === 1 && cleanup) {\n      const p = cleanup()\n      if (p instanceof Promise) p.catch(() => {})\n    }\n    unsubscribe()\n  }\n\n  const listeners = getListeners()\n  listenersCache.set(observerId, [\n    ...listeners,\n    { id: callbackId, fns: callbacks },\n  ])\n\n  if (listeners && listeners.length > 0) return unwatch\n\n  const emit: callbacks = {} as callbacks\n  for (const key in callbacks) {\n    emit[key] = ((\n      ...args: Parameters<NonNullable<callbacks[keyof callbacks]>>\n    ) => {\n      const listeners = getListeners()\n      if (listeners.length === 0) return\n      for (const listener of listeners) listener.fns[key]?.(...args)\n    }) as callbacks[Extract<keyof callbacks, string>]\n  }\n\n  const cleanup = fn(emit)\n  if (typeof cleanup === 'function') cleanupCache.set(observerId, cleanup)\n\n  return unwatch\n}\n","import type { ErrorType } from '../errors/utils.js'\nimport { wait } from './wait.js'\n\ntype PollOptions<data> = {\n  // Whether or not to emit when the polling starts.\n  emitOnBegin?: boolean | undefined\n  // The initial wait time (in ms) before polling.\n  initialWaitTime?: ((data: data | void) => Promise<number>) | undefined\n  // The interval (in ms).\n  interval: number\n}\n\nexport type PollErrorType = ErrorType\n\n/**\n * @description Polls a function at a specified interval.\n */\nexport function poll<data>(\n  fn: ({ unpoll }: { unpoll: () => void }) => Promise<data | void>,\n  { emitOnBegin, initialWaitTime, interval }: PollOptions<data>,\n) {\n  let active = true\n\n  const unwatch = () => (active = false)\n\n  const watch = async () => {\n    let data: data | undefined | void\n    if (emitOnBegin) data = await fn({ unpoll: unwatch })\n\n    const initialWait = (await initialWaitTime?.(data)) ?? interval\n    await wait(initialWait)\n\n    const poll = async () => {\n      if (!active) return\n      await fn({ unpoll: unwatch })\n      await wait(interval)\n      poll()\n    }\n\n    poll()\n  }\n  watch()\n\n  return unwatch\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { HasTransportType } from '../../types/transport.js'\nimport { hexToBigInt } from '../../utils/encoding/fromHex.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { observe } from '../../utils/observe.js'\nimport { type PollErrorType, poll } from '../../utils/poll.js'\nimport { stringify } from '../../utils/stringify.js'\n\nimport {\n  type GetBlockNumberReturnType,\n  getBlockNumber,\n} from './getBlockNumber.js'\n\nexport type OnBlockNumberParameter = GetBlockNumberReturnType\nexport type OnBlockNumberFn = (\n  blockNumber: OnBlockNumberParameter,\n  prevBlockNumber: OnBlockNumberParameter | undefined,\n) => void\n\nexport type WatchBlockNumberParameters<\n  transport extends Transport = Transport,\n> = {\n  /** The callback to call when a new block number is received. */\n  onBlockNumber: OnBlockNumberFn\n  /** The callback to call when an error occurred when trying to get for a new block. */\n  onError?: ((error: Error) => void) | undefined\n} & (\n  | (HasTransportType<transport, 'webSocket' | 'ipc'> extends true\n      ? {\n          emitMissed?: undefined\n          emitOnBegin?: undefined\n          /** Whether or not the WebSocket Transport should poll the JSON-RPC, rather than using `eth_subscribe`. */\n          poll?: false | undefined\n          pollingInterval?: undefined\n        }\n      : never)\n  | {\n      /** Whether or not to emit the missed block numbers to the callback. */\n      emitMissed?: boolean | undefined\n      /** Whether or not to emit the latest block number to the callback when the subscription opens. */\n      emitOnBegin?: boolean | undefined\n      poll?: true | undefined\n      /** Polling frequency (in ms). Defaults to Client's pollingInterval config. */\n      pollingInterval?: number | undefined\n    }\n)\n\nexport type WatchBlockNumberReturnType = () => void\n\nexport type WatchBlockNumberErrorType = PollErrorType | ErrorType\n\n/**\n * Watches and returns incoming block numbers.\n *\n * - Docs: https://viem.sh/docs/actions/public/watchBlockNumber\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks_watching-blocks\n * - JSON-RPC Methods:\n *   - When `poll: true`, calls [`eth_blockNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blocknumber) on a polling interval.\n *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newHeads\"` event.\n *\n * @param client - Client to use\n * @param parameters - {@link WatchBlockNumberParameters}\n * @returns A function that can be invoked to stop watching for new block numbers. {@link WatchBlockNumberReturnType}\n *\n * @example\n * import { createPublicClient, watchBlockNumber, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const unwatch = watchBlockNumber(client, {\n *   onBlockNumber: (blockNumber) => console.log(blockNumber),\n * })\n */\nexport function watchBlockNumber<\n  chain extends Chain | undefined,\n  transport extends Transport,\n>(\n  client: Client<transport, chain>,\n  {\n    emitOnBegin = false,\n    emitMissed = false,\n    onBlockNumber,\n    onError,\n    poll: poll_,\n    pollingInterval = client.pollingInterval,\n  }: WatchBlockNumberParameters<transport>,\n): WatchBlockNumberReturnType {\n  const enablePolling = (() => {\n    if (typeof poll_ !== 'undefined') return poll_\n    if (\n      client.transport.type === 'webSocket' ||\n      client.transport.type === 'ipc'\n    )\n      return false\n    if (\n      client.transport.type === 'fallback' &&\n      (client.transport.transports[0].config.type === 'webSocket' ||\n        client.transport.transports[0].config.type === 'ipc')\n    )\n      return false\n    return true\n  })()\n\n  let prevBlockNumber: GetBlockNumberReturnType | undefined\n\n  const pollBlockNumber = () => {\n    const observerId = stringify([\n      'watchBlockNumber',\n      client.uid,\n      emitOnBegin,\n      emitMissed,\n      pollingInterval,\n    ])\n\n    return observe(observerId, { onBlockNumber, onError }, (emit) =>\n      poll(\n        async () => {\n          try {\n            const blockNumber = await getAction(\n              client,\n              getBlockNumber,\n              'getBlockNumber',\n            )({ cacheTime: 0 })\n\n            if (prevBlockNumber !== undefined) {\n              // If the current block number is the same as the previous,\n              // we can skip.\n              if (blockNumber === prevBlockNumber) return\n\n              // If we have missed out on some previous blocks, and the\n              // `emitMissed` flag is truthy, let's emit those blocks.\n              if (blockNumber - prevBlockNumber > 1 && emitMissed) {\n                for (let i = prevBlockNumber + 1n; i < blockNumber; i++) {\n                  emit.onBlockNumber(i, prevBlockNumber)\n                  prevBlockNumber = i\n                }\n              }\n            }\n\n            // If the next block number is greater than the previous,\n            // it is not in the past, and we can emit the new block number.\n            if (\n              prevBlockNumber === undefined ||\n              blockNumber > prevBlockNumber\n            ) {\n              emit.onBlockNumber(blockNumber, prevBlockNumber)\n              prevBlockNumber = blockNumber\n            }\n          } catch (err) {\n            emit.onError?.(err as Error)\n          }\n        },\n        {\n          emitOnBegin,\n          interval: pollingInterval,\n        },\n      ),\n    )\n  }\n\n  const subscribeBlockNumber = () => {\n    const observerId = stringify([\n      'watchBlockNumber',\n      client.uid,\n      emitOnBegin,\n      emitMissed,\n    ])\n\n    return observe(observerId, { onBlockNumber, onError }, (emit) => {\n      let active = true\n      let unsubscribe = () => (active = false)\n      ;(async () => {\n        try {\n          const transport = (() => {\n            if (client.transport.type === 'fallback') {\n              const transport = client.transport.transports.find(\n                (transport: ReturnType<Transport>) =>\n                  transport.config.type === 'webSocket' ||\n                  transport.config.type === 'ipc',\n              )\n              if (!transport) return client.transport\n              return transport.value\n            }\n            return client.transport\n          })()\n\n          const { unsubscribe: unsubscribe_ } = await transport.subscribe({\n            params: ['newHeads'],\n            onData(data: any) {\n              if (!active) return\n              const blockNumber = hexToBigInt(data.result?.number)\n              emit.onBlockNumber(blockNumber, prevBlockNumber)\n              prevBlockNumber = blockNumber\n            },\n            onError(error: Error) {\n              emit.onError?.(error)\n            },\n          })\n          unsubscribe = unsubscribe_\n          if (!active) unsubscribe()\n        } catch (err) {\n          onError?.(err as Error)\n        }\n      })()\n      return () => unsubscribe()\n    })\n  }\n\n  return enablePolling ? pollBlockNumber() : subscribeBlockNumber()\n}\n","import type { Address } from 'abitype'\n\nimport type { ExactPartial, Prettify } from '../../types/utils.js'\nimport type { SiweMessage } from './types.js'\n\n/**\n * @description Parses EIP-4361 formatted message into message fields object.\n *\n * @see https://eips.ethereum.org/EIPS/eip-4361\n *\n * @returns EIP-4361 fields object\n */\nexport function parseSiweMessage(\n  message: string,\n): Prettify<ExactPartial<SiweMessage>> {\n  const { scheme, statement, ...prefix } = (message.match(prefixRegex)\n    ?.groups ?? {}) as {\n    address: Address\n    domain: string\n    scheme?: string\n    statement?: string\n  }\n  const { chainId, expirationTime, issuedAt, notBefore, requestId, ...suffix } =\n    (message.match(suffixRegex)?.groups ?? {}) as {\n      chainId: string\n      expirationTime?: string\n      issuedAt?: string\n      nonce: string\n      notBefore?: string\n      requestId?: string\n      uri: string\n      version: '1'\n    }\n  const resources = message.split('Resources:')[1]?.split('\\n- ').slice(1)\n  return {\n    ...prefix,\n    ...suffix,\n    ...(chainId ? { chainId: Number(chainId) } : {}),\n    ...(expirationTime ? { expirationTime: new Date(expirationTime) } : {}),\n    ...(issuedAt ? { issuedAt: new Date(issuedAt) } : {}),\n    ...(notBefore ? { notBefore: new Date(notBefore) } : {}),\n    ...(requestId ? { requestId } : {}),\n    ...(resources ? { resources } : {}),\n    ...(scheme ? { scheme } : {}),\n    ...(statement ? { statement } : {}),\n  }\n}\n\n// https://regexr.com/80gdj\nconst prefixRegex =\n  /^(?:(?<scheme>[a-zA-Z][a-zA-Z0-9+-.]*):\\/\\/)?(?<domain>[a-zA-Z0-9+-.]*(?::[0-9]{1,5})?) (?:wants you to sign in with your Ethereum account:\\n)(?<address>0x[a-fA-F0-9]{40})\\n\\n(?:(?<statement>.*)\\n\\n)?/\n\n// https://regexr.com/80gf9\nconst suffixRegex =\n  /(?:URI: (?<uri>.+))\\n(?:Version: (?<version>.+))\\n(?:Chain ID: (?<chainId>\\d+))\\n(?:Nonce: (?<nonce>[a-zA-Z0-9]+))\\n(?:Issued At: (?<issuedAt>.+))(?:\\nExpiration Time: (?<expirationTime>.+))?(?:\\nNot Before: (?<notBefore>.+))?(?:\\nRequest ID: (?<requestId>.+))?/\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { Prettify } from '../../types/utils.js'\nimport type { HashMessageErrorType } from '../../utils/signature/hashMessage.js'\nimport { hashMessage } from '../../utils/signature/hashMessage.js'\nimport { parseSiweMessage } from '../../utils/siwe/parseSiweMessage.js'\nimport {\n  type ValidateSiweMessageParameters,\n  validateSiweMessage,\n} from '../../utils/siwe/validateSiweMessage.js'\nimport {\n  type VerifyHashErrorType,\n  type VerifyHashParameters,\n  verifyHash,\n} from '../public/verifyHash.js'\n\nexport type VerifySiweMessageParameters = Prettify<\n  Pick<VerifyHashParameters, 'blockNumber' | 'blockTag'> &\n    Pick<\n      ValidateSiweMessageParameters,\n      'address' | 'domain' | 'nonce' | 'scheme' | 'time'\n    > & {\n      /**\n       * EIP-4361 formatted message.\n       */\n      message: string\n      /**\n       * Signature to check against.\n       */\n      signature: Hex\n    }\n>\n\nexport type VerifySiweMessageReturnType = boolean\n\nexport type VerifySiweMessageErrorType =\n  | HashMessageErrorType\n  | VerifyHashErrorType\n  | ErrorType\n\n/**\n * Verifies [EIP-4361](https://eips.ethereum.org/EIPS/eip-4361) formatted message was signed.\n *\n * Compatible with Smart Contract Accounts & Externally Owned Accounts via [ERC-6492](https://eips.ethereum.org/EIPS/eip-6492).\n *\n * - Docs {@link https://viem.sh/docs/siwe/actions/verifySiweMessage}\n *\n * @param client - Client to use.\n * @param parameters - {@link VerifySiweMessageParameters}\n * @returns Whether or not the signature is valid. {@link VerifySiweMessageReturnType}\n */\nexport async function verifySiweMessage<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  parameters: VerifySiweMessageParameters,\n): Promise<VerifySiweMessageReturnType> {\n  const {\n    address,\n    domain,\n    message,\n    nonce,\n    scheme,\n    signature,\n    time = new Date(),\n    ...callRequest\n  } = parameters\n\n  const parsed = parseSiweMessage(message)\n  if (!parsed.address) return false\n\n  const isValid = validateSiweMessage({\n    address,\n    domain,\n    message: parsed,\n    nonce,\n    scheme,\n    time,\n  })\n  if (!isValid) return false\n\n  const hash = hashMessage(message)\n  return verifyHash(client, {\n    address: parsed.address,\n    hash,\n    signature,\n    ...callRequest,\n  })\n}\n","import type { Address } from 'abitype'\n\nimport type { ExactPartial } from '../../types/utils.js'\nimport { isAddress } from '../address/isAddress.js'\nimport { isAddressEqual } from '../address/isAddressEqual.js'\nimport type { SiweMessage } from './types.js'\n\nexport type ValidateSiweMessageParameters = {\n  /**\n   * Ethereum address to check against.\n   */\n  address?: Address | undefined\n  /**\n   * [RFC 3986](https://www.rfc-editor.org/rfc/rfc3986) authority to check against.\n   */\n  domain?: string | undefined\n  /**\n   * EIP-4361 message fields.\n   */\n  message: ExactPartial<SiweMessage>\n  /**\n   * Random string to check against.\n   */\n  nonce?: string | undefined\n  /**\n   * [RFC 3986](https://www.rfc-editor.org/rfc/rfc3986#section-3.1) URI scheme to check against.\n   */\n  scheme?: string | undefined\n  /**\n   * Current time to check optional `expirationTime` and `notBefore` fields.\n   *\n   * @default new Date()\n   */\n  time?: Date | undefined\n}\n\nexport type ValidateSiweMessageReturnType = boolean\n\n/**\n * @description Validates EIP-4361 message.\n *\n * @see https://eips.ethereum.org/EIPS/eip-4361\n */\nexport function validateSiweMessage(\n  parameters: ValidateSiweMessageParameters,\n): ValidateSiweMessageReturnType {\n  const {\n    address,\n    domain,\n    message,\n    nonce,\n    scheme,\n    time = new Date(),\n  } = parameters\n\n  if (domain && message.domain !== domain) return false\n  if (nonce && message.nonce !== nonce) return false\n  if (scheme && message.scheme !== scheme) return false\n\n  if (message.expirationTime && time >= message.expirationTime) return false\n  if (message.notBefore && time < message.notBefore) return false\n\n  try {\n    if (!message.address) return false\n    if (!isAddress(message.address, { strict: false })) return false\n    if (address && !isAddressEqual(message.address, address)) return false\n  } catch {\n    return false\n  }\n\n  return true\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { TransactionSerializedGeneric } from '../../types/transaction.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type SendRawTransactionParameters = {\n  /** The signed serialized transaction. */\n  serializedTransaction: TransactionSerializedGeneric\n}\n\nexport type SendRawTransactionReturnType = Hash\n\nexport type SendRawTransactionErrorType = RequestErrorType | ErrorType\n\n/**\n * Sends a **signed** transaction to the network\n *\n * - Docs: https://viem.sh/docs/actions/wallet/sendRawTransaction\n * - JSON-RPC Method: [`eth_sendRawTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\n *\n * @param client - Client to use\n * @param parameters - {@link SendRawTransactionParameters}\n * @returns The transaction hash. {@link SendRawTransactionReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { sendRawTransaction } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n *\n * const hash = await sendRawTransaction(client, {\n *   serializedTransaction: '0x02f850018203118080825208808080c080a04012522854168b27e5dc3d5839bab5e6b39e1a0ffd343901ce1622e3d64b48f1a04e00902ae0502c4728cbf12156290df99c3ed7de85b1dbfe20b5c36931733a33'\n * })\n */\nexport async function sendRawTransaction<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  { serializedTransaction }: SendRawTransactionParameters,\n): Promise<SendRawTransactionReturnType> {\n  return client.request(\n    {\n      method: 'eth_sendRawTransaction',\n      params: [serializedTransaction],\n    },\n    { retryCount: 0 },\n  )\n}\n","import type { Abi, AbiEvent, Address } from 'abitype'\n\nimport {\n  type GetEnsAddressParameters,\n  type GetEnsAddressReturnType,\n  getEnsAddress,\n} from '../../actions/ens/getEnsAddress.js'\nimport {\n  type GetEnsAvatarParameters,\n  type GetEnsAvatarReturnType,\n  getEnsAvatar,\n} from '../../actions/ens/getEnsAvatar.js'\nimport {\n  type GetEnsNameParameters,\n  type GetEnsNameReturnType,\n  getEnsName,\n} from '../../actions/ens/getEnsName.js'\nimport {\n  type GetEnsResolverParameters,\n  type GetEnsResolverReturnType,\n  getEnsResolver,\n} from '../../actions/ens/getEnsResolver.js'\nimport {\n  type GetEnsTextParameters,\n  type GetEnsTextReturnType,\n  getEnsText,\n} from '../../actions/ens/getEnsText.js'\nimport {\n  type CallParameters,\n  type CallReturnType,\n  call,\n} from '../../actions/public/call.js'\nimport {\n  type CreateAccessListParameters,\n  type CreateAccessListReturnType,\n  createAccessList,\n} from '../../actions/public/createAccessList.js'\nimport {\n  type CreateBlockFilterReturnType,\n  createBlockFilter,\n} from '../../actions/public/createBlockFilter.js'\nimport {\n  type CreateContractEventFilterParameters,\n  type CreateContractEventFilterReturnType,\n  createContractEventFilter,\n} from '../../actions/public/createContractEventFilter.js'\nimport {\n  type CreateEventFilterParameters,\n  type CreateEventFilterReturnType,\n  createEventFilter,\n} from '../../actions/public/createEventFilter.js'\nimport {\n  type CreatePendingTransactionFilterReturnType,\n  createPendingTransactionFilter,\n} from '../../actions/public/createPendingTransactionFilter.js'\nimport {\n  type EstimateContractGasParameters,\n  type EstimateContractGasReturnType,\n  estimateContractGas,\n} from '../../actions/public/estimateContractGas.js'\nimport {\n  type EstimateFeesPerGasParameters,\n  type EstimateFeesPerGasReturnType,\n  estimateFeesPerGas,\n} from '../../actions/public/estimateFeesPerGas.js'\nimport {\n  type EstimateGasParameters,\n  type EstimateGasReturnType,\n  estimateGas,\n} from '../../actions/public/estimateGas.js'\nimport {\n  type EstimateMaxPriorityFeePerGasParameters,\n  type EstimateMaxPriorityFeePerGasReturnType,\n  estimateMaxPriorityFeePerGas,\n} from '../../actions/public/estimateMaxPriorityFeePerGas.js'\nimport {\n  type GetBalanceParameters,\n  type GetBalanceReturnType,\n  getBalance,\n} from '../../actions/public/getBalance.js'\nimport {\n  type GetBlobBaseFeeReturnType,\n  getBlobBaseFee,\n} from '../../actions/public/getBlobBaseFee.js'\nimport {\n  type GetBlockParameters,\n  type GetBlockReturnType,\n  getBlock,\n} from '../../actions/public/getBlock.js'\nimport {\n  type GetBlockNumberParameters,\n  type GetBlockNumberReturnType,\n  getBlockNumber,\n} from '../../actions/public/getBlockNumber.js'\nimport {\n  type GetBlockTransactionCountParameters,\n  type GetBlockTransactionCountReturnType,\n  getBlockTransactionCount,\n} from '../../actions/public/getBlockTransactionCount.js'\nimport {\n  type GetChainIdReturnType,\n  getChainId,\n} from '../../actions/public/getChainId.js'\nimport {\n  type GetCodeParameters,\n  type GetCodeReturnType,\n  getCode,\n} from '../../actions/public/getCode.js'\nimport {\n  type GetContractEventsParameters,\n  type GetContractEventsReturnType,\n  getContractEvents,\n} from '../../actions/public/getContractEvents.js'\nimport {\n  type GetEip712DomainParameters,\n  type GetEip712DomainReturnType,\n  getEip712Domain,\n} from '../../actions/public/getEip712Domain.js'\nimport {\n  type GetFeeHistoryParameters,\n  type GetFeeHistoryReturnType,\n  getFeeHistory,\n} from '../../actions/public/getFeeHistory.js'\nimport {\n  type GetFilterChangesParameters,\n  type GetFilterChangesReturnType,\n  getFilterChanges,\n} from '../../actions/public/getFilterChanges.js'\nimport {\n  type GetFilterLogsParameters,\n  type GetFilterLogsReturnType,\n  getFilterLogs,\n} from '../../actions/public/getFilterLogs.js'\nimport {\n  type GetGasPriceReturnType,\n  getGasPrice,\n} from '../../actions/public/getGasPrice.js'\nimport {\n  type GetLogsParameters,\n  type GetLogsReturnType,\n  getLogs,\n} from '../../actions/public/getLogs.js'\nimport {\n  type GetProofParameters,\n  type GetProofReturnType,\n  getProof,\n} from '../../actions/public/getProof.js'\nimport {\n  type GetStorageAtParameters,\n  type GetStorageAtReturnType,\n  getStorageAt,\n} from '../../actions/public/getStorageAt.js'\nimport {\n  type GetTransactionParameters,\n  type GetTransactionReturnType,\n  getTransaction,\n} from '../../actions/public/getTransaction.js'\nimport {\n  type GetTransactionConfirmationsParameters,\n  type GetTransactionConfirmationsReturnType,\n  getTransactionConfirmations,\n} from '../../actions/public/getTransactionConfirmations.js'\nimport {\n  type GetTransactionCountParameters,\n  type GetTransactionCountReturnType,\n  getTransactionCount,\n} from '../../actions/public/getTransactionCount.js'\nimport {\n  type GetTransactionReceiptParameters,\n  type GetTransactionReceiptReturnType,\n  getTransactionReceipt,\n} from '../../actions/public/getTransactionReceipt.js'\nimport {\n  type MulticallParameters,\n  type MulticallReturnType,\n  multicall,\n} from '../../actions/public/multicall.js'\nimport {\n  type ReadContractParameters,\n  type ReadContractReturnType,\n  readContract,\n} from '../../actions/public/readContract.js'\nimport {\n  type SimulateBlocksParameters,\n  type SimulateBlocksReturnType,\n  simulateBlocks,\n} from '../../actions/public/simulateBlocks.js'\nimport {\n  type SimulateCallsParameters,\n  type SimulateCallsReturnType,\n  simulateCalls,\n} from '../../actions/public/simulateCalls.js'\nimport {\n  type SimulateContractParameters,\n  type SimulateContractReturnType,\n  simulateContract,\n} from '../../actions/public/simulateContract.js'\nimport {\n  type UninstallFilterParameters,\n  type UninstallFilterReturnType,\n  uninstallFilter,\n} from '../../actions/public/uninstallFilter.js'\nimport {\n  type VerifyHashParameters,\n  type VerifyHashReturnType,\n  verifyHash,\n} from '../../actions/public/verifyHash.js'\nimport {\n  type VerifyMessageParameters,\n  type VerifyMessageReturnType,\n  verifyMessage,\n} from '../../actions/public/verifyMessage.js'\nimport {\n  type VerifyTypedDataParameters,\n  type VerifyTypedDataReturnType,\n  verifyTypedData,\n} from '../../actions/public/verifyTypedData.js'\nimport {\n  type WaitForTransactionReceiptParameters,\n  type WaitForTransactionReceiptReturnType,\n  waitForTransactionReceipt,\n} from '../../actions/public/waitForTransactionReceipt.js'\nimport {\n  type WatchBlockNumberParameters,\n  type WatchBlockNumberReturnType,\n  watchBlockNumber,\n} from '../../actions/public/watchBlockNumber.js'\nimport {\n  type WatchBlocksParameters,\n  type WatchBlocksReturnType,\n  watchBlocks,\n} from '../../actions/public/watchBlocks.js'\nimport {\n  type WatchContractEventParameters,\n  type WatchContractEventReturnType,\n  watchContractEvent,\n} from '../../actions/public/watchContractEvent.js'\nimport {\n  type WatchEventParameters,\n  type WatchEventReturnType,\n  watchEvent,\n} from '../../actions/public/watchEvent.js'\nimport {\n  type WatchPendingTransactionsParameters,\n  type WatchPendingTransactionsReturnType,\n  watchPendingTransactions,\n} from '../../actions/public/watchPendingTransactions.js'\nimport {\n  type VerifySiweMessageParameters,\n  type VerifySiweMessageReturnType,\n  verifySiweMessage,\n} from '../../actions/siwe/verifySiweMessage.js'\nimport {\n  type PrepareTransactionRequestParameters,\n  type PrepareTransactionRequestRequest,\n  type PrepareTransactionRequestReturnType,\n  prepareTransactionRequest,\n} from '../../actions/wallet/prepareTransactionRequest.js'\nimport {\n  type SendRawTransactionParameters,\n  type SendRawTransactionReturnType,\n  sendRawTransaction,\n} from '../../actions/wallet/sendRawTransaction.js'\nimport type { Account } from '../../types/account.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ContractEventName,\n  ContractFunctionArgs,\n  ContractFunctionName,\n  MaybeAbiEventName,\n  MaybeExtractEventArgsFromAbi,\n} from '../../types/contract.js'\nimport type { FeeValuesType } from '../../types/fee.js'\nimport type { FilterType } from '../../types/filter.js'\nimport type { Client } from '../createClient.js'\nimport type { Transport } from '../transports/createTransport.js'\n\nexport type PublicActions<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n> = {\n  /**\n   * Executes a new message call immediately without submitting a transaction to the network.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/call\n   * - JSON-RPC Methods: [`eth_call`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_call)\n   *\n   * @param args - {@link CallParameters}\n   * @returns The call data. {@link CallReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const data = await client.call({\n   *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n   *   data: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n   *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   * })\n   */\n  call: (parameters: CallParameters<chain>) => Promise<CallReturnType>\n  /**\n   * Creates an EIP-2930 access list that you can include in a transaction.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/createAccessList\n   * - JSON-RPC Methods: `eth_createAccessList`\n   *\n   * @param args - {@link CreateAccessListParameters}\n   * @returns The call data. {@link CreateAccessListReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   *\n   * const data = await client.createAccessList({\n   *   data: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n   *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   * })\n   */\n  createAccessList: (\n    parameters: CreateAccessListParameters<chain>,\n  ) => Promise<CreateAccessListReturnType>\n  /**\n   * Creates a Filter to listen for new block hashes that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges).\n   *\n   * - Docs: https://viem.sh/docs/actions/public/createBlockFilter\n   * - JSON-RPC Methods: [`eth_newBlockFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newBlockFilter)\n   *\n   * @returns Filter. {@link CreateBlockFilterReturnType}\n   *\n   * @example\n   * import { createPublicClient, createBlockFilter, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await createBlockFilter(client)\n   * // { id: \"0x345a6572337856574a76364e457a4366\", type: 'block' }\n   */\n  createBlockFilter: () => Promise<CreateBlockFilterReturnType>\n  /**\n   * Creates a Filter to retrieve event logs that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges) or [`getFilterLogs`](https://viem.sh/docs/actions/public/getFilterLogs).\n   *\n   * - Docs: https://viem.sh/docs/contract/createContractEventFilter\n   *\n   * @param args - {@link CreateContractEventFilterParameters}\n   * @returns [`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateContractEventFilterReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createContractEventFilter({\n   *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n   * })\n   */\n  createContractEventFilter: <\n    const abi extends Abi | readonly unknown[],\n    eventName extends ContractEventName<abi> | undefined,\n    args extends MaybeExtractEventArgsFromAbi<abi, eventName> | undefined,\n    strict extends boolean | undefined = undefined,\n    fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  >(\n    args: CreateContractEventFilterParameters<\n      abi,\n      eventName,\n      args,\n      strict,\n      fromBlock,\n      toBlock\n    >,\n  ) => Promise<\n    CreateContractEventFilterReturnType<\n      abi,\n      eventName,\n      args,\n      strict,\n      fromBlock,\n      toBlock\n    >\n  >\n  /**\n   * Creates a [`Filter`](https://viem.sh/docs/glossary/types#filter) to listen for new events that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges).\n   *\n   * - Docs: https://viem.sh/docs/actions/public/createEventFilter\n   * - JSON-RPC Methods: [`eth_newFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter)\n   *\n   * @param args - {@link CreateEventFilterParameters}\n   * @returns [`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateEventFilterReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createEventFilter({\n   *   address: '0xfba3912ca04dd458c843e2ee08967fc04f3579c2',\n   * })\n   */\n  createEventFilter: <\n    const abiEvent extends AbiEvent | undefined = undefined,\n    const abiEvents extends\n      | readonly AbiEvent[]\n      | readonly unknown[]\n      | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n    strict extends boolean | undefined = undefined,\n    fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    toBlock extends BlockNumber | BlockTag | undefined = undefined,\n    _EventName extends string | undefined = MaybeAbiEventName<abiEvent>,\n    _Args extends\n      | MaybeExtractEventArgsFromAbi<abiEvents, _EventName>\n      | undefined = undefined,\n  >(\n    args?:\n      | CreateEventFilterParameters<\n          abiEvent,\n          abiEvents,\n          strict,\n          fromBlock,\n          toBlock,\n          _EventName,\n          _Args\n        >\n      | undefined,\n  ) => Promise<\n    CreateEventFilterReturnType<\n      abiEvent,\n      abiEvents,\n      strict,\n      fromBlock,\n      toBlock,\n      _EventName,\n      _Args\n    >\n  >\n  /**\n   * Creates a Filter to listen for new pending transaction hashes that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges).\n   *\n   * - Docs: https://viem.sh/docs/actions/public/createPendingTransactionFilter\n   * - JSON-RPC Methods: [`eth_newPendingTransactionFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newpendingtransactionfilter)\n   *\n   * @returns [`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateBlockFilterReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createPendingTransactionFilter()\n   * // { id: \"0x345a6572337856574a76364e457a4366\", type: 'transaction' }\n   */\n  createPendingTransactionFilter: () => Promise<CreatePendingTransactionFilterReturnType>\n  /**\n   * Estimates the gas required to successfully execute a contract write function call.\n   *\n   * - Docs: https://viem.sh/docs/contract/estimateContractGas\n   *\n   * @remarks\n   * Internally, uses a [Public Client](https://viem.sh/docs/clients/public) to call the [`estimateGas` action](https://viem.sh/docs/actions/public/estimateGas) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\n   *\n   * @param args - {@link EstimateContractGasParameters}\n   * @returns The gas estimate (in wei). {@link EstimateContractGasReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const gas = await client.estimateContractGas({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   abi: parseAbi(['function mint() public']),\n   *   functionName: 'mint',\n   *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n   * })\n   */\n  estimateContractGas: <\n    chain extends Chain | undefined,\n    const abi extends Abi | readonly unknown[],\n    functionName extends ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n    args extends ContractFunctionArgs<\n      abi,\n      'nonpayable' | 'payable',\n      functionName\n    >,\n  >(\n    args: EstimateContractGasParameters<abi, functionName, args, chain>,\n  ) => Promise<EstimateContractGasReturnType>\n  /**\n   * Estimates the gas necessary to complete a transaction without submitting it to the network.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/estimateGas\n   * - JSON-RPC Methods: [`eth_estimateGas`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_estimategas)\n   *\n   * @param args - {@link EstimateGasParameters}\n   * @returns The gas estimate (in wei). {@link EstimateGasReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseEther } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const gasEstimate = await client.estimateGas({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   *   value: parseEther('1'),\n   * })\n   */\n  estimateGas: (\n    args: EstimateGasParameters<chain>,\n  ) => Promise<EstimateGasReturnType>\n  /**\n   * Returns the balance of an address in wei.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getBalance\n   * - JSON-RPC Methods: [`eth_getBalance`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getbalance)\n   *\n   * @remarks\n   * You can convert the balance to ether units with [`formatEther`](https://viem.sh/docs/utilities/formatEther).\n   *\n   * ```ts\n   * const balance = await getBalance(client, {\n   *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   blockTag: 'safe'\n   * })\n   * const balanceAsEther = formatEther(balance)\n   * // \"6.942\"\n   * ```\n   *\n   * @param args - {@link GetBalanceParameters}\n   * @returns The balance of the address in wei. {@link GetBalanceReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const balance = await client.getBalance({\n   *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   * })\n   * // 10000000000000000000000n (wei)\n   */\n  getBalance: (args: GetBalanceParameters) => Promise<GetBalanceReturnType>\n  /**\n   * Returns the base fee per blob gas in wei.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getBlobBaseFee\n   * - JSON-RPC Methods: [`eth_blobBaseFee`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blobBaseFee)\n   *\n   * @param client - Client to use\n   * @returns The blob base fee (in wei). {@link GetBlobBaseFeeReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { getBlobBaseFee } from 'viem/public'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const blobBaseFee = await client.getBlobBaseFee()\n   */\n  getBlobBaseFee: () => Promise<GetBlobBaseFeeReturnType>\n  /**\n   * Returns information about a block at a block number, hash, or tag.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getBlock\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks_fetching-blocks\n   * - JSON-RPC Methods:\n   *   - Calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber) for `blockNumber` & `blockTag`.\n   *   - Calls [`eth_getBlockByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbyhash) for `blockHash`.\n   *\n   * @param args - {@link GetBlockParameters}\n   * @returns Information about the block. {@link GetBlockReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const block = await client.getBlock()\n   */\n  getBlock: <\n    includeTransactions extends boolean = false,\n    blockTag extends BlockTag = 'latest',\n  >(\n    args?: GetBlockParameters<includeTransactions, blockTag> | undefined,\n  ) => Promise<GetBlockReturnType<chain, includeTransactions, blockTag>>\n  /**\n   * Returns the number of the most recent block seen.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getBlockNumber\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks_fetching-blocks\n   * - JSON-RPC Methods: [`eth_blockNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blocknumber)\n   *\n   * @param args - {@link GetBlockNumberParameters}\n   * @returns The number of the block. {@link GetBlockNumberReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const blockNumber = await client.getBlockNumber()\n   * // 69420n\n   */\n  getBlockNumber: (\n    args?: GetBlockNumberParameters | undefined,\n  ) => Promise<GetBlockNumberReturnType>\n  /**\n   * Returns the number of Transactions at a block number, hash, or tag.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getBlockTransactionCount\n   * - JSON-RPC Methods:\n   *   - Calls [`eth_getBlockTransactionCountByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblocktransactioncountbynumber) for `blockNumber` & `blockTag`.\n   *   - Calls [`eth_getBlockTransactionCountByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblocktransactioncountbyhash) for `blockHash`.\n   *\n   * @param args - {@link GetBlockTransactionCountParameters}\n   * @returns The block transaction count. {@link GetBlockTransactionCountReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const count = await client.getBlockTransactionCount()\n   */\n  getBlockTransactionCount: (\n    args?: GetBlockTransactionCountParameters | undefined,\n  ) => Promise<GetBlockTransactionCountReturnType>\n  /** @deprecated Use `getCode` instead. */\n  getBytecode: (args: GetCodeParameters) => Promise<GetCodeReturnType>\n  /**\n   * Returns the chain ID associated with the current network.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getChainId\n   * - JSON-RPC Methods: [`eth_chainId`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_chainid)\n   *\n   * @returns The current chain ID. {@link GetChainIdReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const chainId = await client.getChainId()\n   * // 1\n   */\n  getChainId: () => Promise<GetChainIdReturnType>\n  /**\n   * Retrieves the bytecode at an address.\n   *\n   * - Docs: https://viem.sh/docs/contract/getCode\n   * - JSON-RPC Methods: [`eth_getCode`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getcode)\n   *\n   * @param args - {@link GetBytecodeParameters}\n   * @returns The contract's bytecode. {@link GetBytecodeReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const code = await client.getCode({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   * })\n   */\n  getCode: (args: GetCodeParameters) => Promise<GetCodeReturnType>\n  /**\n   * Returns a list of event logs emitted by a contract.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getContractEvents\n   * - JSON-RPC Methods: [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs)\n   *\n   * @param client - Client to use\n   * @param parameters - {@link GetContractEventsParameters}\n   * @returns A list of event logs. {@link GetContractEventsReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { wagmiAbi } from './abi'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const logs = await client.getContractEvents(client, {\n   *  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *  abi: wagmiAbi,\n   *  eventName: 'Transfer'\n   * })\n   */\n  getContractEvents: <\n    const abi extends Abi | readonly unknown[],\n    eventName extends ContractEventName<abi> | undefined = undefined,\n    strict extends boolean | undefined = undefined,\n    fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  >(\n    args: GetContractEventsParameters<\n      abi,\n      eventName,\n      strict,\n      fromBlock,\n      toBlock\n    >,\n  ) => Promise<\n    GetContractEventsReturnType<abi, eventName, strict, fromBlock, toBlock>\n  >\n  /**\n   * Reads the EIP-712 domain from a contract, based on the ERC-5267 specification.\n   *\n   * @param client - A {@link Client} instance.\n   * @param parameters - The parameters of the action. {@link GetEip712DomainParameters}\n   * @returns The EIP-712 domain, fields, and extensions. {@link GetEip712DomainReturnType}\n   *\n   * @example\n   * ```ts\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   *\n   * const domain = await client.getEip712Domain({\n   *   address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n   * })\n   * // {\n   * //   domain: {\n   * //     name: 'ExampleContract',\n   * //     version: '1',\n   * //     chainId: 1,\n   * //     verifyingContract: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n   * //   },\n   * //   fields: '0x0f',\n   * //   extensions: [],\n   * // }\n   * ```\n   */\n  getEip712Domain: (\n    args: GetEip712DomainParameters,\n  ) => Promise<GetEip712DomainReturnType>\n  /**\n   * Gets address for ENS name.\n   *\n   * - Docs: https://viem.sh/docs/ens/actions/getEnsAddress\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n   *\n   * @remarks\n   * Calls `resolve(bytes, bytes)` on ENS Universal Resolver Contract.\n   *\n   * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n   *\n   * @param args - {@link GetEnsAddressParameters}\n   * @returns Address for ENS name or `null` if not found. {@link GetEnsAddressReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { normalize } from 'viem/ens'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const ensAddress = await client.getEnsAddress({\n   *   name: normalize('wevm.eth'),\n   * })\n   * // '0xd2135CfB216b74109775236E36d4b433F1DF507B'\n   */\n  getEnsAddress: (\n    args: GetEnsAddressParameters,\n  ) => Promise<GetEnsAddressReturnType>\n  /**\n   * Gets the avatar of an ENS name.\n   *\n   * - Docs: https://viem.sh/docs/ens/actions/getEnsAvatar\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n   *\n   * @remarks\n   * Calls [`getEnsText`](https://viem.sh/docs/ens/actions/getEnsText) with `key` set to `'avatar'`.\n   *\n   * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n   *\n   * @param args - {@link GetEnsAvatarParameters}\n   * @returns Avatar URI or `null` if not found. {@link GetEnsAvatarReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { normalize } from 'viem/ens'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const ensAvatar = await client.getEnsAvatar({\n   *   name: normalize('wevm.eth'),\n   * })\n   * // 'https://ipfs.io/ipfs/Qma8mnp6xV3J2cRNf3mTth5C8nV11CAnceVinc3y8jSbio'\n   */\n  getEnsAvatar: (\n    args: GetEnsAvatarParameters,\n  ) => Promise<GetEnsAvatarReturnType>\n  /**\n   * Gets primary name for specified address.\n   *\n   * - Docs: https://viem.sh/docs/ens/actions/getEnsName\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n   *\n   * @remarks\n   * Calls `reverse(bytes)` on ENS Universal Resolver Contract to \"reverse resolve\" the address to the primary ENS name.\n   *\n   * @param args - {@link GetEnsNameParameters}\n   * @returns Name or `null` if not found. {@link GetEnsNameReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const ensName = await client.getEnsName({\n   *   address: '0xd2135CfB216b74109775236E36d4b433F1DF507B',\n   * })\n   * // 'wevm.eth'\n   */\n  getEnsName: (args: GetEnsNameParameters) => Promise<GetEnsNameReturnType>\n  /**\n   * Gets resolver for ENS name.\n   *\n   * - Docs: https://viem.sh/docs/ens/actions/getEnsResolver\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n   *\n   * @remarks\n   * Calls `findResolver(bytes)` on ENS Universal Resolver Contract to retrieve the resolver of an ENS name.\n   *\n   * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n   *\n   * @param args - {@link GetEnsResolverParameters}\n   * @returns Address for ENS resolver. {@link GetEnsResolverReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { normalize } from 'viem/ens'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const resolverAddress = await client.getEnsResolver({\n   *   name: normalize('wevm.eth'),\n   * })\n   * // '0x4976fb03C32e5B8cfe2b6cCB31c09Ba78EBaBa41'\n   */\n  getEnsResolver: (\n    args: GetEnsResolverParameters,\n  ) => Promise<GetEnsResolverReturnType>\n  /**\n   * Gets a text record for specified ENS name.\n   *\n   * - Docs: https://viem.sh/docs/ens/actions/getEnsResolver\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n   *\n   * @remarks\n   * Calls `resolve(bytes, bytes)` on ENS Universal Resolver Contract.\n   *\n   * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n   *\n   * @param args - {@link GetEnsTextParameters}\n   * @returns Address for ENS resolver. {@link GetEnsTextReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { normalize } from 'viem/ens'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const twitterRecord = await client.getEnsText({\n   *   name: normalize('wevm.eth'),\n   *   key: 'com.twitter',\n   * })\n   * // 'wevm_dev'\n   */\n  getEnsText: (args: GetEnsTextParameters) => Promise<GetEnsTextReturnType>\n  /**\n   * Returns a collection of historical gas information.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getFeeHistory\n   * - JSON-RPC Methods: [`eth_feeHistory`](https://docs.alchemy.com/reference/eth-feehistory)\n   *\n   * @param args - {@link GetFeeHistoryParameters}\n   * @returns The gas estimate (in wei). {@link GetFeeHistoryReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const feeHistory = await client.getFeeHistory({\n   *   blockCount: 4,\n   *   rewardPercentiles: [25, 75],\n   * })\n   */\n  getFeeHistory: (\n    args: GetFeeHistoryParameters,\n  ) => Promise<GetFeeHistoryReturnType>\n  /**\n   * Returns an estimate for the fees per gas for a transaction to be included\n   * in the next block.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/estimateFeesPerGas\n   *\n   * @param client - Client to use\n   * @param parameters - {@link EstimateFeesPerGasParameters}\n   * @returns An estimate (in wei) for the fees per gas. {@link EstimateFeesPerGasReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const maxPriorityFeePerGas = await client.estimateFeesPerGas()\n   * // { maxFeePerGas: ..., maxPriorityFeePerGas: ... }\n   */\n  estimateFeesPerGas: <\n    chainOverride extends Chain | undefined = undefined,\n    type extends FeeValuesType = 'eip1559',\n  >(\n    args?: EstimateFeesPerGasParameters<chain, chainOverride, type> | undefined,\n  ) => Promise<EstimateFeesPerGasReturnType<type>>\n  /**\n   * Returns a list of logs or hashes based on a [Filter](/docs/glossary/terms#filter) since the last time it was called.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getFilterChanges\n   * - JSON-RPC Methods: [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterchanges)\n   *\n   * @remarks\n   * A Filter can be created from the following actions:\n   *\n   * - [`createBlockFilter`](https://viem.sh/docs/actions/public/createBlockFilter)\n   * - [`createContractEventFilter`](https://viem.sh/docs/contract/createContractEventFilter)\n   * - [`createEventFilter`](https://viem.sh/docs/actions/public/createEventFilter)\n   * - [`createPendingTransactionFilter`](https://viem.sh/docs/actions/public/createPendingTransactionFilter)\n   *\n   * Depending on the type of filter, the return value will be different:\n   *\n   * - If the filter was created with `createContractEventFilter` or `createEventFilter`, it returns a list of logs.\n   * - If the filter was created with `createPendingTransactionFilter`, it returns a list of transaction hashes.\n   * - If the filter was created with `createBlockFilter`, it returns a list of block hashes.\n   *\n   * @param args - {@link GetFilterChangesParameters}\n   * @returns Logs or hashes. {@link GetFilterChangesReturnType}\n   *\n   * @example\n   * // Blocks\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createBlockFilter()\n   * const hashes = await client.getFilterChanges({ filter })\n   *\n   * @example\n   * // Contract Events\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createContractEventFilter({\n   *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n   *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n   *   eventName: 'Transfer',\n   * })\n   * const logs = await client.getFilterChanges({ filter })\n   *\n   * @example\n   * // Raw Events\n   * import { createPublicClient, http, parseAbiItem } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createEventFilter({\n   *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n   *   event: parseAbiItem('event Transfer(address indexed, address indexed, uint256)'),\n   * })\n   * const logs = await client.getFilterChanges({ filter })\n   *\n   * @example\n   * // Transactions\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createPendingTransactionFilter()\n   * const hashes = await client.getFilterChanges({ filter })\n   */\n  getFilterChanges: <\n    filterType extends FilterType,\n    const abi extends Abi | readonly unknown[] | undefined,\n    eventName extends string | undefined,\n    strict extends boolean | undefined = undefined,\n    fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  >(\n    args: GetFilterChangesParameters<\n      filterType,\n      abi,\n      eventName,\n      strict,\n      fromBlock,\n      toBlock\n    >,\n  ) => Promise<\n    GetFilterChangesReturnType<\n      filterType,\n      abi,\n      eventName,\n      strict,\n      fromBlock,\n      toBlock\n    >\n  >\n  /**\n   * Returns a list of event logs since the filter was created.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getFilterLogs\n   * - JSON-RPC Methods: [`eth_getFilterLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterlogs)\n   *\n   * @remarks\n   * `getFilterLogs` is only compatible with **event filters**.\n   *\n   * @param args - {@link GetFilterLogsParameters}\n   * @returns A list of event logs. {@link GetFilterLogsReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbiItem } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createEventFilter({\n   *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n   *   event: parseAbiItem('event Transfer(address indexed, address indexed, uint256)'),\n   * })\n   * const logs = await client.getFilterLogs({ filter })\n   */\n  getFilterLogs: <\n    const abi extends Abi | readonly unknown[] | undefined,\n    eventName extends string | undefined,\n    strict extends boolean | undefined = undefined,\n    fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  >(\n    args: GetFilterLogsParameters<abi, eventName, strict, fromBlock, toBlock>,\n  ) => Promise<\n    GetFilterLogsReturnType<abi, eventName, strict, fromBlock, toBlock>\n  >\n  /**\n   * Returns the current price of gas (in wei).\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getGasPrice\n   * - JSON-RPC Methods: [`eth_gasPrice`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gasprice)\n   *\n   * @returns The gas price (in wei). {@link GetGasPriceReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const gasPrice = await client.getGasPrice()\n   */\n  getGasPrice: () => Promise<GetGasPriceReturnType>\n  /**\n   * Returns a list of event logs matching the provided parameters.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getLogs\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/logs_event-logs\n   * - JSON-RPC Methods: [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs)\n   *\n   * @param args - {@link GetLogsParameters}\n   * @returns A list of event logs. {@link GetLogsReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbiItem } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const logs = await client.getLogs()\n   */\n  getLogs: <\n    const abiEvent extends AbiEvent | undefined = undefined,\n    const abiEvents extends\n      | readonly AbiEvent[]\n      | readonly unknown[]\n      | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n    strict extends boolean | undefined = undefined,\n    fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  >(\n    args?:\n      | GetLogsParameters<abiEvent, abiEvents, strict, fromBlock, toBlock>\n      | undefined,\n  ) => Promise<\n    GetLogsReturnType<abiEvent, abiEvents, strict, fromBlock, toBlock>\n  >\n  /**\n   * Returns the account and storage values of the specified account including the Merkle-proof.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getProof\n   * - JSON-RPC Methods:\n   *   - Calls [`eth_getProof`](https://eips.ethereum.org/EIPS/eip-1186)\n   *\n   * @param client - Client to use\n   * @param parameters - {@link GetProofParameters}\n   * @returns Proof data. {@link GetProofReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const block = await client.getProof({\n   *  address: '0x...',\n   *  storageKeys: ['0x...'],\n   * })\n   */\n  getProof: (args: GetProofParameters) => Promise<GetProofReturnType>\n  /**\n   * Returns an estimate for the max priority fee per gas (in wei) for a transaction\n   * to be included in the next block.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/estimateMaxPriorityFeePerGas\n   *\n   * @param client - Client to use\n   * @returns An estimate (in wei) for the max priority fee per gas. {@link EstimateMaxPriorityFeePerGasReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const maxPriorityFeePerGas = await client.estimateMaxPriorityFeePerGas()\n   * // 10000000n\n   */\n  estimateMaxPriorityFeePerGas: <\n    chainOverride extends Chain | undefined = undefined,\n  >(\n    args?:\n      | EstimateMaxPriorityFeePerGasParameters<chain, chainOverride>\n      | undefined,\n  ) => Promise<EstimateMaxPriorityFeePerGasReturnType>\n  /**\n   * Returns the value from a storage slot at a given address.\n   *\n   * - Docs: https://viem.sh/docs/contract/getStorageAt\n   * - JSON-RPC Methods: [`eth_getStorageAt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getstorageat)\n   *\n   * @param args - {@link GetStorageAtParameters}\n   * @returns The value of the storage slot. {@link GetStorageAtReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { getStorageAt } from 'viem/contract'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const code = await client.getStorageAt({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   slot: toHex(0),\n   * })\n   */\n  getStorageAt: (\n    args: GetStorageAtParameters,\n  ) => Promise<GetStorageAtReturnType>\n  /**\n   * Returns information about a [Transaction](https://viem.sh/docs/glossary/terms#transaction) given a hash or block identifier.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getTransaction\n   * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_fetching-transactions\n   * - JSON-RPC Methods: [`eth_getTransactionByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionByHash)\n   *\n   * @param args - {@link GetTransactionParameters}\n   * @returns The transaction information. {@link GetTransactionReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const transaction = await client.getTransaction({\n   *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n   * })\n   */\n  getTransaction: <blockTag extends BlockTag = 'latest'>(\n    args: GetTransactionParameters<blockTag>,\n  ) => Promise<GetTransactionReturnType<chain, blockTag>>\n  /**\n   * Returns the number of blocks passed (confirmations) since the transaction was processed on a block.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getTransactionConfirmations\n   * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_fetching-transactions\n   * - JSON-RPC Methods: [`eth_getTransactionConfirmations`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionConfirmations)\n   *\n   * @param args - {@link GetTransactionConfirmationsParameters}\n   * @returns The number of blocks passed since the transaction was processed. If confirmations is 0, then the Transaction has not been confirmed & processed yet. {@link GetTransactionConfirmationsReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const confirmations = await client.getTransactionConfirmations({\n   *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n   * })\n   */\n  getTransactionConfirmations: (\n    args: GetTransactionConfirmationsParameters<chain>,\n  ) => Promise<GetTransactionConfirmationsReturnType>\n  /**\n   * Returns the number of [Transactions](https://viem.sh/docs/glossary/terms#transaction) an Account has broadcast / sent.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getTransactionCount\n   * - JSON-RPC Methods: [`eth_getTransactionCount`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gettransactioncount)\n   *\n   * @param args - {@link GetTransactionCountParameters}\n   * @returns The number of transactions an account has sent. {@link GetTransactionCountReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const transactionCount = await client.getTransactionCount({\n   *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   * })\n   */\n  getTransactionCount: (\n    args: GetTransactionCountParameters,\n  ) => Promise<GetTransactionCountReturnType>\n  /**\n   * Returns the [Transaction Receipt](https://viem.sh/docs/glossary/terms#transaction-receipt) given a [Transaction](https://viem.sh/docs/glossary/terms#transaction) hash.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getTransactionReceipt\n   * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_fetching-transactions\n   * - JSON-RPC Methods: [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt)\n   *\n   * @param args - {@link GetTransactionReceiptParameters}\n   * @returns The transaction receipt. {@link GetTransactionReceiptReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const transactionReceipt = await client.getTransactionReceipt({\n   *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n   * })\n   */\n  getTransactionReceipt: (\n    args: GetTransactionReceiptParameters,\n  ) => Promise<GetTransactionReceiptReturnType<chain>>\n  /**\n   * Similar to [`readContract`](https://viem.sh/docs/contract/readContract), but batches up multiple functions on a contract in a single RPC call via the [`multicall3` contract](https://github.com/mds1/multicall).\n   *\n   * - Docs: https://viem.sh/docs/contract/multicall\n   *\n   * @param args - {@link MulticallParameters}\n   * @returns An array of results with accompanying status. {@link MulticallReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const abi = parseAbi([\n   *   'function balanceOf(address) view returns (uint256)',\n   *   'function totalSupply() view returns (uint256)',\n   * ])\n   * const result = await client.multicall({\n   *   contracts: [\n   *     {\n   *       address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *       abi,\n   *       functionName: 'balanceOf',\n   *       args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],\n   *     },\n   *     {\n   *       address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *       abi,\n   *       functionName: 'totalSupply',\n   *     },\n   *   ],\n   * })\n   * // [{ result: 424122n, status: 'success' }, { result: 1000000n, status: 'success' }]\n   */\n  multicall: <\n    const contracts extends readonly unknown[],\n    allowFailure extends boolean = true,\n  >(\n    args: MulticallParameters<contracts, allowFailure>,\n  ) => Promise<MulticallReturnType<contracts, allowFailure>>\n  /**\n   * Prepares a transaction request for signing.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/prepareTransactionRequest\n   *\n   * @param args - {@link PrepareTransactionRequestParameters}\n   * @returns The transaction request. {@link PrepareTransactionRequestReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const request = await client.prepareTransactionRequest({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   to: '0x0000000000000000000000000000000000000000',\n   *   value: 1n,\n   * })\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x…'),\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const request = await client.prepareTransactionRequest({\n   *   to: '0x0000000000000000000000000000000000000000',\n   *   value: 1n,\n   * })\n   */\n  prepareTransactionRequest: <\n    const request extends PrepareTransactionRequestRequest<\n      chain,\n      chainOverride\n    >,\n    chainOverride extends Chain | undefined = undefined,\n    accountOverride extends Account | Address | undefined = undefined,\n  >(\n    args: PrepareTransactionRequestParameters<\n      chain,\n      account,\n      chainOverride,\n      accountOverride,\n      request\n    >,\n  ) => Promise<\n    PrepareTransactionRequestReturnType<\n      chain,\n      account,\n      chainOverride,\n      accountOverride,\n      request\n    >\n  >\n  /**\n   * Calls a read-only function on a contract, and returns the response.\n   *\n   * - Docs: https://viem.sh/docs/contract/readContract\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts_reading-contracts\n   *\n   * @remarks\n   * A \"read-only\" function (constant function) on a Solidity contract is denoted by a `view` or `pure` keyword. They can only read the state of the contract, and cannot make any changes to it. Since read-only methods do not change the state of the contract, they do not require any gas to be executed, and can be called by any user without the need to pay for gas.\n   *\n   * Internally, uses a [Public Client](https://viem.sh/docs/clients/public) to call the [`call` action](https://viem.sh/docs/actions/public/call) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\n   *\n   * @param args - {@link ReadContractParameters}\n   * @returns The response from the contract. Type is inferred. {@link ReadContractReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { readContract } from 'viem/contract'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const result = await client.readContract({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   abi: parseAbi(['function balanceOf(address) view returns (uint256)']),\n   *   functionName: 'balanceOf',\n   *   args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],\n   * })\n   * // 424122n\n   */\n  readContract: <\n    const abi extends Abi | readonly unknown[],\n    functionName extends ContractFunctionName<abi, 'pure' | 'view'>,\n    const args extends ContractFunctionArgs<abi, 'pure' | 'view', functionName>,\n  >(\n    args: ReadContractParameters<abi, functionName, args>,\n  ) => Promise<ReadContractReturnType<abi, functionName, args>>\n  /**\n   * Sends a **signed** transaction to the network\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/sendRawTransaction\n   * - JSON-RPC Method: [`eth_sendRawTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\n   *\n   * @param client - Client to use\n   * @param parameters - {@link SendRawTransactionParameters}\n   * @returns The transaction hash. {@link SendRawTransactionReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { sendRawTransaction } from 'viem/wallet'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   *\n   * const hash = await client.sendRawTransaction({\n   *   serializedTransaction: '0x02f850018203118080825208808080c080a04012522854168b27e5dc3d5839bab5e6b39e1a0ffd343901ce1622e3d64b48f1a04e00902ae0502c4728cbf12156290df99c3ed7de85b1dbfe20b5c36931733a33'\n   * })\n   */\n  sendRawTransaction: (\n    args: SendRawTransactionParameters,\n  ) => Promise<SendRawTransactionReturnType>\n  /**\n   * @deprecated Use `simulateBlocks` instead.\n   */\n  simulate: <const calls extends readonly unknown[]>(\n    args: SimulateBlocksParameters<calls>,\n  ) => Promise<SimulateBlocksReturnType<calls>>\n  /**\n   * Simulates a set of calls on block(s) with optional block and state overrides.\n   *\n   * @example\n   * ```ts\n   * import { createPublicClient, http, parseEther } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   *\n   * const result = await client.simulateBlocks({\n   *   blocks: [{\n   *     blockOverrides: {\n   *       number: 69420n,\n   *     },\n   *     calls: [{\n   *       {\n   *         account: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',\n   *         data: '0xdeadbeef',\n   *         to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   *       },\n   *       {\n   *         account: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',\n   *         to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   *         value: parseEther('1'),\n   *       },\n   *     }],\n   *     stateOverrides: [{\n   *       address: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',\n   *       balance: parseEther('10'),\n   *     }],\n   *   }]\n   * })\n   * ```\n   *\n   * @param client - Client to use.\n   * @param parameters - {@link SimulateParameters}\n   * @returns Simulated blocks. {@link SimulateReturnType}\n   */\n  simulateBlocks: <const calls extends readonly unknown[]>(\n    args: SimulateBlocksParameters<calls>,\n  ) => Promise<SimulateBlocksReturnType<calls>>\n  /**\n   * Simulates a set of calls.\n   *\n   * @example\n   * ```ts\n   * import { createPublicClient, http, parseEther } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   *\n   * const result = await client.simulateCalls({\n   *   account: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',\n   *   calls: [{\n   *     {\n   *       data: '0xdeadbeef',\n   *       to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   *     },\n   *     {\n   *       to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   *       value: parseEther('1'),\n   *     },\n   *   ]\n   * })\n   * ```\n   *\n   * @param client - Client to use.\n   * @param parameters - {@link SimulateCallsParameters}\n   * @returns Results. {@link SimulateCallsReturnType}\n   */\n  simulateCalls: <const calls extends readonly unknown[]>(\n    args: SimulateCallsParameters<calls>,\n  ) => Promise<SimulateCallsReturnType<calls>>\n  /**\n   * Simulates/validates a contract interaction. This is useful for retrieving **return data** and **revert reasons** of contract write functions.\n   *\n   * - Docs: https://viem.sh/docs/contract/simulateContract\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts_writing-to-contracts\n   *\n   * @remarks\n   * This function does not require gas to execute and _**does not**_ change the state of the blockchain. It is almost identical to [`readContract`](https://viem.sh/docs/contract/readContract), but also supports contract write functions.\n   *\n   * Internally, uses a [Public Client](https://viem.sh/docs/clients/public) to call the [`call` action](https://viem.sh/docs/actions/public/call) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\n   *\n   * @param args - {@link SimulateContractParameters}\n   * @returns The simulation result and write request. {@link SimulateContractReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const result = await client.simulateContract({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   abi: parseAbi(['function mint(uint32) view returns (uint32)']),\n   *   functionName: 'mint',\n   *   args: ['69420'],\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   * })\n   */\n  simulateContract: <\n    const abi extends Abi | readonly unknown[],\n    functionName extends ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n    const args extends ContractFunctionArgs<\n      abi,\n      'nonpayable' | 'payable',\n      functionName\n    >,\n    chainOverride extends Chain | undefined,\n    accountOverride extends Account | Address | undefined = undefined,\n  >(\n    args: SimulateContractParameters<\n      abi,\n      functionName,\n      args,\n      chain,\n      chainOverride,\n      accountOverride\n    >,\n  ) => Promise<\n    SimulateContractReturnType<\n      abi,\n      functionName,\n      args,\n      chain,\n      account,\n      chainOverride,\n      accountOverride\n    >\n  >\n  /**\n   * Verify that a hash was signed by the provided address.\n   *\n   * - Docs {@link https://viem.sh/docs/actions/public/verifyHash}\n   *\n   * @param parameters - {@link VerifyHashParameters}\n   * @returns Whether or not the signature is valid. {@link VerifyHashReturnType}\n   */\n  verifyHash: (args: VerifyHashParameters) => Promise<VerifyHashReturnType>\n  /**\n   * Verify that a message was signed by the provided address.\n   *\n   * Compatible with Smart Contract Accounts & Externally Owned Accounts via [ERC-6492](https://eips.ethereum.org/EIPS/eip-6492).\n   *\n   * - Docs {@link https://viem.sh/docs/actions/public/verifyMessage}\n   *\n   * @param parameters - {@link VerifyMessageParameters}\n   * @returns Whether or not the signature is valid. {@link VerifyMessageReturnType}\n   */\n  verifyMessage: (\n    args: VerifyMessageParameters,\n  ) => Promise<VerifyMessageReturnType>\n  /**\n   * Verifies [EIP-4361](https://eips.ethereum.org/EIPS/eip-4361) formatted message was signed.\n   *\n   * Compatible with Smart Contract Accounts & Externally Owned Accounts via [ERC-6492](https://eips.ethereum.org/EIPS/eip-6492).\n   *\n   * - Docs {@link https://viem.sh/docs/siwe/actions/verifySiweMessage}\n   *\n   * @param parameters - {@link VerifySiweMessageParameters}\n   * @returns Whether or not the signature is valid. {@link VerifySiweMessageReturnType}\n   */\n  verifySiweMessage: (\n    args: VerifySiweMessageParameters,\n  ) => Promise<VerifySiweMessageReturnType>\n  /**\n   * Verify that typed data was signed by the provided address.\n   *\n   * - Docs {@link https://viem.sh/docs/actions/public/verifyTypedData}\n   *\n   * @param parameters - {@link VerifyTypedDataParameters}\n   * @returns Whether or not the signature is valid. {@link VerifyTypedDataReturnType}\n   */\n  verifyTypedData: (\n    args: VerifyTypedDataParameters,\n  ) => Promise<VerifyTypedDataReturnType>\n  /**\n   * Destroys a Filter that was created from one of the following Actions:\n   *\n   * - [`createBlockFilter`](https://viem.sh/docs/actions/public/createBlockFilter)\n   * - [`createEventFilter`](https://viem.sh/docs/actions/public/createEventFilter)\n   * - [`createPendingTransactionFilter`](https://viem.sh/docs/actions/public/createPendingTransactionFilter)\n   *\n   * - Docs: https://viem.sh/docs/actions/public/uninstallFilter\n   * - JSON-RPC Methods: [`eth_uninstallFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_uninstallFilter)\n   *\n   * @param args - {@link UninstallFilterParameters}\n   * @returns A boolean indicating if the Filter was successfully uninstalled. {@link UninstallFilterReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { createPendingTransactionFilter, uninstallFilter } from 'viem/public'\n   *\n   * const filter = await client.createPendingTransactionFilter()\n   * const uninstalled = await client.uninstallFilter({ filter })\n   * // true\n   */\n  uninstallFilter: (\n    args: UninstallFilterParameters,\n  ) => Promise<UninstallFilterReturnType>\n  /**\n   * Waits for the [Transaction](https://viem.sh/docs/glossary/terms#transaction) to be included on a [Block](https://viem.sh/docs/glossary/terms#block) (one confirmation), and then returns the [Transaction Receipt](https://viem.sh/docs/glossary/terms#transaction-receipt). If the Transaction reverts, then the action will throw an error.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/waitForTransactionReceipt\n   * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_sending-transactions\n   * - JSON-RPC Methods:\n   *   - Polls [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt) on each block until it has been processed.\n   *   - If a Transaction has been replaced:\n   *     - Calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber) and extracts the transactions\n   *     - Checks if one of the Transactions is a replacement\n   *     - If so, calls [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt).\n   *\n   * @remarks\n   * The `waitForTransactionReceipt` action additionally supports Replacement detection (e.g. sped up Transactions).\n   *\n   * Transactions can be replaced when a user modifies their transaction in their wallet (to speed up or cancel). Transactions are replaced when they are sent from the same nonce.\n   *\n   * There are 3 types of Transaction Replacement reasons:\n   *\n   * - `repriced`: The gas price has been modified (e.g. different `maxFeePerGas`)\n   * - `cancelled`: The Transaction has been cancelled (e.g. `value === 0n`)\n   * - `replaced`: The Transaction has been replaced (e.g. different `value` or `data`)\n   *\n   * @param args - {@link WaitForTransactionReceiptParameters}\n   * @returns The transaction receipt. {@link WaitForTransactionReceiptReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const transactionReceipt = await client.waitForTransactionReceipt({\n   *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n   * })\n   */\n  waitForTransactionReceipt: (\n    args: WaitForTransactionReceiptParameters<chain>,\n  ) => Promise<WaitForTransactionReceiptReturnType<chain>>\n  /**\n   * Watches and returns incoming block numbers.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/watchBlockNumber\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks_watching-blocks\n   * - JSON-RPC Methods:\n   *   - When `poll: true`, calls [`eth_blockNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blocknumber) on a polling interval.\n   *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newHeads\"` event.\n   *\n   * @param args - {@link WatchBlockNumberParameters}\n   * @returns A function that can be invoked to stop watching for new block numbers. {@link WatchBlockNumberReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const unwatch = await client.watchBlockNumber({\n   *   onBlockNumber: (blockNumber) => console.log(blockNumber),\n   * })\n   */\n  watchBlockNumber: (\n    args: WatchBlockNumberParameters,\n  ) => WatchBlockNumberReturnType\n  /**\n   * Watches and returns information for incoming blocks.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/watchBlocks\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks_watching-blocks\n   * - JSON-RPC Methods:\n   *   - When `poll: true`, calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getBlockByNumber) on a polling interval.\n   *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newHeads\"` event.\n   *\n   * @param args - {@link WatchBlocksParameters}\n   * @returns A function that can be invoked to stop watching for new block numbers. {@link WatchBlocksReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const unwatch = await client.watchBlocks({\n   *   onBlock: (block) => console.log(block),\n   * })\n   */\n  watchBlocks: <\n    includeTransactions extends boolean = false,\n    blockTag extends BlockTag = 'latest',\n  >(\n    args: WatchBlocksParameters<\n      transport,\n      chain,\n      includeTransactions,\n      blockTag\n    >,\n  ) => WatchBlocksReturnType\n  /**\n   * Watches and returns emitted contract event logs.\n   *\n   * - Docs: https://viem.sh/docs/contract/watchContractEvent\n   *\n   * @remarks\n   * This Action will batch up all the event logs found within the [`pollingInterval`](https://viem.sh/docs/contract/watchContractEvent#pollinginterval-optional), and invoke them via [`onLogs`](https://viem.sh/docs/contract/watchContractEvent#onLogs).\n   *\n   * `watchContractEvent` will attempt to create an [Event Filter](https://viem.sh/docs/contract/createContractEventFilter) and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (e.g. `eth_newFilter`), then `watchContractEvent` will fall back to using [`getLogs`](https://viem.sh/docs/actions/public/getLogs) instead.\n   *\n   * @param args - {@link WatchContractEventParameters}\n   * @returns A function that can be invoked to stop watching for new event logs. {@link WatchContractEventReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const unwatch = client.watchContractEvent({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   abi: parseAbi(['event Transfer(address indexed from, address indexed to, uint256 value)']),\n   *   eventName: 'Transfer',\n   *   args: { from: '0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b' },\n   *   onLogs: (logs) => console.log(logs),\n   * })\n   */\n  watchContractEvent: <\n    const abi extends Abi | readonly unknown[],\n    eventName extends ContractEventName<abi>,\n    strict extends boolean | undefined = undefined,\n  >(\n    args: WatchContractEventParameters<abi, eventName, strict, transport>,\n  ) => WatchContractEventReturnType\n  /**\n   * Watches and returns emitted [Event Logs](https://viem.sh/docs/glossary/terms#event-log).\n   *\n   * - Docs: https://viem.sh/docs/actions/public/watchEvent\n   * - JSON-RPC Methods:\n   *   - **RPC Provider supports `eth_newFilter`:**\n   *     - Calls [`eth_newFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter) to create a filter (called on initialize).\n   *     - On a polling interval, it will call [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterchanges).\n   *   - **RPC Provider does not support `eth_newFilter`:**\n   *     - Calls [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs) for each block between the polling interval.\n   *\n   * @remarks\n   * This Action will batch up all the Event Logs found within the [`pollingInterval`](https://viem.sh/docs/actions/public/watchEvent#pollinginterval-optional), and invoke them via [`onLogs`](https://viem.sh/docs/actions/public/watchEvent#onLogs).\n   *\n   * `watchEvent` will attempt to create an [Event Filter](https://viem.sh/docs/actions/public/createEventFilter) and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (e.g. `eth_newFilter`), then `watchEvent` will fall back to using [`getLogs`](https://viem.sh/docs/actions/public/getLogs) instead.\n   *\n   * @param args - {@link WatchEventParameters}\n   * @returns A function that can be invoked to stop watching for new Event Logs. {@link WatchEventReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const unwatch = client.watchEvent({\n   *   onLogs: (logs) => console.log(logs),\n   * })\n   */\n  watchEvent: <\n    const abiEvent extends AbiEvent | undefined = undefined,\n    const abiEvents extends\n      | readonly AbiEvent[]\n      | readonly unknown[]\n      | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n    strict extends boolean | undefined = undefined,\n  >(\n    args: WatchEventParameters<abiEvent, abiEvents, strict, transport>,\n  ) => WatchEventReturnType\n  /**\n   * Watches and returns pending transaction hashes.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/watchPendingTransactions\n   * - JSON-RPC Methods:\n   *   - When `poll: true`\n   *     - Calls [`eth_newPendingTransactionFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newpendingtransactionfilter) to initialize the filter.\n   *     - Calls [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getFilterChanges) on a polling interval.\n   *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newPendingTransactions\"` event.\n   *\n   * @remarks\n   * This Action will batch up all the pending transactions found within the [`pollingInterval`](https://viem.sh/docs/actions/public/watchPendingTransactions#pollinginterval-optional), and invoke them via [`onTransactions`](https://viem.sh/docs/actions/public/watchPendingTransactions#ontransactions).\n   *\n   * @param args - {@link WatchPendingTransactionsParameters}\n   * @returns A function that can be invoked to stop watching for new pending transaction hashes. {@link WatchPendingTransactionsReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const unwatch = await client.watchPendingTransactions({\n   *   onTransactions: (hashes) => console.log(hashes),\n   * })\n   */\n  watchPendingTransactions: (\n    args: WatchPendingTransactionsParameters<transport>,\n  ) => WatchPendingTransactionsReturnType\n}\n\nexport function publicActions<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n>(\n  client: Client<transport, chain, account>,\n): PublicActions<transport, chain, account> {\n  return {\n    call: (args) => call(client, args),\n    createAccessList: (args) => createAccessList(client, args),\n    createBlockFilter: () => createBlockFilter(client),\n    createContractEventFilter: (args) =>\n      createContractEventFilter(client, args),\n    createEventFilter: (args) => createEventFilter(client, args),\n    createPendingTransactionFilter: () =>\n      createPendingTransactionFilter(client),\n    estimateContractGas: (args) => estimateContractGas(client, args as any),\n    estimateGas: (args) => estimateGas(client, args),\n    getBalance: (args) => getBalance(client, args),\n    getBlobBaseFee: () => getBlobBaseFee(client),\n    getBlock: (args) => getBlock(client, args),\n    getBlockNumber: (args) => getBlockNumber(client, args),\n    getBlockTransactionCount: (args) => getBlockTransactionCount(client, args),\n    getBytecode: (args) => getCode(client, args),\n    getChainId: () => getChainId(client),\n    getCode: (args) => getCode(client, args),\n    getContractEvents: (args) => getContractEvents(client, args),\n    getEip712Domain: (args) => getEip712Domain(client, args),\n    getEnsAddress: (args) => getEnsAddress(client, args),\n    getEnsAvatar: (args) => getEnsAvatar(client, args),\n    getEnsName: (args) => getEnsName(client, args),\n    getEnsResolver: (args) => getEnsResolver(client, args),\n    getEnsText: (args) => getEnsText(client, args),\n    getFeeHistory: (args) => getFeeHistory(client, args),\n    estimateFeesPerGas: (args) => estimateFeesPerGas(client, args),\n    getFilterChanges: (args) => getFilterChanges(client, args),\n    getFilterLogs: (args) => getFilterLogs(client, args),\n    getGasPrice: () => getGasPrice(client),\n    getLogs: (args) => getLogs(client, args as any),\n    getProof: (args) => getProof(client, args),\n    estimateMaxPriorityFeePerGas: (args) =>\n      estimateMaxPriorityFeePerGas(client, args),\n    getStorageAt: (args) => getStorageAt(client, args),\n    getTransaction: (args) => getTransaction(client, args),\n    getTransactionConfirmations: (args) =>\n      getTransactionConfirmations(client, args),\n    getTransactionCount: (args) => getTransactionCount(client, args),\n    getTransactionReceipt: (args) => getTransactionReceipt(client, args),\n    multicall: (args) => multicall(client, args),\n    prepareTransactionRequest: (args) =>\n      prepareTransactionRequest(client as any, args as any) as any,\n    readContract: (args) => readContract(client, args),\n    sendRawTransaction: (args) => sendRawTransaction(client, args),\n    simulate: (args) => simulateBlocks(client, args),\n    simulateBlocks: (args) => simulateBlocks(client, args),\n    simulateCalls: (args) => simulateCalls(client, args),\n    simulateContract: (args) => simulateContract(client, args),\n    verifyHash: (args) => verifyHash(client, args),\n    verifyMessage: (args) => verifyMessage(client, args),\n    verifySiweMessage: (args) => verifySiweMessage(client, args),\n    verifyTypedData: (args) => verifyTypedData(client, args),\n    uninstallFilter: (args) => uninstallFilter(client, args),\n    waitForTransactionReceipt: (args) =>\n      waitForTransactionReceipt(client, args),\n    watchBlocks: (args) => watchBlocks(client, args),\n    watchBlockNumber: (args) => watchBlockNumber(client, args),\n    watchContractEvent: (args) => watchContractEvent(client, args),\n    watchEvent: (args) => watchEvent(client, args),\n    watchPendingTransactions: (args) => watchPendingTransactions(client, args),\n  }\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { createFilterRequestScope } from '../../utils/filters/createFilterRequestScope.js'\n\nexport type CreateBlockFilterReturnType = Filter<'block'>\n\nexport type CreateBlockFilterErrorType = RequestErrorType | ErrorType\n\n/**\n * Creates a [`Filter`](https://viem.sh/docs/glossary/types#filter) to listen for new block hashes that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges).\n *\n * - Docs: https://viem.sh/docs/actions/public/createBlockFilter\n * - JSON-RPC Methods: [`eth_newBlockFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newBlockFilter)\n *\n * @param client - Client to use\n * @returns [`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateBlockFilterReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createBlockFilter } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createBlockFilter(client)\n * // { id: \"0x345a6572337856574a76364e457a4366\", type: 'block' }\n */\nexport async function createBlockFilter<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n): Promise<CreateBlockFilterReturnType> {\n  const getRequest = createFilterRequestScope(client, {\n    method: 'eth_newBlockFilter',\n  })\n  const id = await client.request({\n    method: 'eth_newBlockFilter',\n  })\n  return { id, request: getRequest(id), type: 'block' }\n}\n","import type { Abi } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { BaseError } from '../../errors/base.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ContractFunctionArgs,\n  ContractFunctionName,\n  ContractFunctionParameters,\n  GetValue,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  type EncodeFunctionDataParameters,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport {\n  type GetContractErrorReturnType,\n  getContractError,\n} from '../../utils/errors/getContractError.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type EstimateGasErrorType,\n  type EstimateGasParameters,\n  estimateGas,\n} from './estimateGas.js'\n\nexport type EstimateContractGasParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  functionName extends ContractFunctionName<\n    abi,\n    'nonpayable' | 'payable'\n  > = ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n  args extends ContractFunctionArgs<\n    abi,\n    'nonpayable' | 'payable',\n    functionName\n  > = ContractFunctionArgs<abi, 'nonpayable' | 'payable', functionName>,\n  chain extends Chain | undefined = Chain | undefined,\n> = ContractFunctionParameters<\n  abi,\n  'nonpayable' | 'payable',\n  functionName,\n  args\n> &\n  UnionOmit<EstimateGasParameters<chain>, 'data' | 'to' | 'value'> &\n  GetValue<\n    abi,\n    functionName,\n    EstimateGasParameters<chain> extends EstimateGasParameters\n      ? EstimateGasParameters<chain>['value']\n      : EstimateGasParameters['value']\n  > & {\n    /** Data to append to the end of the calldata. Useful for adding a [\"domain\" tag](https://opensea.notion.site/opensea/Seaport-Order-Attributions-ec2d69bf455041a5baa490941aad307f). */\n    dataSuffix?: Hex | undefined\n  }\n\nexport type EstimateContractGasReturnType = bigint\n\nexport type EstimateContractGasErrorType = GetContractErrorReturnType<\n  EncodeFunctionDataErrorType | EstimateGasErrorType | ParseAccountErrorType\n>\n\n/**\n * Estimates the gas required to successfully execute a contract write function call.\n *\n * - Docs: https://viem.sh/docs/contract/estimateContractGas\n *\n * Internally, uses a [Public Client](https://viem.sh/docs/clients/public) to call the [`estimateGas` action](https://viem.sh/docs/actions/public/estimateGas) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\n *\n * @param client - Client to use\n * @param parameters - {@link EstimateContractGasParameters}\n * @returns The gas estimate (in wei). {@link EstimateContractGasReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { estimateContractGas } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const gas = await estimateContractGas(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['function mint() public']),\n *   functionName: 'mint',\n *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n * })\n */\nexport async function estimateContractGas<\n  const abi extends Abi | readonly unknown[],\n  functionName extends ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n  args extends ContractFunctionArgs<abi, 'pure' | 'view', functionName>,\n  chain extends Chain | undefined,\n  account extends Account | undefined = undefined,\n>(\n  client: Client<Transport, chain, account>,\n  parameters: EstimateContractGasParameters<abi, functionName, args, chain>,\n): Promise<EstimateContractGasReturnType> {\n  const { abi, address, args, functionName, dataSuffix, ...request } =\n    parameters as EstimateContractGasParameters\n  const data = encodeFunctionData({\n    abi,\n    args,\n    functionName,\n  } as EncodeFunctionDataParameters)\n  try {\n    const gas = await getAction(\n      client,\n      estimateGas,\n      'estimateGas',\n    )({\n      data: `${data}${dataSuffix ? dataSuffix.replace('0x', '') : ''}`,\n      to: address,\n      ...request,\n    } as unknown as EstimateGasParameters)\n    return gas\n  } catch (error) {\n    const account = request.account ? parseAccount(request.account) : undefined\n    throw getContractError(error as BaseError, {\n      abi,\n      address,\n      args,\n      docsPath: '/docs/contract/estimateContractGas',\n      functionName,\n      sender: account?.address,\n    })\n  }\n}\n","import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type GetBlobBaseFeeReturnType = bigint\n\nexport type GetBlobBaseFeeErrorType = RequestErrorType | ErrorType\n\n/**\n * Returns the base fee per blob gas in wei.\n *\n * - Docs: https://viem.sh/docs/actions/public/getBlobBaseFee\n * - JSON-RPC Methods: [`eth_blobBaseFee`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blobBaseFee)\n *\n * @param client - Client to use\n * @returns The blob base fee (in wei). {@link GetBlobBaseFeeReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBlobBaseFee } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const blobBaseFee = await getBlobBaseFee(client)\n */\nexport async function getBlobBaseFee<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: Client<Transport, chain, account>,\n): Promise<GetBlobBaseFeeReturnType> {\n  const baseFee = await client.request({\n    method: 'eth_blobBaseFee',\n  })\n  return BigInt(baseFee)\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { Quantity } from '../../types/rpc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type HexToNumberErrorType,\n  hexToNumber,\n} from '../../utils/encoding/fromHex.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type GetBlockTransactionCountParameters =\n  | {\n      /** Hash of the block. */\n      blockHash?: Hash | undefined\n      blockNumber?: undefined\n      blockTag?: undefined\n    }\n  | {\n      blockHash?: undefined\n      /** The block number. */\n      blockNumber?: bigint | undefined\n      blockTag?: undefined\n    }\n  | {\n      blockHash?: undefined\n      blockNumber?: undefined\n      /** The block tag. Defaults to 'latest'. */\n      blockTag?: BlockTag | undefined\n    }\n\nexport type GetBlockTransactionCountReturnType = number\n\nexport type GetBlockTransactionCountErrorType =\n  | NumberToHexErrorType\n  | HexToNumberErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns the number of Transactions at a block number, hash, or tag.\n *\n * - Docs: https://viem.sh/docs/actions/public/getBlockTransactionCount\n * - JSON-RPC Methods:\n *   - Calls [`eth_getBlockTransactionCountByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblocktransactioncountbynumber) for `blockNumber` & `blockTag`.\n *   - Calls [`eth_getBlockTransactionCountByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblocktransactioncountbyhash) for `blockHash`.\n *\n * @param client - Client to use\n * @param parameters - {@link GetBlockTransactionCountParameters}\n * @returns The block transaction count. {@link GetBlockTransactionCountReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBlockTransactionCount } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const count = await getBlockTransactionCount(client)\n */\nexport async function getBlockTransactionCount<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  {\n    blockHash,\n    blockNumber,\n    blockTag = 'latest',\n  }: GetBlockTransactionCountParameters = {},\n): Promise<GetBlockTransactionCountReturnType> {\n  const blockNumberHex =\n    blockNumber !== undefined ? numberToHex(blockNumber) : undefined\n\n  let count: Quantity\n  if (blockHash) {\n    count = await client.request(\n      {\n        method: 'eth_getBlockTransactionCountByHash',\n        params: [blockHash],\n      },\n      { dedupe: true },\n    )\n  } else {\n    count = await client.request(\n      {\n        method: 'eth_getBlockTransactionCountByNumber',\n        params: [blockNumberHex || blockTag],\n      },\n      { dedupe: Boolean(blockNumberHex) },\n    )\n  }\n\n  return hexToNumber(count)\n}\n","import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  addressResolverAbi,\n  universalResolverResolveAbi,\n} from '../../constants/abis.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Prettify } from '../../types/utils.js'\nimport {\n  type DecodeFunctionResultErrorType,\n  decodeFunctionResult,\n} from '../../utils/abi/decodeFunctionResult.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport {\n  type GetChainContractAddressErrorType,\n  getChainContractAddress,\n} from '../../utils/chain/getChainContractAddress.js'\nimport { type TrimErrorType, trim } from '../../utils/data/trim.js'\nimport { type ToHexErrorType, toHex } from '../../utils/encoding/toHex.js'\nimport { isNullUniversalResolverError } from '../../utils/ens/errors.js'\nimport { localBatchGatewayUrl } from '../../utils/ens/localBatchGatewayRequest.js'\nimport { type NamehashErrorType, namehash } from '../../utils/ens/namehash.js'\nimport {\n  type PacketToBytesErrorType,\n  packetToBytes,\n} from '../../utils/ens/packetToBytes.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type ReadContractParameters,\n  readContract,\n} from '../public/readContract.js'\n\nexport type GetEnsAddressParameters = Prettify<\n  Pick<ReadContractParameters, 'blockNumber' | 'blockTag'> & {\n    /**\n     * ENSIP-9 compliant coinType (chain) to get ENS address for.\n     *\n     * To get the `coinType` for a chain id, use the `toCoinType` function:\n     * ```ts\n     * import { toCoinType } from 'viem'\n     * import { base } from 'viem/chains'\n     *\n     * const coinType = toCoinType(base.id)\n     * ```\n     *\n     * @default 60n\n     */\n    coinType?: bigint | undefined\n    /**\n     * Universal Resolver gateway URLs to use for resolving CCIP-read requests.\n     */\n    gatewayUrls?: string[] | undefined\n    /**\n     * Name to get the address for.\n     */\n    name: string\n    /**\n     * Whether or not to throw errors propagated from the ENS Universal Resolver Contract.\n     */\n    strict?: boolean | undefined\n    /**\n     * Address of ENS Universal Resolver Contract.\n     */\n    universalResolverAddress?: Address | undefined\n  }\n>\n\nexport type GetEnsAddressReturnType = Address | null\n\nexport type GetEnsAddressErrorType =\n  | GetChainContractAddressErrorType\n  | EncodeFunctionDataErrorType\n  | NamehashErrorType\n  | ToHexErrorType\n  | PacketToBytesErrorType\n  | DecodeFunctionResultErrorType\n  | TrimErrorType\n  | ErrorType\n\n/**\n * Gets address for ENS name.\n *\n * - Docs: https://viem.sh/docs/ens/actions/getEnsAddress\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n *\n * Calls `resolve(bytes, bytes)` on ENS Universal Resolver Contract.\n *\n * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n *\n * @param client - Client to use\n * @param parameters - {@link GetEnsAddressParameters}\n * @returns Address for ENS name or `null` if not found. {@link GetEnsAddressReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getEnsAddress, normalize } from 'viem/ens'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const ensAddress = await getEnsAddress(client, {\n *   name: normalize('wevm.eth'),\n * })\n * // '0xd2135CfB216b74109775236E36d4b433F1DF507B'\n */\nexport async function getEnsAddress<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  parameters: GetEnsAddressParameters,\n): Promise<GetEnsAddressReturnType> {\n  const { blockNumber, blockTag, coinType, name, gatewayUrls, strict } =\n    parameters\n  const { chain } = client\n\n  const universalResolverAddress = (() => {\n    if (parameters.universalResolverAddress)\n      return parameters.universalResolverAddress\n    if (!chain)\n      throw new Error(\n        'client chain not configured. universalResolverAddress is required.',\n      )\n    return getChainContractAddress({\n      blockNumber,\n      chain,\n      contract: 'ensUniversalResolver',\n    })\n  })()\n\n  const tlds = chain?.ensTlds\n  if (tlds && !tlds.some((tld) => name.endsWith(tld))) return null\n\n  const args = (() => {\n    if (coinType != null) return [namehash(name), BigInt(coinType)] as const\n    return [namehash(name)] as const\n  })()\n\n  try {\n    const functionData = encodeFunctionData({\n      abi: addressResolverAbi,\n      functionName: 'addr',\n      args,\n    })\n\n    const readContractParameters = {\n      address: universalResolverAddress,\n      abi: universalResolverResolveAbi,\n      functionName: 'resolveWithGateways',\n      args: [\n        toHex(packetToBytes(name)),\n        functionData,\n        gatewayUrls ?? [localBatchGatewayUrl],\n      ],\n      blockNumber,\n      blockTag,\n    } as const\n\n    const readContractAction = getAction(client, readContract, 'readContract')\n\n    const res = await readContractAction(readContractParameters)\n\n    if (res[0] === '0x') return null\n\n    const address = decodeFunctionResult({\n      abi: addressResolverAbi,\n      args,\n      functionName: 'addr',\n      data: res[0],\n    })\n\n    if (address === '0x') return null\n    if (trim(address) === '0x00') return null\n    return address\n  } catch (err) {\n    if (strict) throw err\n    if (isNullUniversalResolverError(err)) return null\n    throw err\n  }\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { AssetGatewayUrls } from '../../types/ens.js'\nimport type { Prettify } from '../../types/utils.js'\nimport {\n  type ParseAvatarRecordErrorType,\n  parseAvatarRecord,\n} from '../../utils/ens/avatar/parseAvatarRecord.js'\nimport { getAction } from '../../utils/getAction.js'\n\nimport {\n  type GetEnsTextErrorType,\n  type GetEnsTextParameters,\n  getEnsText,\n} from './getEnsText.js'\n\nexport type GetEnsAvatarParameters = Prettify<\n  Omit<GetEnsTextParameters, 'key'> & {\n    /** Gateway urls to resolve IPFS and/or Arweave assets. */\n    assetGatewayUrls?: AssetGatewayUrls | undefined\n  }\n>\n\nexport type GetEnsAvatarReturnType = string | null\n\nexport type GetEnsAvatarErrorType =\n  | GetEnsTextErrorType\n  | ParseAvatarRecordErrorType\n  | ErrorType\n\n/**\n * Gets the avatar of an ENS name.\n *\n * - Docs: https://viem.sh/docs/ens/actions/getEnsAvatar\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n *\n * Calls [`getEnsText`](https://viem.sh/docs/ens/actions/getEnsText) with `key` set to `'avatar'`.\n *\n * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n *\n * @param client - Client to use\n * @param parameters - {@link GetEnsAvatarParameters}\n * @returns Avatar URI or `null` if not found. {@link GetEnsAvatarReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getEnsAvatar, normalize } from 'viem/ens'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const ensAvatar = await getEnsAvatar(client, {\n *   name: normalize('wevm.eth'),\n * })\n * // 'https://ipfs.io/ipfs/Qma8mnp6xV3J2cRNf3mTth5C8nV11CAnceVinc3y8jSbio'\n */\nexport async function getEnsAvatar<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  {\n    blockNumber,\n    blockTag,\n    assetGatewayUrls,\n    name,\n    gatewayUrls,\n    strict,\n    universalResolverAddress,\n  }: GetEnsAvatarParameters,\n): Promise<GetEnsAvatarReturnType> {\n  const record = await getAction(\n    client,\n    getEnsText,\n    'getEnsText',\n  )({\n    blockNumber,\n    blockTag,\n    key: 'avatar',\n    name,\n    universalResolverAddress,\n    gatewayUrls,\n    strict,\n  })\n  if (!record) return null\n  try {\n    return await parseAvatarRecord(client, {\n      record,\n      gatewayUrls: assetGatewayUrls,\n    })\n  } catch {\n    return null\n  }\n}\n","import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { universalResolverReverseAbi } from '../../constants/abis.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Prettify } from '../../types/utils.js'\nimport {\n  type GetChainContractAddressErrorType,\n  getChainContractAddress,\n} from '../../utils/chain/getChainContractAddress.js'\nimport { isNullUniversalResolverError } from '../../utils/ens/errors.js'\nimport { localBatchGatewayUrl } from '../../utils/ens/localBatchGatewayRequest.js'\nimport type { PacketToBytesErrorType } from '../../utils/ens/packetToBytes.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type ReadContractErrorType,\n  type ReadContractParameters,\n  readContract,\n} from '../public/readContract.js'\n\nexport type GetEnsNameParameters = Prettify<\n  Pick<ReadContractParameters, 'blockNumber' | 'blockTag'> & {\n    /**\n     * Address to get ENS name for.\n     */\n    address: Address\n    /**\n     * ENSIP-9 compliant coinType (chain) to get ENS name for.\n     *\n     * To get the `coinType` for a chain id, use the `toCoinType` function:\n     * ```ts\n     * import { toCoinType } from 'viem'\n     * import { base } from 'viem/chains'\n     *\n     * const coinType = toCoinType(base.id)\n     * ```\n     *\n     * @default 60n\n     */\n    coinType?: bigint | undefined\n    /**\n     * Universal Resolver gateway URLs to use for resolving CCIP-read requests.\n     */\n    gatewayUrls?: string[] | undefined\n    /**\n     * Whether or not to throw errors propagated from the ENS Universal Resolver Contract.\n     */\n    strict?: boolean | undefined\n    /**\n     * Address of ENS Universal Resolver Contract.\n     */\n    universalResolverAddress?: Address | undefined\n  }\n>\n\nexport type GetEnsNameReturnType = string | null\n\nexport type GetEnsNameErrorType =\n  | GetChainContractAddressErrorType\n  | ReadContractErrorType\n  | PacketToBytesErrorType\n  | ErrorType\n\n/**\n * Gets primary name for specified address.\n *\n * - Docs: https://viem.sh/docs/ens/actions/getEnsName\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n *\n * Calls `reverse(bytes)` on ENS Universal Resolver Contract to \"reverse resolve\" the address to the primary ENS name.\n *\n * @param client - Client to use\n * @param parameters - {@link GetEnsNameParameters}\n * @returns Name or `null` if not found. {@link GetEnsNameReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getEnsName } from 'viem/ens'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const ensName = await getEnsName(client, {\n *   address: '0xd2135CfB216b74109775236E36d4b433F1DF507B',\n * })\n * // 'wevm.eth'\n */\nexport async function getEnsName<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  parameters: GetEnsNameParameters,\n): Promise<GetEnsNameReturnType> {\n  const {\n    address,\n    blockNumber,\n    blockTag,\n    coinType = 60n,\n    gatewayUrls,\n    strict,\n  } = parameters\n  const { chain } = client\n\n  const universalResolverAddress = (() => {\n    if (parameters.universalResolverAddress)\n      return parameters.universalResolverAddress\n    if (!chain)\n      throw new Error(\n        'client chain not configured. universalResolverAddress is required.',\n      )\n    return getChainContractAddress({\n      blockNumber,\n      chain,\n      contract: 'ensUniversalResolver',\n    })\n  })()\n\n  try {\n    const readContractParameters = {\n      address: universalResolverAddress,\n      abi: universalResolverReverseAbi,\n      args: [address, coinType, gatewayUrls ?? [localBatchGatewayUrl]],\n      functionName: 'reverseWithGateways',\n      blockNumber,\n      blockTag,\n    } as const\n\n    const readContractAction = getAction(client, readContract, 'readContract')\n\n    const [name] = await readContractAction(readContractParameters)\n\n    return name || null\n  } catch (err) {\n    if (strict) throw err\n    if (isNullUniversalResolverError(err)) return null\n    throw err\n  }\n}\n","import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Prettify } from '../../types/utils.js'\nimport {\n  type GetChainContractAddressErrorType,\n  getChainContractAddress,\n} from '../../utils/chain/getChainContractAddress.js'\nimport { type ToHexErrorType, toHex } from '../../utils/encoding/toHex.js'\nimport {\n  type PacketToBytesErrorType,\n  packetToBytes,\n} from '../../utils/ens/packetToBytes.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type ReadContractParameters,\n  readContract,\n} from '../public/readContract.js'\n\nexport type GetEnsResolverParameters = Prettify<\n  Pick<ReadContractParameters, 'blockNumber' | 'blockTag'> & {\n    /** Name to get the address for. */\n    name: string\n    /** Address of ENS Universal Resolver Contract. */\n    universalResolverAddress?: Address | undefined\n  }\n>\n\nexport type GetEnsResolverReturnType = Address\n\nexport type GetEnsResolverErrorType =\n  | GetChainContractAddressErrorType\n  | ToHexErrorType\n  | PacketToBytesErrorType\n  | ErrorType\n\n/**\n * Gets resolver for ENS name.\n *\n * - Docs: https://viem.sh/docs/ens/actions/getEnsResolver\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n *\n * Calls `findResolver(bytes)` on ENS Universal Resolver Contract to retrieve the resolver of an ENS name.\n *\n * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n *\n * @param client - Client to use\n * @param parameters - {@link GetEnsResolverParameters}\n * @returns Address for ENS resolver. {@link GetEnsResolverReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getEnsResolver, normalize } from 'viem/ens'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const resolverAddress = await getEnsResolver(client, {\n *   name: normalize('wevm.eth'),\n * })\n * // '0x4976fb03C32e5B8cfe2b6cCB31c09Ba78EBaBa41'\n */\nexport async function getEnsResolver<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  parameters: GetEnsResolverParameters,\n): Promise<GetEnsResolverReturnType> {\n  const { blockNumber, blockTag, name } = parameters\n  const { chain } = client\n\n  const universalResolverAddress = (() => {\n    if (parameters.universalResolverAddress)\n      return parameters.universalResolverAddress\n    if (!chain)\n      throw new Error(\n        'client chain not configured. universalResolverAddress is required.',\n      )\n    return getChainContractAddress({\n      blockNumber,\n      chain,\n      contract: 'ensUniversalResolver',\n    })\n  })()\n\n  const tlds = chain?.ensTlds\n  if (tlds && !tlds.some((tld) => name.endsWith(tld)))\n    throw new Error(\n      `${name} is not a valid ENS TLD (${tlds?.join(', ')}) for chain \"${chain.name}\" (id: ${chain.id}).`,\n    )\n\n  const [resolverAddress] = await getAction(\n    client,\n    readContract,\n    'readContract',\n  )({\n    address: universalResolverAddress,\n    abi: [\n      {\n        inputs: [{ type: 'bytes' }],\n        name: 'findResolver',\n        outputs: [\n          { type: 'address' },\n          { type: 'bytes32' },\n          { type: 'uint256' },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n      },\n    ],\n    functionName: 'findResolver',\n    args: [toHex(packetToBytes(name))],\n    blockNumber,\n    blockTag,\n  })\n  return resolverAddress\n}\n","import type { Abi, AbiEvent, ExtractAbiEvent } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { Log } from '../../types/log.js'\nimport type { DecodeEventLogErrorType } from '../../utils/abi/decodeEventLog.js'\nimport { parseEventLogs } from '../../utils/abi/parseEventLogs.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type FormatLogErrorType,\n  formatLog,\n} from '../../utils/formatters/log.js'\n\nexport type GetFilterLogsParameters<\n  abi extends Abi | readonly unknown[] | undefined = undefined,\n  eventName extends string | undefined = undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n> = {\n  filter: Filter<'event', abi, eventName, any, strict, fromBlock, toBlock>\n}\nexport type GetFilterLogsReturnType<\n  abi extends Abi | readonly unknown[] | undefined = undefined,\n  eventName extends string | undefined = undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  _AbiEvent extends AbiEvent | undefined = abi extends Abi\n    ? eventName extends string\n      ? ExtractAbiEvent<abi, eventName>\n      : undefined\n    : undefined,\n  _Pending extends boolean =\n    | (fromBlock extends 'pending' ? true : false)\n    | (toBlock extends 'pending' ? true : false),\n> = Log<bigint, number, _Pending, _AbiEvent, strict, abi, eventName>[]\n\nexport type GetFilterLogsErrorType =\n  | RequestErrorType\n  | DecodeEventLogErrorType\n  | FormatLogErrorType\n  | ErrorType\n\n/**\n * Returns a list of event logs since the filter was created.\n *\n * - Docs: https://viem.sh/docs/actions/public/getFilterLogs\n * - JSON-RPC Methods: [`eth_getFilterLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterlogs)\n *\n * `getFilterLogs` is only compatible with **event filters**.\n *\n * @param client - Client to use\n * @param parameters - {@link GetFilterLogsParameters}\n * @returns A list of event logs. {@link GetFilterLogsReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbiItem } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createEventFilter, getFilterLogs } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createEventFilter(client, {\n *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n *   event: parseAbiItem('event Transfer(address indexed, address indexed, uint256)'),\n * })\n * const logs = await getFilterLogs(client, { filter })\n */\nexport async function getFilterLogs<\n  chain extends Chain | undefined,\n  const abi extends Abi | readonly unknown[] | undefined,\n  eventName extends string | undefined,\n  strict extends boolean | undefined = undefined,\n  fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  toBlock extends BlockNumber | BlockTag | undefined = undefined,\n>(\n  _client: Client<Transport, chain>,\n  {\n    filter,\n  }: GetFilterLogsParameters<abi, eventName, strict, fromBlock, toBlock>,\n): Promise<\n  GetFilterLogsReturnType<abi, eventName, strict, fromBlock, toBlock>\n> {\n  const strict = filter.strict ?? false\n\n  const logs = await filter.request({\n    method: 'eth_getFilterLogs',\n    params: [filter.id],\n  })\n\n  const formattedLogs = logs.map((log) => formatLog(log))\n  if (!filter.abi)\n    return formattedLogs as GetFilterLogsReturnType<\n      abi,\n      eventName,\n      strict,\n      fromBlock,\n      toBlock\n    >\n  return parseEventLogs({\n    abi: filter.abi,\n    logs: formattedLogs,\n    strict,\n  }) as unknown as GetFilterLogsReturnType<\n    abi,\n    eventName,\n    strict,\n    fromBlock,\n    toBlock\n  >\n}\n","import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type GetStorageAtParameters = {\n  address: Address\n  slot: Hex\n} & (\n  | {\n      blockNumber?: undefined\n      blockTag?: BlockTag | undefined\n    }\n  | {\n      blockNumber?: bigint | undefined\n      blockTag?: undefined\n    }\n)\n\nexport type GetStorageAtReturnType = Hex | undefined\n\nexport type GetStorageAtErrorType =\n  | NumberToHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns the value from a storage slot at a given address.\n *\n * - Docs: https://viem.sh/docs/contract/getStorageAt\n * - JSON-RPC Methods: [`eth_getStorageAt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getstorageat)\n *\n * @param client - Client to use\n * @param parameters - {@link GetStorageAtParameters}\n * @returns The value of the storage slot. {@link GetStorageAtReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getStorageAt } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const code = await getStorageAt(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   slot: toHex(0),\n * })\n */\nexport async function getStorageAt<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  { address, blockNumber, blockTag = 'latest', slot }: GetStorageAtParameters,\n): Promise<GetStorageAtReturnType> {\n  const blockNumberHex =\n    blockNumber !== undefined ? numberToHex(blockNumber) : undefined\n  const data = await client.request({\n    method: 'eth_getStorageAt',\n    params: [address, slot, blockNumberHex || blockTag],\n  })\n  return data\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { FormattedTransactionReceipt } from '../../utils/formatters/transactionReceipt.js'\nimport { getAction } from '../../utils/getAction.js'\n\nimport {\n  type GetBlockNumberErrorType,\n  getBlockNumber,\n} from './getBlockNumber.js'\nimport {\n  type GetTransactionErrorType,\n  getTransaction,\n} from './getTransaction.js'\n\nexport type GetTransactionConfirmationsParameters<\n  chain extends Chain | undefined = Chain,\n> =\n  | {\n      /** The transaction hash. */\n      hash: Hash\n      transactionReceipt?: undefined\n    }\n  | {\n      hash?: undefined\n      /** The transaction receipt. */\n      transactionReceipt: FormattedTransactionReceipt<chain>\n    }\n\nexport type GetTransactionConfirmationsReturnType = bigint\n\nexport type GetTransactionConfirmationsErrorType =\n  | GetBlockNumberErrorType\n  | GetTransactionErrorType\n  | ErrorType\n\n/**\n * Returns the number of blocks passed (confirmations) since the transaction was processed on a block.\n *\n * - Docs: https://viem.sh/docs/actions/public/getTransactionConfirmations\n * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_fetching-transactions\n * - JSON-RPC Methods: [`eth_getTransactionConfirmations`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionConfirmations)\n *\n * @param client - Client to use\n * @param parameters - {@link GetTransactionConfirmationsParameters}\n * @returns The number of blocks passed since the transaction was processed. If confirmations is 0, then the Transaction has not been confirmed & processed yet. {@link GetTransactionConfirmationsReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getTransactionConfirmations } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const confirmations = await getTransactionConfirmations(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function getTransactionConfirmations<\n  chain extends Chain | undefined,\n>(\n  client: Client<Transport, chain>,\n  { hash, transactionReceipt }: GetTransactionConfirmationsParameters<chain>,\n): Promise<GetTransactionConfirmationsReturnType> {\n  const [blockNumber, transaction] = await Promise.all([\n    getAction(client, getBlockNumber, 'getBlockNumber')({}),\n    hash\n      ? getAction(client, getTransaction, 'getTransaction')({ hash })\n      : undefined,\n  ])\n  const transactionBlockNumber =\n    transactionReceipt?.blockNumber || transaction?.blockNumber\n  if (!transactionBlockNumber) return 0n\n  return blockNumber - transactionBlockNumber! + 1n\n}\n","import type { AbiStateMutability, Address, Narrow } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { multicall3Abi } from '../../constants/abis.js'\nimport { multicall3Bytecode } from '../../constants/contracts.js'\nimport { AbiDecodingZeroDataError } from '../../errors/abi.js'\nimport { BaseError } from '../../errors/base.js'\nimport { RawContractError } from '../../errors/contract.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { ContractFunctionParameters } from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type {\n  MulticallContracts,\n  MulticallResults,\n} from '../../types/multicall.js'\nimport {\n  type DecodeFunctionResultErrorType,\n  decodeFunctionResult,\n} from '../../utils/abi/decodeFunctionResult.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport {\n  type GetChainContractAddressErrorType,\n  getChainContractAddress,\n} from '../../utils/chain/getChainContractAddress.js'\nimport {\n  type GetContractErrorReturnType,\n  getContractError,\n} from '../../utils/errors/getContractError.js'\nimport { getAction } from '../../utils/getAction.js'\nimport type { CallParameters } from './call.js'\nimport { type ReadContractErrorType, readContract } from './readContract.js'\n\nexport type MulticallParameters<\n  contracts extends readonly unknown[] = readonly ContractFunctionParameters[],\n  allowFailure extends boolean = true,\n  options extends {\n    optional?: boolean\n    properties?: Record<string, any>\n  } = {},\n> = Pick<\n  CallParameters,\n  | 'authorizationList'\n  | 'blockNumber'\n  | 'blockOverrides'\n  | 'blockTag'\n  | 'stateOverride'\n> & {\n  /** The account to use for the multicall. */\n  account?: Address | undefined\n  /** Whether to allow failures. */\n  allowFailure?: allowFailure | boolean | undefined\n  /** The size of each batch of calls. */\n  batchSize?: number | undefined\n  /** Enable deployless multicall. */\n  deployless?: boolean | undefined\n  /** The contracts to call. */\n  contracts: MulticallContracts<\n    Narrow<contracts>,\n    { mutability: AbiStateMutability } & options\n  >\n  /** The address of the multicall3 contract to use. */\n  multicallAddress?: Address | undefined\n}\n\nexport type MulticallReturnType<\n  contracts extends readonly unknown[] = readonly ContractFunctionParameters[],\n  allowFailure extends boolean = true,\n  options extends {\n    error?: Error\n  } = { error: Error },\n> = MulticallResults<\n  Narrow<contracts>,\n  allowFailure,\n  { mutability: AbiStateMutability } & options\n>\n\nexport type MulticallErrorType =\n  | GetChainContractAddressErrorType\n  | ReadContractErrorType\n  | GetContractErrorReturnType<\n      EncodeFunctionDataErrorType | DecodeFunctionResultErrorType\n    >\n  | ErrorType\n\n/**\n * Similar to [`readContract`](https://viem.sh/docs/contract/readContract), but batches up multiple functions on a contract in a single RPC call via the [`multicall3` contract](https://github.com/mds1/multicall).\n *\n * - Docs: https://viem.sh/docs/contract/multicall\n *\n * @param client - Client to use\n * @param parameters - {@link MulticallParameters}\n * @returns An array of results with accompanying status. {@link MulticallReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { multicall } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const abi = parseAbi([\n *   'function balanceOf(address) view returns (uint256)',\n *   'function totalSupply() view returns (uint256)',\n * ])\n * const results = await multicall(client, {\n *   contracts: [\n *     {\n *       address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *       abi,\n *       functionName: 'balanceOf',\n *       args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],\n *     },\n *     {\n *       address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *       abi,\n *       functionName: 'totalSupply',\n *     },\n *   ],\n * })\n * // [{ result: 424122n, status: 'success' }, { result: 1000000n, status: 'success' }]\n */\nexport async function multicall<\n  const contracts extends readonly unknown[],\n  chain extends Chain | undefined,\n  allowFailure extends boolean = true,\n>(\n  client: Client<Transport, chain>,\n  parameters: MulticallParameters<contracts, allowFailure>,\n): Promise<MulticallReturnType<contracts, allowFailure>> {\n  const {\n    account,\n    authorizationList,\n    allowFailure = true,\n    blockNumber,\n    blockOverrides,\n    blockTag,\n    stateOverride,\n  } = parameters\n  const contracts = parameters.contracts as ContractFunctionParameters[]\n\n  const {\n    batchSize = parameters.batchSize ?? 1024,\n    deployless = parameters.deployless ?? false,\n  } = typeof client.batch?.multicall === 'object' ? client.batch.multicall : {}\n\n  const multicallAddress = (() => {\n    if (parameters.multicallAddress) return parameters.multicallAddress\n    if (deployless) return null\n    if (client.chain) {\n      return getChainContractAddress({\n        blockNumber,\n        chain: client.chain,\n        contract: 'multicall3',\n      })\n    }\n    throw new Error(\n      'client chain not configured. multicallAddress is required.',\n    )\n  })()\n\n  type Aggregate3Calls = {\n    allowFailure: boolean\n    callData: Hex\n    target: Address\n  }[]\n\n  const chunkedCalls: Aggregate3Calls[] = [[]]\n  let currentChunk = 0\n  let currentChunkSize = 0\n  for (let i = 0; i < contracts.length; i++) {\n    const { abi, address, args, functionName } = contracts[i]\n    try {\n      const callData = encodeFunctionData({ abi, args, functionName })\n\n      currentChunkSize += (callData.length - 2) / 2\n      // Check to see if we need to create a new chunk.\n      if (\n        // Check if batching is enabled.\n        batchSize > 0 &&\n        // Check if the current size of the batch exceeds the size limit.\n        currentChunkSize > batchSize &&\n        // Check if the current chunk is not already empty.\n        chunkedCalls[currentChunk].length > 0\n      ) {\n        currentChunk++\n        currentChunkSize = (callData.length - 2) / 2\n        chunkedCalls[currentChunk] = []\n      }\n\n      chunkedCalls[currentChunk] = [\n        ...chunkedCalls[currentChunk],\n        {\n          allowFailure: true,\n          callData,\n          target: address,\n        },\n      ]\n    } catch (err) {\n      const error = getContractError(err as BaseError, {\n        abi,\n        address,\n        args,\n        docsPath: '/docs/contract/multicall',\n        functionName,\n        sender: account,\n      })\n      if (!allowFailure) throw error\n      chunkedCalls[currentChunk] = [\n        ...chunkedCalls[currentChunk],\n        {\n          allowFailure: true,\n          callData: '0x' as Hex,\n          target: address,\n        },\n      ]\n    }\n  }\n\n  const aggregate3Results = await Promise.allSettled(\n    chunkedCalls.map((calls) =>\n      getAction(\n        client,\n        readContract,\n        'readContract',\n      )({\n        ...(multicallAddress === null\n          ? { code: multicall3Bytecode }\n          : { address: multicallAddress }),\n        abi: multicall3Abi,\n        account,\n        args: [calls],\n        authorizationList,\n        blockNumber,\n        blockOverrides,\n        blockTag,\n        functionName: 'aggregate3',\n        stateOverride,\n      }),\n    ),\n  )\n\n  const results = []\n  for (let i = 0; i < aggregate3Results.length; i++) {\n    const result = aggregate3Results[i]\n\n    // If an error occurred in a `readContract` invocation (ie. network error),\n    // then append the failure reason to each contract result.\n    if (result.status === 'rejected') {\n      if (!allowFailure) throw result.reason\n      for (let j = 0; j < chunkedCalls[i].length; j++) {\n        results.push({\n          status: 'failure',\n          error: result.reason,\n          result: undefined,\n        })\n      }\n      continue\n    }\n\n    // If the `readContract` call was successful, then decode the results.\n    const aggregate3Result = result.value\n    for (let j = 0; j < aggregate3Result.length; j++) {\n      // Extract the response from `readContract`\n      const { returnData, success } = aggregate3Result[j]\n\n      // Extract the request call data from the original call.\n      const { callData } = chunkedCalls[i][j]\n\n      // Extract the contract config for this call from the `contracts` argument\n      // for decoding.\n      const { abi, address, functionName, args } = contracts[\n        results.length\n      ] as ContractFunctionParameters\n\n      try {\n        if (callData === '0x') throw new AbiDecodingZeroDataError()\n        if (!success) throw new RawContractError({ data: returnData })\n        const result = decodeFunctionResult({\n          abi,\n          args,\n          data: returnData,\n          functionName,\n        })\n        results.push(allowFailure ? { result, status: 'success' } : result)\n      } catch (err) {\n        const error = getContractError(err as BaseError, {\n          abi,\n          address,\n          args,\n          docsPath: '/docs/contract/multicall',\n          functionName,\n        })\n        if (!allowFailure) throw error\n        results.push({ error, result: undefined, status: 'failure' })\n      }\n    }\n  }\n\n  if (results.length !== contracts.length)\n    throw new BaseError('multicall results mismatch')\n  return results as MulticallReturnType<contracts, allowFailure>\n}\n","import type { Abi, AbiFunction, AbiStateMutability, Address } from 'abitype'\n\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { BaseError } from '../../errors/base.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account, ParseAccount } from '../../types/account.js'\nimport type { Chain, DeriveChain } from '../../types/chain.js'\nimport type {\n  ContractFunctionArgs,\n  ContractFunctionName,\n  ContractFunctionParameters,\n  ContractFunctionReturnType,\n  ExtractAbiFunctionForArgs,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { TransactionRequest } from '../../types/transaction.js'\nimport type {\n  IsNarrowable,\n  NoInfer,\n  Prettify,\n  UnionEvaluate,\n  UnionOmit,\n} from '../../types/utils.js'\nimport {\n  type DecodeFunctionResultErrorType,\n  decodeFunctionResult,\n} from '../../utils/abi/decodeFunctionResult.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport {\n  type GetContractErrorReturnType,\n  getContractError,\n} from '../../utils/errors/getContractError.js'\nimport { getAction } from '../../utils/getAction.js'\nimport type { WriteContractParameters } from '../wallet/writeContract.js'\nimport { type CallErrorType, type CallParameters, call } from './call.js'\n\nexport type GetMutabilityAwareValue<\n  abi extends Abi | readonly unknown[],\n  mutability extends AbiStateMutability = AbiStateMutability,\n  functionName extends ContractFunctionName<\n    abi,\n    mutability\n  > = ContractFunctionName<abi, mutability>,\n  valueType = TransactionRequest['value'],\n  args extends ContractFunctionArgs<\n    abi,\n    mutability,\n    functionName\n  > = ContractFunctionArgs<abi, mutability, functionName>,\n  abiFunction extends AbiFunction = abi extends Abi\n    ? ExtractAbiFunctionForArgs<abi, mutability, functionName, args>\n    : AbiFunction,\n  _Narrowable extends boolean = IsNarrowable<abi, Abi>,\n> = _Narrowable extends true\n  ? abiFunction['stateMutability'] extends 'payable'\n    ? { value?: NoInfer<valueType> | undefined }\n    : abiFunction['payable'] extends true\n      ? { value?: NoInfer<valueType> | undefined }\n      : { value?: undefined }\n  : { value?: NoInfer<valueType> | undefined }\n\nexport type SimulateContractParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  functionName extends ContractFunctionName<\n    abi,\n    'nonpayable' | 'payable'\n  > = ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n  args extends ContractFunctionArgs<\n    abi,\n    'nonpayable' | 'payable',\n    functionName\n  > = ContractFunctionArgs<abi, 'nonpayable' | 'payable', functionName>,\n  chain extends Chain | undefined = Chain | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  accountOverride extends Account | Address | null | undefined = undefined,\n  ///\n  derivedChain extends Chain | undefined = DeriveChain<chain, chainOverride>,\n> = {\n  account?: accountOverride | null | undefined\n  chain?: chainOverride | undefined\n  /** Data to append to the end of the calldata. Useful for adding a [\"domain\" tag](https://opensea.notion.site/opensea/Seaport-Order-Attributions-ec2d69bf455041a5baa490941aad307f). */\n  dataSuffix?: Hex | undefined\n} & ContractFunctionParameters<\n  abi,\n  'nonpayable' | 'payable',\n  functionName,\n  args\n> &\n  UnionOmit<\n    CallParameters<derivedChain>,\n    | 'account'\n    | 'batch'\n    | 'code'\n    | 'to'\n    | 'data'\n    | 'factory'\n    | 'factoryData'\n    | 'value'\n  > &\n  GetMutabilityAwareValue<\n    abi,\n    'nonpayable' | 'payable',\n    functionName,\n    CallParameters<derivedChain> extends CallParameters\n      ? CallParameters<derivedChain>['value']\n      : CallParameters['value'],\n    args\n  >\n\nexport type SimulateContractReturnType<\n  out abi extends Abi | readonly unknown[] = Abi,\n  in out functionName extends ContractFunctionName<\n    abi,\n    'nonpayable' | 'payable'\n  > = ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n  in out args extends ContractFunctionArgs<\n    abi,\n    'nonpayable' | 'payable',\n    functionName\n  > = ContractFunctionArgs<abi, 'nonpayable' | 'payable', functionName>,\n  /** @ts-expect-error cast variance */\n  out chain extends Chain | undefined = Chain | undefined,\n  out account extends Account | undefined = Account | undefined,\n  out chainOverride extends Chain | undefined = Chain | undefined,\n  out accountOverride extends Account | Address | null | undefined =\n    | Account\n    | Address\n    | null\n    | undefined,\n  ///\n  in out minimizedAbi extends Abi = readonly [\n    ExtractAbiFunctionForArgs<\n      abi extends Abi ? abi : Abi,\n      'nonpayable' | 'payable',\n      functionName,\n      args\n    >,\n  ],\n  out resolvedAccount extends\n    | Account\n    | null\n    | undefined = accountOverride extends Account | Address | null\n    ? ParseAccount<accountOverride>\n    : account,\n> = {\n  result: ContractFunctionReturnType<\n    minimizedAbi,\n    'nonpayable' | 'payable',\n    functionName,\n    args\n  >\n  request: Prettify<\n    UnionEvaluate<\n      UnionOmit<\n        WriteContractParameters<\n          minimizedAbi,\n          functionName,\n          args,\n          chain,\n          undefined,\n          chainOverride\n        >,\n        'account' | 'abi' | 'args' | 'chain' | 'functionName'\n      >\n    > &\n      ContractFunctionParameters<\n        minimizedAbi,\n        'nonpayable' | 'payable',\n        functionName,\n        args\n      > & {\n        chain: DeriveChain<chain, chainOverride>\n      } & (resolvedAccount extends Account | null\n        ? { account: resolvedAccount }\n        : { account?: undefined })\n  >\n}\n\nexport type SimulateContractErrorType =\n  | ParseAccountErrorType\n  | EncodeFunctionDataErrorType\n  | GetContractErrorReturnType<CallErrorType | DecodeFunctionResultErrorType>\n  | ErrorType\n\n/**\n * Simulates/validates a contract interaction. This is useful for retrieving **return data** and **revert reasons** of contract write functions.\n *\n * - Docs: https://viem.sh/docs/contract/simulateContract\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts_writing-to-contracts\n *\n * This function does not require gas to execute and _**does not**_ change the state of the blockchain. It is almost identical to [`readContract`](https://viem.sh/docs/contract/readContract), but also supports contract write functions.\n *\n * Internally, uses a [Public Client](https://viem.sh/docs/clients/public) to call the [`call` action](https://viem.sh/docs/actions/public/call) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\n *\n * @param client - Client to use\n * @param parameters - {@link SimulateContractParameters}\n * @returns The simulation result and write request. {@link SimulateContractReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { simulateContract } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const result = await simulateContract(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['function mint(uint32) view returns (uint32)']),\n *   functionName: 'mint',\n *   args: ['69420'],\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n */\nexport async function simulateContract<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n  const abi extends Abi | readonly unknown[],\n  functionName extends ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n  const args extends ContractFunctionArgs<\n    abi,\n    'nonpayable' | 'payable',\n    functionName\n  >,\n  chainOverride extends Chain | undefined = undefined,\n  accountOverride extends Account | Address | null | undefined = undefined,\n>(\n  client: Client<Transport, chain, account>,\n  parameters: SimulateContractParameters<\n    abi,\n    functionName,\n    args,\n    chain,\n    chainOverride,\n    accountOverride\n  >,\n): Promise<\n  SimulateContractReturnType<\n    abi,\n    functionName,\n    args,\n    chain,\n    account,\n    chainOverride,\n    accountOverride\n  >\n> {\n  const { abi, address, args, dataSuffix, functionName, ...callRequest } =\n    parameters as SimulateContractParameters\n\n  const account = callRequest.account\n    ? parseAccount(callRequest.account)\n    : client.account\n  const calldata = encodeFunctionData({ abi, args, functionName })\n  try {\n    const { data } = await getAction(\n      client,\n      call,\n      'call',\n    )({\n      batch: false,\n      data: `${calldata}${dataSuffix ? dataSuffix.replace('0x', '') : ''}`,\n      to: address,\n      ...callRequest,\n      account,\n    })\n    const result = decodeFunctionResult({\n      abi,\n      args,\n      functionName,\n      data: data || '0x',\n    })\n    const minimizedAbi = abi.filter(\n      (abiItem) =>\n        'name' in abiItem && abiItem.name === parameters.functionName,\n    )\n    return {\n      result,\n      request: {\n        abi: minimizedAbi,\n        address,\n        args,\n        dataSuffix,\n        functionName,\n        ...callRequest,\n        account,\n      },\n    } as unknown as SimulateContractReturnType<\n      abi,\n      functionName,\n      args,\n      chain,\n      account,\n      chainOverride,\n      accountOverride\n    >\n  } catch (error) {\n    throw getContractError(error as BaseError, {\n      abi,\n      address,\n      args,\n      docsPath: '/docs/contract/simulateContract',\n      functionName,\n      sender: account?.address,\n    })\n  }\n}\n","import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ByteArray,\n  Hex,\n  SignableMessage,\n  Signature,\n} from '../../types/misc.js'\nimport type { Prettify } from '../../types/utils.js'\nimport type { HashMessageErrorType } from '../../utils/signature/hashMessage.js'\nimport { hashMessage } from '../../utils/signature/hashMessage.js'\nimport {\n  type VerifyHashErrorType,\n  type VerifyHashParameters,\n  verifyHash,\n} from './verifyHash.js'\n\nexport type VerifyMessageParameters = Prettify<\n  Omit<VerifyHashParameters, 'hash'> & {\n    /** The address that signed the original message. */\n    address: Address\n    /** The message to be verified. */\n    message: SignableMessage\n    /** The signature that was generated by signing the message with the address's private key. */\n    signature: Hex | ByteArray | Signature\n  }\n>\n\nexport type VerifyMessageReturnType = boolean\n\nexport type VerifyMessageErrorType =\n  | HashMessageErrorType\n  | VerifyHashErrorType\n  | ErrorType\n\n/**\n * Verify that a message was signed by the provided address.\n *\n * Compatible with Smart Contract Accounts & Externally Owned Accounts via [ERC-6492](https://eips.ethereum.org/EIPS/eip-6492).\n *\n * - Docs {@link https://viem.sh/docs/actions/public/verifyMessage}\n *\n * @param client - Client to use.\n * @param parameters - {@link VerifyMessageParameters}\n * @returns Whether or not the signature is valid. {@link VerifyMessageReturnType}\n */\nexport async function verifyMessage<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  {\n    address,\n    message,\n    factory,\n    factoryData,\n    signature,\n    ...callRequest\n  }: VerifyMessageParameters,\n): Promise<VerifyMessageReturnType> {\n  const hash = hashMessage(message)\n  return verifyHash(client, {\n    address,\n    factory: factory!,\n    factoryData: factoryData!,\n    hash,\n    signature,\n    ...callRequest,\n  })\n}\n","import type { Address, TypedData } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { ByteArray, Hex, Signature } from '../../types/misc.js'\nimport type { TypedDataDefinition } from '../../types/typedData.js'\nimport {\n  type HashTypedDataErrorType,\n  hashTypedData,\n} from '../../utils/signature/hashTypedData.js'\nimport {\n  type VerifyHashErrorType,\n  type VerifyHashParameters,\n  verifyHash,\n} from './verifyHash.js'\n\nexport type VerifyTypedDataParameters<\n  typedData extends TypedData | Record<string, unknown> = TypedData,\n  primaryType extends keyof typedData | 'EIP712Domain' = keyof typedData,\n> = Omit<VerifyHashParameters, 'hash'> &\n  TypedDataDefinition<typedData, primaryType> & {\n    /** The address to verify the typed data for. */\n    address: Address\n    /** The signature to verify */\n    signature: Hex | ByteArray | Signature\n  }\n\nexport type VerifyTypedDataReturnType = boolean\n\nexport type VerifyTypedDataErrorType =\n  | HashTypedDataErrorType\n  | VerifyHashErrorType\n  | ErrorType\n\n/**\n * Verify that typed data was signed by the provided address.\n *\n * - Docs {@link https://viem.sh/docs/actions/public/verifyTypedData}\n *\n * @param client - Client to use.\n * @param parameters - {@link VerifyTypedDataParameters}\n * @returns Whether or not the signature is valid. {@link VerifyTypedDataReturnType}\n */\nexport async function verifyTypedData<\n  const typedData extends TypedData | Record<string, unknown>,\n  primaryType extends keyof typedData | 'EIP712Domain',\n  chain extends Chain | undefined,\n>(\n  client: Client<Transport, chain>,\n  parameters: VerifyTypedDataParameters<typedData, primaryType>,\n): Promise<VerifyTypedDataReturnType> {\n  const {\n    address,\n    factory,\n    factoryData,\n    signature,\n    message,\n    primaryType,\n    types,\n    domain,\n    ...callRequest\n  } = parameters as VerifyTypedDataParameters\n  const hash = hashTypedData({ message, primaryType, types, domain })\n  return verifyHash(client, {\n    address,\n    factory: factory!,\n    factoryData: factoryData!,\n    hash,\n    signature,\n    ...callRequest,\n  })\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { BlockNotFoundError } from '../../errors/block.js'\nimport {\n  TransactionNotFoundError,\n  TransactionReceiptNotFoundError,\n  WaitForTransactionReceiptTimeoutError,\n  type WaitForTransactionReceiptTimeoutErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { Transaction } from '../../types/transaction.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { type ObserveErrorType, observe } from '../../utils/observe.js'\nimport { withResolvers } from '../../utils/promise/withResolvers.js'\nimport {\n  type WithRetryParameters,\n  withRetry,\n} from '../../utils/promise/withRetry.js'\nimport { stringify } from '../../utils/stringify.js'\n\nimport { type GetBlockErrorType, getBlock } from './getBlock.js'\nimport {\n  type GetTransactionErrorType,\n  type GetTransactionReturnType,\n  getTransaction,\n} from './getTransaction.js'\nimport {\n  type GetTransactionReceiptErrorType,\n  type GetTransactionReceiptReturnType,\n  getTransactionReceipt,\n} from './getTransactionReceipt.js'\nimport {\n  type WatchBlockNumberErrorType,\n  watchBlockNumber,\n} from './watchBlockNumber.js'\n\nexport type ReplacementReason = 'cancelled' | 'replaced' | 'repriced'\nexport type ReplacementReturnType<\n  chain extends Chain | undefined = Chain | undefined,\n> = {\n  reason: ReplacementReason\n  replacedTransaction: Transaction\n  transaction: Transaction\n  transactionReceipt: GetTransactionReceiptReturnType<chain>\n}\n\nexport type WaitForTransactionReceiptReturnType<\n  chain extends Chain | undefined = Chain | undefined,\n> = GetTransactionReceiptReturnType<chain>\n\nexport type WaitForTransactionReceiptParameters<\n  chain extends Chain | undefined = Chain | undefined,\n> = {\n  /**\n   * Whether to check for transaction replacements.\n   * @default true\n   */\n  checkReplacement?: boolean | undefined\n  /**\n   * The number of confirmations (blocks that have passed) to wait before resolving.\n   * @default 1\n   */\n  confirmations?: number | undefined\n  /** The hash of the transaction. */\n  hash: Hash\n  /** Optional callback to emit if the transaction has been replaced. */\n  onReplaced?: ((response: ReplacementReturnType<chain>) => void) | undefined\n  /**\n   * Polling frequency (in ms). Defaults to the client's pollingInterval config.\n   * @default client.pollingInterval\n   */\n  pollingInterval?: number | undefined\n  /**\n   * Number of times to retry if the transaction or block is not found.\n   * @default 6 (exponential backoff)\n   */\n  retryCount?: WithRetryParameters['retryCount'] | undefined\n  /**\n   * Time to wait (in ms) between retries.\n   * @default `({ count }) => ~~(1 << count) * 200` (exponential backoff)\n   */\n  retryDelay?: WithRetryParameters['delay'] | undefined\n  /**\n   * Optional timeout (in milliseconds) to wait before stopping polling.\n   * @default 180_000\n   */\n  timeout?: number | undefined\n}\n\nexport type WaitForTransactionReceiptErrorType =\n  | ObserveErrorType\n  | GetBlockErrorType\n  | GetTransactionErrorType\n  | GetTransactionReceiptErrorType\n  | WatchBlockNumberErrorType\n  | WaitForTransactionReceiptTimeoutErrorType\n  | ErrorType\n\n/**\n * Waits for the [Transaction](https://viem.sh/docs/glossary/terms#transaction) to be included on a [Block](https://viem.sh/docs/glossary/terms#block) (one confirmation), and then returns the [Transaction Receipt](https://viem.sh/docs/glossary/terms#transaction-receipt).\n *\n * - Docs: https://viem.sh/docs/actions/public/waitForTransactionReceipt\n * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_sending-transactions\n * - JSON-RPC Methods:\n *   - Polls [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt) on each block until it has been processed.\n *   - If a Transaction has been replaced:\n *     - Calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber) and extracts the transactions\n *     - Checks if one of the Transactions is a replacement\n *     - If so, calls [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt).\n *\n * The `waitForTransactionReceipt` action additionally supports Replacement detection (e.g. sped up Transactions).\n *\n * Transactions can be replaced when a user modifies their transaction in their wallet (to speed up or cancel). Transactions are replaced when they are sent from the same nonce.\n *\n * There are 3 types of Transaction Replacement reasons:\n *\n * - `repriced`: The gas price has been modified (e.g. different `maxFeePerGas`)\n * - `cancelled`: The Transaction has been cancelled (e.g. `value === 0n`)\n * - `replaced`: The Transaction has been replaced (e.g. different `value` or `data`)\n *\n * @param client - Client to use\n * @param parameters - {@link WaitForTransactionReceiptParameters}\n * @returns The transaction receipt. {@link WaitForTransactionReceiptReturnType}\n *\n * @example\n * import { createPublicClient, waitForTransactionReceipt, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const transactionReceipt = await waitForTransactionReceipt(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function waitForTransactionReceipt<\n  chain extends Chain | undefined,\n>(\n  client: Client<Transport, chain>,\n  parameters: WaitForTransactionReceiptParameters<chain>,\n): Promise<WaitForTransactionReceiptReturnType<chain>> {\n  const {\n    checkReplacement = true,\n    confirmations = 1,\n    hash,\n    onReplaced,\n    retryCount = 6,\n    retryDelay = ({ count }) => ~~(1 << count) * 200, // exponential backoff\n    timeout = 180_000,\n  } = parameters\n\n  const observerId = stringify(['waitForTransactionReceipt', client.uid, hash])\n\n  const pollingInterval = (() => {\n    if (parameters.pollingInterval) return parameters.pollingInterval\n    if (client.chain?.experimental_preconfirmationTime)\n      return client.chain.experimental_preconfirmationTime\n    return client.pollingInterval\n  })()\n\n  let transaction: GetTransactionReturnType<chain> | undefined\n  let replacedTransaction: GetTransactionReturnType<chain> | undefined\n  let receipt: GetTransactionReceiptReturnType<chain> | undefined\n  let retrying = false\n\n  let _unobserve: () => void\n  let _unwatch: () => void\n\n  const { promise, resolve, reject } =\n    withResolvers<WaitForTransactionReceiptReturnType<chain>>()\n\n  const timer = timeout\n    ? setTimeout(() => {\n        _unwatch?.()\n        _unobserve?.()\n        reject(new WaitForTransactionReceiptTimeoutError({ hash }))\n      }, timeout)\n    : undefined\n\n  _unobserve = observe(\n    observerId,\n    { onReplaced, resolve, reject },\n    async (emit) => {\n      receipt = await getAction(\n        client,\n        getTransactionReceipt,\n        'getTransactionReceipt',\n      )({ hash }).catch(() => undefined)\n\n      if (receipt && confirmations <= 1) {\n        clearTimeout(timer)\n        emit.resolve(receipt)\n        _unobserve?.()\n        return\n      }\n\n      _unwatch = getAction(\n        client,\n        watchBlockNumber,\n        'watchBlockNumber',\n      )({\n        emitMissed: true,\n        emitOnBegin: true,\n        poll: true,\n        pollingInterval,\n        async onBlockNumber(blockNumber_) {\n          const done = (fn: () => void) => {\n            clearTimeout(timer)\n            _unwatch?.()\n            fn()\n            _unobserve?.()\n          }\n\n          let blockNumber = blockNumber_\n\n          if (retrying) return\n\n          try {\n            // If we already have a valid receipt, let's check if we have enough\n            // confirmations. If we do, then we can resolve.\n            if (receipt) {\n              if (\n                confirmations > 1 &&\n                (!receipt.blockNumber ||\n                  blockNumber - receipt.blockNumber + 1n < confirmations)\n              )\n                return\n\n              done(() => emit.resolve(receipt!))\n              return\n            }\n\n            // Get the transaction to check if it's been replaced.\n            // We need to retry as some RPC Providers may be slow to sync\n            // up mined transactions.\n            if (checkReplacement && !transaction) {\n              retrying = true\n              await withRetry(\n                async () => {\n                  transaction = (await getAction(\n                    client,\n                    getTransaction,\n                    'getTransaction',\n                  )({ hash })) as GetTransactionReturnType<chain>\n                  if (transaction.blockNumber)\n                    blockNumber = transaction.blockNumber\n                },\n                {\n                  delay: retryDelay,\n                  retryCount,\n                },\n              )\n              retrying = false\n            }\n\n            // Get the receipt to check if it's been processed.\n            receipt = await getAction(\n              client,\n              getTransactionReceipt,\n              'getTransactionReceipt',\n            )({ hash })\n\n            // Check if we have enough confirmations. If not, continue polling.\n            if (\n              confirmations > 1 &&\n              (!receipt.blockNumber ||\n                blockNumber - receipt.blockNumber + 1n < confirmations)\n            )\n              return\n\n            done(() => emit.resolve(receipt!))\n          } catch (err) {\n            // If the receipt is not found, the transaction will be pending.\n            // We need to check if it has potentially been replaced.\n            if (\n              err instanceof TransactionNotFoundError ||\n              err instanceof TransactionReceiptNotFoundError\n            ) {\n              if (!transaction) {\n                retrying = false\n                return\n              }\n\n              try {\n                replacedTransaction = transaction\n\n                // Let's retrieve the transactions from the current block.\n                // We need to retry as some RPC Providers may be slow to sync\n                // up mined blocks.\n                retrying = true\n                const block = await withRetry(\n                  () =>\n                    getAction(\n                      client,\n                      getBlock,\n                      'getBlock',\n                    )({\n                      blockNumber,\n                      includeTransactions: true,\n                    }),\n                  {\n                    delay: retryDelay,\n                    retryCount,\n                    shouldRetry: ({ error }) =>\n                      error instanceof BlockNotFoundError,\n                  },\n                )\n                retrying = false\n\n                const replacementTransaction = (\n                  block.transactions as {} as Transaction[]\n                ).find(\n                  ({ from, nonce }) =>\n                    from === replacedTransaction!.from &&\n                    nonce === replacedTransaction!.nonce,\n                )\n\n                // If we couldn't find a replacement transaction, continue polling.\n                if (!replacementTransaction) return\n\n                // If we found a replacement transaction, return it's receipt.\n                receipt = await getAction(\n                  client,\n                  getTransactionReceipt,\n                  'getTransactionReceipt',\n                )({\n                  hash: replacementTransaction.hash,\n                })\n\n                // Check if we have enough confirmations. If not, continue polling.\n                if (\n                  confirmations > 1 &&\n                  (!receipt.blockNumber ||\n                    blockNumber - receipt.blockNumber + 1n < confirmations)\n                )\n                  return\n\n                let reason: ReplacementReason = 'replaced'\n                if (\n                  replacementTransaction.to === replacedTransaction.to &&\n                  replacementTransaction.value === replacedTransaction.value &&\n                  replacementTransaction.input === replacedTransaction.input\n                ) {\n                  reason = 'repriced'\n                } else if (\n                  replacementTransaction.from === replacementTransaction.to &&\n                  replacementTransaction.value === 0n\n                ) {\n                  reason = 'cancelled'\n                }\n\n                done(() => {\n                  emit.onReplaced?.({\n                    reason,\n                    replacedTransaction: replacedTransaction! as any,\n                    transaction: replacementTransaction,\n                    transactionReceipt: receipt!,\n                  })\n                  emit.resolve(receipt!)\n                })\n              } catch (err_) {\n                done(() => emit.reject(err_))\n              }\n            } else {\n              done(() => emit.reject(err))\n            }\n          }\n        },\n      })\n    },\n  )\n\n  return promise\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { HasTransportType } from '../../types/transport.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { observe } from '../../utils/observe.js'\nimport { type PollErrorType, poll } from '../../utils/poll.js'\nimport { type StringifyErrorType, stringify } from '../../utils/stringify.js'\n\nimport { type GetBlockReturnType, getBlock } from './getBlock.js'\n\nexport type OnBlockParameter<\n  chain extends Chain | undefined = Chain,\n  includeTransactions extends boolean = false,\n  blockTag extends BlockTag = 'latest',\n> = GetBlockReturnType<chain, includeTransactions, blockTag>\n\nexport type OnBlock<\n  chain extends Chain | undefined = Chain,\n  includeTransactions extends boolean = false,\n  blockTag extends BlockTag = 'latest',\n> = (\n  block: OnBlockParameter<chain, includeTransactions, blockTag>,\n  prevBlock: OnBlockParameter<chain, includeTransactions, blockTag> | undefined,\n) => void\n\nexport type WatchBlocksParameters<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain,\n  includeTransactions extends boolean = false,\n  blockTag extends BlockTag = 'latest',\n> = {\n  /** The callback to call when a new block is received. */\n  onBlock: OnBlock<chain, includeTransactions, blockTag>\n  /** The callback to call when an error occurred when trying to get for a new block. */\n  onError?: ((error: Error) => void) | undefined\n} & (\n  | (HasTransportType<transport, 'webSocket' | 'ipc'> extends true\n      ? {\n          blockTag?: undefined\n          emitMissed?: undefined\n          emitOnBegin?: undefined\n          includeTransactions?: undefined\n          /** Whether or not the WebSocket Transport should poll the JSON-RPC, rather than using `eth_subscribe`. */\n          poll?: false | undefined\n          pollingInterval?: undefined\n        }\n      : never)\n  | {\n      /** The block tag. Defaults to \"latest\". */\n      blockTag?: blockTag | BlockTag | undefined\n      /** Whether or not to emit the missed blocks to the callback. */\n      emitMissed?: boolean | undefined\n      /** Whether or not to emit the block to the callback when the subscription opens. */\n      emitOnBegin?: boolean | undefined\n      /** Whether or not to include transaction data in the response. */\n      includeTransactions?: includeTransactions | undefined\n      poll?: true | undefined\n      /** Polling frequency (in ms). Defaults to the client's pollingInterval config. */\n      pollingInterval?: number | undefined\n    }\n)\n\nexport type WatchBlocksReturnType = () => void\n\nexport type WatchBlocksErrorType =\n  | StringifyErrorType\n  | PollErrorType\n  | ErrorType\n\n/**\n * Watches and returns information for incoming blocks.\n *\n * - Docs: https://viem.sh/docs/actions/public/watchBlocks\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks_watching-blocks\n * - JSON-RPC Methods:\n *   - When `poll: true`, calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getBlockByNumber) on a polling interval.\n *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newHeads\"` event.\n *\n * @param client - Client to use\n * @param parameters - {@link WatchBlocksParameters}\n * @returns A function that can be invoked to stop watching for new block numbers. {@link WatchBlocksReturnType}\n *\n * @example\n * import { createPublicClient, watchBlocks, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const unwatch = watchBlocks(client, {\n *   onBlock: (block) => console.log(block),\n * })\n */\nexport function watchBlocks<\n  transport extends Transport,\n  chain extends Chain | undefined,\n  includeTransactions extends boolean = false,\n  blockTag extends BlockTag = 'latest',\n>(\n  client: Client<transport, chain>,\n  {\n    blockTag = client.experimental_blockTag ?? 'latest',\n    emitMissed = false,\n    emitOnBegin = false,\n    onBlock,\n    onError,\n    includeTransactions: includeTransactions_,\n    poll: poll_,\n    pollingInterval = client.pollingInterval,\n  }: WatchBlocksParameters<transport, chain, includeTransactions, blockTag>,\n): WatchBlocksReturnType {\n  const enablePolling = (() => {\n    if (typeof poll_ !== 'undefined') return poll_\n    if (\n      client.transport.type === 'webSocket' ||\n      client.transport.type === 'ipc'\n    )\n      return false\n    if (\n      client.transport.type === 'fallback' &&\n      (client.transport.transports[0].config.type === 'webSocket' ||\n        client.transport.transports[0].config.type === 'ipc')\n    )\n      return false\n    return true\n  })()\n  const includeTransactions = includeTransactions_ ?? false\n\n  let prevBlock:\n    | GetBlockReturnType<chain, false | includeTransactions, 'latest'>\n    | undefined\n\n  const pollBlocks = () => {\n    const observerId = stringify([\n      'watchBlocks',\n      client.uid,\n      blockTag,\n      emitMissed,\n      emitOnBegin,\n      includeTransactions,\n      pollingInterval,\n    ])\n\n    return observe(observerId, { onBlock, onError }, (emit) =>\n      poll(\n        async () => {\n          try {\n            const block = await getAction(\n              client,\n              getBlock,\n              'getBlock',\n            )({\n              blockTag,\n              includeTransactions,\n            })\n            if (block.number !== null && prevBlock?.number != null) {\n              // If the current block number is the same as the previous,\n              // we can skip.\n              if (block.number === prevBlock.number) return\n\n              // If we have missed out on some previous blocks, and the\n              // `emitMissed` flag is truthy, let's emit those blocks.\n              if (block.number - prevBlock.number > 1 && emitMissed) {\n                for (let i = prevBlock?.number + 1n; i < block.number; i++) {\n                  const block = (await getAction(\n                    client,\n                    getBlock,\n                    'getBlock',\n                  )({\n                    blockNumber: i,\n                    includeTransactions,\n                  })) as GetBlockReturnType<chain>\n                  emit.onBlock(block as any, prevBlock as any)\n                  prevBlock = block\n                }\n              }\n            }\n\n            if (\n              // If no previous block exists, emit.\n              prevBlock?.number == null ||\n              // If the block tag is \"pending\" with no block number, emit.\n              (blockTag === 'pending' && block?.number == null) ||\n              // If the next block number is greater than the previous block number, emit.\n              // We don't want to emit blocks in the past.\n              (block.number !== null && block.number > prevBlock.number)\n            ) {\n              emit.onBlock(block as any, prevBlock as any)\n              prevBlock = block as any\n            }\n          } catch (err) {\n            emit.onError?.(err as Error)\n          }\n        },\n        {\n          emitOnBegin,\n          interval: pollingInterval,\n        },\n      ),\n    )\n  }\n\n  const subscribeBlocks = () => {\n    let active = true\n    let emitFetched = true\n    let unsubscribe = () => (active = false)\n    ;(async () => {\n      try {\n        if (emitOnBegin) {\n          getAction(\n            client,\n            getBlock,\n            'getBlock',\n          )({\n            blockTag,\n            includeTransactions,\n          })\n            .then((block) => {\n              if (!active) return\n              if (!emitFetched) return\n              onBlock(block as any, undefined)\n              emitFetched = false\n            })\n            .catch(onError)\n        }\n\n        const transport = (() => {\n          if (client.transport.type === 'fallback') {\n            const transport = client.transport.transports.find(\n              (transport: ReturnType<Transport>) =>\n                transport.config.type === 'webSocket' ||\n                transport.config.type === 'ipc',\n            )\n            if (!transport) return client.transport\n            return transport.value\n          }\n          return client.transport\n        })()\n\n        const { unsubscribe: unsubscribe_ } = await transport.subscribe({\n          params: ['newHeads'],\n          async onData(data: any) {\n            if (!active) return\n            const block = (await getAction(\n              client,\n              getBlock,\n              'getBlock',\n            )({\n              blockNumber: data.result?.number,\n              includeTransactions,\n            }).catch(() => {})) as GetBlockReturnType<chain>\n            if (!active) return\n            onBlock(block as any, prevBlock as any)\n            emitFetched = false\n            prevBlock = block\n          },\n          onError(error: Error) {\n            onError?.(error)\n          },\n        })\n        unsubscribe = unsubscribe_\n        if (!active) unsubscribe()\n      } catch (err) {\n        onError?.(err as Error)\n      }\n    })()\n    return () => unsubscribe()\n  }\n\n  return enablePolling ? pollBlocks() : subscribeBlocks()\n}\n","import type { Abi, Address, ExtractAbiEvent } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  DecodeLogDataMismatch,\n  DecodeLogTopicsMismatch,\n} from '../../errors/abi.js'\nimport { InvalidInputRpcError } from '../../errors/rpc.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockNumber } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ContractEventArgs,\n  ContractEventName,\n} from '../../types/contract.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { Log } from '../../types/log.js'\nimport type { LogTopic } from '../../types/misc.js'\nimport type { GetPollOptions } from '../../types/transport.js'\nimport { decodeEventLog } from '../../utils/abi/decodeEventLog.js'\nimport {\n  type EncodeEventTopicsParameters,\n  encodeEventTopics,\n} from '../../utils/abi/encodeEventTopics.js'\nimport { formatLog } from '../../utils/formatters/log.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { type ObserveErrorType, observe } from '../../utils/observe.js'\nimport { poll } from '../../utils/poll.js'\nimport { type StringifyErrorType, stringify } from '../../utils/stringify.js'\nimport { createContractEventFilter } from './createContractEventFilter.js'\nimport { getBlockNumber } from './getBlockNumber.js'\nimport {\n  type GetContractEventsParameters,\n  getContractEvents,\n} from './getContractEvents.js'\nimport { getFilterChanges } from './getFilterChanges.js'\nimport { uninstallFilter } from './uninstallFilter.js'\n\nexport type WatchContractEventOnLogsParameter<\n  abi extends Abi | readonly unknown[] = Abi,\n  eventName extends ContractEventName<abi> = ContractEventName<abi>,\n  strict extends boolean | undefined = undefined,\n> = abi extends Abi\n  ? Abi extends abi\n    ? Log[]\n    : Log<bigint, number, false, ExtractAbiEvent<abi, eventName>, strict>[]\n  : Log[]\n\nexport type WatchContractEventOnLogsFn<\n  abi extends Abi | readonly unknown[] = Abi,\n  eventName extends ContractEventName<abi> = ContractEventName<abi>,\n  strict extends boolean | undefined = undefined,\n> = (logs: WatchContractEventOnLogsParameter<abi, eventName, strict>) => void\n\nexport type WatchContractEventParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  eventName extends ContractEventName<abi> | undefined = ContractEventName<abi>,\n  strict extends boolean | undefined = undefined,\n  transport extends Transport = Transport,\n> = {\n  /** The address of the contract. */\n  address?: Address | Address[] | undefined\n  /** Contract ABI. */\n  abi: abi\n  args?:\n    | ContractEventArgs<\n        abi,\n        eventName extends ContractEventName<abi>\n          ? eventName\n          : ContractEventName<abi>\n      >\n    | undefined\n  /** Contract event. */\n  eventName?: eventName | ContractEventName<abi> | undefined\n  /** Block to start listening from. */\n  fromBlock?: BlockNumber<bigint> | undefined\n  /** The callback to call when an error occurred when trying to get for a new block. */\n  onError?: ((error: Error) => void) | undefined\n  /** The callback to call when new event logs are received. */\n  onLogs: WatchContractEventOnLogsFn<\n    abi,\n    eventName extends ContractEventName<abi>\n      ? eventName\n      : ContractEventName<abi>,\n    strict\n  >\n  /**\n   * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n   * @default false\n   */\n  strict?: strict | boolean | undefined\n} & GetPollOptions<transport>\n\nexport type WatchContractEventReturnType = () => void\n\nexport type WatchContractEventErrorType =\n  | StringifyErrorType\n  | ObserveErrorType\n  | ErrorType\n\n/**\n * Watches and returns emitted contract event logs.\n *\n * - Docs: https://viem.sh/docs/contract/watchContractEvent\n *\n * This Action will batch up all the event logs found within the [`pollingInterval`](https://viem.sh/docs/contract/watchContractEvent#pollinginterval-optional), and invoke them via [`onLogs`](https://viem.sh/docs/contract/watchContractEvent#onLogs).\n *\n * `watchContractEvent` will attempt to create an [Event Filter](https://viem.sh/docs/contract/createContractEventFilter) and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (e.g. `eth_newFilter`), then `watchContractEvent` will fall back to using [`getLogs`](https://viem.sh/docs/actions/public/getLogs) instead.\n *\n * @param client - Client to use\n * @param parameters - {@link WatchContractEventParameters}\n * @returns A function that can be invoked to stop watching for new event logs. {@link WatchContractEventReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { watchContractEvent } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const unwatch = watchContractEvent(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['event Transfer(address indexed from, address indexed to, uint256 value)']),\n *   eventName: 'Transfer',\n *   args: { from: '0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b' },\n *   onLogs: (logs) => console.log(logs),\n * })\n */\nexport function watchContractEvent<\n  chain extends Chain | undefined,\n  const abi extends Abi | readonly unknown[],\n  eventName extends ContractEventName<abi> | undefined = undefined,\n  strict extends boolean | undefined = undefined,\n  transport extends Transport = Transport,\n>(\n  client: Client<transport, chain>,\n  parameters: WatchContractEventParameters<abi, eventName, strict, transport>,\n): WatchContractEventReturnType {\n  const {\n    abi,\n    address,\n    args,\n    batch = true,\n    eventName,\n    fromBlock,\n    onError,\n    onLogs,\n    poll: poll_,\n    pollingInterval = client.pollingInterval,\n    strict: strict_,\n  } = parameters\n\n  const enablePolling = (() => {\n    if (typeof poll_ !== 'undefined') return poll_\n    if (typeof fromBlock === 'bigint') return true\n    if (\n      client.transport.type === 'webSocket' ||\n      client.transport.type === 'ipc'\n    )\n      return false\n    if (\n      client.transport.type === 'fallback' &&\n      (client.transport.transports[0].config.type === 'webSocket' ||\n        client.transport.transports[0].config.type === 'ipc')\n    )\n      return false\n    return true\n  })()\n\n  const pollContractEvent = () => {\n    const strict = strict_ ?? false\n    const observerId = stringify([\n      'watchContractEvent',\n      address,\n      args,\n      batch,\n      client.uid,\n      eventName,\n      pollingInterval,\n      strict,\n      fromBlock,\n    ])\n\n    return observe(observerId, { onLogs, onError }, (emit) => {\n      let previousBlockNumber: bigint\n      if (fromBlock !== undefined) previousBlockNumber = fromBlock - 1n\n      let filter: Filter<'event', abi, eventName> | undefined\n      let initialized = false\n\n      const unwatch = poll(\n        async () => {\n          if (!initialized) {\n            try {\n              filter = (await getAction(\n                client,\n                createContractEventFilter,\n                'createContractEventFilter',\n              )({\n                abi,\n                address,\n                args: args as any,\n                eventName: eventName as any,\n                strict: strict as any,\n                fromBlock,\n              })) as Filter<'event', abi, eventName>\n            } catch {}\n            initialized = true\n            return\n          }\n\n          try {\n            let logs: Log[]\n            if (filter) {\n              logs = await getAction(\n                client,\n                getFilterChanges,\n                'getFilterChanges',\n              )({ filter })\n            } else {\n              // If the filter doesn't exist, we will fall back to use `getLogs`.\n              // The fall back exists because some RPC Providers do not support filters.\n\n              // Fetch the block number to use for `getLogs`.\n              const blockNumber = await getAction(\n                client,\n                getBlockNumber,\n                'getBlockNumber',\n              )({})\n\n              // If the block number has changed, we will need to fetch the logs.\n              // If the block number doesn't exist, we are yet to reach the first poll interval,\n              // so do not emit any logs.\n              if (previousBlockNumber && previousBlockNumber < blockNumber) {\n                logs = await getAction(\n                  client,\n                  getContractEvents,\n                  'getContractEvents',\n                )({\n                  abi,\n                  address,\n                  args,\n                  eventName,\n                  fromBlock: previousBlockNumber + 1n,\n                  toBlock: blockNumber,\n                  strict,\n                } as {} as GetContractEventsParameters)\n              } else {\n                logs = []\n              }\n              previousBlockNumber = blockNumber\n            }\n\n            if (logs.length === 0) return\n            if (batch) emit.onLogs(logs as any)\n            else for (const log of logs) emit.onLogs([log] as any)\n          } catch (err) {\n            // If a filter has been set and gets uninstalled, providers will throw an InvalidInput error.\n            // Reinitialize the filter when this occurs\n            if (filter && err instanceof InvalidInputRpcError)\n              initialized = false\n            emit.onError?.(err as Error)\n          }\n        },\n        {\n          emitOnBegin: true,\n          interval: pollingInterval,\n        },\n      )\n\n      return async () => {\n        if (filter)\n          await getAction(\n            client,\n            uninstallFilter,\n            'uninstallFilter',\n          )({ filter })\n        unwatch()\n      }\n    })\n  }\n\n  const subscribeContractEvent = () => {\n    const strict = strict_ ?? false\n    const observerId = stringify([\n      'watchContractEvent',\n      address,\n      args,\n      batch,\n      client.uid,\n      eventName,\n      pollingInterval,\n      strict,\n    ])\n\n    let active = true\n    let unsubscribe = () => (active = false)\n    return observe(observerId, { onLogs, onError }, (emit) => {\n      ;(async () => {\n        try {\n          const transport = (() => {\n            if (client.transport.type === 'fallback') {\n              const transport = client.transport.transports.find(\n                (transport: ReturnType<Transport>) =>\n                  transport.config.type === 'webSocket' ||\n                  transport.config.type === 'ipc',\n              )\n              if (!transport) return client.transport\n              return transport.value\n            }\n            return client.transport\n          })()\n\n          const topics: LogTopic[] = eventName\n            ? encodeEventTopics({\n                abi: abi,\n                eventName: eventName,\n                args,\n              } as EncodeEventTopicsParameters)\n            : []\n\n          const { unsubscribe: unsubscribe_ } = await transport.subscribe({\n            params: ['logs', { address, topics }],\n            onData(data: any) {\n              if (!active) return\n              const log = data.result\n              try {\n                const { eventName, args } = decodeEventLog({\n                  abi: abi,\n                  data: log.data,\n                  topics: log.topics as any,\n                  strict: strict_,\n                })\n                const formatted = formatLog(log, {\n                  args,\n                  eventName: eventName as string,\n                })\n                emit.onLogs([formatted] as any)\n              } catch (err) {\n                let eventName: string | undefined\n                let isUnnamed: boolean | undefined\n                if (\n                  err instanceof DecodeLogDataMismatch ||\n                  err instanceof DecodeLogTopicsMismatch\n                ) {\n                  // If strict mode is on, and log data/topics do not match event definition, skip.\n                  if (strict_) return\n                  eventName = err.abiItem.name\n                  isUnnamed = err.abiItem.inputs?.some(\n                    (x) => !('name' in x && x.name),\n                  )\n                }\n\n                // Set args to empty if there is an error decoding (e.g. indexed/non-indexed params mismatch).\n                const formatted = formatLog(log, {\n                  args: isUnnamed ? [] : {},\n                  eventName,\n                })\n                emit.onLogs([formatted] as any)\n              }\n            },\n            onError(error: Error) {\n              emit.onError?.(error)\n            },\n          })\n          unsubscribe = unsubscribe_\n          if (!active) unsubscribe()\n        } catch (err) {\n          onError?.(err as Error)\n        }\n      })()\n      return () => unsubscribe()\n    })\n  }\n\n  return enablePolling ? pollContractEvent() : subscribeContractEvent()\n}\n","import type { AbiEvent, Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  DecodeLogDataMismatch,\n  DecodeLogTopicsMismatch,\n} from '../../errors/abi.js'\nimport { InvalidInputRpcError } from '../../errors/rpc.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockNumber } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  MaybeAbiEventName,\n  MaybeExtractEventArgsFromAbi,\n} from '../../types/contract.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { Log } from '../../types/log.js'\nimport type { LogTopic } from '../../types/misc.js'\nimport type { GetPollOptions } from '../../types/transport.js'\nimport { decodeEventLog } from '../../utils/abi/decodeEventLog.js'\nimport {\n  type EncodeEventTopicsParameters,\n  encodeEventTopics,\n} from '../../utils/abi/encodeEventTopics.js'\nimport { formatLog } from '../../utils/formatters/log.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { type ObserveErrorType, observe } from '../../utils/observe.js'\nimport { poll } from '../../utils/poll.js'\nimport { type StringifyErrorType, stringify } from '../../utils/stringify.js'\nimport {\n  type CreateEventFilterParameters,\n  createEventFilter,\n} from './createEventFilter.js'\nimport { getBlockNumber } from './getBlockNumber.js'\nimport { getFilterChanges } from './getFilterChanges.js'\nimport { type GetLogsParameters, getLogs } from './getLogs.js'\nimport { uninstallFilter } from './uninstallFilter.js'\n\nexport type WatchEventOnLogsParameter<\n  abiEvent extends AbiEvent | undefined = undefined,\n  abiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n  strict extends boolean | undefined = undefined,\n  eventName extends string | undefined = MaybeAbiEventName<abiEvent>,\n> = Log<bigint, number, false, abiEvent, strict, abiEvents, eventName>[]\nexport type WatchEventOnLogsFn<\n  abiEvent extends AbiEvent | undefined = undefined,\n  abiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n  strict extends boolean | undefined = undefined,\n  //\n  _eventName extends string | undefined = MaybeAbiEventName<abiEvent>,\n> = (\n  logs: WatchEventOnLogsParameter<abiEvent, abiEvents, strict, _eventName>,\n) => void\n\nexport type WatchEventParameters<\n  abiEvent extends AbiEvent | undefined = undefined,\n  abiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n  strict extends boolean | undefined = undefined,\n  transport extends Transport = Transport,\n  //\n  _eventName extends string | undefined = MaybeAbiEventName<abiEvent>,\n> = {\n  /** The address of the contract. */\n  address?: Address | Address[] | undefined\n  /** Block to start listening from. */\n  fromBlock?: BlockNumber<bigint> | undefined\n  /** The callback to call when an error occurred when trying to get for a new block. */\n  onError?: ((error: Error) => void) | undefined\n  /** The callback to call when new event logs are received. */\n  onLogs: WatchEventOnLogsFn<abiEvent, abiEvents, strict, _eventName>\n} & GetPollOptions<transport> &\n  (\n    | {\n        event: abiEvent\n        events?: undefined\n        args?: MaybeExtractEventArgsFromAbi<abiEvents, _eventName> | undefined\n        /**\n         * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n         * @default false\n         */\n        strict?: strict | undefined\n      }\n    | {\n        event?: undefined\n        events?: abiEvents | undefined\n        args?: undefined\n        /**\n         * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n         * @default false\n         */\n        strict?: strict | undefined\n      }\n    | {\n        event?: undefined\n        events?: undefined\n        args?: undefined\n        strict?: undefined\n      }\n  )\n\nexport type WatchEventReturnType = () => void\n\nexport type WatchEventErrorType =\n  | StringifyErrorType\n  | ObserveErrorType\n  | ErrorType\n\n/**\n * Watches and returns emitted [Event Logs](https://viem.sh/docs/glossary/terms#event-log).\n *\n * - Docs: https://viem.sh/docs/actions/public/watchEvent\n * - JSON-RPC Methods:\n *   - **RPC Provider supports `eth_newFilter`:**\n *     - Calls [`eth_newFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter) to create a filter (called on initialize).\n *     - On a polling interval, it will call [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterchanges).\n *   - **RPC Provider does not support `eth_newFilter`:**\n *     - Calls [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs) for each block between the polling interval.\n *\n * This Action will batch up all the Event Logs found within the [`pollingInterval`](https://viem.sh/docs/actions/public/watchEvent#pollinginterval-optional), and invoke them via [`onLogs`](https://viem.sh/docs/actions/public/watchEvent#onLogs).\n *\n * `watchEvent` will attempt to create an [Event Filter](https://viem.sh/docs/actions/public/createEventFilter) and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (e.g. `eth_newFilter`), then `watchEvent` will fall back to using [`getLogs`](https://viem.sh/docs/actions/public/getLogs) instead.\n *\n * @param client - Client to use\n * @param parameters - {@link WatchEventParameters}\n * @returns A function that can be invoked to stop watching for new Event Logs. {@link WatchEventReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { watchEvent } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const unwatch = watchEvent(client, {\n *   onLogs: (logs) => console.log(logs),\n * })\n */\nexport function watchEvent<\n  chain extends Chain | undefined,\n  const abiEvent extends AbiEvent | undefined = undefined,\n  const abiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n  strict extends boolean | undefined = undefined,\n  transport extends Transport = Transport,\n  _eventName extends string | undefined = undefined,\n>(\n  client: Client<transport, chain>,\n  {\n    address,\n    args,\n    batch = true,\n    event,\n    events,\n    fromBlock,\n    onError,\n    onLogs,\n    poll: poll_,\n    pollingInterval = client.pollingInterval,\n    strict: strict_,\n  }: WatchEventParameters<abiEvent, abiEvents, strict, transport>,\n): WatchEventReturnType {\n  const enablePolling = (() => {\n    if (typeof poll_ !== 'undefined') return poll_\n    if (typeof fromBlock === 'bigint') return true\n    if (\n      client.transport.type === 'webSocket' ||\n      client.transport.type === 'ipc'\n    )\n      return false\n    if (\n      client.transport.type === 'fallback' &&\n      (client.transport.transports[0].config.type === 'webSocket' ||\n        client.transport.transports[0].config.type === 'ipc')\n    )\n      return false\n    return true\n  })()\n  const strict = strict_ ?? false\n\n  const pollEvent = () => {\n    const observerId = stringify([\n      'watchEvent',\n      address,\n      args,\n      batch,\n      client.uid,\n      event,\n      pollingInterval,\n      fromBlock,\n    ])\n\n    return observe(observerId, { onLogs, onError }, (emit) => {\n      let previousBlockNumber: bigint\n      if (fromBlock !== undefined) previousBlockNumber = fromBlock - 1n\n      let filter: Filter<'event', abiEvents, _eventName, any>\n      let initialized = false\n\n      const unwatch = poll(\n        async () => {\n          if (!initialized) {\n            try {\n              filter = (await getAction(\n                client,\n                createEventFilter as any,\n                'createEventFilter',\n              )({\n                address,\n                args,\n                event: event!,\n                events,\n                strict,\n                fromBlock,\n              } as unknown as CreateEventFilterParameters)) as unknown as Filter<\n                'event',\n                abiEvents,\n                _eventName\n              >\n            } catch {}\n            initialized = true\n            return\n          }\n\n          try {\n            let logs: Log[]\n            if (filter) {\n              logs = await getAction(\n                client,\n                getFilterChanges,\n                'getFilterChanges',\n              )({ filter })\n            } else {\n              // If the filter doesn't exist, we will fall back to use `getLogs`.\n              // The fall back exists because some RPC Providers do not support filters.\n\n              // Fetch the block number to use for `getLogs`.\n              const blockNumber = await getAction(\n                client,\n                getBlockNumber,\n                'getBlockNumber',\n              )({})\n\n              // If the block number has changed, we will need to fetch the logs.\n              // If the block number doesn't exist, we are yet to reach the first poll interval,\n              // so do not emit any logs.\n              if (previousBlockNumber && previousBlockNumber !== blockNumber) {\n                logs = await getAction(\n                  client,\n                  getLogs,\n                  'getLogs',\n                )({\n                  address,\n                  args,\n                  event: event!,\n                  events,\n                  fromBlock: previousBlockNumber + 1n,\n                  toBlock: blockNumber,\n                } as unknown as GetLogsParameters)\n              } else {\n                logs = []\n              }\n              previousBlockNumber = blockNumber\n            }\n\n            if (logs.length === 0) return\n            if (batch) emit.onLogs(logs as any)\n            else for (const log of logs) emit.onLogs([log] as any)\n          } catch (err) {\n            // If a filter has been set and gets uninstalled, providers will throw an InvalidInput error.\n            // Reinitialize the filter when this occurs\n            if (filter && err instanceof InvalidInputRpcError)\n              initialized = false\n            emit.onError?.(err as Error)\n          }\n        },\n        {\n          emitOnBegin: true,\n          interval: pollingInterval,\n        },\n      )\n\n      return async () => {\n        if (filter)\n          await getAction(\n            client,\n            uninstallFilter,\n            'uninstallFilter',\n          )({ filter })\n        unwatch()\n      }\n    })\n  }\n\n  const subscribeEvent = () => {\n    let active = true\n    let unsubscribe = () => (active = false)\n    ;(async () => {\n      try {\n        const transport = (() => {\n          if (client.transport.type === 'fallback') {\n            const transport = client.transport.transports.find(\n              (transport: ReturnType<Transport>) =>\n                transport.config.type === 'webSocket' ||\n                transport.config.type === 'ipc',\n            )\n            if (!transport) return client.transport\n            return transport.value\n          }\n          return client.transport\n        })()\n\n        const events_ = events ?? (event ? [event] : undefined)\n        let topics: LogTopic[] = []\n        if (events_) {\n          const encoded = (events_ as AbiEvent[]).flatMap((event) =>\n            encodeEventTopics({\n              abi: [event],\n              eventName: (event as AbiEvent).name,\n              args,\n            } as EncodeEventTopicsParameters),\n          )\n          // TODO: Clean up type casting\n          topics = [encoded as LogTopic]\n          if (event) topics = topics[0] as LogTopic[]\n        }\n\n        const { unsubscribe: unsubscribe_ } = await transport.subscribe({\n          params: ['logs', { address, topics }],\n          onData(data: any) {\n            if (!active) return\n            const log = data.result\n            try {\n              const { eventName, args } = decodeEventLog({\n                abi: events_ ?? [],\n                data: log.data,\n                topics: log.topics,\n                strict,\n              })\n              const formatted = formatLog(log, { args, eventName })\n              onLogs([formatted] as any)\n            } catch (err) {\n              let eventName: string | undefined\n              let isUnnamed: boolean | undefined\n              if (\n                err instanceof DecodeLogDataMismatch ||\n                err instanceof DecodeLogTopicsMismatch\n              ) {\n                // If strict mode is on, and log data/topics do not match event definition, skip.\n                if (strict_) return\n                eventName = err.abiItem.name\n                isUnnamed = err.abiItem.inputs?.some(\n                  (x) => !('name' in x && x.name),\n                )\n              }\n\n              // Set args to empty if there is an error decoding (e.g. indexed/non-indexed params mismatch).\n              const formatted = formatLog(log, {\n                args: isUnnamed ? [] : {},\n                eventName,\n              })\n              onLogs([formatted] as any)\n            }\n          },\n          onError(error: Error) {\n            onError?.(error)\n          },\n        })\n        unsubscribe = unsubscribe_\n        if (!active) unsubscribe()\n      } catch (err) {\n        onError?.(err as Error)\n      }\n    })()\n    return () => unsubscribe()\n  }\n\n  return enablePolling ? pollEvent() : subscribeEvent()\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { GetPollOptions } from '../../types/transport.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { type ObserveErrorType, observe } from '../../utils/observe.js'\nimport { poll } from '../../utils/poll.js'\nimport { type StringifyErrorType, stringify } from '../../utils/stringify.js'\n\nimport { createPendingTransactionFilter } from './createPendingTransactionFilter.js'\nimport { getFilterChanges } from './getFilterChanges.js'\nimport { uninstallFilter } from './uninstallFilter.js'\n\nexport type OnTransactionsParameter = Hash[]\nexport type OnTransactionsFn = (transactions: OnTransactionsParameter) => void\n\nexport type WatchPendingTransactionsParameters<\n  transport extends Transport = Transport,\n> = {\n  /** The callback to call when an error occurred when trying to get for a new block. */\n  onError?: ((error: Error) => void) | undefined\n  /** The callback to call when new transactions are received. */\n  onTransactions: OnTransactionsFn\n} & GetPollOptions<transport>\n\nexport type WatchPendingTransactionsReturnType = () => void\n\nexport type WatchPendingTransactionsErrorType =\n  | StringifyErrorType\n  | ObserveErrorType\n  | ErrorType\n\n/**\n * Watches and returns pending transaction hashes.\n *\n * - Docs: https://viem.sh/docs/actions/public/watchPendingTransactions\n * - JSON-RPC Methods:\n *   - When `poll: true`\n *     - Calls [`eth_newPendingTransactionFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newpendingtransactionfilter) to initialize the filter.\n *     - Calls [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getFilterChanges) on a polling interval.\n *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newPendingTransactions\"` event.\n *\n * This Action will batch up all the pending transactions found within the [`pollingInterval`](https://viem.sh/docs/actions/public/watchPendingTransactions#pollinginterval-optional), and invoke them via [`onTransactions`](https://viem.sh/docs/actions/public/watchPendingTransactions#ontransactions).\n *\n * @param client - Client to use\n * @param parameters - {@link WatchPendingTransactionsParameters}\n * @returns A function that can be invoked to stop watching for new pending transaction hashes. {@link WatchPendingTransactionsReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { watchPendingTransactions } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const unwatch = await watchPendingTransactions(client, {\n *   onTransactions: (hashes) => console.log(hashes),\n * })\n */\nexport function watchPendingTransactions<\n  transport extends Transport,\n  chain extends Chain | undefined,\n>(\n  client: Client<transport, chain>,\n  {\n    batch = true,\n    onError,\n    onTransactions,\n    poll: poll_,\n    pollingInterval = client.pollingInterval,\n  }: WatchPendingTransactionsParameters<transport>,\n) {\n  const enablePolling =\n    typeof poll_ !== 'undefined'\n      ? poll_\n      : client.transport.type !== 'webSocket' && client.transport.type !== 'ipc'\n\n  const pollPendingTransactions = () => {\n    const observerId = stringify([\n      'watchPendingTransactions',\n      client.uid,\n      batch,\n      pollingInterval,\n    ])\n    return observe(observerId, { onTransactions, onError }, (emit) => {\n      let filter: Filter<'transaction'>\n\n      const unwatch = poll(\n        async () => {\n          try {\n            if (!filter) {\n              try {\n                filter = await getAction(\n                  client,\n                  createPendingTransactionFilter,\n                  'createPendingTransactionFilter',\n                )({})\n                return\n              } catch (err) {\n                unwatch()\n                throw err\n              }\n            }\n\n            const hashes = await getAction(\n              client,\n              getFilterChanges,\n              'getFilterChanges',\n            )({ filter })\n            if (hashes.length === 0) return\n            if (batch) emit.onTransactions(hashes)\n            else for (const hash of hashes) emit.onTransactions([hash])\n          } catch (err) {\n            emit.onError?.(err as Error)\n          }\n        },\n        {\n          emitOnBegin: true,\n          interval: pollingInterval,\n        },\n      )\n\n      return async () => {\n        if (filter)\n          await getAction(\n            client,\n            uninstallFilter,\n            'uninstallFilter',\n          )({ filter })\n        unwatch()\n      }\n    })\n  }\n\n  const subscribePendingTransactions = () => {\n    let active = true\n    let unsubscribe = () => (active = false)\n    ;(async () => {\n      try {\n        const { unsubscribe: unsubscribe_ } = await client.transport.subscribe({\n          params: ['newPendingTransactions'],\n          onData(data: any) {\n            if (!active) return\n            const transaction = data.result\n            onTransactions([transaction])\n          },\n          onError(error: Error) {\n            onError?.(error)\n          },\n        })\n        unsubscribe = unsubscribe_\n        if (!active) unsubscribe()\n      } catch (err) {\n        onError?.(err as Error)\n      }\n    })()\n    return () => unsubscribe()\n  }\n\n  return enablePolling\n    ? pollPendingTransactions()\n    : subscribePendingTransactions()\n}\n","import type { Address } from 'abitype'\nimport type { ErrorType } from '../errors/utils.js'\nimport type { Account, ParseAccount } from '../types/account.js'\nimport type { Chain } from '../types/chain.js'\nimport type { PublicRpcSchema, RpcSchema } from '../types/eip1193.js'\nimport type { Prettify } from '../types/utils.js'\nimport {\n  type Client,\n  type ClientConfig,\n  type CreateClientErrorType,\n  createClient,\n} from './createClient.js'\nimport { type PublicActions, publicActions } from './decorators/public.js'\nimport type { Transport } from './transports/createTransport.js'\n\nexport type PublicClientConfig<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  accountOrAddress extends Account | Address | undefined = undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n> = Prettify<\n  Pick<\n    ClientConfig<transport, chain, accountOrAddress, rpcSchema>,\n    | 'batch'\n    | 'cacheTime'\n    | 'ccipRead'\n    | 'chain'\n    | 'experimental_blockTag'\n    | 'key'\n    | 'name'\n    | 'pollingInterval'\n    | 'rpcSchema'\n    | 'transport'\n  >\n>\n\nexport type PublicClient<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  accountOrAddress extends Account | undefined = undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n> = Prettify<\n  Client<\n    transport,\n    chain,\n    accountOrAddress,\n    rpcSchema extends RpcSchema\n      ? [...PublicRpcSchema, ...rpcSchema]\n      : PublicRpcSchema,\n    PublicActions<transport, chain>\n  >\n>\n\nexport type CreatePublicClientErrorType = CreateClientErrorType | ErrorType\n\n/**\n * Creates a Public Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\n *\n * - Docs: https://viem.sh/docs/clients/public\n *\n * A Public Client is an interface to \"public\" [JSON-RPC API](https://ethereum.org/en/developers/docs/apis/json-rpc/) methods such as retrieving block numbers, transactions, reading from smart contracts, etc through [Public Actions](/docs/actions/public/introduction).\n *\n * @param config - {@link PublicClientConfig}\n * @returns A Public Client. {@link PublicClient}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n */\nexport function createPublicClient<\n  transport extends Transport,\n  chain extends Chain | undefined = undefined,\n  accountOrAddress extends Account | Address | undefined = undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n>(\n  parameters: PublicClientConfig<transport, chain, accountOrAddress, rpcSchema>,\n): PublicClient<transport, chain, ParseAccount<accountOrAddress>, rpcSchema> {\n  const { key = 'public', name = 'Public Client' } = parameters\n  const client = createClient({\n    ...parameters,\n    key,\n    name,\n    type: 'publicClient',\n  })\n  return client.extend(publicActions) as any\n}\n","import { BaseError } from './base.js'\n\nexport type AccountNotFoundErrorType = AccountNotFoundError & {\n  name: 'AccountNotFoundError'\n}\nexport class AccountNotFoundError extends BaseError {\n  constructor({ docsPath }: { docsPath?: string | undefined } = {}) {\n    super(\n      [\n        'Could not find an Account to execute with this Action.',\n        'Please provide an Account with the `account` argument on the Action, or by supplying an `account` to the Client.',\n      ].join('\\n'),\n      {\n        docsPath,\n        docsSlug: 'account',\n        name: 'AccountNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AccountTypeNotSupportedErrorType = AccountTypeNotSupportedError & {\n  name: 'AccountTypeNotSupportedError'\n}\nexport class AccountTypeNotSupportedError extends BaseError {\n  constructor({\n    docsPath,\n    metaMessages,\n    type,\n  }: {\n    docsPath?: string | undefined\n    metaMessages?: string[] | undefined\n    type: string\n  }) {\n    super(`Account type \"${type}\" is not supported.`, {\n      docsPath,\n      metaMessages,\n      name: 'AccountTypeNotSupportedError',\n    })\n  }\n}\n","import {\n  ChainMismatchError,\n  type ChainMismatchErrorType,\n  ChainNotFoundError,\n  type ChainNotFoundErrorType,\n} from '../../errors/chain.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\n\nexport type AssertCurrentChainParameters = {\n  chain?: Chain | undefined\n  currentChainId: number\n}\n\nexport type AssertCurrentChainErrorType =\n  | ChainNotFoundErrorType\n  | ChainMismatchErrorType\n  | ErrorType\n\nexport function assertCurrentChain({\n  chain,\n  currentChainId,\n}: AssertCurrentChainParameters): void {\n  if (!chain) throw new ChainNotFoundError()\n  if (currentChainId !== chain.id)\n    throw new ChainMismatchError({ chain, currentChainId })\n}\n","import type { Account } from '../../accounts/types.js'\nimport type { SendTransactionParameters } from '../../actions/wallet/sendTransaction.js'\nimport type { BaseError } from '../../errors/base.js'\nimport { UnknownNodeError } from '../../errors/node.js'\nimport {\n  TransactionExecutionError,\n  type TransactionExecutionErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\n\nimport {\n  type GetNodeErrorParameters,\n  type GetNodeErrorReturnType,\n  getNodeError,\n} from './getNodeError.js'\n\nexport type GetTransactionErrorParameters = Omit<\n  SendTransactionParameters,\n  'account' | 'chain'\n> & {\n  account: Account | null\n  chain?: Chain | undefined\n  docsPath?: string | undefined\n}\n\nexport type GetTransactionErrorReturnType<cause = ErrorType> = Omit<\n  TransactionExecutionErrorType,\n  'cause'\n> & { cause: cause | GetNodeErrorReturnType }\n\nexport function getTransactionError<err extends ErrorType<string>>(\n  err: err,\n  { docsPath, ...args }: GetTransactionErrorParameters,\n): GetTransactionErrorReturnType<err> {\n  const cause = (() => {\n    const cause = getNodeError(\n      err as {} as BaseError,\n      args as GetNodeErrorParameters,\n    )\n    if (cause instanceof UnknownNodeError) return err as {} as BaseError\n    return cause\n  })()\n  return new TransactionExecutionError(cause, {\n    docsPath,\n    ...args,\n  }) as GetTransactionErrorReturnType<err>\n}\n","import type { Address } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { SignTransactionErrorType } from '../../accounts/utils/signTransaction.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  AccountNotFoundError,\n  type AccountNotFoundErrorType,\n  AccountTypeNotSupportedError,\n  type AccountTypeNotSupportedErrorType,\n} from '../../errors/account.js'\nimport { BaseError } from '../../errors/base.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { GetAccountParameter } from '../../types/account.js'\nimport type {\n  Chain,\n  DeriveChain,\n  GetChainParameter,\n} from '../../types/chain.js'\nimport type { GetTransactionRequestKzgParameter } from '../../types/kzg.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { TransactionRequest } from '../../types/transaction.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport {\n  type RecoverAuthorizationAddressErrorType,\n  recoverAuthorizationAddress,\n} from '../../utils/authorization/recoverAuthorizationAddress.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type AssertCurrentChainErrorType,\n  assertCurrentChain,\n} from '../../utils/chain/assertCurrentChain.js'\nimport {\n  type GetTransactionErrorReturnType,\n  getTransactionError,\n} from '../../utils/errors/getTransactionError.js'\nimport { extract } from '../../utils/formatters/extract.js'\nimport {\n  type FormattedTransactionRequest,\n  formatTransactionRequest,\n} from '../../utils/formatters/transactionRequest.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { LruMap } from '../../utils/lru.js'\nimport {\n  type AssertRequestErrorType,\n  type AssertRequestParameters,\n  assertRequest,\n} from '../../utils/transaction/assertRequest.js'\nimport { type GetChainIdErrorType, getChainId } from '../public/getChainId.js'\nimport {\n  defaultParameters,\n  type PrepareTransactionRequestErrorType,\n  prepareTransactionRequest,\n} from './prepareTransactionRequest.js'\nimport {\n  type SendRawTransactionErrorType,\n  sendRawTransaction,\n} from './sendRawTransaction.js'\n\nconst supportsWalletNamespace = new LruMap<boolean>(128)\n\nexport type SendTransactionRequest<\n  chain extends Chain | undefined = Chain | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  ///\n  _derivedChain extends Chain | undefined = DeriveChain<chain, chainOverride>,\n> = UnionOmit<FormattedTransactionRequest<_derivedChain>, 'from'> &\n  GetTransactionRequestKzgParameter\n\nexport type SendTransactionParameters<\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  request extends SendTransactionRequest<\n    chain,\n    chainOverride\n  > = SendTransactionRequest<chain, chainOverride>,\n> = request &\n  GetAccountParameter<account, Account | Address, true, true> &\n  GetChainParameter<chain, chainOverride> &\n  GetTransactionRequestKzgParameter<request>\n\nexport type SendTransactionReturnType = Hash\n\nexport type SendTransactionErrorType =\n  | ParseAccountErrorType\n  | GetTransactionErrorReturnType<\n      | AccountNotFoundErrorType\n      | AccountTypeNotSupportedErrorType\n      | AssertCurrentChainErrorType\n      | AssertRequestErrorType\n      | GetChainIdErrorType\n      | PrepareTransactionRequestErrorType\n      | SendRawTransactionErrorType\n      | RecoverAuthorizationAddressErrorType\n      | SignTransactionErrorType\n      | RequestErrorType\n    >\n  | ErrorType\n\n/**\n * Creates, signs, and sends a new transaction to the network.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/sendTransaction\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_sending-transactions\n * - JSON-RPC Methods:\n *   - JSON-RPC Accounts: [`eth_sendTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendtransaction)\n *   - Local Accounts: [`eth_sendRawTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendrawtransaction)\n *\n * @param client - Client to use\n * @param parameters - {@link SendTransactionParameters}\n * @returns The [Transaction](https://viem.sh/docs/glossary/terms#transaction) hash. {@link SendTransactionReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { sendTransaction } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const hash = await sendTransaction(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *   value: 1000000000000000000n,\n * })\n *\n * @example\n * // Account Hoisting\n * import { createWalletClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { sendTransaction } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x…'),\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const hash = await sendTransaction(client, {\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *   value: 1000000000000000000n,\n * })\n */\nexport async function sendTransaction<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n  const request extends SendTransactionRequest<chain, chainOverride>,\n  chainOverride extends Chain | undefined = undefined,\n>(\n  client: Client<Transport, chain, account>,\n  parameters: SendTransactionParameters<chain, account, chainOverride, request>,\n): Promise<SendTransactionReturnType> {\n  const {\n    account: account_ = client.account,\n    chain = client.chain,\n    accessList,\n    authorizationList,\n    blobs,\n    data,\n    gas,\n    gasPrice,\n    maxFeePerBlobGas,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    type,\n    value,\n    ...rest\n  } = parameters\n\n  if (typeof account_ === 'undefined')\n    throw new AccountNotFoundError({\n      docsPath: '/docs/actions/wallet/sendTransaction',\n    })\n  const account = account_ ? parseAccount(account_) : null\n\n  try {\n    assertRequest(parameters as AssertRequestParameters)\n\n    const to = await (async () => {\n      // If `to` exists on the parameters, use that.\n      if (parameters.to) return parameters.to\n\n      // If `to` is null, we are sending a deployment transaction.\n      if (parameters.to === null) return undefined\n\n      // If no `to` exists, and we are sending a EIP-7702 transaction, use the\n      // address of the first authorization in the list.\n      if (authorizationList && authorizationList.length > 0)\n        return await recoverAuthorizationAddress({\n          authorization: authorizationList[0],\n        }).catch(() => {\n          throw new BaseError(\n            '`to` is required. Could not infer from `authorizationList`.',\n          )\n        })\n\n      // Otherwise, we are sending a deployment transaction.\n      return undefined\n    })()\n\n    if (account?.type === 'json-rpc' || account === null) {\n      let chainId: number | undefined\n      if (chain !== null) {\n        chainId = await getAction(client, getChainId, 'getChainId')({})\n        assertCurrentChain({\n          currentChainId: chainId,\n          chain,\n        })\n      }\n\n      const chainFormat = client.chain?.formatters?.transactionRequest?.format\n      const format = chainFormat || formatTransactionRequest\n\n      const request = format({\n        // Pick out extra data that might exist on the chain's transaction request type.\n        ...extract(rest, { format: chainFormat }),\n        accessList,\n        authorizationList,\n        blobs,\n        chainId,\n        data,\n        from: account?.address,\n        gas,\n        gasPrice,\n        maxFeePerBlobGas,\n        maxFeePerGas,\n        maxPriorityFeePerGas,\n        nonce,\n        to,\n        type,\n        value,\n      } as TransactionRequest)\n\n      const isWalletNamespaceSupported = supportsWalletNamespace.get(client.uid)\n      const method = isWalletNamespaceSupported\n        ? 'wallet_sendTransaction'\n        : 'eth_sendTransaction'\n\n      try {\n        return await client.request(\n          {\n            method,\n            params: [request],\n          },\n          { retryCount: 0 },\n        )\n      } catch (e) {\n        if (isWalletNamespaceSupported === false) throw e\n\n        const error = e as BaseError\n        // If the transport does not support the method or input, attempt to use the\n        // `wallet_sendTransaction` method.\n        if (\n          error.name === 'InvalidInputRpcError' ||\n          error.name === 'InvalidParamsRpcError' ||\n          error.name === 'MethodNotFoundRpcError' ||\n          error.name === 'MethodNotSupportedRpcError'\n        ) {\n          return await client\n            .request(\n              {\n                method: 'wallet_sendTransaction',\n                params: [request],\n              },\n              { retryCount: 0 },\n            )\n            .then((hash) => {\n              supportsWalletNamespace.set(client.uid, true)\n              return hash\n            })\n            .catch((e) => {\n              const walletNamespaceError = e as BaseError\n              if (\n                walletNamespaceError.name === 'MethodNotFoundRpcError' ||\n                walletNamespaceError.name === 'MethodNotSupportedRpcError'\n              ) {\n                supportsWalletNamespace.set(client.uid, false)\n                throw error\n              }\n\n              throw walletNamespaceError\n            })\n        }\n\n        throw error\n      }\n    }\n\n    if (account?.type === 'local') {\n      // Prepare the request for signing (assign appropriate fees, etc.)\n      const request = await getAction(\n        client,\n        prepareTransactionRequest,\n        'prepareTransactionRequest',\n      )({\n        account,\n        accessList,\n        authorizationList,\n        blobs,\n        chain,\n        data,\n        gas,\n        gasPrice,\n        maxFeePerBlobGas,\n        maxFeePerGas,\n        maxPriorityFeePerGas,\n        nonce,\n        nonceManager: account.nonceManager,\n        parameters: [...defaultParameters, 'sidecars'],\n        type,\n        value,\n        ...rest,\n        to,\n      } as any)\n\n      const serializer = chain?.serializers?.transaction\n      const serializedTransaction = (await account.signTransaction(request, {\n        serializer,\n      })) as Hash\n      return await getAction(\n        client,\n        sendRawTransaction,\n        'sendRawTransaction',\n      )({\n        serializedTransaction,\n      })\n    }\n\n    if (account?.type === 'smart')\n      throw new AccountTypeNotSupportedError({\n        metaMessages: [\n          'Consider using the `sendUserOperation` Action instead.',\n        ],\n        docsPath: '/docs/actions/bundler/sendUserOperation',\n        type: 'smart',\n      })\n\n    throw new AccountTypeNotSupportedError({\n      docsPath: '/docs/actions/wallet/sendTransaction',\n      type: (account as any)?.type,\n    })\n  } catch (err) {\n    if (err instanceof AccountTypeNotSupportedError) throw err\n    throw getTransactionError(err as BaseError, {\n      ...parameters,\n      account,\n      chain: parameters.chain || undefined,\n    })\n  }\n}\n","import type { Address, Narrow } from 'abitype'\nimport { parseAccount } from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { BaseError } from '../../errors/base.js'\nimport {\n  AtomicityNotSupportedError,\n  UnsupportedNonOptionalCapabilityError,\n} from '../../errors/rpc.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account, GetAccountParameter } from '../../types/account.js'\nimport type { Call, Calls } from '../../types/calls.js'\nimport type { ExtractCapabilities } from '../../types/capabilities.js'\nimport type { Chain, DeriveChain } from '../../types/chain.js'\nimport type { WalletSendCallsParameters } from '../../types/eip1193.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { Prettify } from '../../types/utils.js'\nimport { encodeFunctionData } from '../../utils/abi/encodeFunctionData.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { concat } from '../../utils/data/concat.js'\nimport { hexToBigInt } from '../../utils/encoding/fromHex.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\nimport { getTransactionError } from '../../utils/errors/getTransactionError.js'\nimport { sendTransaction } from './sendTransaction.js'\n\nexport const fallbackMagicIdentifier =\n  '0x5792579257925792579257925792579257925792579257925792579257925792'\nexport const fallbackTransactionErrorMagicIdentifier = numberToHex(0, {\n  size: 32,\n})\n\nexport type SendCallsParameters<\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  calls extends readonly unknown[] = readonly unknown[],\n  //\n  _chain extends Chain | undefined = DeriveChain<chain, chainOverride>,\n> = {\n  chain?: chainOverride | Chain | undefined\n  calls: Calls<Narrow<calls>>\n  capabilities?: ExtractCapabilities<'sendCalls', 'Request'> | undefined\n  experimental_fallback?: boolean | undefined\n  experimental_fallbackDelay?: number | undefined\n  forceAtomic?: boolean | undefined\n  id?: string | undefined\n  version?: WalletSendCallsParameters[number]['version'] | undefined\n} & GetAccountParameter<account, Account | Address, false, true>\n\nexport type SendCallsReturnType = Prettify<{\n  capabilities?: ExtractCapabilities<'sendCalls', 'ReturnType'> | undefined\n  id: string\n}>\n\nexport type SendCallsErrorType = RequestErrorType | ErrorType\n\n/**\n * Requests the connected wallet to send a batch of calls.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/sendCalls\n * - JSON-RPC Methods: [`wallet_sendCalls`](https://eips.ethereum.org/EIPS/eip-5792)\n *\n * @param client - Client to use\n * @returns Transaction identifier. {@link SendCallsReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { sendCalls } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const id = await sendCalls(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   calls: [\n *     {\n *       data: '0xdeadbeef',\n *       to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *     },\n *     {\n *       to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *       value: 69420n,\n *     },\n *   ],\n * })\n */\nexport async function sendCalls<\n  const calls extends readonly unknown[],\n  chain extends Chain | undefined,\n  account extends Account | undefined = undefined,\n  chainOverride extends Chain | undefined = undefined,\n>(\n  client: Client<Transport, chain, account>,\n  parameters: SendCallsParameters<chain, account, chainOverride, calls>,\n): Promise<SendCallsReturnType> {\n  const {\n    account: account_ = client.account,\n    capabilities,\n    chain = client.chain,\n    experimental_fallback,\n    experimental_fallbackDelay = 32,\n    forceAtomic = false,\n    id,\n    version = '2.0.0',\n  } = parameters\n\n  const account = account_ ? parseAccount(account_) : null\n\n  const calls = parameters.calls.map((call_: unknown) => {\n    const call = call_ as Call\n\n    const data = call.abi\n      ? encodeFunctionData({\n          abi: call.abi,\n          functionName: call.functionName,\n          args: call.args,\n        })\n      : call.data\n\n    return {\n      data: call.dataSuffix && data ? concat([data, call.dataSuffix]) : data,\n      to: call.to,\n      value: call.value ? numberToHex(call.value) : undefined,\n    }\n  })\n\n  try {\n    const response = await client.request(\n      {\n        method: 'wallet_sendCalls',\n        params: [\n          {\n            atomicRequired: forceAtomic,\n            calls,\n            capabilities,\n            chainId: numberToHex(chain!.id),\n            from: account?.address,\n            id,\n            version,\n          },\n        ],\n      },\n      { retryCount: 0 },\n    )\n    if (typeof response === 'string') return { id: response }\n    return response as never\n  } catch (err) {\n    const error = err as BaseError\n\n    // If the transport does not support EIP-5792, fall back to\n    // `eth_sendTransaction`.\n    if (\n      experimental_fallback &&\n      (error.name === 'MethodNotFoundRpcError' ||\n        error.name === 'MethodNotSupportedRpcError' ||\n        error.name === 'UnknownRpcError' ||\n        error.details\n          .toLowerCase()\n          .includes('does not exist / is not available') ||\n        error.details.toLowerCase().includes('missing or invalid. request()') ||\n        error.details\n          .toLowerCase()\n          .includes('did not match any variant of untagged enum') ||\n        error.details\n          .toLowerCase()\n          .includes('account upgraded to unsupported contract') ||\n        error.details.toLowerCase().includes('eip-7702 not supported') ||\n        error.details.toLowerCase().includes('unsupported wc_ method') ||\n        error.details.toLowerCase().includes('feature toggled misconfigured'))\n    ) {\n      if (capabilities) {\n        const hasNonOptionalCapability = Object.values(capabilities).some(\n          (capability) => !capability.optional,\n        )\n        if (hasNonOptionalCapability) {\n          const message =\n            'non-optional `capabilities` are not supported on fallback to `eth_sendTransaction`.'\n          throw new UnsupportedNonOptionalCapabilityError(\n            new BaseError(message, {\n              details: message,\n            }),\n          )\n        }\n      }\n      if (forceAtomic && calls.length > 1) {\n        const message =\n          '`forceAtomic` is not supported on fallback to `eth_sendTransaction`.'\n        throw new AtomicityNotSupportedError(\n          new BaseError(message, {\n            details: message,\n          }),\n        )\n      }\n\n      const promises: Promise<Hex>[] = []\n      for (const call of calls) {\n        const promise = sendTransaction(client, {\n          account,\n          chain,\n          data: call.data,\n          to: call.to,\n          value: call.value ? hexToBigInt(call.value) : undefined,\n        })\n        promises.push(promise)\n\n        // Note: some browser wallets require a small delay between transactions\n        // to prevent duplicate JSON-RPC requests.\n        if (experimental_fallbackDelay > 0)\n          await new Promise((resolve) =>\n            setTimeout(resolve, experimental_fallbackDelay),\n          )\n      }\n\n      const results = await Promise.allSettled(promises)\n      if (results.every((r) => r.status === 'rejected')) throw results[0].reason\n\n      const hashes = results.map((result) => {\n        if (result.status === 'fulfilled') return result.value\n        return fallbackTransactionErrorMagicIdentifier\n      })\n      return {\n        id: concat([\n          ...hashes,\n          numberToHex(chain!.id, { size: 32 }),\n          fallbackMagicIdentifier,\n        ]),\n      }\n    }\n\n    throw getTransactionError(err as BaseError, {\n      ...parameters,\n      account,\n      chain: parameters.chain!,\n    })\n  }\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { ExtractCapabilities } from '../../types/capabilities.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { WalletGetCallsStatusReturnType } from '../../types/eip1193.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { RpcTransactionReceipt } from '../../types/rpc.js'\nimport type { Prettify } from '../../types/utils.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { sliceHex } from '../../utils/data/slice.js'\nimport { trim } from '../../utils/data/trim.js'\nimport { hexToBigInt, hexToNumber } from '../../utils/encoding/fromHex.js'\nimport { receiptStatuses } from '../../utils/formatters/transactionReceipt.js'\nimport {\n  fallbackMagicIdentifier,\n  fallbackTransactionErrorMagicIdentifier,\n} from './sendCalls.js'\n\nexport type GetCallsStatusParameters = { id: string }\n\nexport type GetCallsStatusReturnType = Prettify<\n  Omit<\n    WalletGetCallsStatusReturnType<\n      ExtractCapabilities<'getCallsStatus', 'ReturnType'>,\n      number,\n      bigint,\n      'success' | 'reverted'\n    >,\n    'status'\n  > & {\n    statusCode: number\n    status: 'pending' | 'success' | 'failure' | undefined\n  }\n>\n\nexport type GetCallsStatusErrorType = RequestErrorType | ErrorType\n\n/**\n * Returns the status of a call batch that was sent via `sendCalls`.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/getCallsStatus\n * - JSON-RPC Methods: [`wallet_getCallsStatus`](https://eips.ethereum.org/EIPS/eip-5792)\n *\n * @param client - Client to use\n * @returns Status of the calls. {@link GetCallsStatusReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getCallsStatus } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const { receipts, status } = await getCallsStatus(client, { id: '0xdeadbeef' })\n */\nexport async function getCallsStatus<\n  chain extends Chain | undefined,\n  account extends Account | undefined = undefined,\n>(\n  client: Client<Transport, chain, account>,\n  parameters: GetCallsStatusParameters,\n): Promise<GetCallsStatusReturnType> {\n  async function getStatus(id: Hex) {\n    const isTransactions = id.endsWith(fallbackMagicIdentifier.slice(2))\n    if (isTransactions) {\n      const chainId = trim(sliceHex(id, -64, -32))\n      const hashes = sliceHex(id, 0, -64)\n        .slice(2)\n        .match(/.{1,64}/g)\n\n      const receipts = await Promise.all(\n        hashes!.map((hash) =>\n          fallbackTransactionErrorMagicIdentifier.slice(2) !== hash\n            ? client.request(\n                {\n                  method: 'eth_getTransactionReceipt',\n                  params: [`0x${hash}`],\n                },\n                { dedupe: true },\n              )\n            : undefined,\n        ),\n      )\n\n      const status = (() => {\n        if (receipts.some((r) => r === null)) return 100 // pending\n        if (receipts.every((r) => r?.status === '0x1')) return 200 // success\n        if (receipts.every((r) => r?.status === '0x0')) return 500 // complete failure\n        return 600 // partial failure\n      })()\n\n      return {\n        atomic: false,\n        chainId: hexToNumber(chainId),\n        receipts: receipts.filter(Boolean) as RpcTransactionReceipt[],\n        status,\n        version: '2.0.0',\n      }\n    }\n    return client.request({\n      method: 'wallet_getCallsStatus',\n      params: [id],\n    })\n  }\n\n  const {\n    atomic = false,\n    chainId,\n    receipts,\n    version = '2.0.0',\n    ...response\n  } = await getStatus(parameters.id as Hex)\n  const [status, statusCode] = (() => {\n    const statusCode = response.status\n    if (statusCode >= 100 && statusCode < 200)\n      return ['pending', statusCode] as const\n    if (statusCode >= 200 && statusCode < 300)\n      return ['success', statusCode] as const\n    if (statusCode >= 300 && statusCode < 700)\n      return ['failure', statusCode] as const\n    // @ts-expect-error: for backwards compatibility\n    if (statusCode === 'CONFIRMED') return ['success', 200] as const\n    // @ts-expect-error: for backwards compatibility\n    if (statusCode === 'PENDING') return ['pending', 100] as const\n    return [undefined, statusCode]\n  })()\n  return {\n    ...response,\n    atomic,\n    // @ts-expect-error: for backwards compatibility\n    chainId: chainId ? hexToNumber(chainId) : undefined,\n    receipts:\n      receipts?.map((receipt) => ({\n        ...receipt,\n        blockNumber: hexToBigInt(receipt.blockNumber),\n        gasUsed: hexToBigInt(receipt.gasUsed),\n        status: receiptStatuses[receipt.status as '0x0' | '0x1'],\n      })) ?? [],\n    statusCode,\n    status,\n    version,\n  }\n}\n","import type { Address } from 'abitype'\nimport type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  AccountNotFoundError,\n  type AccountNotFoundErrorType,\n} from '../../errors/account.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { GetAccountParameter } from '../../types/account.js'\nimport type {\n  Authorization,\n  AuthorizationRequest,\n} from '../../types/authorization.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { PartialBy } from '../../types/utils.js'\nimport { isAddressEqual } from '../../utils/address/isAddressEqual.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { getChainId } from '../public/getChainId.js'\nimport { getTransactionCount } from '../public/getTransactionCount.js'\n\nexport type PrepareAuthorizationParameters<\n  account extends Account | undefined = Account | undefined,\n> = GetAccountParameter<account> &\n  PartialBy<AuthorizationRequest, 'chainId' | 'nonce'> & {\n    /**\n     * Whether the EIP-7702 Transaction will be executed by the EOA (signing this Authorization) or another Account.\n     *\n     * By default, it will be assumed that the EIP-7702 Transaction will\n     * be executed by another Account.\n     */\n    executor?: 'self' | Account | Address | undefined\n  }\n\nexport type PrepareAuthorizationReturnType = Authorization\n\nexport type PrepareAuthorizationErrorType =\n  | ParseAccountErrorType\n  | RequestErrorType\n  | AccountNotFoundErrorType\n  | ErrorType\n\n/**\n * Prepares an [EIP-7702 Authorization](https://eips.ethereum.org/EIPS/eip-7702) object for signing.\n * This Action will fill the required fields of the Authorization object if they are not provided (e.g. `nonce` and `chainId`).\n *\n * With the prepared Authorization object, you can use [`signAuthorization`](https://viem.sh/docs/eip7702/signAuthorization) to sign over the Authorization object.\n *\n * @param client - Client to use\n * @param parameters - {@link PrepareAuthorizationParameters}\n * @returns The prepared Authorization object. {@link PrepareAuthorizationReturnType}\n *\n * @example\n * import { createClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { prepareAuthorization } from 'viem/experimental'\n *\n * const client = createClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const authorization = await prepareAuthorization(client, {\n *   account: privateKeyToAccount('0x..'),\n *   contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n *\n * @example\n * // Account Hoisting\n * import { createClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { prepareAuthorization } from 'viem/experimental'\n *\n * const client = createClient({\n *   account: privateKeyToAccount('0x…'),\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const authorization = await prepareAuthorization(client, {\n *   contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n */\nexport async function prepareAuthorization<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: Client<Transport, chain, account>,\n  parameters: PrepareAuthorizationParameters<account>,\n): Promise<PrepareAuthorizationReturnType> {\n  const { account: account_ = client.account, chainId, nonce } = parameters\n\n  if (!account_)\n    throw new AccountNotFoundError({\n      docsPath: '/docs/eip7702/prepareAuthorization',\n    })\n  const account = parseAccount(account_)\n\n  const executor = (() => {\n    if (!parameters.executor) return undefined\n    if (parameters.executor === 'self') return parameters.executor\n    return parseAccount(parameters.executor)\n  })()\n\n  const authorization = {\n    address: parameters.contractAddress ?? parameters.address,\n    chainId,\n    nonce,\n  } as Authorization\n\n  if (typeof authorization.chainId === 'undefined')\n    authorization.chainId =\n      client.chain?.id ??\n      (await getAction(client, getChainId, 'getChainId')({}))\n\n  if (typeof authorization.nonce === 'undefined') {\n    authorization.nonce = await getAction(\n      client,\n      getTransactionCount,\n      'getTransactionCount',\n    )({\n      address: account.address,\n      blockTag: 'pending',\n    })\n    if (\n      executor === 'self' ||\n      (executor?.address && isAddressEqual(executor.address, account.address))\n    )\n      authorization.nonce += 1\n  }\n\n  return authorization\n}\n","import type { TypedData } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { SignTypedDataErrorType as SignTypedDataErrorType_account } from '../../accounts/utils/signTypedData.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  AccountNotFoundError,\n  type AccountNotFoundErrorType,\n} from '../../errors/account.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { GetAccountParameter } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { TypedDataDefinition } from '../../types/typedData.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport type { IsHexErrorType } from '../../utils/data/isHex.js'\nimport type { StringifyErrorType } from '../../utils/stringify.js'\nimport {\n  type GetTypesForEIP712DomainErrorType,\n  getTypesForEIP712Domain,\n  type SerializeTypedDataErrorType,\n  serializeTypedData,\n  type ValidateTypedDataErrorType,\n  validateTypedData,\n} from '../../utils/typedData.js'\n\nexport type SignTypedDataParameters<\n  typedData extends TypedData | Record<string, unknown> = TypedData,\n  primaryType extends keyof typedData | 'EIP712Domain' = keyof typedData,\n  account extends Account | undefined = undefined,\n  ///\n  primaryTypes = typedData extends TypedData ? keyof typedData : string,\n> = TypedDataDefinition<typedData, primaryType, primaryTypes> &\n  GetAccountParameter<account>\n\nexport type SignTypedDataReturnType = Hex\n\nexport type SignTypedDataErrorType =\n  | AccountNotFoundErrorType\n  | ParseAccountErrorType\n  | GetTypesForEIP712DomainErrorType\n  | ValidateTypedDataErrorType\n  | StringifyErrorType\n  | SignTypedDataErrorType_account\n  | IsHexErrorType\n  | RequestErrorType\n  | SerializeTypedDataErrorType\n  | ErrorType\n\n/**\n * Signs typed data and calculates an Ethereum-specific signature in [https://eips.ethereum.org/EIPS/eip-712](https://eips.ethereum.org/EIPS/eip-712): `sign(keccak256(\"\\x19\\x01\" ‖ domainSeparator ‖ hashStruct(message)))`\n *\n * - Docs: https://viem.sh/docs/actions/wallet/signTypedData\n * - JSON-RPC Methods:\n *   - JSON-RPC Accounts: [`eth_signTypedData_v4`](https://docs.metamask.io/guide/signing-data#signtypeddata-v4)\n *   - Local Accounts: Signs locally. No JSON-RPC request.\n *\n * @param client - Client to use\n * @param parameters - {@link SignTypedDataParameters}\n * @returns The signed data. {@link SignTypedDataReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { signTypedData } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const signature = await signTypedData(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   domain: {\n *     name: 'Ether Mail',\n *     version: '1',\n *     chainId: 1,\n *     verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n *   },\n *   types: {\n *     Person: [\n *       { name: 'name', type: 'string' },\n *       { name: 'wallet', type: 'address' },\n *     ],\n *     Mail: [\n *       { name: 'from', type: 'Person' },\n *       { name: 'to', type: 'Person' },\n *       { name: 'contents', type: 'string' },\n *     ],\n *   },\n *   primaryType: 'Mail',\n *   message: {\n *     from: {\n *       name: 'Cow',\n *       wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n *     },\n *     to: {\n *       name: 'Bob',\n *       wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n *     },\n *     contents: 'Hello, Bob!',\n *   },\n * })\n *\n * @example\n * // Account Hoisting\n * import { createWalletClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { signTypedData } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x…'),\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const signature = await signTypedData(client, {\n *   domain: {\n *     name: 'Ether Mail',\n *     version: '1',\n *     chainId: 1,\n *     verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n *   },\n *   types: {\n *     Person: [\n *       { name: 'name', type: 'string' },\n *       { name: 'wallet', type: 'address' },\n *     ],\n *     Mail: [\n *       { name: 'from', type: 'Person' },\n *       { name: 'to', type: 'Person' },\n *       { name: 'contents', type: 'string' },\n *     ],\n *   },\n *   primaryType: 'Mail',\n *   message: {\n *     from: {\n *       name: 'Cow',\n *       wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n *     },\n *     to: {\n *       name: 'Bob',\n *       wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n *     },\n *     contents: 'Hello, Bob!',\n *   },\n * })\n */\nexport async function signTypedData<\n  const typedData extends TypedData | Record<string, unknown>,\n  primaryType extends keyof typedData | 'EIP712Domain',\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: Client<Transport, chain, account>,\n  parameters: SignTypedDataParameters<typedData, primaryType, account>,\n): Promise<SignTypedDataReturnType> {\n  const {\n    account: account_ = client.account,\n    domain,\n    message,\n    primaryType,\n  } = parameters as unknown as SignTypedDataParameters\n\n  if (!account_)\n    throw new AccountNotFoundError({\n      docsPath: '/docs/actions/wallet/signTypedData',\n    })\n  const account = parseAccount(account_)\n\n  const types = {\n    EIP712Domain: getTypesForEIP712Domain({ domain }),\n    ...parameters.types,\n  }\n\n  // Need to do a runtime validation check on addresses, byte ranges, integer ranges, etc\n  // as we can't statically check this with TypeScript.\n  validateTypedData({ domain, message, primaryType, types })\n\n  if (account.signTypedData)\n    return account.signTypedData({ domain, message, primaryType, types })\n\n  const typedData = serializeTypedData({ domain, message, primaryType, types })\n  return client.request(\n    {\n      method: 'eth_signTypedData_v4',\n      params: [account.address, typedData],\n    },\n    { retryCount: 0 },\n  )\n}\n","import type { GetCallsStatusReturnType } from '../actions/wallet/getCallsStatus.js'\nimport { BaseError } from './base.js'\n\nexport type BundleFailedErrorType = BundleFailedError & {\n  name: 'BundleFailedError'\n}\nexport class BundleFailedError extends BaseError {\n  result: GetCallsStatusReturnType\n\n  constructor(result: GetCallsStatusReturnType) {\n    super(`Call bundle failed with status: ${result.statusCode}`, {\n      name: 'BundleFailedError',\n    })\n\n    this.result = result\n  }\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { BaseError } from '../../errors/base.js'\nimport { BundleFailedError } from '../../errors/calls.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { type ObserveErrorType, observe } from '../../utils/observe.js'\nimport { type PollErrorType, poll } from '../../utils/poll.js'\nimport { withResolvers } from '../../utils/promise/withResolvers.js'\nimport {\n  type WithRetryParameters,\n  withRetry,\n} from '../../utils/promise/withRetry.js'\nimport { stringify } from '../../utils/stringify.js'\nimport {\n  type GetCallsStatusErrorType,\n  type GetCallsStatusReturnType,\n  getCallsStatus,\n} from './getCallsStatus.js'\n\nexport type WaitForCallsStatusParameters = {\n  /**\n   * The id of the call batch to wait for.\n   */\n  id: string\n  /**\n   * Polling frequency (in ms). Defaults to the client's pollingInterval config.\n   *\n   * @default client.pollingInterval\n   */\n  pollingInterval?: number | undefined\n  /**\n   * Number of times to retry if the call bundle failed.\n   * @default 4 (exponential backoff)\n   */\n  retryCount?: WithRetryParameters['retryCount'] | undefined\n  /**\n   * Time to wait (in ms) between retries.\n   * @default `({ count }) => ~~(1 << count) * 200` (exponential backoff)\n   */\n  retryDelay?: WithRetryParameters['delay'] | undefined\n  /**\n   * The status range to wait for.\n   *\n   * @default (status) => status >= 200\n   */\n  status?: ((parameters: GetCallsStatusReturnType) => boolean) | undefined\n  /**\n   * Whether to throw an error if the call bundle fails.\n   *\n   * @default false\n   */\n  throwOnFailure?: boolean | undefined\n  /**\n   * Optional timeout (in milliseconds) to wait before stopping polling.\n   *\n   * @default 60_000\n   */\n  timeout?: number | undefined\n}\n\nexport type WaitForCallsStatusReturnType = GetCallsStatusReturnType\n\nexport type WaitForCallsStatusErrorType =\n  | ObserveErrorType\n  | PollErrorType\n  | GetCallsStatusErrorType\n  | WaitForCallsStatusTimeoutError\n  | ErrorType\n\n/**\n * Waits for the status & receipts of a call bundle that was sent via `sendCalls`.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/waitForCallsStatus\n * - JSON-RPC Methods: [`wallet_getCallsStatus`](https://eips.ethereum.org/EIPS/eip-5792)\n *\n * @param client - Client to use\n * @param parameters - {@link WaitForCallsStatusParameters}\n * @returns Status & receipts of the call bundle. {@link WaitForCallsStatusReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { waitForCallsStatus } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n *\n * const { receipts, status } = await waitForCallsStatus(client, { id: '0xdeadbeef' })\n */\nexport async function waitForCallsStatus<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  parameters: WaitForCallsStatusParameters,\n): Promise<WaitForCallsStatusReturnType> {\n  const {\n    id,\n    pollingInterval = client.pollingInterval,\n    status = ({ statusCode }) => statusCode === 200 || statusCode >= 300,\n    retryCount = 4,\n    retryDelay = ({ count }) => ~~(1 << count) * 200, // exponential backoff\n    timeout = 60_000,\n    throwOnFailure = false,\n  } = parameters\n  const observerId = stringify(['waitForCallsStatus', client.uid, id])\n\n  const { promise, resolve, reject } =\n    withResolvers<WaitForCallsStatusReturnType>()\n\n  let timer: Timer | undefined\n\n  const unobserve = observe(observerId, { resolve, reject }, (emit) => {\n    const unpoll = poll(\n      async () => {\n        const done = (fn: () => void) => {\n          clearTimeout(timer)\n          unpoll()\n          fn()\n          unobserve()\n        }\n\n        try {\n          const result = await withRetry(\n            async () => {\n              const result = await getAction(\n                client,\n                getCallsStatus,\n                'getCallsStatus',\n              )({ id })\n              if (throwOnFailure && result.status === 'failure')\n                throw new BundleFailedError(result)\n              return result\n            },\n            {\n              retryCount,\n              delay: retryDelay,\n            },\n          )\n          if (!status(result)) return\n          done(() => emit.resolve(result))\n        } catch (error) {\n          done(() => emit.reject(error))\n        }\n      },\n      {\n        interval: pollingInterval,\n        emitOnBegin: true,\n      },\n    )\n\n    return unpoll\n  })\n\n  timer = timeout\n    ? setTimeout(() => {\n        unobserve()\n        clearTimeout(timer)\n        reject(new WaitForCallsStatusTimeoutError({ id }))\n      }, timeout)\n    : undefined\n\n  return await promise\n}\n\nexport type WaitForCallsStatusTimeoutErrorType =\n  WaitForCallsStatusTimeoutError & {\n    name: 'WaitForCallsStatusTimeoutError'\n  }\nexport class WaitForCallsStatusTimeoutError extends BaseError {\n  constructor({ id }: { id: string }) {\n    super(\n      `Timed out while waiting for call bundle with id \"${id}\" to be confirmed.`,\n      { name: 'WaitForCallsStatusTimeoutError' },\n    )\n  }\n}\n","import type { Abi, Address } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  AccountNotFoundError,\n  type AccountNotFoundErrorType,\n} from '../../errors/account.js'\nimport type { BaseError } from '../../errors/base.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { GetAccountParameter } from '../../types/account.js'\nimport type {\n  Chain,\n  DeriveChain,\n  GetChainParameter,\n} from '../../types/chain.js'\nimport type {\n  ContractFunctionArgs,\n  ContractFunctionName,\n  ContractFunctionParameters,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { Prettify, UnionEvaluate, UnionOmit } from '../../types/utils.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  type EncodeFunctionDataParameters,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport {\n  type GetContractErrorReturnType,\n  getContractError,\n} from '../../utils/errors/getContractError.js'\nimport type { FormattedTransactionRequest } from '../../utils/formatters/transactionRequest.js'\nimport { getAction } from '../../utils/getAction.js'\nimport type { GetMutabilityAwareValue } from '../public/simulateContract.js'\nimport {\n  type SendTransactionErrorType,\n  type SendTransactionReturnType,\n  sendTransaction,\n} from './sendTransaction.js'\n\nexport type WriteContractParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  functionName extends ContractFunctionName<\n    abi,\n    'nonpayable' | 'payable'\n  > = ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n  args extends ContractFunctionArgs<\n    abi,\n    'nonpayable' | 'payable',\n    functionName\n  > = ContractFunctionArgs<abi, 'nonpayable' | 'payable', functionName>,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  ///\n  allFunctionNames = ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n  derivedChain extends Chain | undefined = DeriveChain<chain, chainOverride>,\n> = ContractFunctionParameters<\n  abi,\n  'nonpayable' | 'payable',\n  functionName,\n  args,\n  false,\n  allFunctionNames\n> &\n  GetChainParameter<chain, chainOverride> &\n  Prettify<\n    GetAccountParameter<account, Account | Address, true, true> &\n      GetMutabilityAwareValue<\n        abi,\n        'nonpayable' | 'payable',\n        functionName,\n        FormattedTransactionRequest<derivedChain>['value'],\n        args\n      > & {\n        /** Data to append to the end of the calldata. Useful for adding a [\"domain\" tag](https://opensea.notion.site/opensea/Seaport-Order-Attributions-ec2d69bf455041a5baa490941aad307f). */\n        dataSuffix?: Hex | undefined\n      }\n  > &\n  UnionEvaluate<\n    UnionOmit<\n      FormattedTransactionRequest<derivedChain>,\n      'data' | 'from' | 'to' | 'value'\n    >\n  >\n\nexport type WriteContractReturnType = SendTransactionReturnType\n\nexport type WriteContractErrorType =\n  | EncodeFunctionDataErrorType\n  | AccountNotFoundErrorType\n  | ParseAccountErrorType\n  | GetContractErrorReturnType<SendTransactionErrorType>\n  | ErrorType\n\n/**\n * Executes a write function on a contract.\n *\n * - Docs: https://viem.sh/docs/contract/writeContract\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts_writing-to-contracts\n *\n * A \"write\" function on a Solidity contract modifies the state of the blockchain. These types of functions require gas to be executed, and hence a [Transaction](https://viem.sh/docs/glossary/terms) is needed to be broadcast in order to change the state.\n *\n * Internally, uses a [Wallet Client](https://viem.sh/docs/clients/wallet) to call the [`sendTransaction` action](https://viem.sh/docs/actions/wallet/sendTransaction) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\n *\n * __Warning: The `write` internally sends a transaction – it does not validate if the contract write will succeed (the contract may throw an error). It is highly recommended to [simulate the contract write with `contract.simulate`](https://viem.sh/docs/contract/writeContract#usage) before you execute it.__\n *\n * @param client - Client to use\n * @param parameters - {@link WriteContractParameters}\n * @returns A [Transaction Hash](https://viem.sh/docs/glossary/terms#hash). {@link WriteContractReturnType}\n *\n * @example\n * import { createWalletClient, custom, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { writeContract } from 'viem/contract'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const hash = await writeContract(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),\n *   functionName: 'mint',\n *   args: [69420],\n * })\n *\n * @example\n * // With Validation\n * import { createWalletClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { simulateContract, writeContract } from 'viem/contract'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const { request } = await simulateContract(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),\n *   functionName: 'mint',\n *   args: [69420],\n * }\n * const hash = await writeContract(client, request)\n */\nexport async function writeContract<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n  const abi extends Abi | readonly unknown[],\n  functionName extends ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n  args extends ContractFunctionArgs<\n    abi,\n    'nonpayable' | 'payable',\n    functionName\n  >,\n  chainOverride extends Chain | undefined,\n>(\n  client: Client<Transport, chain, account>,\n  parameters: WriteContractParameters<\n    abi,\n    functionName,\n    args,\n    chain,\n    account,\n    chainOverride\n  >,\n): Promise<WriteContractReturnType> {\n  const {\n    abi,\n    account: account_ = client.account,\n    address,\n    args,\n    dataSuffix,\n    functionName,\n    ...request\n  } = parameters as WriteContractParameters\n\n  if (typeof account_ === 'undefined')\n    throw new AccountNotFoundError({\n      docsPath: '/docs/contract/writeContract',\n    })\n  const account = account_ ? parseAccount(account_) : null\n\n  const data = encodeFunctionData({\n    abi,\n    args,\n    functionName,\n  } as EncodeFunctionDataParameters)\n\n  try {\n    return await getAction(\n      client,\n      sendTransaction,\n      'sendTransaction',\n    )({\n      data: `${data}${dataSuffix ? dataSuffix.replace('0x', '') : ''}`,\n      to: address,\n      account,\n      ...request,\n    })\n  } catch (error) {\n    throw getContractError(error as BaseError, {\n      abi,\n      address,\n      args,\n      docsPath: '/docs/contract/writeContract',\n      functionName,\n      sender: account?.address,\n    })\n  }\n}\n","import type { Abi, Address, TypedData } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport {\n  type GetChainIdReturnType,\n  getChainId,\n} from '../../actions/public/getChainId.js'\nimport {\n  type AddChainParameters,\n  addChain,\n} from '../../actions/wallet/addChain.js'\nimport {\n  type DeployContractParameters,\n  type DeployContractReturnType,\n  deployContract,\n} from '../../actions/wallet/deployContract.js'\nimport {\n  type GetAddressesReturnType,\n  getAddresses,\n} from '../../actions/wallet/getAddresses.js'\nimport {\n  type GetCallsStatusParameters,\n  type GetCallsStatusReturnType,\n  getCallsStatus,\n} from '../../actions/wallet/getCallsStatus.js'\nimport {\n  type GetCapabilitiesParameters,\n  type GetCapabilitiesReturnType,\n  getCapabilities,\n} from '../../actions/wallet/getCapabilities.js'\nimport {\n  type GetPermissionsReturnType,\n  getPermissions,\n} from '../../actions/wallet/getPermissions.js'\nimport {\n  type PrepareAuthorizationParameters,\n  type PrepareAuthorizationReturnType,\n  prepareAuthorization,\n} from '../../actions/wallet/prepareAuthorization.js'\nimport {\n  type PrepareTransactionRequestParameters,\n  type PrepareTransactionRequestRequest,\n  type PrepareTransactionRequestReturnType,\n  prepareTransactionRequest,\n} from '../../actions/wallet/prepareTransactionRequest.js'\nimport {\n  type RequestAddressesReturnType,\n  requestAddresses,\n} from '../../actions/wallet/requestAddresses.js'\nimport {\n  type RequestPermissionsParameters,\n  type RequestPermissionsReturnType,\n  requestPermissions,\n} from '../../actions/wallet/requestPermissions.js'\nimport {\n  type SendCallsParameters,\n  type SendCallsReturnType,\n  sendCalls,\n} from '../../actions/wallet/sendCalls.js'\nimport {\n  type SendRawTransactionParameters,\n  type SendRawTransactionReturnType,\n  sendRawTransaction,\n} from '../../actions/wallet/sendRawTransaction.js'\nimport {\n  type SendTransactionParameters,\n  type SendTransactionRequest,\n  type SendTransactionReturnType,\n  sendTransaction,\n} from '../../actions/wallet/sendTransaction.js'\nimport {\n  type ShowCallsStatusParameters,\n  type ShowCallsStatusReturnType,\n  showCallsStatus,\n} from '../../actions/wallet/showCallsStatus.js'\nimport {\n  type SignAuthorizationParameters,\n  type SignAuthorizationReturnType,\n  signAuthorization,\n} from '../../actions/wallet/signAuthorization.js'\nimport {\n  type SignMessageParameters,\n  type SignMessageReturnType,\n  signMessage,\n} from '../../actions/wallet/signMessage.js'\nimport {\n  type SignTransactionParameters,\n  type SignTransactionRequest,\n  type SignTransactionReturnType,\n  signTransaction,\n} from '../../actions/wallet/signTransaction.js'\nimport {\n  type SignTypedDataParameters,\n  type SignTypedDataReturnType,\n  signTypedData,\n} from '../../actions/wallet/signTypedData.js'\nimport {\n  type SwitchChainParameters,\n  switchChain,\n} from '../../actions/wallet/switchChain.js'\nimport {\n  type WaitForCallsStatusParameters,\n  type WaitForCallsStatusReturnType,\n  waitForCallsStatus,\n} from '../../actions/wallet/waitForCallsStatus.js'\nimport {\n  type WatchAssetParameters,\n  type WatchAssetReturnType,\n  watchAsset,\n} from '../../actions/wallet/watchAsset.js'\nimport {\n  type WriteContractParameters,\n  type WriteContractReturnType,\n  writeContract,\n} from '../../actions/wallet/writeContract.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ContractFunctionArgs,\n  ContractFunctionName,\n} from '../../types/contract.js'\nimport type { Client } from '../createClient.js'\nimport type { Transport } from '../transports/createTransport.js'\n\nexport type WalletActions<\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n> = {\n  /**\n   * Adds an EVM chain to the wallet.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/addChain\n   * - JSON-RPC Methods: [`eth_addEthereumChain`](https://eips.ethereum.org/EIPS/eip-3085)\n   *\n   * @param args - {@link AddChainParameters}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { optimism } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   transport: custom(window.ethereum),\n   * })\n   * await client.addChain({ chain: optimism })\n   */\n  addChain: (args: AddChainParameters) => Promise<void>\n  /**\n   * Deploys a contract to the network, given bytecode and constructor arguments.\n   *\n   * - Docs: https://viem.sh/docs/contract/deployContract\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts_deploying-contracts\n   *\n   * @param args - {@link DeployContractParameters}\n   * @returns The [Transaction](https://viem.sh/docs/glossary/terms#transaction) hash. {@link DeployContractReturnType}\n   *\n   * @example\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x…'),\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const hash = await client.deployContract({\n   *   abi: [],\n   *   account: '0x…,\n   *   bytecode: '0x608060405260405161083e38038061083e833981016040819052610...',\n   * })\n   */\n  deployContract: <\n    const abi extends Abi | readonly unknown[],\n    chainOverride extends Chain | undefined,\n  >(\n    args: DeployContractParameters<abi, chain, account, chainOverride>,\n  ) => Promise<DeployContractReturnType>\n  /**\n   * Returns a list of account addresses owned by the wallet or client.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/getAddresses\n   * - JSON-RPC Methods: [`eth_accounts`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_accounts)\n   *\n   * @returns List of account addresses owned by the wallet or client. {@link GetAddressesReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const accounts = await client.getAddresses()\n   */\n  getAddresses: () => Promise<GetAddressesReturnType>\n  /**\n   * Returns the status of a call batch that was sent via `sendCalls`.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/getCallsStatus\n   * - JSON-RPC Methods: [`wallet_getCallsStatus`](https://eips.ethereum.org/EIPS/eip-5792)\n   *\n   * @param client - Client to use\n   * @returns Status of the calls. {@link GetCallsStatusReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   *\n   * const { receipts, status } = await client.getCallsStatus({ id: '0xdeadbeef' })\n   */\n  getCallsStatus: (\n    parameters: GetCallsStatusParameters,\n  ) => Promise<GetCallsStatusReturnType>\n  /**\n   * Extract capabilities that a connected wallet supports (e.g. paymasters, session keys, etc).\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/getCapabilities\n   * - JSON-RPC Methods: [`wallet_getCapabilities`](https://eips.ethereum.org/EIPS/eip-5792)\n   *\n   * @param client - Client to use\n   * @returns The wallet's capabilities. {@link GetCapabilitiesReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   *\n   * const capabilities = await client.getCapabilities({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   * })\n   */\n  getCapabilities: <chainId extends number | undefined>(\n    parameters?: GetCapabilitiesParameters<chainId>,\n  ) => Promise<GetCapabilitiesReturnType<chainId>>\n  /**\n   * Returns the chain ID associated with the current network.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getChainId\n   * - JSON-RPC Methods: [`eth_chainId`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_chainid)\n   *\n   * @returns The current chain ID. {@link GetChainIdReturnType}\n   *\n   * @example\n   * import { createWalletClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const chainId = await client.getChainId()\n   * // 1\n   */\n  getChainId: () => Promise<GetChainIdReturnType>\n  /**\n   * Gets the wallets current permissions.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/getPermissions\n   * - JSON-RPC Methods: [`wallet_getPermissions`](https://eips.ethereum.org/EIPS/eip-2255)\n   *\n   * @returns The wallet permissions. {@link GetPermissionsReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const permissions = await client.getPermissions()\n   */\n  getPermissions: () => Promise<GetPermissionsReturnType>\n  /**\n   * Prepares an [EIP-7702 Authorization](https://eips.ethereum.org/EIPS/eip-7702) object for signing.\n   * This Action will fill the required fields of the Authorization object if they are not provided (e.g. `nonce` and `chainId`).\n   *\n   * With the prepared Authorization object, you can use [`signAuthorization`](https://viem.sh/docs/eip7702/signAuthorization) to sign over the Authorization object.\n   *\n   * @param client - Client to use\n   * @param parameters - {@link PrepareAuthorizationParameters}\n   * @returns The prepared Authorization object. {@link PrepareAuthorizationReturnType}\n   *\n   * @example\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   *\n   * const authorization = await client.prepareAuthorization({\n   *   account: privateKeyToAccount('0x..'),\n   *   contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   * })\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x…'),\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   *\n   * const authorization = await client.prepareAuthorization({\n   *   contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   * })\n   */\n  prepareAuthorization: (\n    parameters: PrepareAuthorizationParameters<account>,\n  ) => Promise<PrepareAuthorizationReturnType>\n  /**\n   * Prepares a transaction request for signing.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/prepareTransactionRequest\n   *\n   * @param args - {@link PrepareTransactionRequestParameters}\n   * @returns The transaction request. {@link PrepareTransactionRequestReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const request = await client.prepareTransactionRequest({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   to: '0x0000000000000000000000000000000000000000',\n   *   value: 1n,\n   * })\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x…'),\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const request = await client.prepareTransactionRequest({\n   *   to: '0x0000000000000000000000000000000000000000',\n   *   value: 1n,\n   * })\n   */\n  prepareTransactionRequest: <\n    const request extends PrepareTransactionRequestRequest<\n      chain,\n      chainOverride\n    >,\n    chainOverride extends Chain | undefined = undefined,\n    accountOverride extends Account | Address | undefined = undefined,\n  >(\n    args: PrepareTransactionRequestParameters<\n      chain,\n      account,\n      chainOverride,\n      accountOverride,\n      request\n    >,\n  ) => Promise<\n    PrepareTransactionRequestReturnType<\n      chain,\n      account,\n      chainOverride,\n      accountOverride,\n      request\n    >\n  >\n  /**\n   * Requests a list of accounts managed by a wallet.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/requestAddresses\n   * - JSON-RPC Methods: [`eth_requestAccounts`](https://eips.ethereum.org/EIPS/eip-1102)\n   *\n   * Sends a request to the wallet, asking for permission to access the user's accounts. After the user accepts the request, it will return a list of accounts (addresses).\n   *\n   * This API can be useful for dapps that need to access the user's accounts in order to execute transactions or interact with smart contracts.\n   *\n   * @returns List of accounts managed by a wallet {@link RequestAddressesReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const accounts = await client.requestAddresses()\n   */\n  requestAddresses: () => Promise<RequestAddressesReturnType>\n  /**\n   * Requests permissions for a wallet.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/requestPermissions\n   * - JSON-RPC Methods: [`wallet_requestPermissions`](https://eips.ethereum.org/EIPS/eip-2255)\n   *\n   * @param args - {@link RequestPermissionsParameters}\n   * @returns The wallet permissions. {@link RequestPermissionsReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const permissions = await client.requestPermissions({\n   *   eth_accounts: {}\n   * })\n   */\n  requestPermissions: (\n    args: RequestPermissionsParameters,\n  ) => Promise<RequestPermissionsReturnType>\n  /**\n   * Requests the connected wallet to send a batch of calls.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/sendCalls\n   * - JSON-RPC Methods: [`wallet_sendCalls`](https://eips.ethereum.org/EIPS/eip-5792)\n   *\n   * @param client - Client to use\n   * @returns Transaction identifier. {@link SendCallsReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   *\n   * const id = await client.sendCalls({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   calls: [\n   *     {\n   *       data: '0xdeadbeef',\n   *       to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   *     },\n   *     {\n   *       to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   *       value: 69420n,\n   *     },\n   *   ],\n   * })\n   */\n  sendCalls: <\n    const calls extends readonly unknown[],\n    chainOverride extends Chain | undefined = undefined,\n  >(\n    parameters: SendCallsParameters<chain, account, chainOverride, calls>,\n  ) => Promise<SendCallsReturnType>\n  /**\n   * Sends a **signed** transaction to the network\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/sendRawTransaction\n   * - JSON-RPC Method: [`eth_sendRawTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\n   *\n   * @param client - Client to use\n   * @param parameters - {@link SendRawTransactionParameters}\n   * @returns The transaction hash. {@link SendRawTransactionReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { sendRawTransaction } from 'viem/wallet'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   *\n   * const hash = await client.sendRawTransaction({\n   *   serializedTransaction: '0x02f850018203118080825208808080c080a04012522854168b27e5dc3d5839bab5e6b39e1a0ffd343901ce1622e3d64b48f1a04e00902ae0502c4728cbf12156290df99c3ed7de85b1dbfe20b5c36931733a33'\n   * })\n   */\n  sendRawTransaction: (\n    args: SendRawTransactionParameters,\n  ) => Promise<SendRawTransactionReturnType>\n  /**\n   * Creates, signs, and sends a new transaction to the network.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/sendTransaction\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_sending-transactions\n   * - JSON-RPC Methods:\n   *   - JSON-RPC Accounts: [`eth_sendTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendtransaction)\n   *   - Local Accounts: [`eth_sendRawTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendrawtransaction)\n   *\n   * @param args - {@link SendTransactionParameters}\n   * @returns The [Transaction](https://viem.sh/docs/glossary/terms#transaction) hash. {@link SendTransactionReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const hash = await client.sendTransaction({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   *   value: 1000000000000000000n,\n   * })\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x…'),\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const hash = await client.sendTransaction({\n   *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   *   value: 1000000000000000000n,\n   * })\n   */\n  sendTransaction: <\n    const request extends SendTransactionRequest<chain, chainOverride>,\n    chainOverride extends Chain | undefined = undefined,\n  >(\n    args: SendTransactionParameters<chain, account, chainOverride, request>,\n  ) => Promise<SendTransactionReturnType>\n  /**\n   * Requests for the wallet to show information about a call batch\n   * that was sent via `sendCalls`.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/showCallsStatus\n   * - JSON-RPC Methods: [`wallet_showCallsStatus`](https://eips.ethereum.org/EIPS/eip-5792)\n   *\n   * @param client - Client to use\n   * @returns Displays status of the calls in wallet. {@link ShowCallsStatusReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   *\n   * await client.showCallsStatus({ id: '0xdeadbeef' })\n   */\n  showCallsStatus: (\n    parameters: ShowCallsStatusParameters,\n  ) => Promise<ShowCallsStatusReturnType>\n  /**\n   * Signs an [EIP-7702 Authorization](https://eips.ethereum.org/EIPS/eip-7702) object.\n   *\n   * With the calculated signature, you can:\n   * - use [`verifyAuthorization`](https://viem.sh/docs/eip7702/verifyAuthorization) to verify the signed Authorization object,\n   * - use [`recoverAuthorizationAddress`](https://viem.sh/docs/eip7702/recoverAuthorizationAddress) to recover the signing address from the signed Authorization object.\n   *\n   * @param client - Client to use\n   * @param parameters - {@link SignAuthorizationParameters}\n   * @returns The signed Authorization object. {@link SignAuthorizationReturnType}\n   *\n   * @example\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   *\n   * const signature = await client.signAuthorization({\n   *   account: privateKeyToAccount('0x..'),\n   *   contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   * })\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x…'),\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   *\n   * const signature = await client.signAuthorization({\n   *   contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   * })\n   */\n  signAuthorization: (\n    parameters: SignAuthorizationParameters<account>,\n  ) => Promise<SignAuthorizationReturnType>\n  /**\n   * Calculates an Ethereum-specific signature in [EIP-191 format](https://eips.ethereum.org/EIPS/eip-191): `keccak256(\"\\x19Ethereum Signed Message:\\n\" + len(message) + message))`.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/signMessage\n   * - JSON-RPC Methods:\n   *   - JSON-RPC Accounts: [`personal_sign`](https://docs.metamask.io/guide/signing-data#personal-sign)\n   *   - Local Accounts: Signs locally. No JSON-RPC request.\n   *\n   * With the calculated signature, you can:\n   * - use [`verifyMessage`](https://viem.sh/docs/utilities/verifyMessage) to verify the signature,\n   * - use [`recoverMessageAddress`](https://viem.sh/docs/utilities/recoverMessageAddress) to recover the signing address from a signature.\n   *\n   * @param args - {@link SignMessageParameters}\n   * @returns The signed message. {@link SignMessageReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const signature = await client.signMessage({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   message: 'hello world',\n   * })\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x…'),\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const signature = await client.signMessage({\n   *   message: 'hello world',\n   * })\n   */\n  signMessage: (\n    args: SignMessageParameters<account>,\n  ) => Promise<SignMessageReturnType>\n  /**\n   * Signs a transaction.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/signTransaction\n   * - JSON-RPC Methods:\n   *   - JSON-RPC Accounts: [`eth_signTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\n   *   - Local Accounts: Signs locally. No JSON-RPC request.\n   *\n   * @param args - {@link SignTransactionParameters}\n   * @returns The signed message. {@link SignTransactionReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const request = await client.prepareTransactionRequest({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   to: '0x0000000000000000000000000000000000000000',\n   *   value: 1n,\n   * })\n   * const signature = await client.signTransaction(request)\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x…'),\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const request = await client.prepareTransactionRequest({\n   *   to: '0x0000000000000000000000000000000000000000',\n   *   value: 1n,\n   * })\n   * const signature = await client.signTransaction(request)\n   */\n  signTransaction: <\n    chainOverride extends Chain | undefined,\n    const request extends SignTransactionRequest<\n      chain,\n      chainOverride\n    > = SignTransactionRequest<chain, chainOverride>,\n  >(\n    args: SignTransactionParameters<chain, account, chainOverride, request>,\n  ) => Promise<SignTransactionReturnType<request>>\n  /**\n   * Signs typed data and calculates an Ethereum-specific signature in [EIP-191 format](https://eips.ethereum.org/EIPS/eip-191): `keccak256(\"\\x19Ethereum Signed Message:\\n\" + len(message) + message))`.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/signTypedData\n   * - JSON-RPC Methods:\n   *   - JSON-RPC Accounts: [`eth_signTypedData_v4`](https://docs.metamask.io/guide/signing-data#signtypeddata-v4)\n   *   - Local Accounts: Signs locally. No JSON-RPC request.\n   *\n   * @param client - Client to use\n   * @param args - {@link SignTypedDataParameters}\n   * @returns The signed data. {@link SignTypedDataReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const signature = await client.signTypedData({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   domain: {\n   *     name: 'Ether Mail',\n   *     version: '1',\n   *     chainId: 1,\n   *     verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n   *   },\n   *   types: {\n   *     Person: [\n   *       { name: 'name', type: 'string' },\n   *       { name: 'wallet', type: 'address' },\n   *     ],\n   *     Mail: [\n   *       { name: 'from', type: 'Person' },\n   *       { name: 'to', type: 'Person' },\n   *       { name: 'contents', type: 'string' },\n   *     ],\n   *   },\n   *   primaryType: 'Mail',\n   *   message: {\n   *     from: {\n   *       name: 'Cow',\n   *       wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n   *     },\n   *     to: {\n   *       name: 'Bob',\n   *       wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n   *     },\n   *     contents: 'Hello, Bob!',\n   *   },\n   * })\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x…'),\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const signature = await client.signTypedData({\n   *   domain: {\n   *     name: 'Ether Mail',\n   *     version: '1',\n   *     chainId: 1,\n   *     verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n   *   },\n   *   types: {\n   *     Person: [\n   *       { name: 'name', type: 'string' },\n   *       { name: 'wallet', type: 'address' },\n   *     ],\n   *     Mail: [\n   *       { name: 'from', type: 'Person' },\n   *       { name: 'to', type: 'Person' },\n   *       { name: 'contents', type: 'string' },\n   *     ],\n   *   },\n   *   primaryType: 'Mail',\n   *   message: {\n   *     from: {\n   *       name: 'Cow',\n   *       wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n   *     },\n   *     to: {\n   *       name: 'Bob',\n   *       wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n   *     },\n   *     contents: 'Hello, Bob!',\n   *   },\n   * })\n   */\n  signTypedData: <\n    const typedData extends TypedData | { [key: string]: unknown },\n    primaryType extends string,\n  >(\n    args: SignTypedDataParameters<typedData, primaryType, account>,\n  ) => Promise<SignTypedDataReturnType>\n  /**\n   * Switch the target chain in a wallet.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/switchChain\n   * - JSON-RPC Methods: [`eth_switchEthereumChain`](https://eips.ethereum.org/EIPS/eip-3326)\n   *\n   * @param args - {@link SwitchChainParameters}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet, optimism } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * await client.switchChain({ id: optimism.id })\n   */\n  switchChain: (args: SwitchChainParameters) => Promise<void>\n  /**\n   * Waits for the status & receipts of a call bundle that was sent via `sendCalls`.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/waitForCallsStatus\n   * - JSON-RPC Methods: [`wallet_getCallsStatus`](https://eips.ethereum.org/EIPS/eip-5792)\n   *\n   * @param client - Client to use\n   * @param parameters - {@link WaitForCallsStatusParameters}\n   * @returns Status & receipts of the call bundle. {@link WaitForCallsStatusReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   *\n   * const { receipts, status } = await waitForCallsStatus(client, { id: '0xdeadbeef' })\n   */\n  waitForCallsStatus: (\n    parameters: WaitForCallsStatusParameters,\n  ) => Promise<WaitForCallsStatusReturnType>\n  /**\n   * Adds an EVM chain to the wallet.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/watchAsset\n   * - JSON-RPC Methods: [`eth_switchEthereumChain`](https://eips.ethereum.org/EIPS/eip-747)\n   *\n   * @param args - {@link WatchAssetParameters}\n   * @returns Boolean indicating if the token was successfully added. {@link WatchAssetReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const success = await client.watchAsset({\n   *   type: 'ERC20',\n   *   options: {\n   *     address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n   *     decimals: 18,\n   *     symbol: 'WETH',\n   *   },\n   * })\n   */\n  watchAsset: (args: WatchAssetParameters) => Promise<WatchAssetReturnType>\n  /**\n   * Executes a write function on a contract.\n   *\n   * - Docs: https://viem.sh/docs/contract/writeContract\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts_writing-to-contracts\n   *\n   * A \"write\" function on a Solidity contract modifies the state of the blockchain. These types of functions require gas to be executed, and hence a [Transaction](https://viem.sh/docs/glossary/terms) is needed to be broadcast in order to change the state.\n   *\n   * Internally, uses a [Wallet Client](https://viem.sh/docs/clients/wallet) to call the [`sendTransaction` action](https://viem.sh/docs/actions/wallet/sendTransaction) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\n   *\n   * __Warning: The `write` internally sends a transaction – it does not validate if the contract write will succeed (the contract may throw an error). It is highly recommended to [simulate the contract write with `contract.simulate`](https://viem.sh/docs/contract/writeContract#usage) before you execute it.__\n   *\n   * @param args - {@link WriteContractParameters}\n   * @returns A [Transaction Hash](https://viem.sh/docs/glossary/terms#hash). {@link WriteContractReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const hash = await client.writeContract({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),\n   *   functionName: 'mint',\n   *   args: [69420],\n   * })\n   *\n   * @example\n   * // With Validation\n   * import { createWalletClient, custom, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const { request } = await client.simulateContract({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),\n   *   functionName: 'mint',\n   *   args: [69420],\n   * }\n   * const hash = await client.writeContract(request)\n   */\n  writeContract: <\n    const abi extends Abi | readonly unknown[],\n    functionName extends ContractFunctionName<abi, 'payable' | 'nonpayable'>,\n    args extends ContractFunctionArgs<\n      abi,\n      'payable' | 'nonpayable',\n      functionName\n    >,\n    chainOverride extends Chain | undefined = undefined,\n  >(\n    args: WriteContractParameters<\n      abi,\n      functionName,\n      args,\n      chain,\n      account,\n      chainOverride\n    >,\n  ) => Promise<WriteContractReturnType>\n}\n\nexport function walletActions<\n  transport extends Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n>(client: Client<transport, chain, account>): WalletActions<chain, account> {\n  return {\n    addChain: (args) => addChain(client, args),\n    deployContract: (args) => deployContract(client, args),\n    getAddresses: () => getAddresses(client),\n    getCallsStatus: (args) => getCallsStatus(client, args),\n    getCapabilities: (args) => getCapabilities(client, args),\n    getChainId: () => getChainId(client),\n    getPermissions: () => getPermissions(client),\n    prepareAuthorization: (args) => prepareAuthorization(client, args),\n    prepareTransactionRequest: (args) =>\n      prepareTransactionRequest(client as any, args as any) as any,\n    requestAddresses: () => requestAddresses(client),\n    requestPermissions: (args) => requestPermissions(client, args),\n    sendCalls: (args) => sendCalls(client, args),\n    sendRawTransaction: (args) => sendRawTransaction(client, args),\n    sendTransaction: (args) => sendTransaction(client, args),\n    showCallsStatus: (args) => showCallsStatus(client, args),\n    signAuthorization: (args) => signAuthorization(client, args),\n    signMessage: (args) => signMessage(client, args),\n    signTransaction: (args) => signTransaction(client, args),\n    signTypedData: (args) => signTypedData(client, args),\n    switchChain: (args) => switchChain(client, args),\n    waitForCallsStatus: (args) => waitForCallsStatus(client, args),\n    watchAsset: (args) => watchAsset(client, args),\n    writeContract: (args) => writeContract(client, args as any),\n  }\n}\n","import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type AddChainParameters = {\n  /** The chain to add to the wallet. */\n  chain: Chain\n}\n\nexport type AddChainErrorType =\n  | RequestErrorType\n  | NumberToHexErrorType\n  | ErrorType\n\n/**\n * Adds an EVM chain to the wallet.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/addChain\n * - JSON-RPC Methods: [`eth_addEthereumChain`](https://eips.ethereum.org/EIPS/eip-3085)\n *\n * @param client - Client to use\n * @param parameters - {@link AddChainParameters}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { optimism } from 'viem/chains'\n * import { addChain } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   transport: custom(window.ethereum),\n * })\n * await addChain(client, { chain: optimism })\n */\nexport async function addChain<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(client: Client<Transport, chain, account>, { chain }: AddChainParameters) {\n  const { id, name, nativeCurrency, rpcUrls, blockExplorers } = chain\n  await client.request(\n    {\n      method: 'wallet_addEthereumChain',\n      params: [\n        {\n          chainId: numberToHex(id),\n          chainName: name,\n          nativeCurrency,\n          rpcUrls: rpcUrls.default.http,\n          blockExplorerUrls: blockExplorers\n            ? Object.values(blockExplorers).map(({ url }) => url)\n            : undefined,\n        },\n      ],\n    },\n    { dedupe: true, retryCount: 0 },\n  )\n}\n","import type { Abi } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain, GetChainParameter } from '../../types/chain.js'\nimport type { ContractConstructorArgs } from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { UnionEvaluate, UnionOmit } from '../../types/utils.js'\nimport { encodeDeployData } from '../../utils/abi/encodeDeployData.js'\nimport {\n  type SendTransactionErrorType,\n  type SendTransactionParameters,\n  type SendTransactionReturnType,\n  sendTransaction,\n} from './sendTransaction.js'\n\nexport type DeployContractParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  ///\n  allArgs = ContractConstructorArgs<abi>,\n> = UnionOmit<\n  SendTransactionParameters<chain, account, chainOverride>,\n  'accessList' | 'chain' | 'to' | 'data'\n> &\n  GetChainParameter<chain, chainOverride> &\n  UnionEvaluate<\n    readonly [] extends allArgs\n      ? { args?: allArgs | undefined }\n      : { args: allArgs }\n  > & {\n    abi: abi\n    bytecode: Hex\n  }\n\nexport type DeployContractReturnType = SendTransactionReturnType\n\nexport type DeployContractErrorType = SendTransactionErrorType | ErrorType\n\n/**\n * Deploys a contract to the network, given bytecode and constructor arguments.\n *\n * - Docs: https://viem.sh/docs/contract/deployContract\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts_deploying-contracts\n *\n * @param client - Client to use\n * @param parameters - {@link DeployContractParameters}\n * @returns The [Transaction](https://viem.sh/docs/glossary/terms#transaction) hash. {@link DeployContractReturnType}\n *\n * @example\n * import { createWalletClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { deployContract } from 'viem/contract'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x…'),\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const hash = await deployContract(client, {\n *   abi: [],\n *   account: '0x…,\n *   bytecode: '0x608060405260405161083e38038061083e833981016040819052610...',\n * })\n */\nexport function deployContract<\n  const abi extends Abi | readonly unknown[],\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n  chainOverride extends Chain | undefined,\n>(\n  walletClient: Client<Transport, chain, account>,\n  parameters: DeployContractParameters<abi, chain, account, chainOverride>,\n): Promise<DeployContractReturnType> {\n  const { abi, args, bytecode, ...request } =\n    parameters as DeployContractParameters\n  const calldata = encodeDeployData({ abi, args, bytecode })\n  return sendTransaction(walletClient, {\n    ...request,\n    ...(request.authorizationList ? { to: null } : {}),\n    data: calldata,\n  } as unknown as SendTransactionParameters<chain, account, chainOverride>)\n}\n","import type { Address } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport {\n  type ChecksumAddressErrorType,\n  checksumAddress,\n} from '../../utils/address/getAddress.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type GetAddressesReturnType = Address[]\n\nexport type GetAddressesErrorType =\n  | RequestErrorType\n  | ChecksumAddressErrorType\n  | ErrorType\n\n/**\n * Returns a list of account addresses owned by the wallet or client.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/getAddresses\n * - JSON-RPC Methods: [`eth_accounts`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_accounts)\n *\n * @param client - Client to use\n * @returns List of account addresses owned by the wallet or client. {@link GetAddressesReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getAddresses } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const accounts = await getAddresses(client)\n */\nexport async function getAddresses<\n  chain extends Chain | undefined,\n  account extends Account | undefined = undefined,\n>(client: Client<Transport, chain, account>): Promise<GetAddressesReturnType> {\n  if (client.account?.type === 'local') return [client.account.address]\n  const addresses = await client.request(\n    { method: 'eth_accounts' },\n    { dedupe: true },\n  )\n  return addresses.map((address) => checksumAddress(address))\n}\n","import type { Address } from 'abitype'\n\nimport { parseAccount } from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type {\n  Capabilities,\n  ChainIdToCapabilities,\n  ExtractCapabilities,\n} from '../../types/capabilities.js'\nimport type { Prettify } from '../../types/utils.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\nexport type GetCapabilitiesParameters<\n  chainId extends number | undefined = undefined,\n> = {\n  account?: Account | Address | undefined\n  chainId?: chainId | number | undefined\n}\n\nexport type GetCapabilitiesReturnType<\n  chainId extends number | undefined = undefined,\n> = Prettify<\n  chainId extends number\n    ? ExtractCapabilities<'getCapabilities', 'ReturnType'>\n    : ChainIdToCapabilities<\n        Capabilities<ExtractCapabilities<'getCapabilities', 'ReturnType'>>,\n        number\n      >\n>\n\nexport type GetCapabilitiesErrorType = RequestErrorType | ErrorType\n\n/**\n * Extract capabilities that a connected wallet supports (e.g. paymasters, session keys, etc).\n *\n * - Docs: https://viem.sh/docs/actions/wallet/getCapabilities\n * - JSON-RPC Methods: [`wallet_getCapabilities`](https://eips.ethereum.org/EIPS/eip-5792)\n *\n * @param client - Client to use\n * @returns The wallet's capabilities. {@link GetCapabilitiesReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getCapabilities } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const capabilities = await getCapabilities(client)\n */\nexport async function getCapabilities<\n  chainId extends number | undefined = undefined,\n>(\n  client: Client<Transport>,\n  parameters: GetCapabilitiesParameters<chainId> = {},\n): Promise<GetCapabilitiesReturnType<chainId>> {\n  const { account = client.account, chainId } = parameters\n\n  const account_ = account ? parseAccount(account) : undefined\n\n  const params = chainId\n    ? ([account_?.address, [numberToHex(chainId)]] as const)\n    : ([account_?.address] as const)\n  const capabilities_raw = await client.request({\n    method: 'wallet_getCapabilities',\n    params,\n  })\n\n  const capabilities = {} as ChainIdToCapabilities<\n    ExtractCapabilities<'getCapabilities', 'ReturnType'>,\n    number\n  >\n  for (const [chainId, capabilities_] of Object.entries(capabilities_raw)) {\n    capabilities[Number(chainId)] = {}\n    for (let [key, value] of Object.entries(capabilities_)) {\n      if (key === 'addSubAccount') key = 'unstable_addSubAccount'\n      capabilities[Number(chainId)][key] = value\n    }\n  }\n  return (\n    typeof chainId === 'number' ? capabilities[chainId] : capabilities\n  ) as never\n}\n","import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { WalletPermission } from '../../types/eip1193.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type GetPermissionsReturnType = WalletPermission[]\n\nexport type GetPermissionsErrorType = RequestErrorType | ErrorType\n\n/**\n * Gets the wallets current permissions.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/getPermissions\n * - JSON-RPC Methods: [`wallet_getPermissions`](https://eips.ethereum.org/EIPS/eip-2255)\n *\n * @param client - Client to use\n * @returns The wallet permissions. {@link GetPermissionsReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getPermissions } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const permissions = await getPermissions(client)\n */\nexport async function getPermissions<\n  chain extends Chain | undefined,\n  account extends Account | undefined = undefined,\n>(client: Client<Transport, chain, account>) {\n  const permissions = await client.request(\n    { method: 'wallet_getPermissions' },\n    { dedupe: true },\n  )\n  return permissions\n}\n","import type { Address } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport { getAddress } from '../../utils/address/getAddress.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type RequestAddressesReturnType = Address[]\n\nexport type RequestAddressesErrorType = RequestErrorType | ErrorType\n\n/**\n * Requests a list of accounts managed by a wallet.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/requestAddresses\n * - JSON-RPC Methods: [`eth_requestAccounts`](https://eips.ethereum.org/EIPS/eip-1102)\n *\n * Sends a request to the wallet, asking for permission to access the user's accounts. After the user accepts the request, it will return a list of accounts (addresses).\n *\n * This API can be useful for dapps that need to access the user's accounts in order to execute transactions or interact with smart contracts.\n *\n * @param client - Client to use\n * @returns List of accounts managed by a wallet {@link RequestAddressesReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { requestAddresses } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const accounts = await requestAddresses(client)\n */\nexport async function requestAddresses<\n  chain extends Chain | undefined,\n  account extends Account | undefined = undefined,\n>(\n  client: Client<Transport, chain, account>,\n): Promise<RequestAddressesReturnType> {\n  const addresses = await client.request(\n    { method: 'eth_requestAccounts' },\n    { dedupe: true, retryCount: 0 },\n  )\n  return addresses.map((address) => getAddress(address))\n}\n","import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { WalletPermission } from '../../types/eip1193.js'\nimport type { Prettify } from '../../types/utils.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type RequestPermissionsParameters = Prettify<\n  {\n    eth_accounts: Record<string, any>\n  } & {\n    [key: string]: Record<string, any>\n  }\n>\nexport type RequestPermissionsReturnType = WalletPermission[]\n\nexport type RequestPermissionsErrorType = RequestErrorType | ErrorType\n\n/**\n * Requests permissions for a wallet.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/requestPermissions\n * - JSON-RPC Methods: [`wallet_requestPermissions`](https://eips.ethereum.org/EIPS/eip-2255)\n *\n * @param client - Client to use\n * @param parameters - {@link RequestPermissionsParameters}\n * @returns The wallet permissions. {@link RequestPermissionsReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { requestPermissions } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const permissions = await requestPermissions(client, {\n *   eth_accounts: {}\n * })\n */\nexport async function requestPermissions<\n  chain extends Chain | undefined,\n  account extends Account | undefined = undefined,\n>(\n  client: Client<Transport, chain, account>,\n  permissions: RequestPermissionsParameters,\n) {\n  return client.request(\n    {\n      method: 'wallet_requestPermissions',\n      params: [permissions],\n    },\n    { retryCount: 0 },\n  )\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type ShowCallsStatusParameters = { id: string }\n\nexport type ShowCallsStatusReturnType = void\n\nexport type ShowCallsStatusErrorType = RequestErrorType | ErrorType\n\n/**\n * Requests for the wallet to show information about a call batch\n * that was sent via `sendCalls`.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/showCallsStatus\n * - JSON-RPC Methods: [`wallet_showCallsStatus`](https://eips.ethereum.org/EIPS/eip-5792)\n *\n * @param client - Client to use\n * @returns Status of the calls. {@link ShowCallsStatusReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { showCallsStatus } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * await showCallsStatus(client, { id: '0xdeadbeef' })\n */\nexport async function showCallsStatus<\n  chain extends Chain | undefined,\n  account extends Account | undefined = undefined,\n>(\n  client: Client<Transport, chain, account>,\n  parameters: ShowCallsStatusParameters,\n): Promise<ShowCallsStatusReturnType> {\n  const { id } = parameters\n  await client.request({\n    method: 'wallet_showCallsStatus',\n    params: [id],\n  })\n  return\n}\n","import type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type {\n  SignAuthorizationErrorType as SignAuthorizationErrorType_account,\n  SignAuthorizationReturnType as SignAuthorizationReturnType_account,\n} from '../../accounts/utils/signAuthorization.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  AccountNotFoundError,\n  type AccountNotFoundErrorType,\n  AccountTypeNotSupportedError,\n  type AccountTypeNotSupportedErrorType,\n} from '../../errors/account.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport {\n  type PrepareAuthorizationErrorType,\n  type PrepareAuthorizationParameters,\n  prepareAuthorization,\n} from './prepareAuthorization.js'\n\nexport type SignAuthorizationParameters<\n  account extends Account | undefined = Account | undefined,\n> = PrepareAuthorizationParameters<account>\n\nexport type SignAuthorizationReturnType = SignAuthorizationReturnType_account\n\nexport type SignAuthorizationErrorType =\n  | ParseAccountErrorType\n  | AccountNotFoundErrorType\n  | AccountTypeNotSupportedErrorType\n  | PrepareAuthorizationErrorType\n  | SignAuthorizationErrorType_account\n  | ErrorType\n\n/**\n * Signs an [EIP-7702 Authorization](https://eips.ethereum.org/EIPS/eip-7702) object.\n *\n * With the calculated signature, you can:\n * - use [`verifyAuthorization`](https://viem.sh/docs/eip7702/verifyAuthorization) to verify the signed Authorization object,\n * - use [`recoverAuthorizationAddress`](https://viem.sh/docs/eip7702/recoverAuthorizationAddress) to recover the signing address from the signed Authorization object.\n *\n * @param client - Client to use\n * @param parameters - {@link SignAuthorizationParameters}\n * @returns The signed Authorization object. {@link SignAuthorizationReturnType}\n *\n * @example\n * import { createClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { signAuthorization } from 'viem/experimental'\n *\n * const client = createClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const signature = await signAuthorization(client, {\n *   account: privateKeyToAccount('0x..'),\n *   contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n *\n * @example\n * // Account Hoisting\n * import { createClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { signAuthorization } from 'viem/experimental'\n *\n * const client = createClient({\n *   account: privateKeyToAccount('0x…'),\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const signature = await signAuthorization(client, {\n *   contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n */\nexport async function signAuthorization<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: Client<Transport, chain, account>,\n  parameters: SignAuthorizationParameters<account>,\n): Promise<SignAuthorizationReturnType> {\n  const { account: account_ = client.account } = parameters\n\n  if (!account_)\n    throw new AccountNotFoundError({\n      docsPath: '/docs/eip7702/signAuthorization',\n    })\n  const account = parseAccount(account_)\n\n  if (!account.signAuthorization)\n    throw new AccountTypeNotSupportedError({\n      docsPath: '/docs/eip7702/signAuthorization',\n      metaMessages: [\n        'The `signAuthorization` Action does not support JSON-RPC Accounts.',\n      ],\n      type: account.type,\n    })\n\n  const authorization = await prepareAuthorization(client, parameters)\n  return account.signAuthorization(authorization)\n}\n","import type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { SignMessageErrorType as SignMessageErrorType_account } from '../../accounts/utils/signMessage.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { AccountNotFoundError } from '../../errors/account.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { GetAccountParameter } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hex, SignableMessage } from '../../types/misc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  stringToHex,\n  type ToHexErrorType,\n  toHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type SignMessageParameters<\n  account extends Account | undefined = Account | undefined,\n> = GetAccountParameter<account> & {\n  message: SignableMessage\n}\n\nexport type SignMessageReturnType = Hex\n\nexport type SignMessageErrorType =\n  | ParseAccountErrorType\n  | RequestErrorType\n  | SignMessageErrorType_account\n  | ToHexErrorType\n  | ErrorType\n\n/**\n * Calculates an Ethereum-specific signature in [EIP-191 format](https://eips.ethereum.org/EIPS/eip-191): `keccak256(\"\\x19Ethereum Signed Message:\\n\" + len(message) + message))`.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/signMessage\n * - JSON-RPC Methods:\n *   - JSON-RPC Accounts: [`personal_sign`](https://docs.metamask.io/guide/signing-data#personal-sign)\n *   - Local Accounts: Signs locally. No JSON-RPC request.\n *\n * With the calculated signature, you can:\n * - use [`verifyMessage`](https://viem.sh/docs/utilities/verifyMessage) to verify the signature,\n * - use [`recoverMessageAddress`](https://viem.sh/docs/utilities/recoverMessageAddress) to recover the signing address from a signature.\n *\n * @param client - Client to use\n * @param parameters - {@link SignMessageParameters}\n * @returns The signed message. {@link SignMessageReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { signMessage } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const signature = await signMessage(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   message: 'hello world',\n * })\n *\n * @example\n * // Account Hoisting\n * import { createWalletClient, custom } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { signMessage } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x…'),\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const signature = await signMessage(client, {\n *   message: 'hello world',\n * })\n */\nexport async function signMessage<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: Client<Transport, chain, account>,\n  {\n    account: account_ = client.account,\n    message,\n  }: SignMessageParameters<account>,\n): Promise<SignMessageReturnType> {\n  if (!account_)\n    throw new AccountNotFoundError({\n      docsPath: '/docs/actions/wallet/signMessage',\n    })\n  const account = parseAccount(account_)\n\n  if (account.signMessage) return account.signMessage({ message })\n\n  const message_ = (() => {\n    if (typeof message === 'string') return stringToHex(message)\n    if (message.raw instanceof Uint8Array) return toHex(message.raw)\n    return message.raw\n  })()\n\n  return client.request(\n    {\n      method: 'personal_sign',\n      params: [message_, account.address],\n    },\n    { retryCount: 0 },\n  )\n}\n","import type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { SignTransactionErrorType as SignTransactionErrorType_account } from '../../accounts/utils/signTransaction.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { AccountNotFoundError } from '../../errors/account.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { GetAccountParameter } from '../../types/account.js'\nimport type {\n  Chain,\n  DeriveChain,\n  GetChainParameter,\n} from '../../types/chain.js'\nimport type { GetTransactionRequestKzgParameter } from '../../types/kzg.js'\nimport type { RpcTransactionRequest } from '../../types/rpc.js'\nimport type {\n  TransactionRequest,\n  TransactionSerializable,\n  TransactionSerialized,\n} from '../../types/transaction.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type AssertCurrentChainErrorType,\n  assertCurrentChain,\n} from '../../utils/chain/assertCurrentChain.js'\nimport type { NumberToHexErrorType } from '../../utils/encoding/toHex.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\nimport {\n  type FormattedTransactionRequest,\n  formatTransactionRequest,\n} from '../../utils/formatters/transactionRequest.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type AssertRequestErrorType,\n  assertRequest,\n} from '../../utils/transaction/assertRequest.js'\nimport type { GetTransactionType } from '../../utils/transaction/getTransactionType.js'\nimport { type GetChainIdErrorType, getChainId } from '../public/getChainId.js'\n\nexport type SignTransactionRequest<\n  chain extends Chain | undefined = Chain | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  ///\n  _derivedChain extends Chain | undefined = DeriveChain<chain, chainOverride>,\n> = UnionOmit<FormattedTransactionRequest<_derivedChain>, 'from'>\n\nexport type SignTransactionParameters<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  request extends SignTransactionRequest<\n    chain,\n    chainOverride\n  > = SignTransactionRequest<chain, chainOverride>,\n> = request &\n  GetAccountParameter<account> &\n  GetChainParameter<chain, chainOverride> &\n  GetTransactionRequestKzgParameter<request>\n\nexport type SignTransactionReturnType<\n  request extends SignTransactionRequest = SignTransactionRequest,\n> = TransactionSerialized<GetTransactionType<request>>\n\nexport type SignTransactionErrorType =\n  | ParseAccountErrorType\n  | AssertRequestErrorType\n  | GetChainIdErrorType\n  | AssertCurrentChainErrorType\n  | SignTransactionErrorType_account\n  | NumberToHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Signs a transaction.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/signTransaction\n * - JSON-RPC Methods:\n *   - JSON-RPC Accounts: [`eth_signTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\n *   - Local Accounts: Signs locally. No JSON-RPC request.\n *\n * @param args - {@link SignTransactionParameters}\n * @returns The signed serialized transaction. {@link SignTransactionReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { signTransaction } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const signature = await signTransaction(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   to: '0x0000000000000000000000000000000000000000',\n *   value: 1n,\n * })\n *\n * @example\n * // Account Hoisting\n * import { createWalletClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { signTransaction } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x…'),\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const signature = await signTransaction(client, {\n *   to: '0x0000000000000000000000000000000000000000',\n *   value: 1n,\n * })\n */\nexport async function signTransaction<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n  chainOverride extends Chain | undefined = undefined,\n  const request extends SignTransactionRequest<\n    chain,\n    chainOverride\n  > = SignTransactionRequest<chain, chainOverride>,\n>(\n  client: Client<Transport, chain, account>,\n  parameters: SignTransactionParameters<chain, account, chainOverride, request>,\n): Promise<SignTransactionReturnType<request>> {\n  const {\n    account: account_ = client.account,\n    chain = client.chain,\n    ...transaction\n  } = parameters\n\n  if (!account_)\n    throw new AccountNotFoundError({\n      docsPath: '/docs/actions/wallet/signTransaction',\n    })\n  const account = parseAccount(account_)\n\n  assertRequest({\n    account,\n    ...parameters,\n  })\n\n  const chainId = await getAction(client, getChainId, 'getChainId')({})\n  if (chain !== null)\n    assertCurrentChain({\n      currentChainId: chainId,\n      chain,\n    })\n\n  const formatters = chain?.formatters || client.chain?.formatters\n  const format =\n    formatters?.transactionRequest?.format || formatTransactionRequest\n\n  if (account.signTransaction)\n    return account.signTransaction(\n      {\n        ...transaction,\n        chainId,\n      } as TransactionSerializable,\n      { serializer: client.chain?.serializers?.transaction },\n    ) as Promise<SignTransactionReturnType<request>>\n\n  return await client.request(\n    {\n      method: 'eth_signTransaction',\n      params: [\n        {\n          ...format(transaction as unknown as TransactionRequest),\n          chainId: numberToHex(chainId),\n          from: account.address,\n        } as unknown as RpcTransactionRequest,\n      ],\n    },\n    { retryCount: 0 },\n  )\n}\n","import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type SwitchChainParameters = {\n  /** ID of Chain to switch to */\n  id: Chain['id']\n}\n\nexport type SwitchChainErrorType =\n  | NumberToHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Switch the target chain in a wallet.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/switchChain\n * - JSON-RPC Methods: [`wallet_switchEthereumChain`](https://eips.ethereum.org/EIPS/eip-3326)\n *\n * @param client - Client to use\n * @param parameters - {@link SwitchChainParameters}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet, optimism } from 'viem/chains'\n * import { switchChain } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * await switchChain(client, { id: optimism.id })\n */\nexport async function switchChain<\n  chain extends Chain | undefined,\n  account extends Account | undefined = undefined,\n>(client: Client<Transport, chain, account>, { id }: SwitchChainParameters) {\n  await client.request(\n    {\n      method: 'wallet_switchEthereumChain',\n      params: [\n        {\n          chainId: numberToHex(id),\n        },\n      ],\n    },\n    { retryCount: 0 },\n  )\n}\n","import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { WatchAssetParams } from '../../types/eip1193.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type WatchAssetParameters = WatchAssetParams\nexport type WatchAssetReturnType = boolean\nexport type WatchAssetErrorType = RequestErrorType | ErrorType\n\n/**\n * Adds an EVM chain to the wallet.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/watchAsset\n * - JSON-RPC Methods: [`eth_switchEthereumChain`](https://eips.ethereum.org/EIPS/eip-747)\n *\n * @param client - Client to use\n * @param parameters - {@link WatchAssetParameters}\n * @returns Boolean indicating if the token was successfully added. {@link WatchAssetReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { watchAsset } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const success = await watchAsset(client, {\n *   type: 'ERC20',\n *   options: {\n *     address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n *     decimals: 18,\n *     symbol: 'WETH',\n *   },\n * })\n */\nexport async function watchAsset<\n  chain extends Chain | undefined,\n  account extends Account | undefined = undefined,\n>(\n  client: Client<Transport, chain, account>,\n  params: WatchAssetParameters,\n): Promise<WatchAssetReturnType> {\n  const added = await client.request(\n    {\n      method: 'wallet_watchAsset',\n      params,\n    },\n    { retryCount: 0 },\n  )\n  return added\n}\n","import type { Address } from 'abitype'\n\nimport type { Account } from '../accounts/types.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport type { ParseAccount } from '../types/account.js'\nimport type { Chain } from '../types/chain.js'\nimport type { RpcSchema, WalletRpcSchema } from '../types/eip1193.js'\nimport type { Prettify } from '../types/utils.js'\nimport {\n  type Client,\n  type ClientConfig,\n  type CreateClientErrorType,\n  createClient,\n} from './createClient.js'\nimport { type WalletActions, walletActions } from './decorators/wallet.js'\nimport type { Transport } from './transports/createTransport.js'\n\nexport type WalletClientConfig<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  accountOrAddress extends Account | Address | undefined =\n    | Account\n    | Address\n    | undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n> = Prettify<\n  Pick<\n    ClientConfig<transport, chain, accountOrAddress, rpcSchema>,\n    | 'account'\n    | 'cacheTime'\n    | 'ccipRead'\n    | 'chain'\n    | 'key'\n    | 'name'\n    | 'pollingInterval'\n    | 'rpcSchema'\n    | 'transport'\n  >\n>\n\nexport type WalletClient<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n> = Prettify<\n  Client<\n    transport,\n    chain,\n    account,\n    rpcSchema extends RpcSchema\n      ? [...WalletRpcSchema, ...rpcSchema]\n      : WalletRpcSchema,\n    WalletActions<chain, account>\n  >\n>\n\nexport type CreateWalletClientErrorType = CreateClientErrorType | ErrorType\n\n/**\n * Creates a Wallet Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\n *\n * - Docs: https://viem.sh/docs/clients/wallet\n *\n * A Wallet Client is an interface to interact with [Ethereum Account(s)](https://ethereum.org/en/glossary/#account) and provides the ability to retrieve accounts, execute transactions, sign messages, etc. through [Wallet Actions](https://viem.sh/docs/actions/wallet/introduction).\n *\n * The Wallet Client supports signing over:\n * - [JSON-RPC Accounts](https://viem.sh/docs/clients/wallet#json-rpc-accounts) (e.g. Browser Extension Wallets, WalletConnect, etc).\n * - [Local Accounts](https://viem.sh/docs/clients/wallet#local-accounts-private-key-mnemonic-etc) (e.g. private key/mnemonic wallets).\n *\n * @param config - {@link WalletClientConfig}\n * @returns A Wallet Client. {@link WalletClient}\n *\n * @example\n * // JSON-RPC Account\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n *\n * @example\n * // Local Account\n * import { createWalletClient, custom } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x…')\n *   chain: mainnet,\n *   transport: http(),\n * })\n */\nexport function createWalletClient<\n  transport extends Transport,\n  chain extends Chain | undefined = undefined,\n  accountOrAddress extends Account | Address | undefined = undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n>(\n  parameters: WalletClientConfig<transport, chain, accountOrAddress, rpcSchema>,\n): WalletClient<transport, chain, ParseAccount<accountOrAddress>, rpcSchema>\n\nexport function createWalletClient(\n  parameters: WalletClientConfig,\n): WalletClient {\n  const { key = 'wallet', name = 'Wallet Client', transport } = parameters\n  const client = createClient({\n    ...parameters,\n    key,\n    name,\n    transport,\n    type: 'walletClient',\n  })\n  return client.extend(walletActions)\n}\n","// TODO(v3): Rename to `toLocalAccount` + add `source` property to define source (privateKey, mnemonic, hdKey, etc).\n\nimport type { Address } from 'abitype'\n\nimport {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../errors/address.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport {\n  type IsAddressErrorType,\n  isAddress,\n} from '../utils/address/isAddress.js'\nimport type {\n  AccountSource,\n  CustomSource,\n  JsonRpcAccount,\n  LocalAccount,\n} from './types.js'\n\ntype GetAccountReturnType<accountSource extends AccountSource> =\n  | (accountSource extends Address ? JsonRpcAccount : never)\n  | (accountSource extends CustomSource ? LocalAccount : never)\n\nexport type ToAccountErrorType =\n  | InvalidAddressErrorType\n  | IsAddressErrorType\n  | ErrorType\n\n/**\n * @description Creates an Account from a custom signing implementation.\n *\n * @returns A Local Account.\n */\nexport function toAccount<accountSource extends AccountSource>(\n  source: accountSource,\n): GetAccountReturnType<accountSource> {\n  if (typeof source === 'string') {\n    if (!isAddress(source, { strict: false }))\n      throw new InvalidAddressError({ address: source })\n    return {\n      address: source,\n      type: 'json-rpc',\n    } as GetAccountReturnType<accountSource>\n  }\n\n  if (!isAddress(source.address, { strict: false }))\n    throw new InvalidAddressError({ address: source.address })\n  return {\n    address: source.address,\n    nonceManager: source.nonceManager,\n    sign: source.sign,\n    signAuthorization: source.signAuthorization,\n    signMessage: source.signMessage,\n    signTransaction: source.signTransaction,\n    signTypedData: source.signTypedData,\n    source: 'custom',\n    type: 'local',\n  } as GetAccountReturnType<accountSource>\n}\n","import type { Chain, ChainFormatters } from '../../types/chain.js'\nimport type { Assign, Prettify } from '../../types/utils.js'\n\nexport function defineChain<\n  formatters extends ChainFormatters,\n  const chain extends Chain<formatters>,\n>(chain: chain): Prettify<Assign<Chain<undefined>, chain>> {\n  return {\n    formatters: undefined,\n    fees: undefined,\n    serializers: undefined,\n    ...chain,\n  } as Assign<Chain<undefined>, chain>\n}\n","import { maxUint16 } from '../../constants/number.js'\n\nexport const gasPerPubdataDefault = 50000n\nexport const maxBytecodeSize = maxUint16 * 32n\nexport const requiredL1ToL2GasPerPubdataLimit = 800n\n","import type { ChainFormatters } from '../types/chain.js'\nimport { hexToBigInt, hexToNumber } from '../utils/encoding/fromHex.js'\nimport { hexToBytes } from '../utils/encoding/toBytes.js'\nimport { toHex } from '../utils/encoding/toHex.js'\nimport { defineBlock } from '../utils/formatters/block.js'\nimport { formatLog } from '../utils/formatters/log.js'\nimport { defineTransaction } from '../utils/formatters/transaction.js'\nimport { defineTransactionReceipt } from '../utils/formatters/transactionReceipt.js'\nimport { defineTransactionRequest } from '../utils/formatters/transactionRequest.js'\nimport { gasPerPubdataDefault } from './constants/number.js'\nimport type { ZksyncBlock, ZksyncRpcBlock } from './types/block.js'\nimport type { ZksyncL2ToL1Log, ZksyncLog } from './types/log.js'\nimport type {\n  ZksyncRpcTransaction,\n  ZksyncRpcTransactionReceipt,\n  ZksyncRpcTransactionRequest,\n  ZksyncTransaction,\n  ZksyncTransactionReceipt,\n  ZksyncTransactionRequest,\n} from './types/transaction.js'\n\nexport const formatters = {\n  block: /*#__PURE__*/ defineBlock({\n    format(args: ZksyncRpcBlock): ZksyncBlock {\n      const transactions = args.transactions?.map((transaction) => {\n        if (typeof transaction === 'string') return transaction\n        const formatted = formatters.transaction?.format(\n          transaction as ZksyncRpcTransaction,\n        ) as ZksyncTransaction\n        if (formatted.typeHex === '0x71') formatted.type = 'eip712'\n        else if (formatted.typeHex === '0xff') formatted.type = 'priority'\n        return formatted\n      })\n      return {\n        l1BatchNumber: args.l1BatchNumber\n          ? hexToBigInt(args.l1BatchNumber)\n          : null,\n        l1BatchTimestamp: args.l1BatchTimestamp\n          ? hexToBigInt(args.l1BatchTimestamp)\n          : null,\n        transactions,\n      } as ZksyncBlock\n    },\n  }),\n  transaction: /*#__PURE__*/ defineTransaction({\n    format(args: ZksyncRpcTransaction): ZksyncTransaction {\n      const transaction = {} as ZksyncTransaction\n      if (args.type === '0x71') transaction.type = 'eip712'\n      else if (args.type === '0xff') transaction.type = 'priority'\n      return {\n        ...transaction,\n        l1BatchNumber: args.l1BatchNumber\n          ? hexToBigInt(args.l1BatchNumber)\n          : null,\n        l1BatchTxIndex: args.l1BatchTxIndex\n          ? hexToBigInt(args.l1BatchTxIndex)\n          : null,\n      } as ZksyncTransaction\n    },\n  }),\n  transactionReceipt: /*#__PURE__*/ defineTransactionReceipt({\n    format(args: ZksyncRpcTransactionReceipt): ZksyncTransactionReceipt {\n      return {\n        l1BatchNumber: args.l1BatchNumber\n          ? hexToBigInt(args.l1BatchNumber)\n          : null,\n        l1BatchTxIndex: args.l1BatchTxIndex\n          ? hexToBigInt(args.l1BatchTxIndex)\n          : null,\n        logs: args.logs.map((log) => {\n          return {\n            ...formatLog(log),\n            l1BatchNumber: log.l1BatchNumber\n              ? hexToBigInt(log.l1BatchNumber)\n              : null,\n            transactionLogIndex: hexToNumber(log.transactionLogIndex),\n            logType: log.logType,\n          }\n        }) as ZksyncLog[],\n        l2ToL1Logs: args.l2ToL1Logs.map((l2ToL1Log) => {\n          return {\n            blockNumber: hexToBigInt(l2ToL1Log.blockHash),\n            blockHash: l2ToL1Log.blockHash,\n            l1BatchNumber: l2ToL1Log.l1BatchNumber\n              ? hexToBigInt(l2ToL1Log.l1BatchNumber)\n              : null,\n            transactionIndex: hexToBigInt(l2ToL1Log.transactionIndex),\n            shardId: hexToBigInt(l2ToL1Log.shardId),\n            isService: l2ToL1Log.isService,\n            sender: l2ToL1Log.sender,\n            key: l2ToL1Log.key,\n            value: l2ToL1Log.value,\n            transactionHash: l2ToL1Log.transactionHash,\n            logIndex: hexToBigInt(l2ToL1Log.logIndex),\n          }\n        }) as ZksyncL2ToL1Log[],\n      } as ZksyncTransactionReceipt\n    },\n  }),\n  transactionRequest: /*#__PURE__*/ defineTransactionRequest({\n    exclude: [\n      'customSignature',\n      'factoryDeps',\n      'gasPerPubdata',\n      'paymaster',\n      'paymasterInput',\n    ],\n    format(args: ZksyncTransactionRequest): ZksyncRpcTransactionRequest {\n      if (\n        args.gasPerPubdata ||\n        (args.paymaster && args.paymasterInput) ||\n        args.factoryDeps ||\n        args.customSignature\n      )\n        return {\n          eip712Meta: {\n            ...(args.gasPerPubdata\n              ? { gasPerPubdata: toHex(args.gasPerPubdata) }\n              : { gasPerPubdata: toHex(gasPerPubdataDefault) }),\n            ...(args.paymaster && args.paymasterInput\n              ? {\n                  paymasterParams: {\n                    paymaster: args.paymaster,\n                    paymasterInput: Array.from(hexToBytes(args.paymasterInput)),\n                  },\n                }\n              : {}),\n            ...(args.factoryDeps\n              ? {\n                  factoryDeps: args.factoryDeps.map((dep) =>\n                    Array.from(hexToBytes(dep)),\n                  ),\n                }\n              : {}),\n            ...(args.customSignature\n              ? {\n                  customSignature: Array.from(hexToBytes(args.customSignature)),\n                }\n              : {}),\n          },\n          type: '0x71',\n        } as unknown as ZksyncRpcTransactionRequest\n      return {} as ZksyncRpcTransactionRequest\n    },\n  }),\n} as const satisfies ChainFormatters\n","import { versionedHashVersionKzg } from '../../constants/kzg.js'\nimport { maxUint256 } from '../../constants/number.js'\nimport {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../../errors/address.js'\nimport { BaseError, type BaseErrorType } from '../../errors/base.js'\nimport {\n  EmptyBlobError,\n  type EmptyBlobErrorType,\n  InvalidVersionedHashSizeError,\n  type InvalidVersionedHashSizeErrorType,\n  InvalidVersionedHashVersionError,\n  type InvalidVersionedHashVersionErrorType,\n} from '../../errors/blob.js'\nimport {\n  InvalidChainIdError,\n  type InvalidChainIdErrorType,\n} from '../../errors/chain.js'\nimport {\n  FeeCapTooHighError,\n  type FeeCapTooHighErrorType,\n  TipAboveFeeCapError,\n  type TipAboveFeeCapErrorType,\n} from '../../errors/node.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  TransactionSerializableEIP1559,\n  TransactionSerializableEIP2930,\n  TransactionSerializableEIP4844,\n  TransactionSerializableEIP7702,\n  TransactionSerializableLegacy,\n} from '../../types/transaction.js'\nimport { type IsAddressErrorType, isAddress } from '../address/isAddress.js'\nimport { size } from '../data/size.js'\nimport { slice } from '../data/slice.js'\nimport { hexToNumber } from '../encoding/fromHex.js'\n\nexport type AssertTransactionEIP7702ErrorType =\n  | AssertTransactionEIP1559ErrorType\n  | InvalidAddressErrorType\n  | InvalidChainIdErrorType\n  | ErrorType\n\nexport function assertTransactionEIP7702(\n  transaction: TransactionSerializableEIP7702,\n) {\n  const { authorizationList } = transaction\n  if (authorizationList) {\n    for (const authorization of authorizationList) {\n      const { chainId } = authorization\n      const address = authorization.address\n      if (!isAddress(address)) throw new InvalidAddressError({ address })\n      if (chainId < 0) throw new InvalidChainIdError({ chainId })\n    }\n  }\n  assertTransactionEIP1559(transaction as {} as TransactionSerializableEIP1559)\n}\n\nexport type AssertTransactionEIP4844ErrorType =\n  | AssertTransactionEIP1559ErrorType\n  | EmptyBlobErrorType\n  | InvalidVersionedHashSizeErrorType\n  | InvalidVersionedHashVersionErrorType\n  | ErrorType\n\nexport function assertTransactionEIP4844(\n  transaction: TransactionSerializableEIP4844,\n) {\n  const { blobVersionedHashes } = transaction\n  if (blobVersionedHashes) {\n    if (blobVersionedHashes.length === 0) throw new EmptyBlobError()\n    for (const hash of blobVersionedHashes) {\n      const size_ = size(hash)\n      const version = hexToNumber(slice(hash, 0, 1))\n      if (size_ !== 32)\n        throw new InvalidVersionedHashSizeError({ hash, size: size_ })\n      if (version !== versionedHashVersionKzg)\n        throw new InvalidVersionedHashVersionError({\n          hash,\n          version,\n        })\n    }\n  }\n  assertTransactionEIP1559(transaction as {} as TransactionSerializableEIP1559)\n}\n\nexport type AssertTransactionEIP1559ErrorType =\n  | BaseErrorType\n  | IsAddressErrorType\n  | InvalidAddressErrorType\n  | InvalidChainIdErrorType\n  | FeeCapTooHighErrorType\n  | TipAboveFeeCapErrorType\n  | ErrorType\n\nexport function assertTransactionEIP1559(\n  transaction: TransactionSerializableEIP1559,\n) {\n  const { chainId, maxPriorityFeePerGas, maxFeePerGas, to } = transaction\n  if (chainId <= 0) throw new InvalidChainIdError({ chainId })\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n  if (maxFeePerGas && maxFeePerGas > maxUint256)\n    throw new FeeCapTooHighError({ maxFeePerGas })\n  if (\n    maxPriorityFeePerGas &&\n    maxFeePerGas &&\n    maxPriorityFeePerGas > maxFeePerGas\n  )\n    throw new TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas })\n}\n\nexport type AssertTransactionEIP2930ErrorType =\n  | BaseErrorType\n  | IsAddressErrorType\n  | InvalidAddressErrorType\n  | InvalidChainIdErrorType\n  | FeeCapTooHighErrorType\n  | ErrorType\n\nexport function assertTransactionEIP2930(\n  transaction: TransactionSerializableEIP2930,\n) {\n  const { chainId, maxPriorityFeePerGas, gasPrice, maxFeePerGas, to } =\n    transaction\n  if (chainId <= 0) throw new InvalidChainIdError({ chainId })\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n  if (maxPriorityFeePerGas || maxFeePerGas)\n    throw new BaseError(\n      '`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid EIP-2930 Transaction attribute.',\n    )\n  if (gasPrice && gasPrice > maxUint256)\n    throw new FeeCapTooHighError({ maxFeePerGas: gasPrice })\n}\n\nexport type AssertTransactionLegacyErrorType =\n  | BaseErrorType\n  | IsAddressErrorType\n  | InvalidAddressErrorType\n  | InvalidChainIdErrorType\n  | FeeCapTooHighErrorType\n  | ErrorType\n\nexport function assertTransactionLegacy(\n  transaction: TransactionSerializableLegacy,\n) {\n  const { chainId, maxPriorityFeePerGas, gasPrice, maxFeePerGas, to } =\n    transaction\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n  if (typeof chainId !== 'undefined' && chainId <= 0)\n    throw new InvalidChainIdError({ chainId })\n  if (maxPriorityFeePerGas || maxFeePerGas)\n    throw new BaseError(\n      '`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid Legacy Transaction attribute.',\n    )\n  if (gasPrice && gasPrice > maxUint256)\n    throw new FeeCapTooHighError({ maxFeePerGas: gasPrice })\n}\n","import {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../../errors/address.js'\nimport {\n  InvalidStorageKeySizeError,\n  type InvalidStorageKeySizeErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { AccessList } from '../../types/transaction.js'\nimport { type IsAddressErrorType, isAddress } from '../address/isAddress.js'\nimport type { RecursiveArray } from '../encoding/toRlp.js'\n\nexport type SerializeAccessListErrorType =\n  | InvalidStorageKeySizeErrorType\n  | InvalidAddressErrorType\n  | IsAddressErrorType\n  | ErrorType\n\n/*\n * Serialize an  EIP-2930 access list\n * @remarks\n * Use to create a transaction serializer with support for EIP-2930 access lists\n *\n * @param accessList - Array of objects of address and arrays of Storage Keys\n * @throws InvalidAddressError, InvalidStorageKeySizeError\n * @returns Array of hex strings\n */\nexport function serializeAccessList(\n  accessList?: AccessList | undefined,\n): RecursiveArray<Hex> {\n  if (!accessList || accessList.length === 0) return []\n\n  const serializedAccessList = []\n  for (let i = 0; i < accessList.length; i++) {\n    const { address, storageKeys } = accessList[i]\n\n    for (let j = 0; j < storageKeys.length; j++) {\n      if (storageKeys[j].length - 2 !== 64) {\n        throw new InvalidStorageKeySizeError({ storageKey: storageKeys[j] })\n      }\n    }\n\n    if (!isAddress(address, { strict: false })) {\n      throw new InvalidAddressError({ address })\n    }\n\n    serializedAccessList.push([address, storageKeys])\n  }\n  return serializedAccessList\n}\n","import {\n  InvalidLegacyVError,\n  type InvalidLegacyVErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  ByteArray,\n  Hex,\n  Signature,\n  SignatureLegacy,\n} from '../../types/misc.js'\nimport type {\n  TransactionSerializable,\n  TransactionSerializableEIP1559,\n  TransactionSerializableEIP2930,\n  TransactionSerializableEIP4844,\n  TransactionSerializableEIP7702,\n  TransactionSerializableGeneric,\n  TransactionSerializableLegacy,\n  TransactionSerialized,\n  TransactionSerializedEIP1559,\n  TransactionSerializedEIP2930,\n  TransactionSerializedEIP4844,\n  TransactionSerializedEIP7702,\n  TransactionSerializedLegacy,\n  TransactionType,\n} from '../../types/transaction.js'\nimport type { OneOf } from '../../types/utils.js'\nimport {\n  type SerializeAuthorizationListErrorType,\n  serializeAuthorizationList,\n} from '../authorization/serializeAuthorizationList.js'\nimport {\n  type BlobsToCommitmentsErrorType,\n  blobsToCommitments,\n} from '../blob/blobsToCommitments.js'\nimport {\n  blobsToProofs,\n  type blobsToProofsErrorType,\n} from '../blob/blobsToProofs.js'\nimport {\n  type CommitmentsToVersionedHashesErrorType,\n  commitmentsToVersionedHashes,\n} from '../blob/commitmentsToVersionedHashes.js'\nimport {\n  type ToBlobSidecarsErrorType,\n  toBlobSidecars,\n} from '../blob/toBlobSidecars.js'\nimport { type ConcatHexErrorType, concatHex } from '../data/concat.js'\nimport { trim } from '../data/trim.js'\nimport {\n  bytesToHex,\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../encoding/toHex.js'\nimport { type ToRlpErrorType, toRlp } from '../encoding/toRlp.js'\n\nimport {\n  type AssertTransactionEIP1559ErrorType,\n  type AssertTransactionEIP2930ErrorType,\n  type AssertTransactionEIP4844ErrorType,\n  type AssertTransactionEIP7702ErrorType,\n  type AssertTransactionLegacyErrorType,\n  assertTransactionEIP1559,\n  assertTransactionEIP2930,\n  assertTransactionEIP4844,\n  assertTransactionEIP7702,\n  assertTransactionLegacy,\n} from './assertTransaction.js'\nimport {\n  type GetTransactionType,\n  type GetTransactionTypeErrorType,\n  getTransactionType,\n} from './getTransactionType.js'\nimport {\n  type SerializeAccessListErrorType,\n  serializeAccessList,\n} from './serializeAccessList.js'\n\nexport type SerializedTransactionReturnType<\n  transaction extends TransactionSerializable = TransactionSerializable,\n  ///\n  _transactionType extends TransactionType = GetTransactionType<transaction>,\n> = TransactionSerialized<_transactionType>\n\nexport type SerializeTransactionFn<\n  transaction extends TransactionSerializableGeneric = TransactionSerializable,\n  ///\n  _transactionType extends TransactionType = never,\n> = typeof serializeTransaction<\n  OneOf<TransactionSerializable | transaction>,\n  _transactionType\n>\n\nexport type SerializeTransactionErrorType =\n  | GetTransactionTypeErrorType\n  | SerializeTransactionEIP1559ErrorType\n  | SerializeTransactionEIP2930ErrorType\n  | SerializeTransactionEIP4844ErrorType\n  | SerializeTransactionEIP7702ErrorType\n  | SerializeTransactionLegacyErrorType\n  | ErrorType\n\nexport function serializeTransaction<\n  const transaction extends TransactionSerializable,\n  ///\n  _transactionType extends TransactionType = GetTransactionType<transaction>,\n>(\n  transaction: transaction,\n  signature?: Signature | undefined,\n): SerializedTransactionReturnType<transaction, _transactionType> {\n  const type = getTransactionType(transaction) as GetTransactionType\n\n  if (type === 'eip1559')\n    return serializeTransactionEIP1559(\n      transaction as TransactionSerializableEIP1559,\n      signature,\n    ) as SerializedTransactionReturnType<transaction>\n\n  if (type === 'eip2930')\n    return serializeTransactionEIP2930(\n      transaction as TransactionSerializableEIP2930,\n      signature,\n    ) as SerializedTransactionReturnType<transaction>\n\n  if (type === 'eip4844')\n    return serializeTransactionEIP4844(\n      transaction as TransactionSerializableEIP4844,\n      signature,\n    ) as SerializedTransactionReturnType<transaction>\n\n  if (type === 'eip7702')\n    return serializeTransactionEIP7702(\n      transaction as TransactionSerializableEIP7702,\n      signature,\n    ) as SerializedTransactionReturnType<transaction>\n\n  return serializeTransactionLegacy(\n    transaction as TransactionSerializableLegacy,\n    signature as SignatureLegacy,\n  ) as SerializedTransactionReturnType<transaction>\n}\n\ntype SerializeTransactionEIP7702ErrorType =\n  | AssertTransactionEIP7702ErrorType\n  | SerializeAuthorizationListErrorType\n  | ConcatHexErrorType\n  | InvalidLegacyVErrorType\n  | NumberToHexErrorType\n  | ToRlpErrorType\n  | SerializeAccessListErrorType\n  | ErrorType\n\nfunction serializeTransactionEIP7702(\n  transaction: TransactionSerializableEIP7702,\n  signature?: Signature | undefined,\n): TransactionSerializedEIP7702 {\n  const {\n    authorizationList,\n    chainId,\n    gas,\n    nonce,\n    to,\n    value,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    accessList,\n    data,\n  } = transaction\n\n  assertTransactionEIP7702(transaction)\n\n  const serializedAccessList = serializeAccessList(accessList)\n  const serializedAuthorizationList =\n    serializeAuthorizationList(authorizationList)\n\n  return concatHex([\n    '0x04',\n    toRlp([\n      numberToHex(chainId),\n      nonce ? numberToHex(nonce) : '0x',\n      maxPriorityFeePerGas ? numberToHex(maxPriorityFeePerGas) : '0x',\n      maxFeePerGas ? numberToHex(maxFeePerGas) : '0x',\n      gas ? numberToHex(gas) : '0x',\n      to ?? '0x',\n      value ? numberToHex(value) : '0x',\n      data ?? '0x',\n      serializedAccessList,\n      serializedAuthorizationList,\n      ...toYParitySignatureArray(transaction, signature),\n    ]),\n  ]) as TransactionSerializedEIP7702\n}\n\ntype SerializeTransactionEIP4844ErrorType =\n  | AssertTransactionEIP4844ErrorType\n  | BlobsToCommitmentsErrorType\n  | CommitmentsToVersionedHashesErrorType\n  | blobsToProofsErrorType\n  | ToBlobSidecarsErrorType\n  | ConcatHexErrorType\n  | InvalidLegacyVErrorType\n  | NumberToHexErrorType\n  | ToRlpErrorType\n  | SerializeAccessListErrorType\n  | ErrorType\n\nfunction serializeTransactionEIP4844(\n  transaction: TransactionSerializableEIP4844,\n  signature?: Signature | undefined,\n): TransactionSerializedEIP4844 {\n  const {\n    chainId,\n    gas,\n    nonce,\n    to,\n    value,\n    maxFeePerBlobGas,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    accessList,\n    data,\n  } = transaction\n\n  assertTransactionEIP4844(transaction)\n\n  let blobVersionedHashes = transaction.blobVersionedHashes\n  let sidecars = transaction.sidecars\n  // If `blobs` are passed, we will need to compute the KZG commitments & proofs.\n  if (\n    transaction.blobs &&\n    (typeof blobVersionedHashes === 'undefined' ||\n      typeof sidecars === 'undefined')\n  ) {\n    const blobs = (\n      typeof transaction.blobs[0] === 'string'\n        ? transaction.blobs\n        : (transaction.blobs as ByteArray[]).map((x) => bytesToHex(x))\n    ) as Hex[]\n    const kzg = transaction.kzg!\n    const commitments = blobsToCommitments({\n      blobs,\n      kzg,\n    })\n\n    if (typeof blobVersionedHashes === 'undefined')\n      blobVersionedHashes = commitmentsToVersionedHashes({\n        commitments,\n      })\n    if (typeof sidecars === 'undefined') {\n      const proofs = blobsToProofs({ blobs, commitments, kzg })\n      sidecars = toBlobSidecars({ blobs, commitments, proofs })\n    }\n  }\n\n  const serializedAccessList = serializeAccessList(accessList)\n\n  const serializedTransaction = [\n    numberToHex(chainId),\n    nonce ? numberToHex(nonce) : '0x',\n    maxPriorityFeePerGas ? numberToHex(maxPriorityFeePerGas) : '0x',\n    maxFeePerGas ? numberToHex(maxFeePerGas) : '0x',\n    gas ? numberToHex(gas) : '0x',\n    to ?? '0x',\n    value ? numberToHex(value) : '0x',\n    data ?? '0x',\n    serializedAccessList,\n    maxFeePerBlobGas ? numberToHex(maxFeePerBlobGas) : '0x',\n    blobVersionedHashes ?? [],\n    ...toYParitySignatureArray(transaction, signature),\n  ] as const\n\n  const blobs: Hex[] = []\n  const commitments: Hex[] = []\n  const proofs: Hex[] = []\n  if (sidecars)\n    for (let i = 0; i < sidecars.length; i++) {\n      const { blob, commitment, proof } = sidecars[i]\n      blobs.push(blob)\n      commitments.push(commitment)\n      proofs.push(proof)\n    }\n\n  return concatHex([\n    '0x03',\n    sidecars\n      ? // If sidecars are enabled, envelope turns into a \"wrapper\":\n        toRlp([serializedTransaction, blobs, commitments, proofs])\n      : // If sidecars are disabled, standard envelope is used:\n        toRlp(serializedTransaction),\n  ]) as TransactionSerializedEIP4844\n}\n\ntype SerializeTransactionEIP1559ErrorType =\n  | AssertTransactionEIP1559ErrorType\n  | ConcatHexErrorType\n  | InvalidLegacyVErrorType\n  | NumberToHexErrorType\n  | ToRlpErrorType\n  | SerializeAccessListErrorType\n  | ErrorType\n\nfunction serializeTransactionEIP1559(\n  transaction: TransactionSerializableEIP1559,\n  signature?: Signature | undefined,\n): TransactionSerializedEIP1559 {\n  const {\n    chainId,\n    gas,\n    nonce,\n    to,\n    value,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    accessList,\n    data,\n  } = transaction\n\n  assertTransactionEIP1559(transaction)\n\n  const serializedAccessList = serializeAccessList(accessList)\n\n  const serializedTransaction = [\n    numberToHex(chainId),\n    nonce ? numberToHex(nonce) : '0x',\n    maxPriorityFeePerGas ? numberToHex(maxPriorityFeePerGas) : '0x',\n    maxFeePerGas ? numberToHex(maxFeePerGas) : '0x',\n    gas ? numberToHex(gas) : '0x',\n    to ?? '0x',\n    value ? numberToHex(value) : '0x',\n    data ?? '0x',\n    serializedAccessList,\n    ...toYParitySignatureArray(transaction, signature),\n  ]\n\n  return concatHex([\n    '0x02',\n    toRlp(serializedTransaction),\n  ]) as TransactionSerializedEIP1559\n}\n\ntype SerializeTransactionEIP2930ErrorType =\n  | AssertTransactionEIP2930ErrorType\n  | ConcatHexErrorType\n  | InvalidLegacyVErrorType\n  | NumberToHexErrorType\n  | ToRlpErrorType\n  | SerializeAccessListErrorType\n  | ErrorType\n\nfunction serializeTransactionEIP2930(\n  transaction: TransactionSerializableEIP2930,\n  signature?: Signature | undefined,\n): TransactionSerializedEIP2930 {\n  const { chainId, gas, data, nonce, to, value, accessList, gasPrice } =\n    transaction\n\n  assertTransactionEIP2930(transaction)\n\n  const serializedAccessList = serializeAccessList(accessList)\n\n  const serializedTransaction = [\n    numberToHex(chainId),\n    nonce ? numberToHex(nonce) : '0x',\n    gasPrice ? numberToHex(gasPrice) : '0x',\n    gas ? numberToHex(gas) : '0x',\n    to ?? '0x',\n    value ? numberToHex(value) : '0x',\n    data ?? '0x',\n    serializedAccessList,\n    ...toYParitySignatureArray(transaction, signature),\n  ]\n\n  return concatHex([\n    '0x01',\n    toRlp(serializedTransaction),\n  ]) as TransactionSerializedEIP2930\n}\n\ntype SerializeTransactionLegacyErrorType =\n  | AssertTransactionLegacyErrorType\n  | InvalidLegacyVErrorType\n  | NumberToHexErrorType\n  | ToRlpErrorType\n  | ErrorType\n\nfunction serializeTransactionLegacy(\n  transaction: TransactionSerializableLegacy,\n  signature?: SignatureLegacy | undefined,\n): TransactionSerializedLegacy {\n  const { chainId = 0, gas, data, nonce, to, value, gasPrice } = transaction\n\n  assertTransactionLegacy(transaction)\n\n  let serializedTransaction = [\n    nonce ? numberToHex(nonce) : '0x',\n    gasPrice ? numberToHex(gasPrice) : '0x',\n    gas ? numberToHex(gas) : '0x',\n    to ?? '0x',\n    value ? numberToHex(value) : '0x',\n    data ?? '0x',\n  ]\n\n  if (signature) {\n    const v = (() => {\n      // EIP-155 (inferred chainId)\n      if (signature.v >= 35n) {\n        const inferredChainId = (signature.v - 35n) / 2n\n        if (inferredChainId > 0) return signature.v\n        return 27n + (signature.v === 35n ? 0n : 1n)\n      }\n\n      // EIP-155 (explicit chainId)\n      if (chainId > 0)\n        return BigInt(chainId * 2) + BigInt(35n + signature.v - 27n)\n\n      // Pre-EIP-155 (no chainId)\n      const v = 27n + (signature.v === 27n ? 0n : 1n)\n      if (signature.v !== v) throw new InvalidLegacyVError({ v: signature.v })\n      return v\n    })()\n\n    const r = trim(signature.r)\n    const s = trim(signature.s)\n\n    serializedTransaction = [\n      ...serializedTransaction,\n      numberToHex(v),\n      r === '0x00' ? '0x' : r,\n      s === '0x00' ? '0x' : s,\n    ]\n  } else if (chainId > 0) {\n    serializedTransaction = [\n      ...serializedTransaction,\n      numberToHex(chainId),\n      '0x',\n      '0x',\n    ]\n  }\n\n  return toRlp(serializedTransaction) as TransactionSerializedLegacy\n}\n\nexport function toYParitySignatureArray(\n  transaction: TransactionSerializableGeneric,\n  signature_?: Signature | undefined,\n) {\n  const signature = signature_ ?? transaction\n  const { v, yParity } = signature\n\n  if (typeof signature.r === 'undefined') return []\n  if (typeof signature.s === 'undefined') return []\n  if (typeof v === 'undefined' && typeof yParity === 'undefined') return []\n\n  const r = trim(signature.r)\n  const s = trim(signature.s)\n\n  const yParity_ = (() => {\n    if (typeof yParity === 'number') return yParity ? numberToHex(1) : '0x'\n    if (v === 0n) return '0x'\n    if (v === 1n) return numberToHex(1)\n\n    return v === 27n ? '0x' : numberToHex(1)\n  })()\n\n  return [yParity_, r === '0x00' ? '0x' : r, s === '0x00' ? '0x' : s]\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type {\n  AuthorizationList,\n  SerializedAuthorizationList,\n} from '../../types/authorization.js'\nimport { toHex } from '../encoding/toHex.js'\nimport { toYParitySignatureArray } from '../transaction/serializeTransaction.js'\n\nexport type SerializeAuthorizationListReturnType = SerializedAuthorizationList\n\nexport type SerializeAuthorizationListErrorType = ErrorType\n\n/*\n * Serializes an EIP-7702 authorization list.\n */\nexport function serializeAuthorizationList(\n  authorizationList?: AuthorizationList<number, true> | undefined,\n): SerializeAuthorizationListReturnType {\n  if (!authorizationList || authorizationList.length === 0) return []\n\n  const serializedAuthorizationList = []\n  for (const authorization of authorizationList) {\n    const { chainId, nonce, ...signature } = authorization\n    const contractAddress = authorization.address\n    serializedAuthorizationList.push([\n      chainId ? toHex(chainId) : '0x',\n      contractAddress,\n      nonce ? toHex(nonce) : '0x',\n      ...toYParitySignatureArray({}, signature),\n    ])\n  }\n\n  return serializedAuthorizationList as {} as SerializeAuthorizationListReturnType\n}\n","import { BaseError } from '../../errors/base.js'\n\nexport type InvalidEip712TransactionErrorType =\n  InvalidEip712TransactionError & {\n    name: 'InvalidEip712TransactionError'\n  }\nexport class InvalidEip712TransactionError extends BaseError {\n  constructor() {\n    super(\n      [\n        'Transaction is not an EIP712 transaction.',\n        '',\n        'Transaction must:',\n        '  - include `type: \"eip712\"`',\n        '  - include one of the following: `customSignature`, `paymaster`, `paymasterInput`, `gasPerPubdata`, `factoryDeps`',\n      ].join('\\n'),\n      { name: 'InvalidEip712TransactionError' },\n    )\n  }\n}\n","import type { ExactPartial, OneOf } from '../../types/utils.js'\nimport type {\n  ZksyncTransactionRequest,\n  ZksyncTransactionSerializable,\n} from '../types/transaction.js'\n\nexport function isEIP712Transaction(\n  transaction: ExactPartial<\n    OneOf<ZksyncTransactionRequest | ZksyncTransactionSerializable>\n  >,\n) {\n  if (transaction.type === 'eip712') return true\n  if (\n    ('customSignature' in transaction && transaction.customSignature) ||\n    ('paymaster' in transaction && transaction.paymaster) ||\n    ('paymasterInput' in transaction && transaction.paymasterInput) ||\n    ('gasPerPubdata' in transaction &&\n      typeof transaction.gasPerPubdata === 'bigint') ||\n    ('factoryDeps' in transaction && transaction.factoryDeps)\n  )\n    return true\n  return false\n}\n","import { InvalidAddressError } from '../../errors/address.js'\nimport { BaseError } from '../../errors/base.js'\nimport { InvalidChainIdError } from '../../errors/chain.js'\nimport type { ExactPartial } from '../../types/utils.js'\nimport { isAddress } from '../../utils/address/isAddress.js'\nimport { InvalidEip712TransactionError } from '../errors/transaction.js'\nimport type {\n  ZksyncTransactionSerializable,\n  ZksyncTransactionSerializableEIP712,\n} from '../types/transaction.js'\nimport { isEIP712Transaction } from './isEip712Transaction.js'\n\nexport function assertEip712Transaction(\n  transaction: ExactPartial<ZksyncTransactionSerializable>,\n) {\n  const { chainId, to, from, paymaster, paymasterInput } =\n    transaction as ZksyncTransactionSerializableEIP712\n\n  if (!isEIP712Transaction(transaction))\n    throw new InvalidEip712TransactionError()\n  if (!chainId || chainId <= 0) throw new InvalidChainIdError({ chainId })\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n  if (from && !isAddress(from)) throw new InvalidAddressError({ address: from })\n  if (paymaster && !isAddress(paymaster))\n    throw new InvalidAddressError({ address: paymaster })\n  if (paymaster && !paymasterInput) {\n    throw new BaseError(\n      '`paymasterInput` must be provided when `paymaster` is defined',\n    )\n  }\n  if (!paymaster && paymasterInput) {\n    throw new BaseError(\n      '`paymaster` must be provided when `paymasterInput` is defined',\n    )\n  }\n}\n","import type { Signature } from '../index.js'\nimport type { ChainSerializers } from '../types/chain.js'\nimport type { TransactionSerializable } from '../types/transaction.js'\nimport { concatHex } from '../utils/data/concat.js'\nimport { toHex } from '../utils/encoding/toHex.js'\nimport { toRlp } from '../utils/encoding/toRlp.js'\nimport { serializeTransaction as serializeTransaction_ } from '../utils/transaction/serializeTransaction.js'\nimport { gasPerPubdataDefault } from './constants/number.js'\nimport type {\n  ZksyncTransactionSerializable,\n  ZksyncTransactionSerializableEIP712,\n  ZksyncTransactionSerializedEIP712,\n} from './types/transaction.js'\nimport { assertEip712Transaction } from './utils/assertEip712Transaction.js'\nimport { isEIP712Transaction } from './utils/isEip712Transaction.js'\n\nexport function serializeTransaction(\n  transaction: ZksyncTransactionSerializable,\n  signature?: Signature | undefined,\n) {\n  if (isEIP712Transaction(transaction))\n    return serializeTransactionEIP712(\n      transaction as ZksyncTransactionSerializableEIP712,\n    )\n  return serializeTransaction_(\n    transaction as TransactionSerializable,\n    signature,\n  )\n}\n\nexport const serializers = {\n  transaction: serializeTransaction,\n} as const satisfies ChainSerializers\n\ntype SerializeTransactionEIP712ReturnType = ZksyncTransactionSerializedEIP712\n\nfunction serializeTransactionEIP712(\n  transaction: ZksyncTransactionSerializableEIP712,\n): SerializeTransactionEIP712ReturnType {\n  const {\n    chainId,\n    gas,\n    nonce,\n    to,\n    from,\n    value,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    customSignature,\n    factoryDeps,\n    paymaster,\n    paymasterInput,\n    gasPerPubdata,\n    data,\n  } = transaction\n\n  assertEip712Transaction(transaction)\n\n  const serializedTransaction = [\n    nonce ? toHex(nonce) : '0x',\n    maxPriorityFeePerGas ? toHex(maxPriorityFeePerGas) : '0x',\n    maxFeePerGas ? toHex(maxFeePerGas) : '0x',\n    gas ? toHex(gas) : '0x',\n    to ?? '0x',\n    value ? toHex(value) : '0x',\n    data ?? '0x',\n    toHex(chainId),\n    toHex(''),\n    toHex(''),\n    toHex(chainId),\n    from ?? '0x',\n    gasPerPubdata ? toHex(gasPerPubdata) : toHex(gasPerPubdataDefault),\n    factoryDeps ?? [],\n    customSignature ?? '0x', // EIP712 signature\n    paymaster && paymasterInput ? [paymaster, paymasterInput] : [],\n  ]\n\n  return concatHex([\n    '0x71',\n    toRlp(serializedTransaction),\n  ]) as SerializeTransactionEIP712ReturnType\n}\n","import { BaseError } from '../../errors/base.js'\n\nexport type BytecodeLengthExceedsMaxSizeErrorType =\n  BytecodeLengthExceedsMaxSizeError & {\n    name: 'BytecodeLengthExceedsMaxSizeError'\n  }\n\nexport class BytecodeLengthExceedsMaxSizeError extends BaseError {\n  constructor({\n    givenLength,\n    maxBytecodeSize,\n  }: { givenLength: number; maxBytecodeSize: bigint }) {\n    super(\n      `Bytecode cannot be longer than ${maxBytecodeSize} bytes. Given length: ${givenLength}`,\n      { name: 'BytecodeLengthExceedsMaxSizeError' },\n    )\n  }\n}\n\nexport type BytecodeLengthInWordsMustBeOddErrorType =\n  BytecodeLengthInWordsMustBeOddError & {\n    name: 'BytecodeLengthInWordsMustBeOddError'\n  }\n\nexport class BytecodeLengthInWordsMustBeOddError extends BaseError {\n  constructor({ givenLengthInWords }: { givenLengthInWords: number }) {\n    super(\n      `Bytecode length in 32-byte words must be odd. Given length in words: ${givenLengthInWords}`,\n      { name: 'BytecodeLengthInWordsMustBeOddError' },\n    )\n  }\n}\n\nexport type BytecodeLengthMustBeDivisibleBy32ErrorType =\n  BytecodeLengthMustBeDivisibleBy32Error & {\n    name: 'BytecodeLengthMustBeDivisibleBy32Error'\n  }\n\nexport class BytecodeLengthMustBeDivisibleBy32Error extends BaseError {\n  constructor({ givenLength }: { givenLength: number }) {\n    super(\n      `The bytecode length in bytes must be divisible by 32. Given length: ${givenLength}`,\n      { name: 'BytecodeLengthMustBeDivisibleBy32Error' },\n    )\n  }\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport { pad } from '../../utils/data/pad.js'\nimport { type ToBytesErrorType, toBytes } from '../../utils/encoding/toBytes.js'\nimport { type Sha256ErrorType, sha256 } from '../../utils/hash/sha256.js'\nimport { maxBytecodeSize } from '../constants/number.js'\nimport {\n  BytecodeLengthExceedsMaxSizeError,\n  type BytecodeLengthExceedsMaxSizeErrorType,\n  BytecodeLengthInWordsMustBeOddError,\n  type BytecodeLengthInWordsMustBeOddErrorType,\n  BytecodeLengthMustBeDivisibleBy32Error,\n  type BytecodeLengthMustBeDivisibleBy32ErrorType,\n} from '../errors/bytecode.js'\n\nexport type HashBytecodeErrorType =\n  | BytecodeLengthExceedsMaxSizeErrorType\n  | BytecodeLengthInWordsMustBeOddErrorType\n  | BytecodeLengthMustBeDivisibleBy32ErrorType\n  | Sha256ErrorType\n  | ToBytesErrorType\n  | ErrorType\n\nexport function hashBytecode(bytecode: Hex): Uint8Array {\n  const bytecodeBytes = toBytes(bytecode)\n  if (bytecodeBytes.length % 32 !== 0)\n    throw new BytecodeLengthMustBeDivisibleBy32Error({\n      givenLength: bytecodeBytes.length,\n    })\n\n  if (bytecodeBytes.length > maxBytecodeSize)\n    throw new BytecodeLengthExceedsMaxSizeError({\n      givenLength: bytecodeBytes.length,\n      maxBytecodeSize,\n    })\n\n  const hashStr = sha256(bytecodeBytes)\n  const hash = toBytes(hashStr)\n\n  // Note that the length of the bytecode\n  // should be provided in 32-byte words.\n  const bytecodeLengthInWords = bytecodeBytes.length / 32\n  if (bytecodeLengthInWords % 2 === 0) {\n    throw new BytecodeLengthInWordsMustBeOddError({\n      givenLengthInWords: bytecodeLengthInWords,\n    })\n  }\n\n  const bytecodeLength = toBytes(bytecodeLengthInWords)\n\n  // The bytecode should always take the first 2 bytes of the bytecode hash,\n  // so we pad it from the left in case the length is smaller than 2 bytes.\n  const bytecodeLengthPadded = pad(bytecodeLength, { size: 2 })\n\n  const codeHashVersion = new Uint8Array([1, 0])\n  hash.set(codeHashVersion, 0)\n  hash.set(bytecodeLengthPadded, 2)\n\n  return hash\n}\n","import { formatters } from './formatters.js'\nimport { serializers } from './serializers.js'\nimport { getEip712Domain } from './utils/getEip712Domain.js'\n\nexport const chainConfig = {\n  blockTime: 1_000,\n  formatters,\n  serializers,\n  custom: {\n    getEip712Domain,\n  },\n} as const\n","import { toHex } from '../../utils/encoding/toHex.js'\nimport { gasPerPubdataDefault } from '../constants/number.js'\nimport type { EIP712DomainFn } from '../types/eip712.js'\nimport type {\n  ZksyncEIP712TransactionSignable,\n  ZksyncTransactionSerializable,\n  ZksyncTransactionSerializableEIP712,\n} from '../types/transaction.js'\nimport { assertEip712Transaction } from './assertEip712Transaction.js'\nimport { hashBytecode } from './hashBytecode.js'\n\nexport const getEip712Domain: EIP712DomainFn<\n  ZksyncTransactionSerializable,\n  ZksyncEIP712TransactionSignable\n> = (transaction) => {\n  assertEip712Transaction(transaction)\n\n  const message = transactionToMessage(\n    transaction as ZksyncTransactionSerializableEIP712,\n  )\n\n  return {\n    domain: {\n      name: 'zkSync',\n      version: '2',\n      chainId: transaction.chainId,\n    },\n    types: {\n      Transaction: [\n        { name: 'txType', type: 'uint256' },\n        { name: 'from', type: 'uint256' },\n        { name: 'to', type: 'uint256' },\n        { name: 'gasLimit', type: 'uint256' },\n        { name: 'gasPerPubdataByteLimit', type: 'uint256' },\n        { name: 'maxFeePerGas', type: 'uint256' },\n        { name: 'maxPriorityFeePerGas', type: 'uint256' },\n        { name: 'paymaster', type: 'uint256' },\n        { name: 'nonce', type: 'uint256' },\n        { name: 'value', type: 'uint256' },\n        { name: 'data', type: 'bytes' },\n        { name: 'factoryDeps', type: 'bytes32[]' },\n        { name: 'paymasterInput', type: 'bytes' },\n      ],\n    },\n    primaryType: 'Transaction',\n    message: message,\n  }\n}\n\n//////////////////////////////////////////////////////////////////////////////\n// Utilities\n\nfunction transactionToMessage(\n  transaction: ZksyncTransactionSerializableEIP712,\n): ZksyncEIP712TransactionSignable {\n  const {\n    gas,\n    nonce,\n    to,\n    from,\n    value,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    factoryDeps,\n    paymaster,\n    paymasterInput,\n    gasPerPubdata,\n    data,\n  } = transaction\n\n  return {\n    txType: 113n,\n    from: BigInt(from),\n    to: to ? BigInt(to) : 0n,\n    gasLimit: gas ?? 0n,\n    gasPerPubdataByteLimit: gasPerPubdata ?? gasPerPubdataDefault,\n    maxFeePerGas: maxFeePerGas ?? 0n,\n    maxPriorityFeePerGas: maxPriorityFeePerGas ?? 0n,\n    paymaster: paymaster ? BigInt(paymaster) : 0n,\n    nonce: nonce ? BigInt(nonce) : 0n,\n    value: value ?? 0n,\n    data: data ?? '0x',\n    factoryDeps: factoryDeps?.map((dep) => toHex(hashBytecode(dep))) ?? [],\n    paymasterInput: paymasterInput ? paymasterInput : '0x',\n  }\n}\n","import { defineChain } from '../../utils/chain/defineChain.js'\nimport { chainConfig } from '../../zksync/chainConfig.js'\n\nexport const abstractTestnet = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 11_124,\n  name: 'Abstract Testnet',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'ETH',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: { http: ['https://api.testnet.abs.xyz'] },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Etherscan',\n      url: 'https://sepolia.abscan.org',\n    },\n    native: {\n      name: 'Abstract Explorer',\n      url: 'https://explorer.testnet.abs.xyz',\n    },\n  },\n  testnet: true,\n  contracts: {\n    multicall3: {\n      address: '0xF9cda624FBC7e059355ce98a31693d299FACd963',\n      blockCreated: 358349,\n    },\n    erc6492Verifier: {\n      address: '0xfB688330379976DA81eB64Fe4BF50d7401763B9C',\n      blockCreated: 431682,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\nimport { chainConfig } from '../../zksync/chainConfig.js'\n\nexport const abstract = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 2_741,\n  name: 'Abstract',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'ETH',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://api.mainnet.abs.xyz'],\n      webSocket: ['wss://api.mainnet.abs.xyz/ws'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Etherscan',\n      url: 'https://abscan.org',\n    },\n    native: {\n      name: 'Abstract Explorer',\n      url: 'https://explorer.mainnet.abs.xyz',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xAa4De41dba0Ca5dCBb288b7cC6b708F3aaC759E7',\n      blockCreated: 5288,\n    },\n    erc6492Verifier: {\n      address: '0xfB688330379976DA81eB64Fe4BF50d7401763B9C',\n      blockCreated: 5263,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\nimport { chainConfig } from '../../zksync/chainConfig.js'\n\nexport const zksync = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 324,\n  name: 'ZKsync Era',\n  network: 'zksync-era',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'Ether',\n    symbol: 'ETH',\n  },\n  rpcUrls: {\n    default: {\n      http: ['https://mainnet.era.zksync.io'],\n      webSocket: ['wss://mainnet.era.zksync.io/ws'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Etherscan',\n      url: 'https://era.zksync.network/',\n      apiUrl: 'https://api-era.zksync.network/api',\n    },\n    native: {\n      name: 'ZKsync Explorer',\n      url: 'https://explorer.zksync.io/',\n      apiUrl: 'https://block-explorer-api.mainnet.zksync.io/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xF9cda624FBC7e059355ce98a31693d299FACd963',\n    },\n    erc6492Verifier: {\n      address: '0xfB688330379976DA81eB64Fe4BF50d7401763B9C',\n      blockCreated: 45659388,\n    },\n  },\n})\n","import { defineChain } from '../../utils/chain/defineChain.js'\nimport { chainConfig } from '../../zksync/chainConfig.js'\n\nexport const zksyncSepoliaTestnet = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 300,\n  name: 'ZKsync Sepolia Testnet',\n  network: 'zksync-sepolia-testnet',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://sepolia.era.zksync.dev'],\n      webSocket: ['wss://sepolia.era.zksync.dev/ws'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Etherscan',\n      url: 'https://sepolia-era.zksync.network/',\n      apiUrl: 'https://api-sepolia-era.zksync.network/api',\n    },\n    native: {\n      name: 'ZKsync Explorer',\n      url: 'https://sepolia.explorer.zksync.io/',\n      blockExplorerApi: 'https://block-explorer-api.sepolia.zksync.dev/api',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xF9cda624FBC7e059355ce98a31693d299FACd963',\n    },\n    erc6492Verifier: {\n      address: '0xfB688330379976DA81eB64Fe4BF50d7401763B9C',\n      blockCreated: 3855712,\n    },\n  },\n  testnet: true,\n})\n","const AccountFactoryAbi = [\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_implementation',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes4',\n        name: '_initializerSelector',\n        type: 'bytes4',\n      },\n      {\n        internalType: 'address',\n        name: '_registry',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes32',\n        name: '_proxyBytecodeHash',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: '_deployer',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: '_owner',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n  {\n    inputs: [],\n    name: 'ALREADY_CREATED',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'DEPLOYMENT_FAILED',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'INVALID_INITIALIZER',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'NOT_FROM_DEPLOYER',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'OwnableInvalidOwner',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    name: 'OwnableUnauthorizedAccount',\n    type: 'error',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'accountAddress',\n        type: 'address',\n      },\n    ],\n    name: 'AGWAccountCreated',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'accountAddress',\n        type: 'address',\n      },\n    ],\n    name: 'AGWAccountDeployed',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'deployer',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'bool',\n        name: 'authorized',\n        type: 'bool',\n      },\n    ],\n    name: 'DeployerAuthorized',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'newImplementation',\n        type: 'address',\n      },\n    ],\n    name: 'ImplementationChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'previousOwner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'newOwner',\n        type: 'address',\n      },\n    ],\n    name: 'OwnershipTransferStarted',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'previousOwner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'newOwner',\n        type: 'address',\n      },\n    ],\n    name: 'OwnershipTransferred',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'newRegistry',\n        type: 'address',\n      },\n    ],\n    name: 'RegistryChanged',\n    type: 'event',\n  },\n  {\n    inputs: [],\n    name: 'acceptOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    name: 'accountToDeployer',\n    outputs: [\n      {\n        internalType: 'address',\n        name: 'deployer',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'accountAddress',\n        type: 'address',\n      },\n    ],\n    name: 'agwAccountCreated',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'deployer',\n        type: 'address',\n      },\n    ],\n    name: 'authorizedDeployers',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: 'authorized',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'newImplementation',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes4',\n        name: 'newInitializerSelector',\n        type: 'bytes4',\n      },\n    ],\n    name: 'changeImplementation',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'newRegistry',\n        type: 'address',\n      },\n    ],\n    name: 'changeRegistry',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'salt',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes',\n        name: 'initializer',\n        type: 'bytes',\n      },\n    ],\n    name: 'deployAccount',\n    outputs: [\n      {\n        internalType: 'address',\n        name: 'accountAddress',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'salt',\n        type: 'bytes32',\n      },\n    ],\n    name: 'getAddressForSalt',\n    outputs: [\n      {\n        internalType: 'address',\n        name: 'accountAddress',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'salt',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: '_implementation',\n        type: 'address',\n      },\n    ],\n    name: 'getAddressForSaltAndImplementation',\n    outputs: [\n      {\n        internalType: 'address',\n        name: 'accountAddress',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'implementationAddress',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'initializerSelector',\n    outputs: [\n      {\n        internalType: 'bytes4',\n        name: '',\n        type: 'bytes4',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'owner',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'pendingOwner',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'proxyBytecodeHash',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'registry',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'renounceOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'salt',\n        type: 'bytes32',\n      },\n    ],\n    name: 'saltToAccount',\n    outputs: [\n      {\n        internalType: 'address',\n        name: 'accountAddress',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'deployer',\n        type: 'address',\n      },\n      {\n        internalType: 'bool',\n        name: 'authorized',\n        type: 'bool',\n      },\n    ],\n    name: 'setDeployer',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'newOwner',\n        type: 'address',\n      },\n    ],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n];\n\nexport default AccountFactoryAbi;\n","import type { Address } from 'viem';\nimport { abstract, abstractTestnet } from 'viem/chains';\n\n// AA smart contract deployment\nconst SMART_ACCOUNT_FACTORY_ADDRESS =\n  '0x9B947df68D35281C972511B3E7BC875926f26C1A' as const;\n\n// AA wallet validator contract deployment\nconst EOA_VALIDATOR_ADDRESS = '0x74b9ae28EC45E3FA11533c7954752597C3De3e7A';\n\nconst SESSION_KEY_VALIDATOR_ADDRESS =\n  '0x34ca1501FAE231cC2ebc995CE013Dbe882d7d081';\n\nconst CONTRACT_DEPLOYER_ADDRESS =\n  '0x0000000000000000000000000000000000008006' as const;\n\nconst AGW_REGISTRY_ADDRESS =\n  '0xd5E3efDA6bB5aB545cc2358796E96D9033496Dda' as const;\n\n/** `function addModule(bytes moduleAndData) external` */\nconst ADD_MODULE_SELECTOR = '0xd3bdf4b5' as const;\n\n/** `function createSession(SessionLib.SessionSpec memory sessionSpec) external` */\nconst CREATE_SESSION_SELECTOR = '0x5a0694d2' as const;\n\n/** `function batchCall((address,bool,uint256,bytes)[]) external` */\nconst BATCH_CALL_SELECTOR = '0x8f0273a9' as const;\n\n/** `error INSUFFICIENT_FUNDS()` */\nconst INSUFFICIENT_BALANCE_SELECTOR = '0xe7931438' as const;\n\nconst CANONICAL_DELEGATE_REGISTRY_ADDRESS =\n  '0x0000000059A24EB229eED07Ac44229DB56C5d797';\n\nconst CANONICAL_EXCLUSIVE_DELEGATE_RESOLVER_ADDRESS =\n  '0x0000000078CC4Cc1C14E27c0fa35ED6E5E58825D';\n\nconst AGW_LINK_DELEGATION_RIGHTS =\n  '0xc10dcfe266c1f71ef476efbd3223555750dc271e4115626b';\n\nconst NON_EXPIRING_DELEGATION_RIGHTS = `${AGW_LINK_DELEGATION_RIGHTS}000000ffffffffff`;\n\nconst BASE_GAS_PER_PUBDATA_BYTE = 800n;\n\nconst BRIDGEHUB_ADDRESS: Record<number, Address> = {\n  [abstractTestnet.id]: '0x35A54c8C757806eB6820629bc82d90E056394C92',\n  [abstract.id]: '0x303a465b659cbb0ab36ee643ea362c509eeb5213',\n};\n\nconst SESSION_KEY_POLICY_REGISTRY_ADDRESS: Address =\n  '0xfD20b9d7A406e2C4f5D6Df71ABE3Ee48B2EccC9F';\n\nconst FEATURE_FLAG_REGISTRY_ADDRESS: Address =\n  '0xb5023a9F3e948e3A4f9DBA97118EEE801fA4e265';\n\nexport {\n  ADD_MODULE_SELECTOR,\n  AGW_LINK_DELEGATION_RIGHTS,\n  AGW_REGISTRY_ADDRESS,\n  BASE_GAS_PER_PUBDATA_BYTE,\n  BATCH_CALL_SELECTOR,\n  BRIDGEHUB_ADDRESS,\n  CANONICAL_DELEGATE_REGISTRY_ADDRESS,\n  CANONICAL_EXCLUSIVE_DELEGATE_RESOLVER_ADDRESS,\n  CONTRACT_DEPLOYER_ADDRESS,\n  CREATE_SESSION_SELECTOR,\n  EOA_VALIDATOR_ADDRESS,\n  FEATURE_FLAG_REGISTRY_ADDRESS,\n  INSUFFICIENT_BALANCE_SELECTOR,\n  NON_EXPIRING_DELEGATION_RIGHTS,\n  SESSION_KEY_POLICY_REGISTRY_ADDRESS,\n  SESSION_KEY_VALIDATOR_ADDRESS,\n  SMART_ACCOUNT_FACTORY_ADDRESS,\n};\n","import { BaseError } from 'viem';\n\nexport class InvalidEip712TransactionError extends BaseError {\n  constructor() {\n    super(\n      [\n        'Transaction is not an EIP712 transaction.',\n        '',\n        'Transaction must:',\n        '  - include `type: \"eip712\"`',\n        '  - include one of the following: `customSignature`, `paymaster`, `paymasterInput`, `gasPerPubdata`, `factoryDeps`',\n      ].join('\\n'),\n      { name: 'InvalidEip712TransactionError' },\n    );\n  }\n}\n","import { type ExactPartial, type OneOf } from 'viem';\nimport { assertRequest } from 'viem/utils';\nimport {\n  type ChainEIP712,\n  type SendEip712TransactionParameters,\n  type ZksyncTransactionRequest,\n  type ZksyncTransactionSerializable,\n} from 'viem/zksync';\n\nimport { InvalidEip712TransactionError } from './errors/eip712.js';\n\nexport type AssertEip712RequestParameters = ExactPartial<\n  SendEip712TransactionParameters<ChainEIP712>\n>;\n\nexport function isEIP712Transaction(\n  transaction: ExactPartial<\n    OneOf<ZksyncTransactionRequest | ZksyncTransactionSerializable>\n  >,\n) {\n  if (transaction.type === 'eip712') return true;\n  if (\n    ('customSignature' in transaction && transaction.customSignature) ||\n    ('paymaster' in transaction && transaction.paymaster) ||\n    ('paymasterInput' in transaction && transaction.paymasterInput) ||\n    ('gasPerPubdata' in transaction &&\n      typeof transaction.gasPerPubdata === 'bigint') ||\n    ('factoryDeps' in transaction && transaction.factoryDeps)\n  )\n    return true;\n  return false;\n}\n\nexport function assertEip712Request(args: AssertEip712RequestParameters) {\n  if (!isEIP712Transaction(args as any))\n    throw new InvalidEip712TransactionError();\n  assertRequest(args as any);\n}\n","import {\n  type Address,\n  BaseError,\n  type Chain,\n  encodeFunctionData,\n  fromHex,\n  type Hex,\n  isHex,\n  keccak256,\n  type PublicClient,\n  toBytes,\n  toHex,\n  type Transport,\n  type TypedDataDefinition,\n  type UnionRequiredBy,\n} from 'viem';\nimport { parseAccount } from 'viem/accounts';\nimport {\n  abstract,\n  abstractTestnet,\n  zksync,\n  zksyncSepoliaTestnet,\n} from 'viem/chains';\nimport type { ChainEIP712, SignEip712TransactionParameters } from 'viem/zksync';\n\nimport AccountFactoryAbi from './abis/AccountFactory.js';\nimport { AGWRegistryAbi } from './abis/AGWRegistryAbi.js';\nimport {\n  AGW_REGISTRY_ADDRESS,\n  SMART_ACCOUNT_FACTORY_ADDRESS,\n} from './constants.js';\nimport { isEIP712Transaction } from './eip712.js';\nimport type { Call } from './types/call.js';\n\nexport const VALID_CHAINS: Record<number, Chain> = {\n  [abstractTestnet.id]: abstractTestnet,\n  [abstract.id]: abstract,\n  [zksync.id]: zksync,\n  [zksyncSepoliaTestnet.id]: zksyncSepoliaTestnet,\n};\n\nexport function convertBigIntToString(value: any): any {\n  if (typeof value === 'bigint') {\n    return value.toString();\n  } else if (Array.isArray(value)) {\n    return value.map(convertBigIntToString);\n  } else if (typeof value === 'object' && value !== null) {\n    const result: Record<string, any> = {};\n    for (const key in value) {\n      result[key] = convertBigIntToString(value[key]);\n    }\n    return result;\n  }\n  return value;\n}\n\nexport async function getSmartAccountAddressFromInitialSigner<\n  chain extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n>(\n  initialSigner: Address,\n  publicClient: PublicClient<Transport, chain>,\n): Promise<Hex> {\n  if (initialSigner === undefined) {\n    throw new Error('Initial signer is required to get smart account address');\n  }\n  // Generate salt based off address\n  const addressBytes = toBytes(initialSigner);\n  const salt = keccak256(addressBytes);\n\n  // Get the deployed account address\n  const accountAddress = (await publicClient.readContract({\n    address: SMART_ACCOUNT_FACTORY_ADDRESS,\n    abi: AccountFactoryAbi,\n    functionName: 'getAddressForSalt',\n    args: [salt],\n  })) as Hex;\n\n  return accountAddress;\n}\n\nexport async function isAGWAccount<\n  chain extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n>(\n  publicClient: PublicClient<Transport, chain>,\n  address: Address,\n): Promise<boolean> {\n  return await publicClient.readContract({\n    address: AGW_REGISTRY_ADDRESS,\n    abi: AGWRegistryAbi,\n    functionName: 'isAGW',\n    args: [address],\n  });\n}\n\nexport async function isSmartAccountDeployed<\n  chain extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n>(\n  publicClient: PublicClient<Transport, chain>,\n  address: Hex,\n): Promise<boolean> {\n  const bytecode = await publicClient.getCode({\n    address: address,\n  });\n  return bytecode !== undefined;\n}\n\nexport function getInitializerCalldata(\n  initialOwnerAddress: Address,\n  validatorAddress: Address,\n  initialCall: Call,\n): Hex {\n  return encodeFunctionData({\n    abi: [\n      {\n        name: 'initialize',\n        type: 'function',\n        inputs: [\n          { name: 'initialK1Owner', type: 'address' },\n          { name: 'initialK1Validator', type: 'address' },\n          { name: 'modules', type: 'bytes[]' },\n          {\n            name: 'initCall',\n            type: 'tuple',\n            components: [\n              { name: 'target', type: 'address' },\n              { name: 'allowFailure', type: 'bool' },\n              { name: 'value', type: 'uint256' },\n              { name: 'callData', type: 'bytes' },\n            ],\n          },\n        ],\n        outputs: [],\n        stateMutability: 'nonpayable',\n      },\n    ],\n    functionName: 'initialize',\n    args: [initialOwnerAddress, validatorAddress, [], initialCall],\n  });\n}\n\nexport function transformHexValues(transaction: any, keys: string[]) {\n  if (!transaction) return;\n  for (const key of keys) {\n    if (isHex(transaction[key])) {\n      transaction[key] = fromHex(transaction[key], 'bigint');\n    }\n  }\n}\n\nexport function isEip712TypedData(typedData: TypedDataDefinition): boolean {\n  return (\n    typedData.message &&\n    typedData.domain?.name === 'zkSync' &&\n    typedData.domain?.version === '2' &&\n    isEIP712Transaction(typedData.message)\n  );\n}\n\nexport function transformEip712TypedData(\n  typedData: TypedDataDefinition,\n): UnionRequiredBy<\n  Omit<SignEip712TransactionParameters, 'chain'>,\n  'to' | 'data'\n> & { chainId: number } {\n  if (!isEip712TypedData(typedData)) {\n    throw new BaseError('Typed data is not an EIP712 transaction');\n  }\n\n  if (typedData.domain?.chainId === undefined) {\n    throw new BaseError('Chain ID is required for EIP712 transaction');\n  }\n\n  return {\n    chainId: Number(typedData.domain.chainId),\n    account: parseAccount(\n      toHex(BigInt(typedData.message['from'] as string), {\n        size: 20,\n      }),\n    ),\n    to: toHex(BigInt(typedData.message['to'] as string), {\n      size: 20,\n    }),\n    gas: BigInt(typedData.message['gasLimit'] as string),\n    gasPerPubdata: BigInt(\n      typedData.message['gasPerPubdataByteLimit'] as string,\n    ),\n    maxFeePerGas: BigInt(typedData.message['maxFeePerGas'] as string),\n    maxPriorityFeePerGas: BigInt(\n      typedData.message['maxPriorityFeePerGas'] as string,\n    ),\n    paymaster:\n      (typedData.message['paymaster'] as string) != '0'\n        ? toHex(BigInt(typedData.message['paymaster'] as string), {\n            size: 20,\n          })\n        : undefined,\n    nonce: typedData.message['nonce'] as number,\n    value: BigInt(typedData.message['value'] as string),\n    data:\n      typedData.message['data'] === '0x0'\n        ? '0x'\n        : (typedData.message['data'] as Hex),\n    factoryDeps: typedData.message['factoryDeps'] as Hex[],\n    paymasterInput:\n      typedData.message['paymasterInput'] !== '0x'\n        ? (typedData.message['paymasterInput'] as Hex)\n        : undefined,\n  };\n}\n","const AGWAccountAbi = [\n  {\n    inputs: [],\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n  {\n    inputs: [],\n    name: 'ADDRESS_ALREADY_EXISTS',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'ADDRESS_NOT_EXISTS',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'BYTES_ALREADY_EXISTS',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'BYTES_NOT_EXISTS',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'CALL_FAILED',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'EMPTY_HOOK_ADDRESS',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'EMPTY_MODULE_ADDRESS',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'EMPTY_OWNERS',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'EMPTY_VALIDATORS',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'FEE_PAYMENT_FAILED',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'HOOK_ERC165_FAIL',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'INSUFFICIENT_FUNDS',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'INVALID_ADDRESS',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'INVALID_BYTES',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'INVALID_KEY',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'INVALID_PUBKEY_LENGTH',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'INVALID_SALT',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'InvalidInitialization',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'MODULE_ERC165_FAIL',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'actualValue',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'expectedValue',\n        type: 'uint256',\n      },\n    ],\n    name: 'MsgValueMismatch',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'NOT_FROM_BOOTLOADER',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'NOT_FROM_DEPLOYER',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'NOT_FROM_HOOK',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'NOT_FROM_MODULE',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'NOT_FROM_SELF',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'NOT_FROM_SELF_OR_MODULE',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'NotInitializing',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'RECUSIVE_MODULE_CALL',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'SAME_IMPLEMENTATION',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'UNAUTHORIZED_OUTSIDE_TRANSACTION',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'VALIDATION_HOOK_FAILED',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'VALIDATOR_ERC165_FAIL',\n    type: 'error',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'hook',\n        type: 'address',\n      },\n    ],\n    name: 'AddHook',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'module',\n        type: 'address',\n      },\n    ],\n    name: 'AddModule',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'validator',\n        type: 'address',\n      },\n    ],\n    name: 'AddModuleValidator',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [],\n    name: 'EIP712DomainChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [],\n    name: 'FeePaid',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'uint64',\n        name: 'version',\n        type: 'uint64',\n      },\n    ],\n    name: 'Initialized',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'addr',\n        type: 'address',\n      },\n    ],\n    name: 'K1AddOwner',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'validator',\n        type: 'address',\n      },\n    ],\n    name: 'K1AddValidator',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'addr',\n        type: 'address',\n      },\n    ],\n    name: 'K1RemoveOwner',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'validator',\n        type: 'address',\n      },\n    ],\n    name: 'K1RemoveValidator',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'bytes',\n        name: 'pubKey',\n        type: 'bytes',\n      },\n    ],\n    name: 'R1AddOwner',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'validator',\n        type: 'address',\n      },\n    ],\n    name: 'R1AddValidator',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'bytes',\n        name: 'pubKey',\n        type: 'bytes',\n      },\n    ],\n    name: 'R1RemoveOwner',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'validator',\n        type: 'address',\n      },\n    ],\n    name: 'R1RemoveValidator',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'hook',\n        type: 'address',\n      },\n    ],\n    name: 'RemoveHook',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'module',\n        type: 'address',\n      },\n    ],\n    name: 'RemoveModule',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'validator',\n        type: 'address',\n      },\n    ],\n    name: 'RemoveModuleValidator',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [],\n    name: 'ResetOwners',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'oldImplementation',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'newImplementation',\n        type: 'address',\n      },\n    ],\n    name: 'Upgraded',\n    type: 'event',\n  },\n  {\n    stateMutability: 'payable',\n    type: 'fallback',\n  },\n  {\n    inputs: [],\n    name: 'VERSION',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes',\n        name: 'hookAndData',\n        type: 'bytes',\n      },\n      {\n        internalType: 'bool',\n        name: 'isValidation',\n        type: 'bool',\n      },\n    ],\n    name: 'addHook',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes',\n        name: 'moduleAndData',\n        type: 'bytes',\n      },\n    ],\n    name: 'addModule',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'validator',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes',\n        name: 'initialAccountValidationKey',\n        type: 'bytes',\n      },\n    ],\n    name: 'addModuleValidator',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: 'address',\n            name: 'target',\n            type: 'address',\n          },\n          {\n            internalType: 'bool',\n            name: 'allowFailure',\n            type: 'bool',\n          },\n          {\n            internalType: 'uint256',\n            name: 'value',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes',\n            name: 'callData',\n            type: 'bytes',\n          },\n        ],\n        internalType: 'struct Call[]',\n        name: '_calls',\n        type: 'tuple[]',\n      },\n    ],\n    name: 'batchCall',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'agwMessageTypeHash',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'pure',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: 'address',\n            name: 'target',\n            type: 'address',\n          },\n          {\n            internalType: 'bool',\n            name: 'allowFailure',\n            type: 'bool',\n          },\n          {\n            internalType: 'uint256',\n            name: 'value',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes',\n            name: 'callData',\n            type: 'bytes',\n          },\n        ],\n        internalType: 'struct Call[]',\n        name: '_calls',\n        type: 'tuple[]',\n      },\n    ],\n    name: 'batchCall',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'eip712Domain',\n    outputs: [\n      {\n        internalType: 'bytes1',\n        name: 'fields',\n        type: 'bytes1',\n      },\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        internalType: 'string',\n        name: 'version',\n        type: 'string',\n      },\n      {\n        internalType: 'uint256',\n        name: 'chainId',\n        type: 'uint256',\n      },\n      {\n        internalType: 'address',\n        name: 'verifyingContract',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'salt',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'extensions',\n        type: 'uint256[]',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'value',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes',\n        name: 'data',\n        type: 'bytes',\n      },\n    ],\n    name: 'executeFromModule',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n      {\n        components: [\n          {\n            internalType: 'uint256',\n            name: 'txType',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'from',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'to',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'gasLimit',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'gasPerPubdataByteLimit',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'maxFeePerGas',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'maxPriorityFeePerGas',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'paymaster',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'nonce',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'value',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256[4]',\n            name: 'reserved',\n            type: 'uint256[4]',\n          },\n          {\n            internalType: 'bytes',\n            name: 'data',\n            type: 'bytes',\n          },\n          {\n            internalType: 'bytes',\n            name: 'signature',\n            type: 'bytes',\n          },\n          {\n            internalType: 'bytes32[]',\n            name: 'factoryDeps',\n            type: 'bytes32[]',\n          },\n          {\n            internalType: 'bytes',\n            name: 'paymasterInput',\n            type: 'bytes',\n          },\n          {\n            internalType: 'bytes',\n            name: 'reservedDynamic',\n            type: 'bytes',\n          },\n        ],\n        internalType: 'struct Transaction',\n        name: 'transaction',\n        type: 'tuple',\n      },\n    ],\n    name: 'executeTransaction',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: 'uint256',\n            name: 'txType',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'from',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'to',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'gasLimit',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'gasPerPubdataByteLimit',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'maxFeePerGas',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'maxPriorityFeePerGas',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'paymaster',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'nonce',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'value',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256[4]',\n            name: 'reserved',\n            type: 'uint256[4]',\n          },\n          {\n            internalType: 'bytes',\n            name: 'data',\n            type: 'bytes',\n          },\n          {\n            internalType: 'bytes',\n            name: 'signature',\n            type: 'bytes',\n          },\n          {\n            internalType: 'bytes32[]',\n            name: 'factoryDeps',\n            type: 'bytes32[]',\n          },\n          {\n            internalType: 'bytes',\n            name: 'paymasterInput',\n            type: 'bytes',\n          },\n          {\n            internalType: 'bytes',\n            name: 'reservedDynamic',\n            type: 'bytes',\n          },\n        ],\n        internalType: 'struct Transaction',\n        name: 'transaction',\n        type: 'tuple',\n      },\n    ],\n    name: 'executeTransactionFromOutside',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: 'bytes32',\n            name: 'signedHash',\n            type: 'bytes32',\n          },\n        ],\n        internalType: 'struct ERC1271Handler.AGWMessage',\n        name: 'agwMessage',\n        type: 'tuple',\n      },\n    ],\n    name: 'getEip712Hash',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'hook',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'key',\n        type: 'bytes32',\n      },\n    ],\n    name: 'getHookData',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'implementationAddress',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'initialK1Owner',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'initialK1Validator',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes[]',\n        name: 'modules',\n        type: 'bytes[]',\n      },\n      {\n        components: [\n          {\n            internalType: 'address',\n            name: 'target',\n            type: 'address',\n          },\n          {\n            internalType: 'bool',\n            name: 'allowFailure',\n            type: 'bool',\n          },\n          {\n            internalType: 'uint256',\n            name: 'value',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes',\n            name: 'callData',\n            type: 'bytes',\n          },\n        ],\n        internalType: 'struct Call',\n        name: 'initCall',\n        type: 'tuple',\n      },\n    ],\n    name: 'initialize',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'addr',\n        type: 'address',\n      },\n    ],\n    name: 'isHook',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'addr',\n        type: 'address',\n      },\n    ],\n    name: 'isModule',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'validator',\n        type: 'address',\n      },\n    ],\n    name: 'isModuleValidator',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'signedHash',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes',\n        name: 'signatureAndValidator',\n        type: 'bytes',\n      },\n    ],\n    name: 'isValidSignature',\n    outputs: [\n      {\n        internalType: 'bytes4',\n        name: 'magicValue',\n        type: 'bytes4',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'addr',\n        type: 'address',\n      },\n    ],\n    name: 'k1AddOwner',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'validator',\n        type: 'address',\n      },\n    ],\n    name: 'k1AddValidator',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'addr',\n        type: 'address',\n      },\n    ],\n    name: 'k1IsOwner',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'validator',\n        type: 'address',\n      },\n    ],\n    name: 'k1IsValidator',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'k1ListOwners',\n    outputs: [\n      {\n        internalType: 'address[]',\n        name: 'k1OwnerList',\n        type: 'address[]',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'k1ListValidators',\n    outputs: [\n      {\n        internalType: 'address[]',\n        name: 'validatorList',\n        type: 'address[]',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'addr',\n        type: 'address',\n      },\n    ],\n    name: 'k1RemoveOwner',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'validator',\n        type: 'address',\n      },\n    ],\n    name: 'k1RemoveValidator',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bool',\n        name: 'isValidation',\n        type: 'bool',\n      },\n    ],\n    name: 'listHooks',\n    outputs: [\n      {\n        internalType: 'address[]',\n        name: 'hookList',\n        type: 'address[]',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'listModuleValidators',\n    outputs: [\n      {\n        internalType: 'address[]',\n        name: 'validatorList',\n        type: 'address[]',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'listModules',\n    outputs: [\n      {\n        internalType: 'address[]',\n        name: 'moduleList',\n        type: 'address[]',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256[]',\n        name: '',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: '',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    name: 'onERC1155BatchReceived',\n    outputs: [\n      {\n        internalType: 'bytes4',\n        name: '',\n        type: 'bytes4',\n      },\n    ],\n    stateMutability: 'pure',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    name: 'onERC1155Received',\n    outputs: [\n      {\n        internalType: 'bytes4',\n        name: '',\n        type: 'bytes4',\n      },\n    ],\n    stateMutability: 'pure',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    name: 'onERC721Received',\n    outputs: [\n      {\n        internalType: 'bytes4',\n        name: '',\n        type: 'bytes4',\n      },\n    ],\n    stateMutability: 'pure',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n      {\n        components: [\n          {\n            internalType: 'uint256',\n            name: 'txType',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'from',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'to',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'gasLimit',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'gasPerPubdataByteLimit',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'maxFeePerGas',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'maxPriorityFeePerGas',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'paymaster',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'nonce',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'value',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256[4]',\n            name: 'reserved',\n            type: 'uint256[4]',\n          },\n          {\n            internalType: 'bytes',\n            name: 'data',\n            type: 'bytes',\n          },\n          {\n            internalType: 'bytes',\n            name: 'signature',\n            type: 'bytes',\n          },\n          {\n            internalType: 'bytes32[]',\n            name: 'factoryDeps',\n            type: 'bytes32[]',\n          },\n          {\n            internalType: 'bytes',\n            name: 'paymasterInput',\n            type: 'bytes',\n          },\n          {\n            internalType: 'bytes',\n            name: 'reservedDynamic',\n            type: 'bytes',\n          },\n        ],\n        internalType: 'struct Transaction',\n        name: 'transaction',\n        type: 'tuple',\n      },\n    ],\n    name: 'payForTransaction',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n      {\n        components: [\n          {\n            internalType: 'uint256',\n            name: 'txType',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'from',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'to',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'gasLimit',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'gasPerPubdataByteLimit',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'maxFeePerGas',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'maxPriorityFeePerGas',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'paymaster',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'nonce',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'value',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256[4]',\n            name: 'reserved',\n            type: 'uint256[4]',\n          },\n          {\n            internalType: 'bytes',\n            name: 'data',\n            type: 'bytes',\n          },\n          {\n            internalType: 'bytes',\n            name: 'signature',\n            type: 'bytes',\n          },\n          {\n            internalType: 'bytes32[]',\n            name: 'factoryDeps',\n            type: 'bytes32[]',\n          },\n          {\n            internalType: 'bytes',\n            name: 'paymasterInput',\n            type: 'bytes',\n          },\n          {\n            internalType: 'bytes',\n            name: 'reservedDynamic',\n            type: 'bytes',\n          },\n        ],\n        internalType: 'struct Transaction',\n        name: 'transaction',\n        type: 'tuple',\n      },\n    ],\n    name: 'prepareForPaymaster',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes',\n        name: 'pubKey',\n        type: 'bytes',\n      },\n    ],\n    name: 'r1AddOwner',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'validator',\n        type: 'address',\n      },\n    ],\n    name: 'r1AddValidator',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes',\n        name: 'pubKey',\n        type: 'bytes',\n      },\n    ],\n    name: 'r1IsOwner',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'validator',\n        type: 'address',\n      },\n    ],\n    name: 'r1IsValidator',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'r1ListOwners',\n    outputs: [\n      {\n        internalType: 'bytes[]',\n        name: 'r1OwnerList',\n        type: 'bytes[]',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'r1ListValidators',\n    outputs: [\n      {\n        internalType: 'address[]',\n        name: 'validatorList',\n        type: 'address[]',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes',\n        name: 'pubKey',\n        type: 'bytes',\n      },\n    ],\n    name: 'r1RemoveOwner',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'validator',\n        type: 'address',\n      },\n    ],\n    name: 'r1RemoveValidator',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'hook',\n        type: 'address',\n      },\n      {\n        internalType: 'bool',\n        name: 'isValidation',\n        type: 'bool',\n      },\n    ],\n    name: 'removeHook',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'module',\n        type: 'address',\n      },\n    ],\n    name: 'removeModule',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'validator',\n        type: 'address',\n      },\n    ],\n    name: 'removeModuleValidator',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes',\n        name: 'pubKey',\n        type: 'bytes',\n      },\n    ],\n    name: 'resetOwners',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'key',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes',\n        name: 'data',\n        type: 'bytes',\n      },\n    ],\n    name: 'setHookData',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes4',\n        name: 'interfaceId',\n        type: 'bytes4',\n      },\n    ],\n    name: 'supportsInterface',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'newImplementation',\n        type: 'address',\n      },\n    ],\n    name: 'upgradeTo',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'suggestedSignedHash',\n        type: 'bytes32',\n      },\n      {\n        components: [\n          {\n            internalType: 'uint256',\n            name: 'txType',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'from',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'to',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'gasLimit',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'gasPerPubdataByteLimit',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'maxFeePerGas',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'maxPriorityFeePerGas',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'paymaster',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'nonce',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'value',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256[4]',\n            name: 'reserved',\n            type: 'uint256[4]',\n          },\n          {\n            internalType: 'bytes',\n            name: 'data',\n            type: 'bytes',\n          },\n          {\n            internalType: 'bytes',\n            name: 'signature',\n            type: 'bytes',\n          },\n          {\n            internalType: 'bytes32[]',\n            name: 'factoryDeps',\n            type: 'bytes32[]',\n          },\n          {\n            internalType: 'bytes',\n            name: 'paymasterInput',\n            type: 'bytes',\n          },\n          {\n            internalType: 'bytes',\n            name: 'reservedDynamic',\n            type: 'bytes',\n          },\n        ],\n        internalType: 'struct Transaction',\n        name: 'transaction',\n        type: 'tuple',\n      },\n    ],\n    name: 'validateTransaction',\n    outputs: [\n      {\n        internalType: 'bytes4',\n        name: 'magic',\n        type: 'bytes4',\n      },\n    ],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    stateMutability: 'payable',\n    type: 'receive',\n  },\n] as const;\n\nexport default AGWAccountAbi;\n","export const SessionKeyValidatorAbi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    name: 'Disabled',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    name: 'Inited',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'sessionHash',\n        type: 'bytes32',\n      },\n      {\n        components: [\n          {\n            internalType: 'address',\n            name: 'signer',\n            type: 'address',\n          },\n          {\n            internalType: 'uint256',\n            name: 'expiresAt',\n            type: 'uint256',\n          },\n          {\n            components: [\n              {\n                internalType: 'enum SessionLib.LimitType',\n                name: 'limitType',\n                type: 'uint8',\n              },\n              {\n                internalType: 'uint256',\n                name: 'limit',\n                type: 'uint256',\n              },\n              {\n                internalType: 'uint256',\n                name: 'period',\n                type: 'uint256',\n              },\n            ],\n            internalType: 'struct SessionLib.UsageLimit',\n            name: 'feeLimit',\n            type: 'tuple',\n          },\n          {\n            components: [\n              {\n                internalType: 'address',\n                name: 'target',\n                type: 'address',\n              },\n              {\n                internalType: 'bytes4',\n                name: 'selector',\n                type: 'bytes4',\n              },\n              {\n                internalType: 'uint256',\n                name: 'maxValuePerUse',\n                type: 'uint256',\n              },\n              {\n                components: [\n                  {\n                    internalType: 'enum SessionLib.LimitType',\n                    name: 'limitType',\n                    type: 'uint8',\n                  },\n                  {\n                    internalType: 'uint256',\n                    name: 'limit',\n                    type: 'uint256',\n                  },\n                  {\n                    internalType: 'uint256',\n                    name: 'period',\n                    type: 'uint256',\n                  },\n                ],\n                internalType: 'struct SessionLib.UsageLimit',\n                name: 'valueLimit',\n                type: 'tuple',\n              },\n              {\n                components: [\n                  {\n                    internalType: 'enum SessionLib.Condition',\n                    name: 'condition',\n                    type: 'uint8',\n                  },\n                  {\n                    internalType: 'uint64',\n                    name: 'index',\n                    type: 'uint64',\n                  },\n                  {\n                    internalType: 'bytes32',\n                    name: 'refValue',\n                    type: 'bytes32',\n                  },\n                  {\n                    components: [\n                      {\n                        internalType: 'enum SessionLib.LimitType',\n                        name: 'limitType',\n                        type: 'uint8',\n                      },\n                      {\n                        internalType: 'uint256',\n                        name: 'limit',\n                        type: 'uint256',\n                      },\n                      {\n                        internalType: 'uint256',\n                        name: 'period',\n                        type: 'uint256',\n                      },\n                    ],\n                    internalType: 'struct SessionLib.UsageLimit',\n                    name: 'limit',\n                    type: 'tuple',\n                  },\n                ],\n                internalType: 'struct SessionLib.Constraint[]',\n                name: 'constraints',\n                type: 'tuple[]',\n              },\n            ],\n            internalType: 'struct SessionLib.CallSpec[]',\n            name: 'callPolicies',\n            type: 'tuple[]',\n          },\n          {\n            components: [\n              {\n                internalType: 'address',\n                name: 'target',\n                type: 'address',\n              },\n              {\n                internalType: 'uint256',\n                name: 'maxValuePerUse',\n                type: 'uint256',\n              },\n              {\n                components: [\n                  {\n                    internalType: 'enum SessionLib.LimitType',\n                    name: 'limitType',\n                    type: 'uint8',\n                  },\n                  {\n                    internalType: 'uint256',\n                    name: 'limit',\n                    type: 'uint256',\n                  },\n                  {\n                    internalType: 'uint256',\n                    name: 'period',\n                    type: 'uint256',\n                  },\n                ],\n                internalType: 'struct SessionLib.UsageLimit',\n                name: 'valueLimit',\n                type: 'tuple',\n              },\n            ],\n            internalType: 'struct SessionLib.TransferSpec[]',\n            name: 'transferPolicies',\n            type: 'tuple[]',\n          },\n        ],\n        indexed: false,\n        internalType: 'struct SessionLib.SessionSpec',\n        name: 'sessionSpec',\n        type: 'tuple',\n      },\n    ],\n    name: 'SessionCreated',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'sessionHash',\n        type: 'bytes32',\n      },\n    ],\n    name: 'SessionRevoked',\n    type: 'event',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes',\n        name: 'sessionData',\n        type: 'bytes',\n      },\n    ],\n    name: 'addValidationKey',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: 'address',\n            name: 'signer',\n            type: 'address',\n          },\n          {\n            internalType: 'uint256',\n            name: 'expiresAt',\n            type: 'uint256',\n          },\n          {\n            components: [\n              {\n                internalType: 'enum SessionLib.LimitType',\n                name: 'limitType',\n                type: 'uint8',\n              },\n              {\n                internalType: 'uint256',\n                name: 'limit',\n                type: 'uint256',\n              },\n              {\n                internalType: 'uint256',\n                name: 'period',\n                type: 'uint256',\n              },\n            ],\n            internalType: 'struct SessionLib.UsageLimit',\n            name: 'feeLimit',\n            type: 'tuple',\n          },\n          {\n            components: [\n              {\n                internalType: 'address',\n                name: 'target',\n                type: 'address',\n              },\n              {\n                internalType: 'bytes4',\n                name: 'selector',\n                type: 'bytes4',\n              },\n              {\n                internalType: 'uint256',\n                name: 'maxValuePerUse',\n                type: 'uint256',\n              },\n              {\n                components: [\n                  {\n                    internalType: 'enum SessionLib.LimitType',\n                    name: 'limitType',\n                    type: 'uint8',\n                  },\n                  {\n                    internalType: 'uint256',\n                    name: 'limit',\n                    type: 'uint256',\n                  },\n                  {\n                    internalType: 'uint256',\n                    name: 'period',\n                    type: 'uint256',\n                  },\n                ],\n                internalType: 'struct SessionLib.UsageLimit',\n                name: 'valueLimit',\n                type: 'tuple',\n              },\n              {\n                components: [\n                  {\n                    internalType: 'enum SessionLib.Condition',\n                    name: 'condition',\n                    type: 'uint8',\n                  },\n                  {\n                    internalType: 'uint64',\n                    name: 'index',\n                    type: 'uint64',\n                  },\n                  {\n                    internalType: 'bytes32',\n                    name: 'refValue',\n                    type: 'bytes32',\n                  },\n                  {\n                    components: [\n                      {\n                        internalType: 'enum SessionLib.LimitType',\n                        name: 'limitType',\n                        type: 'uint8',\n                      },\n                      {\n                        internalType: 'uint256',\n                        name: 'limit',\n                        type: 'uint256',\n                      },\n                      {\n                        internalType: 'uint256',\n                        name: 'period',\n                        type: 'uint256',\n                      },\n                    ],\n                    internalType: 'struct SessionLib.UsageLimit',\n                    name: 'limit',\n                    type: 'tuple',\n                  },\n                ],\n                internalType: 'struct SessionLib.Constraint[]',\n                name: 'constraints',\n                type: 'tuple[]',\n              },\n            ],\n            internalType: 'struct SessionLib.CallSpec[]',\n            name: 'callPolicies',\n            type: 'tuple[]',\n          },\n          {\n            components: [\n              {\n                internalType: 'address',\n                name: 'target',\n                type: 'address',\n              },\n              {\n                internalType: 'uint256',\n                name: 'maxValuePerUse',\n                type: 'uint256',\n              },\n              {\n                components: [\n                  {\n                    internalType: 'enum SessionLib.LimitType',\n                    name: 'limitType',\n                    type: 'uint8',\n                  },\n                  {\n                    internalType: 'uint256',\n                    name: 'limit',\n                    type: 'uint256',\n                  },\n                  {\n                    internalType: 'uint256',\n                    name: 'period',\n                    type: 'uint256',\n                  },\n                ],\n                internalType: 'struct SessionLib.UsageLimit',\n                name: 'valueLimit',\n                type: 'tuple',\n              },\n            ],\n            internalType: 'struct SessionLib.TransferSpec[]',\n            name: 'transferPolicies',\n            type: 'tuple[]',\n          },\n        ],\n        internalType: 'struct SessionLib.SessionSpec',\n        name: 'sessionSpec',\n        type: 'tuple',\n      },\n    ],\n    name: 'createSession',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'disable',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'enum OperationType',\n        name: 'operationType',\n        type: 'uint8',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'signedHash',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes',\n        name: 'signature',\n        type: 'bytes',\n      },\n    ],\n    name: 'handleValidation',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes',\n        name: 'data',\n        type: 'bytes',\n      },\n    ],\n    name: 'init',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'smartAccount',\n        type: 'address',\n      },\n    ],\n    name: 'isInited',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'name',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    stateMutability: 'pure',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'sessionHash',\n        type: 'bytes32',\n      },\n    ],\n    name: 'revokeKey',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32[]',\n        name: 'sessionHashes',\n        type: 'bytes32[]',\n      },\n    ],\n    name: 'revokeKeys',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n      {\n        components: [\n          {\n            internalType: 'address',\n            name: 'signer',\n            type: 'address',\n          },\n          {\n            internalType: 'uint256',\n            name: 'expiresAt',\n            type: 'uint256',\n          },\n          {\n            components: [\n              {\n                internalType: 'enum SessionLib.LimitType',\n                name: 'limitType',\n                type: 'uint8',\n              },\n              {\n                internalType: 'uint256',\n                name: 'limit',\n                type: 'uint256',\n              },\n              {\n                internalType: 'uint256',\n                name: 'period',\n                type: 'uint256',\n              },\n            ],\n            internalType: 'struct SessionLib.UsageLimit',\n            name: 'feeLimit',\n            type: 'tuple',\n          },\n          {\n            components: [\n              {\n                internalType: 'address',\n                name: 'target',\n                type: 'address',\n              },\n              {\n                internalType: 'bytes4',\n                name: 'selector',\n                type: 'bytes4',\n              },\n              {\n                internalType: 'uint256',\n                name: 'maxValuePerUse',\n                type: 'uint256',\n              },\n              {\n                components: [\n                  {\n                    internalType: 'enum SessionLib.LimitType',\n                    name: 'limitType',\n                    type: 'uint8',\n                  },\n                  {\n                    internalType: 'uint256',\n                    name: 'limit',\n                    type: 'uint256',\n                  },\n                  {\n                    internalType: 'uint256',\n                    name: 'period',\n                    type: 'uint256',\n                  },\n                ],\n                internalType: 'struct SessionLib.UsageLimit',\n                name: 'valueLimit',\n                type: 'tuple',\n              },\n              {\n                components: [\n                  {\n                    internalType: 'enum SessionLib.Condition',\n                    name: 'condition',\n                    type: 'uint8',\n                  },\n                  {\n                    internalType: 'uint64',\n                    name: 'index',\n                    type: 'uint64',\n                  },\n                  {\n                    internalType: 'bytes32',\n                    name: 'refValue',\n                    type: 'bytes32',\n                  },\n                  {\n                    components: [\n                      {\n                        internalType: 'enum SessionLib.LimitType',\n                        name: 'limitType',\n                        type: 'uint8',\n                      },\n                      {\n                        internalType: 'uint256',\n                        name: 'limit',\n                        type: 'uint256',\n                      },\n                      {\n                        internalType: 'uint256',\n                        name: 'period',\n                        type: 'uint256',\n                      },\n                    ],\n                    internalType: 'struct SessionLib.UsageLimit',\n                    name: 'limit',\n                    type: 'tuple',\n                  },\n                ],\n                internalType: 'struct SessionLib.Constraint[]',\n                name: 'constraints',\n                type: 'tuple[]',\n              },\n            ],\n            internalType: 'struct SessionLib.CallSpec[]',\n            name: 'callPolicies',\n            type: 'tuple[]',\n          },\n          {\n            components: [\n              {\n                internalType: 'address',\n                name: 'target',\n                type: 'address',\n              },\n              {\n                internalType: 'uint256',\n                name: 'maxValuePerUse',\n                type: 'uint256',\n              },\n              {\n                components: [\n                  {\n                    internalType: 'enum SessionLib.LimitType',\n                    name: 'limitType',\n                    type: 'uint8',\n                  },\n                  {\n                    internalType: 'uint256',\n                    name: 'limit',\n                    type: 'uint256',\n                  },\n                  {\n                    internalType: 'uint256',\n                    name: 'period',\n                    type: 'uint256',\n                  },\n                ],\n                internalType: 'struct SessionLib.UsageLimit',\n                name: 'valueLimit',\n                type: 'tuple',\n              },\n            ],\n            internalType: 'struct SessionLib.TransferSpec[]',\n            name: 'transferPolicies',\n            type: 'tuple[]',\n          },\n        ],\n        internalType: 'struct SessionLib.SessionSpec',\n        name: 'spec',\n        type: 'tuple',\n      },\n    ],\n    name: 'sessionState',\n    outputs: [\n      {\n        components: [\n          {\n            internalType: 'uint256',\n            name: 'expiresAt',\n            type: 'uint256',\n          },\n          {\n            internalType: 'enum SessionLib.Status',\n            name: 'status',\n            type: 'uint8',\n          },\n          {\n            internalType: 'uint256',\n            name: 'feesRemaining',\n            type: 'uint256',\n          },\n          {\n            components: [\n              {\n                internalType: 'uint256',\n                name: 'remaining',\n                type: 'uint256',\n              },\n              {\n                internalType: 'address',\n                name: 'target',\n                type: 'address',\n              },\n              {\n                internalType: 'bytes4',\n                name: 'selector',\n                type: 'bytes4',\n              },\n              {\n                internalType: 'uint256',\n                name: 'index',\n                type: 'uint256',\n              },\n            ],\n            internalType: 'struct SessionLib.LimitState[]',\n            name: 'transferValue',\n            type: 'tuple[]',\n          },\n          {\n            components: [\n              {\n                internalType: 'uint256',\n                name: 'remaining',\n                type: 'uint256',\n              },\n              {\n                internalType: 'address',\n                name: 'target',\n                type: 'address',\n              },\n              {\n                internalType: 'bytes4',\n                name: 'selector',\n                type: 'bytes4',\n              },\n              {\n                internalType: 'uint256',\n                name: 'index',\n                type: 'uint256',\n              },\n            ],\n            internalType: 'struct SessionLib.LimitState[]',\n            name: 'callValue',\n            type: 'tuple[]',\n          },\n          {\n            components: [\n              {\n                internalType: 'uint256',\n                name: 'remaining',\n                type: 'uint256',\n              },\n              {\n                internalType: 'address',\n                name: 'target',\n                type: 'address',\n              },\n              {\n                internalType: 'bytes4',\n                name: 'selector',\n                type: 'bytes4',\n              },\n              {\n                internalType: 'uint256',\n                name: 'index',\n                type: 'uint256',\n              },\n            ],\n            internalType: 'struct SessionLib.LimitState[]',\n            name: 'callParams',\n            type: 'tuple[]',\n          },\n        ],\n        internalType: 'struct SessionLib.SessionState',\n        name: '',\n        type: 'tuple',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'sessionHash',\n        type: 'bytes32',\n      },\n    ],\n    name: 'sessionStatus',\n    outputs: [\n      {\n        internalType: 'enum SessionLib.Status',\n        name: '',\n        type: 'uint8',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes4',\n        name: 'interfaceId',\n        type: 'bytes4',\n      },\n    ],\n    name: 'supportsInterface',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'pure',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'signedHash',\n        type: 'bytes32',\n      },\n      {\n        components: [\n          {\n            internalType: 'uint256',\n            name: 'txType',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'from',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'to',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'gasLimit',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'gasPerPubdataByteLimit',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'maxFeePerGas',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'maxPriorityFeePerGas',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'paymaster',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'nonce',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'value',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256[4]',\n            name: 'reserved',\n            type: 'uint256[4]',\n          },\n          {\n            internalType: 'bytes',\n            name: 'data',\n            type: 'bytes',\n          },\n          {\n            internalType: 'bytes',\n            name: 'signature',\n            type: 'bytes',\n          },\n          {\n            internalType: 'bytes32[]',\n            name: 'factoryDeps',\n            type: 'bytes32[]',\n          },\n          {\n            internalType: 'bytes',\n            name: 'paymasterInput',\n            type: 'bytes',\n          },\n          {\n            internalType: 'bytes',\n            name: 'reservedDynamic',\n            type: 'bytes',\n          },\n        ],\n        internalType: 'struct Transaction',\n        name: 'transaction',\n        type: 'tuple',\n      },\n      {\n        internalType: 'bytes',\n        name: 'hookData',\n        type: 'bytes',\n      },\n    ],\n    name: 'validationHook',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'version',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    stateMutability: 'pure',\n    type: 'function',\n  },\n] as const;\n","import {\n  type Address,\n  encodeAbiParameters,\n  getAbiItem,\n  getAddress,\n  type Hash,\n  type Hex,\n  keccak256,\n} from 'viem';\n\nimport { SessionKeyValidatorAbi } from './abis/SessionKeyValidator.js';\n\nexport enum LimitType {\n  Unlimited = 0,\n  Lifetime = 1,\n  Allowance = 2,\n}\n\n/**\n * Limit is the value tracked either for a lifetime or a period on-chain\n * @member limitType - Used to validate limit & period values (unlimited has no limit, lifetime has no period, allowance has both!)\n * @member limit - The limit is exceeded if the tracked value is greater than this over the provided period\n * @member period - The block.timestamp divisor for the limit to be enforced (eg: 60 for a minute, 86400 for a day, 604800 for a week, unset for lifetime)\n */\nexport interface Limit {\n  limitType: LimitType;\n  limit: bigint;\n  period: bigint;\n}\n\nexport const LimitUnlimited = {\n  limitType: LimitType.Unlimited,\n  limit: 0n,\n  period: 0n,\n};\n\nexport const LimitZero = {\n  limitType: LimitType.Lifetime,\n  limit: 0n,\n  period: 0n,\n};\n\n/**\n * Common logic operators to used combine multiple constraints\n */\nexport enum ConstraintCondition {\n  Unconstrained = 0,\n  Equal = 1,\n  Greater = 2,\n  Less = 3,\n  GreaterEqual = 4,\n  LessEqual = 5,\n  NotEqual = 6,\n}\n\n/**\n * Constraint allows performing logic checks on any binary word (bytes32) in the transaction.\n * This can let you set spend limits against functions on specific contracts\n * @member index - The location of the start of the data in the transaction. This is not the index of the constraint within the containing array!\n * @member condition - The kind of check to perform (None, =, >, <, >=, <=, !=)\n * @member refValue - The value to compare against (as bytes32)\n * @member limit - The limit to enforce on the parsed value (from index)\n */\nexport interface Constraint {\n  index: bigint;\n  condition: ConstraintCondition;\n  refValue: Hash;\n  limit: Limit;\n}\n\n/**\n * CallPolicy is a policy for a specific contract (address/function) call.\n * @member target - Only one policy per target per session (unique mapping)\n * @member selector - Solidity function selector (the selector directly), also unique mapping with target\n * @member maxValuePerUse - Will reject transaction if value is set above this amount (for transfer or call)\n * @member valueLimit - If not set, unlimited. If a number or a limit without a period, converts to a lifetime value. Also rejects transactions that have cumulative value greater than what's set here\n * @member constraints - Array of conditions with specific limits for performing range and logic checks (e.g. 5 > x >= 30) on the transaction data (not value!)\n */\nexport interface CallPolicy {\n  target: Address;\n  valueLimit: Limit;\n  maxValuePerUse: bigint;\n  selector: Hash;\n  constraints: Constraint[];\n}\n\n/**\n * Simplified CallPolicy for transactions with less than 4 bytes of data\n * @member target - Only one policy per target per session (unique mapping from CallPolicies)\n * @member maxValuePerUse - Will reject transaction if value is set above this amount\n * @member valueLimit - Validated from value\n */\nexport interface TransferPolicy {\n  target: Address;\n  maxValuePerUse: bigint;\n  valueLimit: Limit;\n}\n\n/**\n * SessionConfig is a set of policies and metadata to validate a transaction\n * @member signer - The address that signs the transaction (session public key)\n * @member expiresAt - The block.timestamp at which the session is no longer valid\n * @member feeLimit - The maximum fee that can be paid for the transaction (maxFeePerGas * gasLimit)\n * @member callPolicies - Used to validate the transaction data, has complex calldata parsing logic\n * @member transferPolicies - Used to validate the transaction value when there's no additional data\n */\nexport interface SessionConfig {\n  signer: Address;\n  expiresAt: bigint;\n  feeLimit: Limit;\n  callPolicies: CallPolicy[];\n  transferPolicies: TransferPolicy[];\n}\n\nexport enum SessionStatus {\n  NotInitialized = 0,\n  Active = 1,\n  Closed = 2,\n  Expired = 3,\n}\n\nexport interface SessionState {\n  expiresAt: bigint;\n  status: SessionStatus;\n  feesRemaining: bigint;\n  transferValue: {\n    remaining: bigint;\n    target: Address;\n    selector: Hash;\n    index: bigint;\n  }[];\n  callValue: {\n    remaining: bigint;\n    target: Address;\n    selector: Hash;\n    index: bigint;\n  }[];\n  callParams: {\n    remaining: bigint;\n    target: Address;\n    selector: Hash;\n    index: bigint;\n  }[];\n}\n\nexport function getSessionSpec() {\n  return getAbiItem({\n    abi: SessionKeyValidatorAbi,\n    name: 'createSession',\n  }).inputs[0];\n}\n\nexport function encodeSession(sessionConfig: SessionConfig): Hex {\n  return encodeAbiParameters([getSessionSpec()], [sessionConfig]);\n}\n\nexport function encodeSessionWithPeriodIds(\n  sessionConfig: SessionConfig,\n  periods: bigint[],\n): Hex {\n  return encodeAbiParameters(\n    [getSessionSpec(), { type: 'uint64[]' }],\n    [sessionConfig, periods],\n  );\n}\n\nexport const getPeriodIdsForTransaction = (args: {\n  sessionConfig: SessionConfig;\n  target: Address;\n  selector?: Hex;\n  timestamp?: bigint;\n}) => {\n  const timestamp = args.timestamp || BigInt(Math.floor(Date.now() / 1000));\n  const target = getAddress(args.target);\n\n  const getId = (limit: Limit): bigint => {\n    if (limit.limitType === LimitType.Allowance) {\n      return timestamp / limit.period;\n    }\n    return 0n;\n  };\n\n  const findTransferPolicy = () => {\n    return args.sessionConfig.transferPolicies.find(\n      (policy) => policy.target.toLowerCase() === target.toLowerCase(),\n    );\n  };\n  const findCallPolicy = () => {\n    return args.sessionConfig.callPolicies.find(\n      (policy) =>\n        policy.target.toLowerCase() === target.toLowerCase() &&\n        policy.selector == args.selector,\n    );\n  };\n\n  const isContractCall = !!args.selector && args.selector.length >= 10;\n  const policy: TransferPolicy | CallPolicy | undefined = isContractCall\n    ? findCallPolicy()\n    : findTransferPolicy();\n  if (!policy) throw new Error('Transaction does not fit any policy');\n\n  const periodIds = [\n    getId(args.sessionConfig.feeLimit),\n    getId(policy.valueLimit),\n    ...(isContractCall\n      ? (policy as CallPolicy).constraints.map((constraint) =>\n          getId(constraint.limit),\n        )\n      : []),\n  ];\n  return periodIds;\n};\n\nexport function getSessionHash(sessionConfig: SessionConfig): Hash {\n  return keccak256(encodeSession(sessionConfig));\n}\n","import {\n  type Account,\n  type Address,\n  type Client,\n  concatHex,\n  type Hash,\n  type Hex,\n  type PublicClient,\n  type Transport,\n} from 'viem';\nimport { readContract, writeContract } from 'viem/actions';\nimport type { ChainEIP712 } from 'viem/chains';\nimport { getAction } from 'viem/utils';\n\nimport AGWAccountAbi from '../abis/AGWAccount.js';\nimport { SessionKeyValidatorAbi } from '../abis/SessionKeyValidator.js';\nimport { SESSION_KEY_VALIDATOR_ADDRESS } from '../constants.js';\nimport { encodeSession, type SessionConfig } from '../sessions.js';\nimport { isSmartAccountDeployed } from '../utils.js';\n\nexport interface CreateSessionParameters {\n  session: SessionConfig;\n  paymaster?: Address;\n  paymasterInput?: Hex;\n}\n\nexport interface CreateSessionReturnType {\n  transactionHash: Hash | undefined;\n  session: SessionConfig;\n}\n\n/**\n * Creates a session key for an Abstract Global Wallet.\n *\n * Session keys enable temporary, permissioned access to a wallet, allowing specific actions\n * to be performed without requiring the wallet owner's signature for each transaction.\n *\n * @param args - Parameters for creating the session\n * @param args.session - Session key configuration object\n * @param args.paymaster - Optional address of a paymaster to sponsor the transaction\n * @param args.paymasterInput - Optional data for the paymaster\n * @returns Object containing the transaction hash of the session key creation and the session config\n *\n * @example\n * ```ts\n * import { useAbstractClient } from \"@abstract-foundation/agw-react\";\n * import { LimitType } from \"@abstract-foundation/agw-client/sessions\";\n * import { toFunctionSelector, parseEther } from \"viem\";\n * import { privateKeyToAccount, generatePrivateKey } from \"viem/accounts\";\n *\n * // Generate a new session key pair\n * const sessionPrivateKey = generatePrivateKey();\n * const sessionSigner = privateKeyToAccount(sessionPrivateKey);\n *\n * export default function CreateSession() {\n *   const { data: agwClient } = useAbstractClient();\n *\n *   async function createSession() {\n *     if (!agwClient) return;\n *\n *     const { session } = await agwClient.createSession({\n *       session: {\n *         signer: sessionSigner.address,\n *         expiresAt: BigInt(Math.floor(Date.now() / 1000) + 60 * 60 * 24),\n *         feeLimit: {\n *           limitType: LimitType.Lifetime,\n *           limit: parseEther(\"1\"),\n *           period: BigInt(0),\n *         },\n *         callPolicies: [\n *           {\n *             target: \"0xC4822AbB9F05646A9Ce44EFa6dDcda0Bf45595AA\",\n *             selector: toFunctionSelector(\"mint(address,uint256)\"),\n *             valueLimit: {\n *               limitType: LimitType.Unlimited,\n *               limit: BigInt(0),\n *               period: BigInt(0),\n *             },\n *             maxValuePerUse: BigInt(0),\n *             constraints: [],\n *           }\n *         ],\n *         transferPolicies: [],\n *       },\n *     });\n *   }\n *\n *   return <button onClick={createSession}>Create Session</button>;\n * }\n * ```\n *\n * @see {@link SessionConfig} - The session configuration type\n * @see {@link encodeSession} - Function to encode a session configuration\n */\nexport async function createSession(\n  client: Client<Transport, ChainEIP712, Account>,\n  publicClient: PublicClient<Transport, ChainEIP712>,\n  args: CreateSessionParameters,\n): Promise<CreateSessionReturnType> {\n  const { session, ...rest } = args;\n\n  const isDeployed = await isSmartAccountDeployed(\n    publicClient,\n    client.account.address,\n  );\n\n  const hasModule = isDeployed ? await hasSessionModule(client) : false;\n\n  let transactionHash: Hash | undefined = undefined;\n\n  if (!hasModule) {\n    const encodedSession = encodeSession(session);\n    transactionHash = await getAction(\n      client,\n      writeContract,\n      'writeContract',\n    )({\n      address: client.account.address,\n      abi: AGWAccountAbi,\n      functionName: 'addModule',\n      args: [concatHex([SESSION_KEY_VALIDATOR_ADDRESS, encodedSession])],\n      ...rest,\n    } as any);\n  } else {\n    transactionHash = await getAction(\n      client,\n      writeContract,\n      'writeContract',\n    )({\n      address: SESSION_KEY_VALIDATOR_ADDRESS,\n      abi: SessionKeyValidatorAbi,\n      functionName: 'createSession',\n      args: [session as any],\n      ...rest,\n    } as any);\n  }\n\n  return { transactionHash, session };\n}\n\nasync function hasSessionModule(\n  client: Client<Transport, ChainEIP712, Account>,\n) {\n  const validationHooks = await getAction(\n    client,\n    readContract,\n    'readContract',\n  )({\n    address: client.account.address,\n    abi: AGWAccountAbi,\n    functionName: 'listHooks',\n    args: [true],\n  });\n\n  const hasSessionModule = validationHooks.some(\n    (hook) => hook === SESSION_KEY_VALIDATOR_ADDRESS,\n  );\n\n  return hasSessionModule;\n}\n","export const erc6492MagicBytes =\n  '0x6492649264926492649264926492649264926492649264926492649264926492' as const\n\nexport const zeroHash =\n  '0x0000000000000000000000000000000000000000000000000000000000000000' as const\n","/* [ContractDeployer](https://github.com/matter-labs/era-system-contracts/blob/main/contracts/ContractDeployer.sol) */\nexport const contractDeployerAbi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'accountAddress',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'enum IContractDeployer.AccountNonceOrdering',\n        name: 'nonceOrdering',\n        type: 'uint8',\n      },\n    ],\n    name: 'AccountNonceOrderingUpdated',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'accountAddress',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'enum IContractDeployer.AccountAbstractionVersion',\n        name: 'aaVersion',\n        type: 'uint8',\n      },\n    ],\n    name: 'AccountVersionUpdated',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'deployerAddress',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'bytecodeHash',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'contractAddress',\n        type: 'address',\n      },\n    ],\n    name: 'ContractDeployed',\n    type: 'event',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: '_salt',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: '_bytecodeHash',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes',\n        name: '_input',\n        type: 'bytes',\n      },\n    ],\n    name: 'create',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: '_salt',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: '_bytecodeHash',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes',\n        name: '_input',\n        type: 'bytes',\n      },\n    ],\n    name: 'create2',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: '_salt',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: '_bytecodeHash',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes',\n        name: '_input',\n        type: 'bytes',\n      },\n      {\n        internalType: 'enum IContractDeployer.AccountAbstractionVersion',\n        name: '_aaVersion',\n        type: 'uint8',\n      },\n    ],\n    name: 'create2Account',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: '_bytecodeHash',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes',\n        name: '_input',\n        type: 'bytes',\n      },\n      {\n        internalType: 'enum IContractDeployer.AccountAbstractionVersion',\n        name: '_aaVersion',\n        type: 'uint8',\n      },\n    ],\n    name: 'createAccount',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_address',\n        type: 'address',\n      },\n    ],\n    name: 'extendedAccountVersion',\n    outputs: [\n      {\n        internalType: 'enum IContractDeployer.AccountAbstractionVersion',\n        name: '',\n        type: 'uint8',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: '_keccak256BytecodeHash',\n        type: 'bytes32',\n      },\n    ],\n    name: 'forceDeployKeccak256',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: 'bytes32',\n            name: 'bytecodeHash',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'address',\n            name: 'newAddress',\n            type: 'address',\n          },\n          {\n            internalType: 'bool',\n            name: 'callConstructor',\n            type: 'bool',\n          },\n          {\n            internalType: 'uint256',\n            name: 'value',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes',\n            name: 'input',\n            type: 'bytes',\n          },\n        ],\n        internalType: 'struct ContractDeployer.ForceDeployment',\n        name: '_deployment',\n        type: 'tuple',\n      },\n      {\n        internalType: 'address',\n        name: '_sender',\n        type: 'address',\n      },\n    ],\n    name: 'forceDeployOnAddress',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: 'bytes32',\n            name: 'bytecodeHash',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'address',\n            name: 'newAddress',\n            type: 'address',\n          },\n          {\n            internalType: 'bool',\n            name: 'callConstructor',\n            type: 'bool',\n          },\n          {\n            internalType: 'uint256',\n            name: 'value',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes',\n            name: 'input',\n            type: 'bytes',\n          },\n        ],\n        internalType: 'struct ContractDeployer.ForceDeployment[]',\n        name: '_deployments',\n        type: 'tuple[]',\n      },\n    ],\n    name: 'forceDeployOnAddresses',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_address',\n        type: 'address',\n      },\n    ],\n    name: 'getAccountInfo',\n    outputs: [\n      {\n        components: [\n          {\n            internalType: 'enum IContractDeployer.AccountAbstractionVersion',\n            name: 'supportedAAVersion',\n            type: 'uint8',\n          },\n          {\n            internalType: 'enum IContractDeployer.AccountNonceOrdering',\n            name: 'nonceOrdering',\n            type: 'uint8',\n          },\n        ],\n        internalType: 'struct IContractDeployer.AccountInfo',\n        name: 'info',\n        type: 'tuple',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_sender',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: '_senderNonce',\n        type: 'uint256',\n      },\n    ],\n    name: 'getNewAddressCreate',\n    outputs: [\n      {\n        internalType: 'address',\n        name: 'newAddress',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'pure',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_sender',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes32',\n        name: '_bytecodeHash',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: '_salt',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes',\n        name: '_input',\n        type: 'bytes',\n      },\n    ],\n    name: 'getNewAddressCreate2',\n    outputs: [\n      {\n        internalType: 'address',\n        name: 'newAddress',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'enum IContractDeployer.AccountAbstractionVersion',\n        name: '_version',\n        type: 'uint8',\n      },\n    ],\n    name: 'updateAccountVersion',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'enum IContractDeployer.AccountNonceOrdering',\n        name: '_nonceOrdering',\n        type: 'uint8',\n      },\n    ],\n    name: 'updateNonceOrdering',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n]\n\nexport const paymasterAbi = [\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_token',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: '_minAllowance',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes',\n        name: '_innerInput',\n        type: 'bytes',\n      },\n    ],\n    name: 'approvalBased',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes',\n        name: 'input',\n        type: 'bytes',\n      },\n    ],\n    name: 'general',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n]\n\nexport const l2SharedBridgeAbi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'l1Sender',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'l2Receiver',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'l2Token',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'FinalizeDeposit',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'l2Sender',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'l1Receiver',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'l2Token',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'WithdrawalInitiated',\n    type: 'event',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_l1Sender',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: '_l2Receiver',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: '_l1Token',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: '_amount',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes',\n        name: '_data',\n        type: 'bytes',\n      },\n    ],\n    name: 'finalizeDeposit',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'l1Bridge',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'l1SharedBridge',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_l2Token',\n        type: 'address',\n      },\n    ],\n    name: 'l1TokenAddress',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_l1Token',\n        type: 'address',\n      },\n    ],\n    name: 'l2TokenAddress',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_l1Receiver',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: '_l2Token',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: '_amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'withdraw',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n] as const\n\nexport const l1SharedBridgeAbi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'uint256',\n        name: 'chainId',\n        type: 'uint256',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'l1Token',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'BridgehubDepositBaseTokenInitiated',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'uint256',\n        name: 'chainId',\n        type: 'uint256',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'txDataHash',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'l2DepositTxHash',\n        type: 'bytes32',\n      },\n    ],\n    name: 'BridgehubDepositFinalized',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'uint256',\n        name: 'chainId',\n        type: 'uint256',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'txDataHash',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'l1Token',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'BridgehubDepositInitiated',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'uint256',\n        name: 'chainId',\n        type: 'uint256',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'l1Token',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'ClaimedFailedDepositSharedBridge',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'uint256',\n        name: 'chainId',\n        type: 'uint256',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'l2DepositTxHash',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'l1Token',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'LegacyDepositInitiated',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'uint256',\n        name: 'chainId',\n        type: 'uint256',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'l1Token',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'WithdrawalFinalizedSharedBridge',\n    type: 'event',\n  },\n  {\n    inputs: [],\n    name: 'BRIDGE_HUB',\n    outputs: [\n      {\n        internalType: 'contract IBridgehub',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'L1_WETH_TOKEN',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_chainId',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes32',\n        name: '_txDataHash',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: '_txHash',\n        type: 'bytes32',\n      },\n    ],\n    name: 'bridgehubConfirmL2Transaction',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_chainId',\n        type: 'uint256',\n      },\n      {\n        internalType: 'address',\n        name: '_prevMsgSender',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: '_l2Value',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes',\n        name: '_data',\n        type: 'bytes',\n      },\n    ],\n    name: 'bridgehubDeposit',\n    outputs: [\n      {\n        components: [\n          {\n            internalType: 'bytes32',\n            name: 'magicValue',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'address',\n            name: 'l2Contract',\n            type: 'address',\n          },\n          {\n            internalType: 'bytes',\n            name: 'l2Calldata',\n            type: 'bytes',\n          },\n          {\n            internalType: 'bytes[]',\n            name: 'factoryDeps',\n            type: 'bytes[]',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'txDataHash',\n            type: 'bytes32',\n          },\n        ],\n        internalType: 'struct L2TransactionRequestTwoBridgesInner',\n        name: 'request',\n        type: 'tuple',\n      },\n    ],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_chainId',\n        type: 'uint256',\n      },\n      {\n        internalType: 'address',\n        name: '_prevMsgSender',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: '_l1Token',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: '_amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'bridgehubDepositBaseToken',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_chainId',\n        type: 'uint256',\n      },\n      {\n        internalType: 'address',\n        name: '_depositSender',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: '_l1Token',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: '_amount',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes32',\n        name: '_l2TxHash',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'uint256',\n        name: '_l2BatchNumber',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: '_l2MessageIndex',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint16',\n        name: '_l2TxNumberInBatch',\n        type: 'uint16',\n      },\n      {\n        internalType: 'bytes32[]',\n        name: '_merkleProof',\n        type: 'bytes32[]',\n      },\n    ],\n    name: 'claimFailedDeposit',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_depositSender',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: '_l1Token',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: '_amount',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes32',\n        name: '_l2TxHash',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'uint256',\n        name: '_l2BatchNumber',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: '_l2MessageIndex',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint16',\n        name: '_l2TxNumberInBatch',\n        type: 'uint16',\n      },\n      {\n        internalType: 'bytes32[]',\n        name: '_merkleProof',\n        type: 'bytes32[]',\n      },\n    ],\n    name: 'claimFailedDepositLegacyErc20Bridge',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_chainId',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes32',\n        name: '_l2TxHash',\n        type: 'bytes32',\n      },\n    ],\n    name: 'depositHappened',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_msgSender',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: '_l2Receiver',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: '_l1Token',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: '_amount',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: '_l2TxGasLimit',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: '_l2TxGasPerPubdataByte',\n        type: 'uint256',\n      },\n      {\n        internalType: 'address',\n        name: '_refundRecipient',\n        type: 'address',\n      },\n    ],\n    name: 'depositLegacyErc20Bridge',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: 'txHash',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_chainId',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: '_l2BatchNumber',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: '_l2MessageIndex',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint16',\n        name: '_l2TxNumberInBatch',\n        type: 'uint16',\n      },\n      {\n        internalType: 'bytes',\n        name: '_message',\n        type: 'bytes',\n      },\n      {\n        internalType: 'bytes32[]',\n        name: '_merkleProof',\n        type: 'bytes32[]',\n      },\n    ],\n    name: 'finalizeWithdrawal',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_l2BatchNumber',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: '_l2MessageIndex',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint16',\n        name: '_l2TxNumberInBatch',\n        type: 'uint16',\n      },\n      {\n        internalType: 'bytes',\n        name: '_message',\n        type: 'bytes',\n      },\n      {\n        internalType: 'bytes32[]',\n        name: '_merkleProof',\n        type: 'bytes32[]',\n      },\n    ],\n    name: 'finalizeWithdrawalLegacyErc20Bridge',\n    outputs: [\n      {\n        internalType: 'address',\n        name: 'l1Receiver',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'l1Token',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_chainId',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: '_l2BatchNumber',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: '_l2MessageIndex',\n        type: 'uint256',\n      },\n    ],\n    name: 'isWithdrawalFinalized',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_chainId',\n        type: 'uint256',\n      },\n    ],\n    name: 'l2BridgeAddress',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'legacyBridge',\n    outputs: [\n      {\n        internalType: 'contract IL1ERC20Bridge',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_chainId',\n        type: 'uint256',\n      },\n    ],\n    name: 'receiveEth',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_eraLegacyBridgeLastDepositBatch',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: '_eraLegacyBridgeLastDepositTxNumber',\n        type: 'uint256',\n      },\n    ],\n    name: 'setEraLegacyBridgeLastDepositTime',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_eraPostDiamondUpgradeFirstBatch',\n        type: 'uint256',\n      },\n    ],\n    name: 'setEraPostDiamondUpgradeFirstBatch',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_eraPostLegacyBridgeUpgradeFirstBatch',\n        type: 'uint256',\n      },\n    ],\n    name: 'setEraPostLegacyBridgeUpgradeFirstBatch',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n] as const\n\nexport const ethTokenAbi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'Mint',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n    name: 'Transfer',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: '_l2Sender',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: '_l1Receiver',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: '_amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'Withdrawal',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: '_l2Sender',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: '_l1Receiver',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: '_amount',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes',\n        name: '_additionalData',\n        type: 'bytes',\n      },\n    ],\n    name: 'WithdrawalWithMessage',\n    type: 'event',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    name: 'balanceOf',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'decimals',\n    outputs: [\n      {\n        internalType: 'uint8',\n        name: '',\n        type: 'uint8',\n      },\n    ],\n    stateMutability: 'pure',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_account',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: '_amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'mint',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'name',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    stateMutability: 'pure',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'symbol',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    stateMutability: 'pure',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'totalSupply',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_from',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: '_to',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: '_amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'transferFromTo',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_l1Receiver',\n        type: 'address',\n      },\n    ],\n    name: 'withdraw',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_l1Receiver',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes',\n        name: '_additionalData',\n        type: 'bytes',\n      },\n    ],\n    name: 'withdrawWithMessage',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n] as const\n\nexport const bridgehubAbi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'oldAdmin',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'newAdmin',\n        type: 'address',\n      },\n    ],\n    name: 'NewAdmin',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'uint256',\n        name: 'chainId',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'stateTransitionManager',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'chainGovernance',\n        type: 'address',\n      },\n    ],\n    name: 'NewChain',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'oldPendingAdmin',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'newPendingAdmin',\n        type: 'address',\n      },\n    ],\n    name: 'NewPendingAdmin',\n    type: 'event',\n  },\n  {\n    inputs: [],\n    name: 'acceptAdmin',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_stateTransitionManager',\n        type: 'address',\n      },\n    ],\n    name: 'addStateTransitionManager',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_token',\n        type: 'address',\n      },\n    ],\n    name: 'addToken',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_chainId',\n        type: 'uint256',\n      },\n    ],\n    name: 'baseToken',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_chainId',\n        type: 'uint256',\n      },\n      {\n        internalType: 'address',\n        name: '_stateTransitionManager',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: '_baseToken',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: '_salt',\n        type: 'uint256',\n      },\n      {\n        internalType: 'address',\n        name: '_admin',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes',\n        name: '_initData',\n        type: 'bytes',\n      },\n    ],\n    name: 'createNewChain',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: 'chainId',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_chainId',\n        type: 'uint256',\n      },\n    ],\n    name: 'getHyperchain',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_chainId',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: '_gasPrice',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: '_l2GasLimit',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: '_l2GasPerPubdataByteLimit',\n        type: 'uint256',\n      },\n    ],\n    name: 'l2TransactionBaseCost',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_chainId',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes32',\n        name: '_l2TxHash',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'uint256',\n        name: '_l2BatchNumber',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: '_l2MessageIndex',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint16',\n        name: '_l2TxNumberInBatch',\n        type: 'uint16',\n      },\n      {\n        internalType: 'bytes32[]',\n        name: '_merkleProof',\n        type: 'bytes32[]',\n      },\n      {\n        internalType: 'enum TxStatus',\n        name: '_status',\n        type: 'uint8',\n      },\n    ],\n    name: 'proveL1ToL2TransactionStatus',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_chainId',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: '_batchNumber',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: '_index',\n        type: 'uint256',\n      },\n      {\n        components: [\n          {\n            internalType: 'uint8',\n            name: 'l2ShardId',\n            type: 'uint8',\n          },\n          {\n            internalType: 'bool',\n            name: 'isService',\n            type: 'bool',\n          },\n          {\n            internalType: 'uint16',\n            name: 'txNumberInBatch',\n            type: 'uint16',\n          },\n          {\n            internalType: 'address',\n            name: 'sender',\n            type: 'address',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'key',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'value',\n            type: 'bytes32',\n          },\n        ],\n        internalType: 'struct L2Log',\n        name: '_log',\n        type: 'tuple',\n      },\n      {\n        internalType: 'bytes32[]',\n        name: '_proof',\n        type: 'bytes32[]',\n      },\n    ],\n    name: 'proveL2LogInclusion',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_chainId',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: '_batchNumber',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: '_index',\n        type: 'uint256',\n      },\n      {\n        components: [\n          {\n            internalType: 'uint16',\n            name: 'txNumberInBatch',\n            type: 'uint16',\n          },\n          {\n            internalType: 'address',\n            name: 'sender',\n            type: 'address',\n          },\n          {\n            internalType: 'bytes',\n            name: 'data',\n            type: 'bytes',\n          },\n        ],\n        internalType: 'struct L2Message',\n        name: '_message',\n        type: 'tuple',\n      },\n      {\n        internalType: 'bytes32[]',\n        name: '_proof',\n        type: 'bytes32[]',\n      },\n    ],\n    name: 'proveL2MessageInclusion',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_stateTransitionManager',\n        type: 'address',\n      },\n    ],\n    name: 'removeStateTransitionManager',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: 'uint256',\n            name: 'chainId',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'mintValue',\n            type: 'uint256',\n          },\n          {\n            internalType: 'address',\n            name: 'l2Contract',\n            type: 'address',\n          },\n          {\n            internalType: 'uint256',\n            name: 'l2Value',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes',\n            name: 'l2Calldata',\n            type: 'bytes',\n          },\n          {\n            internalType: 'uint256',\n            name: 'l2GasLimit',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'l2GasPerPubdataByteLimit',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes[]',\n            name: 'factoryDeps',\n            type: 'bytes[]',\n          },\n          {\n            internalType: 'address',\n            name: 'refundRecipient',\n            type: 'address',\n          },\n        ],\n        internalType: 'struct L2TransactionRequestDirect',\n        name: '_request',\n        type: 'tuple',\n      },\n    ],\n    name: 'requestL2TransactionDirect',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: 'canonicalTxHash',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: 'uint256',\n            name: 'chainId',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'mintValue',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'l2Value',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'l2GasLimit',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'l2GasPerPubdataByteLimit',\n            type: 'uint256',\n          },\n          {\n            internalType: 'address',\n            name: 'refundRecipient',\n            type: 'address',\n          },\n          {\n            internalType: 'address',\n            name: 'secondBridgeAddress',\n            type: 'address',\n          },\n          {\n            internalType: 'uint256',\n            name: 'secondBridgeValue',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes',\n            name: 'secondBridgeCalldata',\n            type: 'bytes',\n          },\n        ],\n        internalType: 'struct L2TransactionRequestTwoBridgesOuter',\n        name: '_request',\n        type: 'tuple',\n      },\n    ],\n    name: 'requestL2TransactionTwoBridges',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: 'canonicalTxHash',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_newPendingAdmin',\n        type: 'address',\n      },\n    ],\n    name: 'setPendingAdmin',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_sharedBridge',\n        type: 'address',\n      },\n    ],\n    name: 'setSharedBridge',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'sharedBridge',\n    outputs: [\n      {\n        internalType: 'contract IL1SharedBridge',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_chainId',\n        type: 'uint256',\n      },\n    ],\n    name: 'stateTransitionManager',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_stateTransitionManager',\n        type: 'address',\n      },\n    ],\n    name: 'stateTransitionManagerIsRegistered',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_baseToken',\n        type: 'address',\n      },\n    ],\n    name: 'tokenIsRegistered',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n] as const\n\nexport const zksyncAbi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'uint256',\n        name: 'batchNumber',\n        type: 'uint256',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'batchHash',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'commitment',\n        type: 'bytes32',\n      },\n    ],\n    name: 'BlockCommit',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'uint256',\n        name: 'batchNumber',\n        type: 'uint256',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'batchHash',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'commitment',\n        type: 'bytes32',\n      },\n    ],\n    name: 'BlockExecution',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'totalBatchesCommitted',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'totalBatchesVerified',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'totalBatchesExecuted',\n        type: 'uint256',\n      },\n    ],\n    name: 'BlocksRevert',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'uint256',\n        name: 'previousLastVerifiedBatch',\n        type: 'uint256',\n      },\n      {\n        indexed: true,\n        internalType: 'uint256',\n        name: 'currentLastVerifiedBatch',\n        type: 'uint256',\n      },\n    ],\n    name: 'BlocksVerification',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        components: [\n          {\n            components: [\n              {\n                internalType: 'address',\n                name: 'facet',\n                type: 'address',\n              },\n              {\n                internalType: 'enum Diamond.Action',\n                name: 'action',\n                type: 'uint8',\n              },\n              {\n                internalType: 'bool',\n                name: 'isFreezable',\n                type: 'bool',\n              },\n              {\n                internalType: 'bytes4[]',\n                name: 'selectors',\n                type: 'bytes4[]',\n              },\n            ],\n            internalType: 'struct Diamond.FacetCut[]',\n            name: 'facetCuts',\n            type: 'tuple[]',\n          },\n          {\n            internalType: 'address',\n            name: 'initAddress',\n            type: 'address',\n          },\n          {\n            internalType: 'bytes',\n            name: 'initCalldata',\n            type: 'bytes',\n          },\n        ],\n        indexed: false,\n        internalType: 'struct Diamond.DiamondCutData',\n        name: 'diamondCut',\n        type: 'tuple',\n      },\n    ],\n    name: 'ExecuteUpgrade',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [],\n    name: 'Freeze',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'bool',\n        name: 'isPorterAvailable',\n        type: 'bool',\n      },\n    ],\n    name: 'IsPorterAvailableStatusUpdate',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'oldAdmin',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'newAdmin',\n        type: 'address',\n      },\n    ],\n    name: 'NewAdmin',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'uint128',\n        name: 'oldNominator',\n        type: 'uint128',\n      },\n      {\n        indexed: false,\n        internalType: 'uint128',\n        name: 'oldDenominator',\n        type: 'uint128',\n      },\n      {\n        indexed: false,\n        internalType: 'uint128',\n        name: 'newNominator',\n        type: 'uint128',\n      },\n      {\n        indexed: false,\n        internalType: 'uint128',\n        name: 'newDenominator',\n        type: 'uint128',\n      },\n    ],\n    name: 'NewBaseTokenMultiplier',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        components: [\n          {\n            internalType: 'enum PubdataPricingMode',\n            name: 'pubdataPricingMode',\n            type: 'uint8',\n          },\n          {\n            internalType: 'uint32',\n            name: 'batchOverheadL1Gas',\n            type: 'uint32',\n          },\n          {\n            internalType: 'uint32',\n            name: 'maxPubdataPerBatch',\n            type: 'uint32',\n          },\n          {\n            internalType: 'uint32',\n            name: 'maxL2GasPerBatch',\n            type: 'uint32',\n          },\n          {\n            internalType: 'uint32',\n            name: 'priorityTxMaxPubdata',\n            type: 'uint32',\n          },\n          {\n            internalType: 'uint64',\n            name: 'minimalL2GasPrice',\n            type: 'uint64',\n          },\n        ],\n        indexed: false,\n        internalType: 'struct FeeParams',\n        name: 'oldFeeParams',\n        type: 'tuple',\n      },\n      {\n        components: [\n          {\n            internalType: 'enum PubdataPricingMode',\n            name: 'pubdataPricingMode',\n            type: 'uint8',\n          },\n          {\n            internalType: 'uint32',\n            name: 'batchOverheadL1Gas',\n            type: 'uint32',\n          },\n          {\n            internalType: 'uint32',\n            name: 'maxPubdataPerBatch',\n            type: 'uint32',\n          },\n          {\n            internalType: 'uint32',\n            name: 'maxL2GasPerBatch',\n            type: 'uint32',\n          },\n          {\n            internalType: 'uint32',\n            name: 'priorityTxMaxPubdata',\n            type: 'uint32',\n          },\n          {\n            internalType: 'uint64',\n            name: 'minimalL2GasPrice',\n            type: 'uint64',\n          },\n        ],\n        indexed: false,\n        internalType: 'struct FeeParams',\n        name: 'newFeeParams',\n        type: 'tuple',\n      },\n    ],\n    name: 'NewFeeParams',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'oldPendingAdmin',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'newPendingAdmin',\n        type: 'address',\n      },\n    ],\n    name: 'NewPendingAdmin',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'txId',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes32',\n        name: 'txHash',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'uint64',\n        name: 'expirationTimestamp',\n        type: 'uint64',\n      },\n      {\n        components: [\n          {\n            internalType: 'uint256',\n            name: 'txType',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'from',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'to',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'gasLimit',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'gasPerPubdataByteLimit',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'maxFeePerGas',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'maxPriorityFeePerGas',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'paymaster',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'nonce',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'value',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256[4]',\n            name: 'reserved',\n            type: 'uint256[4]',\n          },\n          {\n            internalType: 'bytes',\n            name: 'data',\n            type: 'bytes',\n          },\n          {\n            internalType: 'bytes',\n            name: 'signature',\n            type: 'bytes',\n          },\n          {\n            internalType: 'uint256[]',\n            name: 'factoryDeps',\n            type: 'uint256[]',\n          },\n          {\n            internalType: 'bytes',\n            name: 'paymasterInput',\n            type: 'bytes',\n          },\n          {\n            internalType: 'bytes',\n            name: 'reservedDynamic',\n            type: 'bytes',\n          },\n        ],\n        indexed: false,\n        internalType: 'struct L2CanonicalTransaction',\n        name: 'transaction',\n        type: 'tuple',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes[]',\n        name: 'factoryDeps',\n        type: 'bytes[]',\n      },\n    ],\n    name: 'NewPriorityRequest',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'oldPriorityTxMaxGasLimit',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'newPriorityTxMaxGasLimit',\n        type: 'uint256',\n      },\n    ],\n    name: 'NewPriorityTxMaxGasLimit',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'oldTransactionFilterer',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'newTransactionFilterer',\n        type: 'address',\n      },\n    ],\n    name: 'NewTransactionFilterer',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        components: [\n          {\n            components: [\n              {\n                internalType: 'address',\n                name: 'facet',\n                type: 'address',\n              },\n              {\n                internalType: 'enum Diamond.Action',\n                name: 'action',\n                type: 'uint8',\n              },\n              {\n                internalType: 'bool',\n                name: 'isFreezable',\n                type: 'bool',\n              },\n              {\n                internalType: 'bytes4[]',\n                name: 'selectors',\n                type: 'bytes4[]',\n              },\n            ],\n            internalType: 'struct Diamond.FacetCut[]',\n            name: 'facetCuts',\n            type: 'tuple[]',\n          },\n          {\n            internalType: 'address',\n            name: 'initAddress',\n            type: 'address',\n          },\n          {\n            internalType: 'bytes',\n            name: 'initCalldata',\n            type: 'bytes',\n          },\n        ],\n        indexed: false,\n        internalType: 'struct Diamond.DiamondCutData',\n        name: 'diamondCut',\n        type: 'tuple',\n      },\n      {\n        indexed: true,\n        internalType: 'uint256',\n        name: 'proposalId',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes32',\n        name: 'proposalSalt',\n        type: 'bytes32',\n      },\n    ],\n    name: 'ProposeTransparentUpgrade',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [],\n    name: 'Unfreeze',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'validatorAddress',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'bool',\n        name: 'isActive',\n        type: 'bool',\n      },\n    ],\n    name: 'ValidatorStatusUpdate',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'enum PubdataPricingMode',\n        name: 'validiumMode',\n        type: 'uint8',\n      },\n    ],\n    name: 'ValidiumModeStatusUpdate',\n    type: 'event',\n  },\n  {\n    inputs: [],\n    name: 'acceptAdmin',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'baseTokenGasPriceMultiplierDenominator',\n    outputs: [\n      {\n        internalType: 'uint128',\n        name: '',\n        type: 'uint128',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'baseTokenGasPriceMultiplierNominator',\n    outputs: [\n      {\n        internalType: 'uint128',\n        name: '',\n        type: 'uint128',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: 'address',\n            name: 'sender',\n            type: 'address',\n          },\n          {\n            internalType: 'address',\n            name: 'contractL2',\n            type: 'address',\n          },\n          {\n            internalType: 'uint256',\n            name: 'mintValue',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'l2Value',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes',\n            name: 'l2Calldata',\n            type: 'bytes',\n          },\n          {\n            internalType: 'uint256',\n            name: 'l2GasLimit',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'l2GasPerPubdataByteLimit',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes[]',\n            name: 'factoryDeps',\n            type: 'bytes[]',\n          },\n          {\n            internalType: 'address',\n            name: 'refundRecipient',\n            type: 'address',\n          },\n        ],\n        internalType: 'struct BridgehubL2TransactionRequest',\n        name: '_request',\n        type: 'tuple',\n      },\n    ],\n    name: 'bridgehubRequestL2Transaction',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: 'canonicalTxHash',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: 'enum PubdataPricingMode',\n            name: 'pubdataPricingMode',\n            type: 'uint8',\n          },\n          {\n            internalType: 'uint32',\n            name: 'batchOverheadL1Gas',\n            type: 'uint32',\n          },\n          {\n            internalType: 'uint32',\n            name: 'maxPubdataPerBatch',\n            type: 'uint32',\n          },\n          {\n            internalType: 'uint32',\n            name: 'maxL2GasPerBatch',\n            type: 'uint32',\n          },\n          {\n            internalType: 'uint32',\n            name: 'priorityTxMaxPubdata',\n            type: 'uint32',\n          },\n          {\n            internalType: 'uint64',\n            name: 'minimalL2GasPrice',\n            type: 'uint64',\n          },\n        ],\n        internalType: 'struct FeeParams',\n        name: '_newFeeParams',\n        type: 'tuple',\n      },\n    ],\n    name: 'changeFeeParams',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: 'uint64',\n            name: 'batchNumber',\n            type: 'uint64',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'batchHash',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'uint64',\n            name: 'indexRepeatedStorageChanges',\n            type: 'uint64',\n          },\n          {\n            internalType: 'uint256',\n            name: 'numberOfLayer1Txs',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'priorityOperationsHash',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'l2LogsTreeRoot',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'uint256',\n            name: 'timestamp',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'commitment',\n            type: 'bytes32',\n          },\n        ],\n        internalType: 'struct IExecutor.StoredBatchInfo',\n        name: '_lastCommittedBatchData',\n        type: 'tuple',\n      },\n      {\n        components: [\n          {\n            internalType: 'uint64',\n            name: 'batchNumber',\n            type: 'uint64',\n          },\n          {\n            internalType: 'uint64',\n            name: 'timestamp',\n            type: 'uint64',\n          },\n          {\n            internalType: 'uint64',\n            name: 'indexRepeatedStorageChanges',\n            type: 'uint64',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'newStateRoot',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'uint256',\n            name: 'numberOfLayer1Txs',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'priorityOperationsHash',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'bootloaderHeapInitialContentsHash',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'eventsQueueStateHash',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'bytes',\n            name: 'systemLogs',\n            type: 'bytes',\n          },\n          {\n            internalType: 'bytes',\n            name: 'pubdataCommitments',\n            type: 'bytes',\n          },\n        ],\n        internalType: 'struct IExecutor.CommitBatchInfo[]',\n        name: '_newBatchesData',\n        type: 'tuple[]',\n      },\n    ],\n    name: 'commitBatches',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_chainId',\n        type: 'uint256',\n      },\n      {\n        components: [\n          {\n            internalType: 'uint64',\n            name: 'batchNumber',\n            type: 'uint64',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'batchHash',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'uint64',\n            name: 'indexRepeatedStorageChanges',\n            type: 'uint64',\n          },\n          {\n            internalType: 'uint256',\n            name: 'numberOfLayer1Txs',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'priorityOperationsHash',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'l2LogsTreeRoot',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'uint256',\n            name: 'timestamp',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'commitment',\n            type: 'bytes32',\n          },\n        ],\n        internalType: 'struct IExecutor.StoredBatchInfo',\n        name: '_lastCommittedBatchData',\n        type: 'tuple',\n      },\n      {\n        components: [\n          {\n            internalType: 'uint64',\n            name: 'batchNumber',\n            type: 'uint64',\n          },\n          {\n            internalType: 'uint64',\n            name: 'timestamp',\n            type: 'uint64',\n          },\n          {\n            internalType: 'uint64',\n            name: 'indexRepeatedStorageChanges',\n            type: 'uint64',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'newStateRoot',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'uint256',\n            name: 'numberOfLayer1Txs',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'priorityOperationsHash',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'bootloaderHeapInitialContentsHash',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'eventsQueueStateHash',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'bytes',\n            name: 'systemLogs',\n            type: 'bytes',\n          },\n          {\n            internalType: 'bytes',\n            name: 'pubdataCommitments',\n            type: 'bytes',\n          },\n        ],\n        internalType: 'struct IExecutor.CommitBatchInfo[]',\n        name: '_newBatchesData',\n        type: 'tuple[]',\n      },\n    ],\n    name: 'commitBatchesSharedBridge',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: 'uint64',\n            name: 'batchNumber',\n            type: 'uint64',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'batchHash',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'uint64',\n            name: 'indexRepeatedStorageChanges',\n            type: 'uint64',\n          },\n          {\n            internalType: 'uint256',\n            name: 'numberOfLayer1Txs',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'priorityOperationsHash',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'l2LogsTreeRoot',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'uint256',\n            name: 'timestamp',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'commitment',\n            type: 'bytes32',\n          },\n        ],\n        internalType: 'struct IExecutor.StoredBatchInfo[]',\n        name: '_batchesData',\n        type: 'tuple[]',\n      },\n    ],\n    name: 'executeBatches',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_chainId',\n        type: 'uint256',\n      },\n      {\n        components: [\n          {\n            internalType: 'uint64',\n            name: 'batchNumber',\n            type: 'uint64',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'batchHash',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'uint64',\n            name: 'indexRepeatedStorageChanges',\n            type: 'uint64',\n          },\n          {\n            internalType: 'uint256',\n            name: 'numberOfLayer1Txs',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'priorityOperationsHash',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'l2LogsTreeRoot',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'uint256',\n            name: 'timestamp',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'commitment',\n            type: 'bytes32',\n          },\n        ],\n        internalType: 'struct IExecutor.StoredBatchInfo[]',\n        name: '_batchesData',\n        type: 'tuple[]',\n      },\n    ],\n    name: 'executeBatchesSharedBridge',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            components: [\n              {\n                internalType: 'address',\n                name: 'facet',\n                type: 'address',\n              },\n              {\n                internalType: 'enum Diamond.Action',\n                name: 'action',\n                type: 'uint8',\n              },\n              {\n                internalType: 'bool',\n                name: 'isFreezable',\n                type: 'bool',\n              },\n              {\n                internalType: 'bytes4[]',\n                name: 'selectors',\n                type: 'bytes4[]',\n              },\n            ],\n            internalType: 'struct Diamond.FacetCut[]',\n            name: 'facetCuts',\n            type: 'tuple[]',\n          },\n          {\n            internalType: 'address',\n            name: 'initAddress',\n            type: 'address',\n          },\n          {\n            internalType: 'bytes',\n            name: 'initCalldata',\n            type: 'bytes',\n          },\n        ],\n        internalType: 'struct Diamond.DiamondCutData',\n        name: '_diamondCut',\n        type: 'tuple',\n      },\n    ],\n    name: 'executeUpgrade',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes4',\n        name: '_selector',\n        type: 'bytes4',\n      },\n    ],\n    name: 'facetAddress',\n    outputs: [\n      {\n        internalType: 'address',\n        name: 'facet',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'facetAddresses',\n    outputs: [\n      {\n        internalType: 'address[]',\n        name: 'facets',\n        type: 'address[]',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_facet',\n        type: 'address',\n      },\n    ],\n    name: 'facetFunctionSelectors',\n    outputs: [\n      {\n        internalType: 'bytes4[]',\n        name: '',\n        type: 'bytes4[]',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'facets',\n    outputs: [\n      {\n        components: [\n          {\n            internalType: 'address',\n            name: 'addr',\n            type: 'address',\n          },\n          {\n            internalType: 'bytes4[]',\n            name: 'selectors',\n            type: 'bytes4[]',\n          },\n        ],\n        internalType: 'struct IGetters.Facet[]',\n        name: '',\n        type: 'tuple[]',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_l2BatchNumber',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: '_l2MessageIndex',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint16',\n        name: '_l2TxNumberInBatch',\n        type: 'uint16',\n      },\n      {\n        internalType: 'bytes',\n        name: '_message',\n        type: 'bytes',\n      },\n      {\n        internalType: 'bytes32[]',\n        name: '_merkleProof',\n        type: 'bytes32[]',\n      },\n    ],\n    name: 'finalizeEthWithdrawal',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'freezeDiamond',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'getAdmin',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'getBaseToken',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'getBaseTokenBridge',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'getBridgehub',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'getFirstUnprocessedPriorityTx',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'getL2BootloaderBytecodeHash',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'getL2DefaultAccountBytecodeHash',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'getL2SystemContractsUpgradeBatchNumber',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'getL2SystemContractsUpgradeTxHash',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'getName',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'getPendingAdmin',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'getPriorityQueueSize',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'getPriorityTxMaxGasLimit',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'getProtocolVersion',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'getPubdataPricingMode',\n    outputs: [\n      {\n        internalType: 'enum PubdataPricingMode',\n        name: '',\n        type: 'uint8',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'getSemverProtocolVersion',\n    outputs: [\n      {\n        internalType: 'uint32',\n        name: '',\n        type: 'uint32',\n      },\n      {\n        internalType: 'uint32',\n        name: '',\n        type: 'uint32',\n      },\n      {\n        internalType: 'uint32',\n        name: '',\n        type: 'uint32',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'getStateTransitionManager',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'getTotalBatchesCommitted',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'getTotalBatchesExecuted',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'getTotalBatchesVerified',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'getTotalPriorityTxs',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'getVerifier',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'getVerifierParams',\n    outputs: [\n      {\n        components: [\n          {\n            internalType: 'bytes32',\n            name: 'recursionNodeLevelVkHash',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'recursionLeafLevelVkHash',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'recursionCircuitsSetVksHash',\n            type: 'bytes32',\n          },\n        ],\n        internalType: 'struct VerifierParams',\n        name: '',\n        type: 'tuple',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'isDiamondStorageFrozen',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_l2BatchNumber',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: '_l2MessageIndex',\n        type: 'uint256',\n      },\n    ],\n    name: 'isEthWithdrawalFinalized',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_facet',\n        type: 'address',\n      },\n    ],\n    name: 'isFacetFreezable',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: 'isFreezable',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes4',\n        name: '_selector',\n        type: 'bytes4',\n      },\n    ],\n    name: 'isFunctionFreezable',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_address',\n        type: 'address',\n      },\n    ],\n    name: 'isValidator',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_batchNumber',\n        type: 'uint256',\n      },\n    ],\n    name: 'l2LogsRootHash',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: 'merkleRoot',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_gasPrice',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: '_l2GasLimit',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: '_l2GasPerPubdataByteLimit',\n        type: 'uint256',\n      },\n    ],\n    name: 'l2TransactionBaseCost',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'priorityQueueFrontOperation',\n    outputs: [\n      {\n        components: [\n          {\n            internalType: 'bytes32',\n            name: 'canonicalTxHash',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'uint64',\n            name: 'expirationTimestamp',\n            type: 'uint64',\n          },\n          {\n            internalType: 'uint192',\n            name: 'layer2Tip',\n            type: 'uint192',\n          },\n        ],\n        internalType: 'struct PriorityOperation',\n        name: '',\n        type: 'tuple',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: 'uint64',\n            name: 'batchNumber',\n            type: 'uint64',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'batchHash',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'uint64',\n            name: 'indexRepeatedStorageChanges',\n            type: 'uint64',\n          },\n          {\n            internalType: 'uint256',\n            name: 'numberOfLayer1Txs',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'priorityOperationsHash',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'l2LogsTreeRoot',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'uint256',\n            name: 'timestamp',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'commitment',\n            type: 'bytes32',\n          },\n        ],\n        internalType: 'struct IExecutor.StoredBatchInfo',\n        name: '_prevBatch',\n        type: 'tuple',\n      },\n      {\n        components: [\n          {\n            internalType: 'uint64',\n            name: 'batchNumber',\n            type: 'uint64',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'batchHash',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'uint64',\n            name: 'indexRepeatedStorageChanges',\n            type: 'uint64',\n          },\n          {\n            internalType: 'uint256',\n            name: 'numberOfLayer1Txs',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'priorityOperationsHash',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'l2LogsTreeRoot',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'uint256',\n            name: 'timestamp',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'commitment',\n            type: 'bytes32',\n          },\n        ],\n        internalType: 'struct IExecutor.StoredBatchInfo[]',\n        name: '_committedBatches',\n        type: 'tuple[]',\n      },\n      {\n        components: [\n          {\n            internalType: 'uint256[]',\n            name: 'recursiveAggregationInput',\n            type: 'uint256[]',\n          },\n          {\n            internalType: 'uint256[]',\n            name: 'serializedProof',\n            type: 'uint256[]',\n          },\n        ],\n        internalType: 'struct IExecutor.ProofInput',\n        name: '_proof',\n        type: 'tuple',\n      },\n    ],\n    name: 'proveBatches',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_chainId',\n        type: 'uint256',\n      },\n      {\n        components: [\n          {\n            internalType: 'uint64',\n            name: 'batchNumber',\n            type: 'uint64',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'batchHash',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'uint64',\n            name: 'indexRepeatedStorageChanges',\n            type: 'uint64',\n          },\n          {\n            internalType: 'uint256',\n            name: 'numberOfLayer1Txs',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'priorityOperationsHash',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'l2LogsTreeRoot',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'uint256',\n            name: 'timestamp',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'commitment',\n            type: 'bytes32',\n          },\n        ],\n        internalType: 'struct IExecutor.StoredBatchInfo',\n        name: '_prevBatch',\n        type: 'tuple',\n      },\n      {\n        components: [\n          {\n            internalType: 'uint64',\n            name: 'batchNumber',\n            type: 'uint64',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'batchHash',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'uint64',\n            name: 'indexRepeatedStorageChanges',\n            type: 'uint64',\n          },\n          {\n            internalType: 'uint256',\n            name: 'numberOfLayer1Txs',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'priorityOperationsHash',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'l2LogsTreeRoot',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'uint256',\n            name: 'timestamp',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'commitment',\n            type: 'bytes32',\n          },\n        ],\n        internalType: 'struct IExecutor.StoredBatchInfo[]',\n        name: '_committedBatches',\n        type: 'tuple[]',\n      },\n      {\n        components: [\n          {\n            internalType: 'uint256[]',\n            name: 'recursiveAggregationInput',\n            type: 'uint256[]',\n          },\n          {\n            internalType: 'uint256[]',\n            name: 'serializedProof',\n            type: 'uint256[]',\n          },\n        ],\n        internalType: 'struct IExecutor.ProofInput',\n        name: '_proof',\n        type: 'tuple',\n      },\n    ],\n    name: 'proveBatchesSharedBridge',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: '_l2TxHash',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'uint256',\n        name: '_l2BatchNumber',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: '_l2MessageIndex',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint16',\n        name: '_l2TxNumberInBatch',\n        type: 'uint16',\n      },\n      {\n        internalType: 'bytes32[]',\n        name: '_merkleProof',\n        type: 'bytes32[]',\n      },\n      {\n        internalType: 'enum TxStatus',\n        name: '_status',\n        type: 'uint8',\n      },\n    ],\n    name: 'proveL1ToL2TransactionStatus',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_batchNumber',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: '_index',\n        type: 'uint256',\n      },\n      {\n        components: [\n          {\n            internalType: 'uint8',\n            name: 'l2ShardId',\n            type: 'uint8',\n          },\n          {\n            internalType: 'bool',\n            name: 'isService',\n            type: 'bool',\n          },\n          {\n            internalType: 'uint16',\n            name: 'txNumberInBatch',\n            type: 'uint16',\n          },\n          {\n            internalType: 'address',\n            name: 'sender',\n            type: 'address',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'key',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'value',\n            type: 'bytes32',\n          },\n        ],\n        internalType: 'struct L2Log',\n        name: '_log',\n        type: 'tuple',\n      },\n      {\n        internalType: 'bytes32[]',\n        name: '_proof',\n        type: 'bytes32[]',\n      },\n    ],\n    name: 'proveL2LogInclusion',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_batchNumber',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: '_index',\n        type: 'uint256',\n      },\n      {\n        components: [\n          {\n            internalType: 'uint16',\n            name: 'txNumberInBatch',\n            type: 'uint16',\n          },\n          {\n            internalType: 'address',\n            name: 'sender',\n            type: 'address',\n          },\n          {\n            internalType: 'bytes',\n            name: 'data',\n            type: 'bytes',\n          },\n        ],\n        internalType: 'struct L2Message',\n        name: '_message',\n        type: 'tuple',\n      },\n      {\n        internalType: 'bytes32[]',\n        name: '_proof',\n        type: 'bytes32[]',\n      },\n    ],\n    name: 'proveL2MessageInclusion',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_contractL2',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: '_l2Value',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes',\n        name: '_calldata',\n        type: 'bytes',\n      },\n      {\n        internalType: 'uint256',\n        name: '_l2GasLimit',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: '_l2GasPerPubdataByteLimit',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes[]',\n        name: '_factoryDeps',\n        type: 'bytes[]',\n      },\n      {\n        internalType: 'address',\n        name: '_refundRecipient',\n        type: 'address',\n      },\n    ],\n    name: 'requestL2Transaction',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: 'canonicalTxHash',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_newLastBatch',\n        type: 'uint256',\n      },\n    ],\n    name: 'revertBatches',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_chainId',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: '_newLastBatch',\n        type: 'uint256',\n      },\n    ],\n    name: 'revertBatchesSharedBridge',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_newPendingAdmin',\n        type: 'address',\n      },\n    ],\n    name: 'setPendingAdmin',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bool',\n        name: '_zkPorterIsAvailable',\n        type: 'bool',\n      },\n    ],\n    name: 'setPorterAvailability',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_newPriorityTxMaxGasLimit',\n        type: 'uint256',\n      },\n    ],\n    name: 'setPriorityTxMaxGasLimit',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'enum PubdataPricingMode',\n        name: '_pricingMode',\n        type: 'uint8',\n      },\n    ],\n    name: 'setPubdataPricingMode',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint128',\n        name: '_nominator',\n        type: 'uint128',\n      },\n      {\n        internalType: 'uint128',\n        name: '_denominator',\n        type: 'uint128',\n      },\n    ],\n    name: 'setTokenMultiplier',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_transactionFilterer',\n        type: 'address',\n      },\n    ],\n    name: 'setTransactionFilterer',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_validator',\n        type: 'address',\n      },\n      {\n        internalType: 'bool',\n        name: '_active',\n        type: 'bool',\n      },\n    ],\n    name: 'setValidator',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_batchNumber',\n        type: 'uint256',\n      },\n    ],\n    name: 'storedBatchHash',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'transferEthToSharedBridge',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'unfreezeDiamond',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_protocolVersion',\n        type: 'uint256',\n      },\n      {\n        components: [\n          {\n            components: [\n              {\n                internalType: 'address',\n                name: 'facet',\n                type: 'address',\n              },\n              {\n                internalType: 'enum Diamond.Action',\n                name: 'action',\n                type: 'uint8',\n              },\n              {\n                internalType: 'bool',\n                name: 'isFreezable',\n                type: 'bool',\n              },\n              {\n                internalType: 'bytes4[]',\n                name: 'selectors',\n                type: 'bytes4[]',\n              },\n            ],\n            internalType: 'struct Diamond.FacetCut[]',\n            name: 'facetCuts',\n            type: 'tuple[]',\n          },\n          {\n            internalType: 'address',\n            name: 'initAddress',\n            type: 'address',\n          },\n          {\n            internalType: 'bytes',\n            name: 'initCalldata',\n            type: 'bytes',\n          },\n        ],\n        internalType: 'struct Diamond.DiamondCutData',\n        name: '_cutData',\n        type: 'tuple',\n      },\n    ],\n    name: 'upgradeChainFromVersion',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n] as const\n","import type { Abi } from 'abitype'\n\nimport { zeroHash } from '../../../constants/bytes.js'\nimport {\n  AbiConstructorNotFoundError,\n  AbiConstructorParamsNotFoundError,\n} from '../../../errors/abi.js'\nimport type { ErrorType } from '../../../errors/utils.js'\nimport type { ContractConstructorArgs } from '../../../types/contract.js'\nimport type { Hash, Hex } from '../../../types/misc.js'\nimport { encodeAbiParameters } from '../../../utils/abi/encodeAbiParameters.js'\nimport type {\n  EncodeDeployDataParameters as EncodeDeployDataParameters_,\n  EncodeDeployDataReturnType,\n} from '../../../utils/abi/encodeDeployData.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  encodeFunctionData,\n} from '../../../utils/abi/encodeFunctionData.js'\nimport { toHex } from '../../../utils/encoding/toHex.js'\nimport { contractDeployerAbi } from '../../constants/abis.js'\nimport { accountAbstractionVersion1 } from '../../constants/contract.js'\nimport type { ContractDeploymentType } from '../../types/contract.js'\nimport { type HashBytecodeErrorType, hashBytecode } from '../hashBytecode.js'\n\nconst docsPath = '/docs/contract/encodeDeployData'\n\n/** @internal */\nexport type EncodeDeployDataParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  hasConstructor = abi extends Abi\n    ? Abi extends abi\n      ? true\n      : [Extract<abi[number], { type: 'constructor' }>] extends [never]\n        ? false\n        : true\n    : true,\n  allArgs = ContractConstructorArgs<abi>,\n> = EncodeDeployDataParameters_<abi, hasConstructor, allArgs> & {\n  deploymentType?: ContractDeploymentType | undefined\n  salt?: Hash | undefined\n}\n\nexport type EncodeDeployDataErrorType =\n  | EncodeFunctionDataErrorType\n  | HashBytecodeErrorType\n  | ErrorType\n\nexport function encodeDeployData<const abi extends Abi | readonly unknown[]>(\n  parameters: EncodeDeployDataParameters<abi>,\n): EncodeDeployDataReturnType {\n  const { abi, args, bytecode, deploymentType, salt } =\n    parameters as EncodeDeployDataParameters\n\n  if (!args || args.length === 0) {\n    const { functionName, argsContractDeployer } = getDeploymentDetails(\n      deploymentType,\n      salt ?? zeroHash,\n      toHex(hashBytecode(bytecode)),\n      '0x',\n    )\n    return encodeFunctionData({\n      abi: contractDeployerAbi,\n      functionName,\n      args: argsContractDeployer,\n    })\n  }\n\n  const description = abi.find((x) => 'type' in x && x.type === 'constructor')\n  if (!description) throw new AbiConstructorNotFoundError({ docsPath })\n  if (!('inputs' in description))\n    throw new AbiConstructorParamsNotFoundError({ docsPath })\n  if (!description.inputs || description.inputs.length === 0)\n    throw new AbiConstructorParamsNotFoundError({ docsPath })\n\n  const data = encodeAbiParameters(description.inputs, args)\n  const { functionName, argsContractDeployer } = getDeploymentDetails(\n    deploymentType,\n    salt ?? zeroHash,\n    toHex(hashBytecode(bytecode)),\n    data,\n  )\n\n  return encodeFunctionData({\n    abi: contractDeployerAbi,\n    functionName,\n    args: argsContractDeployer,\n  })\n}\n\nfunction getDeploymentDetails(\n  deploymentType: ContractDeploymentType,\n  salt: Hash,\n  bytecodeHash: Hex,\n  data: Hex,\n): {\n  functionName: string\n  argsContractDeployer: readonly unknown[]\n} {\n  const contractDeploymentArgs = [salt, bytecodeHash, data]\n\n  const deploymentOptions = {\n    create: {\n      functionName: 'create',\n      argsContractDeployer: contractDeploymentArgs,\n    },\n    create2: {\n      functionName: 'create2',\n      argsContractDeployer: contractDeploymentArgs,\n    },\n    createAccount: {\n      functionName: 'createAccount',\n      argsContractDeployer: [\n        ...contractDeploymentArgs,\n        accountAbstractionVersion1,\n      ],\n    },\n    create2Account: {\n      functionName: 'create2Account',\n      argsContractDeployer: [\n        ...contractDeploymentArgs,\n        accountAbstractionVersion1,\n      ],\n    },\n  }\n\n  const deploymentKey = deploymentType || 'create'\n  return deploymentOptions[deploymentKey]\n}\n","export const accountAbstractionVersion1 = 1\n","import { BaseError } from 'viem';\n\nexport class InsufficientBalanceError extends BaseError {\n  constructor() {\n    super(['Insufficient balance for transaction.'].join('\\n'), {\n      name: 'InsufficientBalanceError',\n    });\n  }\n}\n","// replaceBigInts courtesy of ponder.sh:\n// https://github.com/ponder-sh/ponder/blob/bc65b865898b6145e87031314192c59f9e8b621f/packages/utils/src/replaceBigInts.ts\ntype _ReplaceBigInts<\n  arr extends readonly unknown[],\n  type,\n  result extends readonly unknown[] = [],\n> = arr extends [infer first, ...infer rest]\n  ? _ReplaceBigInts<\n      rest,\n      type,\n      readonly [...result, first extends bigint ? type : first]\n    >\n  : result;\n\nexport type ReplaceBigInts<obj, type> = obj extends bigint\n  ? type\n  : obj extends unknown[]\n    ? _ReplaceBigInts<Readonly<obj>, type>\n    : obj extends readonly []\n      ? _ReplaceBigInts<obj, type>\n      : obj extends object\n        ? { [key in keyof obj]: ReplaceBigInts<obj[key], type> }\n        : obj;\n\nexport const replaceBigInts = <const T, const type>(\n  obj: T,\n  replacer: (x: bigint) => type,\n): ReplaceBigInts<T, type> => {\n  if (typeof obj === 'bigint') return replacer(obj) as ReplaceBigInts<T, type>;\n  if (Array.isArray(obj))\n    return obj.map((x) => replaceBigInts(x, replacer)) as ReplaceBigInts<\n      T,\n      type\n    >;\n  if (obj && typeof obj === 'object')\n    return Object.fromEntries(\n      Object.entries(obj).map(([k, v]) => [k, replaceBigInts(v, replacer)]),\n    ) as ReplaceBigInts<T, type>;\n  return obj as ReplaceBigInts<T, type>;\n};\n","import {\n  type Account,\n  type Client,\n  type Hex,\n  type SendTransactionRequest,\n  type SignMessageParameters,\n  type SignTypedDataParameters,\n  toHex,\n  type Transport,\n} from 'viem';\nimport {\n  type ChainEIP712,\n  type SendEip712TransactionParameters,\n  type SignEip712TransactionParameters,\n  type SignEip712TransactionReturnType,\n} from 'viem/zksync';\n\nimport { replaceBigInts } from '../replaceBigInts.js';\nimport type { SendTransactionBatchParameters } from '../types/sendTransactionBatch.js';\nimport type { SignTransactionBatchParameters } from '../types/signTransactionBatch.js';\nexport async function sendPrivyTransaction<\n  chain extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n  account extends Account | undefined = Account | undefined,\n  chainOverride extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n  const request extends SendTransactionRequest<\n    chain,\n    chainOverride\n  > = SendTransactionRequest<chain, chainOverride>,\n>(\n  client: Client<Transport, ChainEIP712, Account>,\n  parameters:\n    | SendEip712TransactionParameters<chain, account, chainOverride, request>\n    | SendTransactionBatchParameters<request>,\n): Promise<SignEip712TransactionReturnType> {\n  const result = (await client.request(\n    {\n      method: 'privy_sendSmartWalletTx',\n      params: [replaceBigInts(parameters, toHex)],\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any,\n    { retryCount: 0 },\n  )) as SignEip712TransactionReturnType;\n  return result;\n}\n\nexport async function sendPrivySignMessage(\n  client: Client<Transport, ChainEIP712, Account>,\n  parameters: Omit<SignMessageParameters, 'account'>,\n): Promise<Hex> {\n  const result = (await client.request(\n    {\n      method: 'privy_signSmartWalletMessage',\n      params: [parameters.message],\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any,\n    { retryCount: 0 },\n  )) as Hex;\n  return result;\n}\n\nexport async function sendPrivySignTypedData(\n  client: Client<Transport, ChainEIP712, Account>,\n  parameters: Omit<SignTypedDataParameters, 'account' | 'privateKey'>,\n): Promise<Hex> {\n  const result = (await client.request(\n    {\n      method: 'privy_signSmartWalletTypedData',\n      params: [client.account.address, parameters],\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any,\n    { retryCount: 0 },\n  )) as Hex;\n  return result;\n}\n\nexport async function signPrivyTransaction<\n  chain extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n  account extends Account | undefined = Account | undefined,\n  chainOverride extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n>(\n  client: Client<Transport, ChainEIP712, Account>,\n  parameters:\n    | SignEip712TransactionParameters<chain, account, chainOverride>\n    | SignTransactionBatchParameters<chain, account, chainOverride>,\n): Promise<SignEip712TransactionReturnType> {\n  const { chain: _chain, account: _account, ...request } = parameters;\n\n  const result = (await client.request(\n    {\n      method: 'privy_signSmartWalletTx',\n      params: [replaceBigInts(request, toHex)],\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any,\n    { retryCount: 0 },\n  )) as SignEip712TransactionReturnType;\n  return result;\n}\n","import { BaseError } from 'viem';\n\nexport class AccountNotFoundError extends BaseError {\n  constructor({ docsPath }: { docsPath?: string | undefined } = {}) {\n    super(\n      [\n        'Could not find an Account to execute with this Action.',\n        'Please provide an Account with the `account` argument on the Action, or by supplying an `account` to the Client.',\n      ].join('\\n'),\n      {\n        docsPath,\n        docsSlug: 'account',\n        name: 'AccountNotFoundError',\n      },\n    );\n  }\n}\n","export const BridgeHubAbi = [\n  {\n    inputs: [],\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    name: 'AddressTooLow',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'BridgeHubAlreadyRegistered',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'ChainIdTooBig',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'expectedMsgValue',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'providedMsgValue',\n        type: 'uint256',\n      },\n    ],\n    name: 'MsgValueMismatch',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'NotInitializedReentrancyGuard',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'Reentrancy',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'STMAlreadyRegistered',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'STMNotRegistered',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'SharedBridgeNotSet',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'SlotOccupied',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'token',\n        type: 'address',\n      },\n    ],\n    name: 'TokenAlreadyRegistered',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'token',\n        type: 'address',\n      },\n    ],\n    name: 'TokenNotRegistered',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'caller',\n        type: 'address',\n      },\n    ],\n    name: 'Unauthorized',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'expectedMagicValue',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'providedMagicValue',\n        type: 'uint256',\n      },\n    ],\n    name: 'WrongMagicValue',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'ZeroAddress',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'ZeroChainId',\n    type: 'error',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'uint8',\n        name: 'version',\n        type: 'uint8',\n      },\n    ],\n    name: 'Initialized',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'oldAdmin',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'newAdmin',\n        type: 'address',\n      },\n    ],\n    name: 'NewAdmin',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'uint256',\n        name: 'chainId',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'stateTransitionManager',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'chainGovernance',\n        type: 'address',\n      },\n    ],\n    name: 'NewChain',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'oldPendingAdmin',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'newPendingAdmin',\n        type: 'address',\n      },\n    ],\n    name: 'NewPendingAdmin',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'previousOwner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'newOwner',\n        type: 'address',\n      },\n    ],\n    name: 'OwnershipTransferStarted',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'previousOwner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'newOwner',\n        type: 'address',\n      },\n    ],\n    name: 'OwnershipTransferred',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    name: 'Paused',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    name: 'Unpaused',\n    type: 'event',\n  },\n  {\n    inputs: [],\n    name: 'acceptAdmin',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'acceptOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_stateTransitionManager',\n        type: 'address',\n      },\n    ],\n    name: 'addStateTransitionManager',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_token',\n        type: 'address',\n      },\n    ],\n    name: 'addToken',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'admin',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_chainId',\n        type: 'uint256',\n      },\n    ],\n    name: 'baseToken',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_chainId',\n        type: 'uint256',\n      },\n      {\n        internalType: 'address',\n        name: '_stateTransitionManager',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: '_baseToken',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: '_salt',\n        type: 'uint256',\n      },\n      {\n        internalType: 'address',\n        name: '_admin',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes',\n        name: '_initData',\n        type: 'bytes',\n      },\n    ],\n    name: 'createNewChain',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_chainId',\n        type: 'uint256',\n      },\n    ],\n    name: 'getHyperchain',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_owner',\n        type: 'address',\n      },\n    ],\n    name: 'initialize',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_chainId',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: '_gasPrice',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: '_l2GasLimit',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: '_l2GasPerPubdataByteLimit',\n        type: 'uint256',\n      },\n    ],\n    name: 'l2TransactionBaseCost',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'owner',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'pause',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'paused',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'pendingOwner',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_chainId',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes32',\n        name: '_l2TxHash',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'uint256',\n        name: '_l2BatchNumber',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: '_l2MessageIndex',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint16',\n        name: '_l2TxNumberInBatch',\n        type: 'uint16',\n      },\n      {\n        internalType: 'bytes32[]',\n        name: '_merkleProof',\n        type: 'bytes32[]',\n      },\n      {\n        internalType: 'enum TxStatus',\n        name: '_status',\n        type: 'uint8',\n      },\n    ],\n    name: 'proveL1ToL2TransactionStatus',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_chainId',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: '_batchNumber',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: '_index',\n        type: 'uint256',\n      },\n      {\n        components: [\n          {\n            internalType: 'uint8',\n            name: 'l2ShardId',\n            type: 'uint8',\n          },\n          {\n            internalType: 'bool',\n            name: 'isService',\n            type: 'bool',\n          },\n          {\n            internalType: 'uint16',\n            name: 'txNumberInBatch',\n            type: 'uint16',\n          },\n          {\n            internalType: 'address',\n            name: 'sender',\n            type: 'address',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'key',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'value',\n            type: 'bytes32',\n          },\n        ],\n        internalType: 'struct L2Log',\n        name: '_log',\n        type: 'tuple',\n      },\n      {\n        internalType: 'bytes32[]',\n        name: '_proof',\n        type: 'bytes32[]',\n      },\n    ],\n    name: 'proveL2LogInclusion',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_chainId',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: '_batchNumber',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: '_index',\n        type: 'uint256',\n      },\n      {\n        components: [\n          {\n            internalType: 'uint16',\n            name: 'txNumberInBatch',\n            type: 'uint16',\n          },\n          {\n            internalType: 'address',\n            name: 'sender',\n            type: 'address',\n          },\n          {\n            internalType: 'bytes',\n            name: 'data',\n            type: 'bytes',\n          },\n        ],\n        internalType: 'struct L2Message',\n        name: '_message',\n        type: 'tuple',\n      },\n      {\n        internalType: 'bytes32[]',\n        name: '_proof',\n        type: 'bytes32[]',\n      },\n    ],\n    name: 'proveL2MessageInclusion',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_stateTransitionManager',\n        type: 'address',\n      },\n    ],\n    name: 'removeStateTransitionManager',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'renounceOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: 'uint256',\n            name: 'chainId',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'mintValue',\n            type: 'uint256',\n          },\n          {\n            internalType: 'address',\n            name: 'l2Contract',\n            type: 'address',\n          },\n          {\n            internalType: 'uint256',\n            name: 'l2Value',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes',\n            name: 'l2Calldata',\n            type: 'bytes',\n          },\n          {\n            internalType: 'uint256',\n            name: 'l2GasLimit',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'l2GasPerPubdataByteLimit',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes[]',\n            name: 'factoryDeps',\n            type: 'bytes[]',\n          },\n          {\n            internalType: 'address',\n            name: 'refundRecipient',\n            type: 'address',\n          },\n        ],\n        internalType: 'struct L2TransactionRequestDirect',\n        name: '_request',\n        type: 'tuple',\n      },\n    ],\n    name: 'requestL2TransactionDirect',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: 'canonicalTxHash',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: 'uint256',\n            name: 'chainId',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'mintValue',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'l2Value',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'l2GasLimit',\n            type: 'uint256',\n          },\n          {\n            internalType: 'uint256',\n            name: 'l2GasPerPubdataByteLimit',\n            type: 'uint256',\n          },\n          {\n            internalType: 'address',\n            name: 'refundRecipient',\n            type: 'address',\n          },\n          {\n            internalType: 'address',\n            name: 'secondBridgeAddress',\n            type: 'address',\n          },\n          {\n            internalType: 'uint256',\n            name: 'secondBridgeValue',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes',\n            name: 'secondBridgeCalldata',\n            type: 'bytes',\n          },\n        ],\n        internalType: 'struct L2TransactionRequestTwoBridgesOuter',\n        name: '_request',\n        type: 'tuple',\n      },\n    ],\n    name: 'requestL2TransactionTwoBridges',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: 'canonicalTxHash',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_newPendingAdmin',\n        type: 'address',\n      },\n    ],\n    name: 'setPendingAdmin',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_sharedBridge',\n        type: 'address',\n      },\n    ],\n    name: 'setSharedBridge',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'sharedBridge',\n    outputs: [\n      {\n        internalType: 'contract IL1SharedBridge',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '_chainId',\n        type: 'uint256',\n      },\n    ],\n    name: 'stateTransitionManager',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_stateTransitionManager',\n        type: 'address',\n      },\n    ],\n    name: 'stateTransitionManagerIsRegistered',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_token',\n        type: 'address',\n      },\n    ],\n    name: 'tokenIsRegistered',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'newOwner',\n        type: 'address',\n      },\n    ],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'unpause',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n] as const;\n","export const ExclusiveDelegateResolverAbi = [\n  {\n    type: 'function',\n    name: 'DELEGATE_REGISTRY',\n    inputs: [],\n    outputs: [\n      {\n        name: '',\n        type: 'address',\n        internalType: 'address',\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    name: 'GLOBAL_DELEGATION',\n    inputs: [],\n    outputs: [\n      {\n        name: '',\n        type: 'bytes24',\n        internalType: 'bytes24',\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    name: 'decodeRightsExpiration',\n    inputs: [\n      {\n        name: 'rights',\n        type: 'bytes32',\n        internalType: 'bytes32',\n      },\n    ],\n    outputs: [\n      {\n        name: '',\n        type: 'bytes24',\n        internalType: 'bytes24',\n      },\n      {\n        name: '',\n        type: 'uint40',\n        internalType: 'uint40',\n      },\n    ],\n    stateMutability: 'pure',\n  },\n  {\n    type: 'function',\n    name: 'delegatedWalletsByRights',\n    inputs: [\n      {\n        name: 'wallet',\n        type: 'address',\n        internalType: 'address',\n      },\n      {\n        name: 'rights',\n        type: 'bytes24',\n        internalType: 'bytes24',\n      },\n    ],\n    outputs: [\n      {\n        name: '',\n        type: 'address[]',\n        internalType: 'address[]',\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    name: 'exclusiveOwnerByRights',\n    inputs: [\n      {\n        name: 'contractAddress',\n        type: 'address',\n        internalType: 'address',\n      },\n      {\n        name: 'tokenId',\n        type: 'uint256',\n        internalType: 'uint256',\n      },\n      {\n        name: 'rights',\n        type: 'bytes24',\n        internalType: 'bytes24',\n      },\n    ],\n    outputs: [\n      {\n        name: 'owner',\n        type: 'address',\n        internalType: 'address',\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    name: 'exclusiveWalletByRights',\n    inputs: [\n      {\n        name: 'vault',\n        type: 'address',\n        internalType: 'address',\n      },\n      {\n        name: 'rights',\n        type: 'bytes24',\n        internalType: 'bytes24',\n      },\n    ],\n    outputs: [\n      {\n        name: '',\n        type: 'address',\n        internalType: 'address',\n      },\n    ],\n    stateMutability: 'view',\n  },\n  {\n    type: 'function',\n    name: 'generateRightsWithExpiration',\n    inputs: [\n      {\n        name: 'rightsIdentifier',\n        type: 'bytes24',\n        internalType: 'bytes24',\n      },\n      {\n        name: 'expiration',\n        type: 'uint40',\n        internalType: 'uint40',\n      },\n    ],\n    outputs: [\n      {\n        name: '',\n        type: 'bytes32',\n        internalType: 'bytes32',\n      },\n    ],\n    stateMutability: 'pure',\n  },\n] as const;\n","import type { ErrorType } from '../../errors/utils.js'\nimport {\n  type CreateTransportErrorType,\n  createTransport,\n  type Transport,\n  type TransportConfig,\n} from './createTransport.js'\n\ntype EthereumProvider = { request(...args: any): Promise<any> }\n\nexport type CustomTransportConfig = {\n  /** The key of the transport. */\n  key?: TransportConfig['key'] | undefined\n  /** Methods to include or exclude from executing RPC requests. */\n  methods?: TransportConfig['methods'] | undefined\n  /** The name of the transport. */\n  name?: TransportConfig['name'] | undefined\n  /** The max number of times to retry. */\n  retryCount?: TransportConfig['retryCount'] | undefined\n  /** The base delay (in ms) between retries. */\n  retryDelay?: TransportConfig['retryDelay'] | undefined\n}\n\nexport type CustomTransport = Transport<\n  'custom',\n  {},\n  EthereumProvider['request']\n>\n\nexport type CustomTransportErrorType = CreateTransportErrorType | ErrorType\n\n/**\n * @description Creates a custom transport given an EIP-1193 compliant `request` attribute.\n */\nexport function custom<provider extends EthereumProvider>(\n  provider: provider,\n  config: CustomTransportConfig = {},\n): CustomTransport {\n  const {\n    key = 'custom',\n    methods,\n    name = 'Custom Provider',\n    retryDelay,\n  } = config\n  return ({ retryCount: defaultRetryCount }) =>\n    createTransport({\n      key,\n      methods,\n      name,\n      request: provider.request.bind(provider),\n      retryCount: config.retryCount ?? defaultRetryCount,\n      retryDelay,\n      type: 'custom',\n    })\n}\n","import {\n  type Account,\n  type Address,\n  type Client,\n  createClient,\n  createPublicClient,\n  createWalletClient,\n  custom,\n  http,\n  type NonceManager,\n  type Transport,\n} from 'viem';\nimport { toAccount } from 'viem/accounts';\nimport type { ChainEIP712 } from 'viem/chains';\n\nimport type { AbstractClient } from './abstractClient.js';\nimport type { SessionConfig } from './sessions.js';\nimport type { CustomPaymasterHandler } from './types/customPaymaster.js';\nimport {\n  type SessionClientActions,\n  sessionWalletActions,\n} from './walletActions.js';\n\ntype GetNonceManagerParameter<account extends Account | Address = Address> =\n  account extends Account\n    ? { nonceManager?: never }\n    : { nonceManager?: NonceManager };\n\ntype CreateSessionClientParameters<\n  account extends Account | Address = Address,\n> = {\n  account: account;\n  chain: ChainEIP712;\n  signer: Account;\n  session: SessionConfig;\n  transport?: Transport;\n  paymasterHandler?: CustomPaymasterHandler;\n} & GetNonceManagerParameter<account>;\n\nexport type SessionClient = Client<Transport, ChainEIP712, Account> &\n  SessionClientActions;\n\nexport interface ToSessionClientParams {\n  client: AbstractClient;\n  signer: Account;\n  session: SessionConfig;\n  paymasterHandler?: CustomPaymasterHandler;\n}\n\n/**\n * Function to create an AbstractClient using a session key.\n *\n * Creates a new SessionClient instance that can submit transactions and perform actions from\n * the Abstract Global wallet signed by a session key. If a transaction violates any of the\n * session key's policies, it will be rejected.\n *\n * @example\n * ```tsx\n * import { useAbstractClient } from \"@abstract-foundation/agw-react\";\n * import { parseAbi } from \"viem\";\n * import { abstractTestnet } from \"viem/chains\";\n * import { useAccount } from \"wagmi\";\n *\n * export default function Example() {\n *   const { address } = useAccount();\n *   const { data: agwClient } = useAbstractClient();\n *\n *   async function sendTransactionWithSessionKey() {\n *     if (!agwClient || !address) return;\n *\n *     // Use the existing session signer and session that you created with useCreateSession\n *     const sessionClient = agwClient.toSessionClient(sessionSigner, session);\n *\n *     const hash = await sessionClient.writeContract({\n *       abi: parseAbi([\"function mint(address,uint256) external\"]),\n *       account: sessionClient.account,\n *       chain: abstractTestnet,\n *       address: \"0xC4822AbB9F05646A9Ce44EFa6dDcda0Bf45595AA\",\n *       functionName: \"mint\",\n *       args: [address, BigInt(1)],\n *     });\n *   }\n *\n *   return <button onClick={sendTransactionWithSessionKey}>Send Transaction with Session Key</button>;\n * }\n * ```\n *\n * @param params - Parameters for creating a session client from an existing AbstractClient\n * @param params.client - The AbstractClient to create the session client from\n * @param params.signer - The account that will be used to sign transactions (must match the signer address in the session configuration)\n * @param params.session - The session configuration created by createSession\n * @param params.paymasterHandler - Optional custom paymaster handler\n * @returns A new AbstractClient instance that uses the session key for signing transactions\n */\nexport function toSessionClient({\n  client,\n  signer,\n  session,\n  paymasterHandler,\n}: ToSessionClientParams) {\n  return createSessionClient({\n    account: client.account,\n    chain: client.chain,\n    session,\n    signer,\n    transport: custom(client.transport),\n    paymasterHandler,\n  });\n}\n\n/**\n * Function to create a new SessionClient without an existing AbstractClient.\n *\n * Creates a new SessionClient instance directly, without requiring an existing AbstractClient.\n * If you already have an AbstractClient, use the toSessionClient method instead.\n *\n * @example\n * ```tsx\n * import { createSessionClient } from \"@abstract-foundation/agw-client/sessions\";\n * import { abstractTestnet } from \"viem/chains\";\n * import { http, parseAbi } from \"viem\";\n * import { privateKeyToAccount, generatePrivateKey } from \"viem/accounts\";\n *\n * // The session signer (from createSession)\n * const sessionPrivateKey = generatePrivateKey();\n * const sessionSigner = privateKeyToAccount(sessionPrivateKey);\n *\n * // Create a session client directly\n * const sessionClient = createSessionClient({\n *   account: \"0x1234...\", // The Abstract Global Wallet address\n *   chain: abstractTestnet,\n *   signer: sessionSigner,\n *   session: {\n *     // ... See createSession docs for session configuration options\n *   },\n *   transport: http(), // Optional - defaults to http()\n * });\n *\n * // Use the session client to make transactions\n * const hash = await sessionClient.writeContract({\n *   address: \"0xC4822AbB9F05646A9Ce44EFa6dDcda0Bf45595AA\",\n *   abi: parseAbi([\"function mint(address,uint256) external\"]),\n *   functionName: \"mint\",\n *   args: [address, BigInt(1)],\n * });\n * ```\n *\n * @param params - Parameters for creating a session client directly\n * @param params.account - The Abstract Global Wallet address or Account object that the session key will act on behalf of (required)\n * @param params.chain - The chain configuration object that supports EIP-712 (required)\n * @param params.signer - The session key account that will be used to sign transactions (required)\n * @param params.session - The session configuration created by createSession (required)\n * @param params.transport - The transport configuration for connecting to the network (defaults to HTTP if not provided)\n * @param params.paymasterHandler - Optional custom paymaster handler\n * @param params.nonceManager - Optional nonce manager\n * @returns A new SessionClient instance that uses the session key for signing transactions\n */\nexport function createSessionClient<\n  account extends Account | Address = Address,\n>({\n  account,\n  signer,\n  chain,\n  transport,\n  session,\n  paymasterHandler,\n  nonceManager,\n}: CreateSessionClientParameters<account>) {\n  if (!transport) {\n    transport = http(undefined, {\n      batch: true,\n    });\n  }\n\n  const publicClient = createPublicClient({\n    transport,\n    chain,\n  });\n\n  const parsedAccount: Account =\n    typeof account === 'string' ? toAccount(account) : account;\n  if (nonceManager) {\n    parsedAccount.nonceManager = nonceManager;\n  }\n\n  const baseClient = createClient({\n    account: parsedAccount,\n    chain: chain,\n    transport,\n  });\n\n  const signerWalletClient = createWalletClient({\n    account: signer,\n    chain: chain,\n    transport,\n  });\n\n  const sessionClient = baseClient.extend(\n    sessionWalletActions(\n      signerWalletClient,\n      publicClient,\n      session,\n      paymasterHandler,\n    ),\n  );\n\n  return sessionClient as SessionClient;\n}\n","import {\n  type Abi,\n  type Account,\n  type Address,\n  type Chain,\n  type Client,\n  type GetChainIdReturnType,\n  type Hash,\n  type PrepareTransactionRequestReturnType,\n  type PublicClient,\n  type SendTransactionRequest,\n  type SendTransactionReturnType,\n  type SignMessageParameters,\n  type SignMessageReturnType,\n  type SignTypedDataParameters,\n  type SignTypedDataReturnType,\n  type Transport,\n  type WalletActions,\n  walletActions,\n  type WalletClient,\n  type WriteContractParameters,\n} from 'viem';\nimport { parseAccount, type SignTransactionReturnType } from 'viem/accounts';\nimport { getChainId } from 'viem/actions';\nimport {\n  type ChainEIP712,\n  type Eip712WalletActions,\n  type SendEip712TransactionParameters,\n  type SignEip712TransactionParameters,\n  type SignEip712TransactionReturnType,\n} from 'viem/zksync';\n\nimport { type AbstractClient } from './abstractClient.js';\nimport {\n  createSession,\n  type CreateSessionParameters,\n  type CreateSessionReturnType,\n} from './actions/createSession.js';\nimport { deployContract } from './actions/deployContract.js';\nimport {\n  getLinkedAccounts,\n  type GetLinkedAccountsParameters,\n  type GetLinkedAccountsReturnType,\n} from './actions/getLinkedAccounts.js';\nimport {\n  getLinkedAgw,\n  type GetLinkedAgwParameters,\n  type GetLinkedAgwReturnType,\n  isLinkedAccount,\n  type IsLinkedAccountParameters,\n} from './actions/getLinkedAgw.js';\nimport { getSessionStatus } from './actions/getSessionStatus.js';\nimport {\n  linkToAgw,\n  type LinkToAgwParameters,\n  type LinkToAgwReturnType,\n} from './actions/linkToAgw.js';\nimport {\n  prepareTransactionRequest,\n  type PrepareTransactionRequestParameters,\n  type PrepareTransactionRequestRequest,\n} from './actions/prepareTransaction.js';\nimport {\n  revokeSessions,\n  type RevokeSessionsParameters,\n  type RevokeSessionsReturnType,\n} from './actions/revokeSessions.js';\nimport { sendTransaction } from './actions/sendTransaction.js';\nimport { sendTransactionBatch } from './actions/sendTransactionBatch.js';\nimport { sendTransactionForSession } from './actions/sendTransactionForSession.js';\nimport { signMessage } from './actions/signMessage.js';\nimport { signTransaction } from './actions/signTransaction.js';\nimport { signTransactionBatch } from './actions/signTransactionBatch.js';\nimport { signTransactionForSession } from './actions/signTransactionForSession.js';\nimport {\n  signTypedData,\n  signTypedDataForSession,\n} from './actions/signTypedData.js';\nimport { writeContract } from './actions/writeContract.js';\nimport { writeContractForSession } from './actions/writeContractForSession.js';\nimport { EOA_VALIDATOR_ADDRESS } from './constants.js';\nimport { type SessionClient, toSessionClient } from './sessionClient.js';\nimport type { SessionConfig, SessionStatus } from './sessions.js';\nimport type { CustomPaymasterHandler } from './types/customPaymaster.js';\nimport type { SendTransactionBatchParameters } from './types/sendTransactionBatch.js';\nimport type { SignTransactionBatchParameters } from './types/signTransactionBatch.js';\n\nexport type AbstractWalletActions<\n  chain extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n  account extends Account | undefined = Account | undefined,\n> = Eip712WalletActions<chain, account> & {\n  getChainId: () => Promise<GetChainIdReturnType>;\n  getLinkedAccounts: () => Promise<GetLinkedAccountsReturnType>;\n  isLinkedAccount: (args: IsLinkedAccountParameters) => Promise<boolean>;\n  createSession: (\n    args: CreateSessionParameters,\n  ) => Promise<CreateSessionReturnType>;\n  revokeSessions: (\n    args: RevokeSessionsParameters,\n  ) => Promise<RevokeSessionsReturnType>;\n  signMessage: (\n    args: Omit<SignMessageParameters, 'account'>,\n  ) => Promise<SignMessageReturnType>;\n  signTypedData: (\n    args: Omit<SignTypedDataParameters, 'account' | 'privateKey'>,\n  ) => Promise<SignTypedDataReturnType>;\n  sendTransactionBatch: <\n    const request extends SendTransactionRequest<ChainEIP712>,\n  >(\n    args: SendTransactionBatchParameters<request>,\n  ) => Promise<SendTransactionReturnType>;\n  signTransactionBatch: (\n    args: SignTransactionBatchParameters<chain, account>,\n  ) => Promise<SignEip712TransactionReturnType>;\n  prepareAbstractTransactionRequest: <\n    chain extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n    account extends Account | undefined = Account | undefined,\n    accountOverride extends Account | Address | undefined = undefined,\n    chainOverride extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n    const request extends PrepareTransactionRequestRequest<\n      chain,\n      chainOverride\n    > = PrepareTransactionRequestRequest<chain, chainOverride>,\n  >(\n    args: PrepareTransactionRequestParameters<\n      chain,\n      account,\n      chainOverride,\n      accountOverride,\n      request\n    >,\n  ) => Promise<PrepareTransactionRequestReturnType>;\n  toSessionClient: (signer: Account, session: SessionConfig) => SessionClient;\n  getSessionStatus: (\n    sessionHashOrConfig: Hash | SessionConfig,\n  ) => Promise<SessionStatus>;\n};\n\n// eslint-disable-next-line @typescript-eslint/consistent-type-definitions\nexport type SessionClientActions<\n  chain extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n  account extends Account | undefined = Account | undefined,\n  chainOverride extends ChainEIP712 | undefined = undefined,\n> = {\n  sendTransaction: <\n    const request extends SendTransactionRequest<chain, chainOverride>,\n    chainOverride extends ChainEIP712 | undefined = undefined,\n  >(\n    args: SendEip712TransactionParameters<\n      chain,\n      account,\n      chainOverride,\n      request\n    >,\n  ) => Promise<SendTransactionReturnType>;\n  signTransaction: (\n    args: SignEip712TransactionParameters<chain, account, chainOverride>,\n  ) => Promise<SignTransactionReturnType>;\n  writeContract: WalletActions<chain, account>['writeContract'];\n  signTypedData: WalletActions<chain, account>['signTypedData'];\n  getSessionStatus: () => Promise<SessionStatus>;\n};\n\nexport type LinkableWalletActions<\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n> = WalletActions<chain, account> & {\n  linkToAgw: (args: LinkToAgwParameters) => Promise<LinkToAgwReturnType>;\n  getLinkedAgw: () => Promise<GetLinkedAgwReturnType>;\n};\n\nexport interface LinkablePublicActions {\n  getLinkedAgw: (\n    args: GetLinkedAgwParameters,\n  ) => Promise<GetLinkedAgwReturnType>;\n  getLinkedAccounts: (\n    args: GetLinkedAccountsParameters,\n  ) => Promise<GetLinkedAccountsReturnType>;\n}\n\nexport function sessionWalletActions(\n  signerClient: WalletClient<Transport, ChainEIP712, Account>,\n  publicClient: PublicClient<Transport, ChainEIP712>,\n  session: SessionConfig,\n  paymasterHandler?: CustomPaymasterHandler,\n) {\n  return (\n    client: Client<Transport, ChainEIP712, Account>,\n  ): SessionClientActions<Chain, Account> => ({\n    sendTransaction: (args) =>\n      sendTransactionForSession(\n        client,\n        signerClient,\n        publicClient,\n        args,\n        session,\n        paymasterHandler,\n      ),\n    writeContract: (args) =>\n      writeContractForSession(\n        client,\n        signerClient,\n        publicClient,\n        args,\n        session,\n        paymasterHandler,\n      ),\n    signTransaction: (args) =>\n      signTransactionForSession(\n        client,\n        signerClient,\n        publicClient,\n        args,\n        session,\n        paymasterHandler,\n      ),\n    signTypedData: (args) =>\n      signTypedDataForSession(\n        client,\n        signerClient,\n        publicClient,\n        args as any,\n        session,\n        paymasterHandler,\n      ),\n    getSessionStatus: () =>\n      getSessionStatus(\n        publicClient,\n        parseAccount(client.account).address,\n        session,\n      ),\n  });\n}\n\nexport function globalWalletActions<\n  chain extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n  account extends Account | undefined = Account | undefined,\n>(\n  signerClient: WalletClient<Transport, ChainEIP712, Account>,\n  publicClient: PublicClient<Transport, ChainEIP712>,\n  isPrivyCrossApp = false,\n  customPaymasterHandler?: CustomPaymasterHandler,\n) {\n  return (\n    client: Client<Transport, ChainEIP712, Account>,\n  ): AbstractWalletActions<Chain, Account> => ({\n    getChainId: () => getChainId(client),\n    getLinkedAccounts: () =>\n      getLinkedAccounts(client, {\n        agwAddress: parseAccount(client.account).address,\n      }),\n    isLinkedAccount: (args) => isLinkedAccount(client, args),\n    createSession: (args) => createSession(client, publicClient, args),\n    revokeSessions: (args) => revokeSessions(client, args),\n    prepareAbstractTransactionRequest: (args) =>\n      prepareTransactionRequest(\n        client,\n        signerClient,\n        publicClient,\n        args as any,\n      ),\n    sendTransaction: (args) =>\n      sendTransaction(\n        client,\n        signerClient,\n        publicClient,\n        args as any,\n        isPrivyCrossApp,\n        customPaymasterHandler,\n      ),\n    sendTransactionBatch: (args) =>\n      sendTransactionBatch(\n        client,\n        signerClient,\n        publicClient,\n        args,\n        isPrivyCrossApp,\n        customPaymasterHandler,\n      ),\n    signMessage: (args: Omit<SignMessageParameters, 'account'>) =>\n      signMessage(client, signerClient, args, isPrivyCrossApp),\n    signTransaction: (args) =>\n      signTransaction(\n        client,\n        signerClient,\n        publicClient,\n        args as SignEip712TransactionParameters<chain, account>,\n        EOA_VALIDATOR_ADDRESS,\n        {},\n        customPaymasterHandler,\n        isPrivyCrossApp,\n      ),\n    signTransactionBatch: (args) =>\n      signTransactionBatch(\n        client,\n        signerClient,\n        publicClient,\n        args as SignTransactionBatchParameters<chain, account>,\n        EOA_VALIDATOR_ADDRESS,\n        {},\n        customPaymasterHandler,\n        isPrivyCrossApp,\n      ),\n    signTypedData: (\n      args: Omit<SignTypedDataParameters, 'account' | 'privateKey'>,\n    ) =>\n      signTypedData(client, signerClient, publicClient, args, isPrivyCrossApp),\n    deployContract: (args) =>\n      deployContract(client, signerClient, publicClient, args, isPrivyCrossApp),\n    writeContract: (args) =>\n      writeContract(\n        Object.assign(client, {\n          sendTransaction: (\n            args: SendEip712TransactionParameters<chain, account>,\n          ) =>\n            sendTransaction(\n              client,\n              signerClient,\n              publicClient,\n              args,\n              isPrivyCrossApp,\n              customPaymasterHandler,\n            ),\n        }),\n        signerClient,\n        publicClient,\n        args as WriteContractParameters<\n          Abi,\n          string,\n          readonly unknown[],\n          ChainEIP712,\n          Account\n        >,\n        isPrivyCrossApp,\n      ),\n    toSessionClient: (signer, session) =>\n      toSessionClient({\n        client: client as AbstractClient,\n        signer,\n        session: session,\n        paymasterHandler: customPaymasterHandler,\n      }),\n    getSessionStatus: (sessionHashOrConfig: Hash | SessionConfig) =>\n      getSessionStatus(\n        publicClient,\n        parseAccount(client.account).address,\n        sessionHashOrConfig,\n      ),\n  });\n}\n\nexport function linkableWalletActions<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n>() {\n  return (\n    client: WalletClient<transport, chain, account>,\n  ): LinkableWalletActions<chain, account> => ({\n    ...walletActions(client),\n    linkToAgw: (args) => linkToAgw(client, args),\n    getLinkedAgw: () => getLinkedAgw(client, {}),\n  });\n}\n\nexport function linkablePublicActions<\n  transport extends Transport = Transport,\n  chain extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n  account extends Account | undefined = Account | undefined,\n>() {\n  return (\n    client: Client<transport, chain, account>,\n  ): LinkablePublicActions => ({\n    getLinkedAgw: (args) => getLinkedAgw(client, args),\n    getLinkedAccounts: (args) => getLinkedAccounts(client, args),\n  });\n}\n","import {\n  type Abi,\n  type Account,\n  BaseError,\n  type Client,\n  type ContractFunctionArgs,\n  type ContractFunctionName,\n  encodeFunctionData,\n  type EncodeFunctionDataParameters,\n  type PublicClient,\n  type Transport,\n  type WalletClient,\n  type WriteContractParameters,\n  type WriteContractReturnType,\n} from 'viem';\nimport { getContractError, parseAccount } from 'viem/utils';\nimport { type ChainEIP712 } from 'viem/zksync';\n\nimport { AccountNotFoundError } from '../errors/account.js';\nimport type { SessionConfig } from '../sessions.js';\nimport type { CustomPaymasterHandler } from '../types/customPaymaster.js';\nimport { sendTransactionForSession } from './sendTransactionForSession.js';\n\nexport async function writeContractForSession<\n  chain extends ChainEIP712 | undefined,\n  account extends Account | undefined,\n  const abi extends Abi | readonly unknown[],\n  functionName extends ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n  args extends ContractFunctionArgs<\n    abi,\n    'nonpayable' | 'payable',\n    functionName\n  >,\n  chainOverride extends ChainEIP712 | undefined,\n>(\n  client: Client<Transport, ChainEIP712, Account>,\n  signerClient: WalletClient<Transport, ChainEIP712, Account>,\n  publicClient: PublicClient<Transport, ChainEIP712>,\n  parameters: WriteContractParameters<\n    abi,\n    functionName,\n    args,\n    chain,\n    account,\n    chainOverride\n  >,\n  session: SessionConfig,\n  customPaymasterHandler: CustomPaymasterHandler | undefined = undefined,\n): Promise<WriteContractReturnType> {\n  const {\n    abi,\n    account: account_ = client.account,\n    address,\n    args,\n    dataSuffix,\n    functionName,\n    ...request\n  } = parameters as WriteContractParameters;\n\n  if (!account_)\n    throw new AccountNotFoundError({\n      docsPath: '/docs/contract/writeContract',\n    });\n  const account = parseAccount(account_);\n\n  const data = encodeFunctionData({\n    abi,\n    args,\n    functionName,\n  } as EncodeFunctionDataParameters);\n\n  try {\n    return await sendTransactionForSession(\n      client,\n      signerClient,\n      publicClient,\n      {\n        data: `${data}${dataSuffix ? dataSuffix.replace('0x', '') : ''}`,\n        to: address,\n        account,\n        ...request,\n      },\n      session,\n      customPaymasterHandler,\n    );\n  } catch (error) {\n    throw getContractError(error as BaseError, {\n      abi,\n      address,\n      args,\n      docsPath: '/docs/contract/writeContract',\n      functionName,\n      sender: account.address,\n    });\n  }\n}\n","import {\n  type Account,\n  BaseError,\n  type Client,\n  type Hex,\n  type PublicClient,\n  type SendTransactionRequest,\n  type Transport,\n  type WalletClient,\n} from 'viem';\nimport {\n  type ChainEIP712,\n  type SendEip712TransactionParameters,\n  type SignEip712TransactionParameters,\n  type SignTransactionReturnType,\n} from 'viem/zksync';\n\nimport { SESSION_KEY_VALIDATOR_ADDRESS } from '../constants.js';\nimport {\n  encodeSessionWithPeriodIds,\n  getPeriodIdsForTransaction,\n  type SessionConfig,\n} from '../sessions.js';\nimport type { CustomPaymasterHandler } from '../types/customPaymaster.js';\nimport { isSmartAccountDeployed } from '../utils.js';\nimport { signTransaction } from './signTransaction.js';\n\nexport interface SendTransactionForSessionParameters<\n  chain extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n  account extends Account | undefined = Account | undefined,\n  chainOverride extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n  request extends SendTransactionRequest<\n    chain,\n    chainOverride\n  > = SendTransactionRequest<chain, chainOverride>,\n> {\n  parameters: SendEip712TransactionParameters<\n    chain,\n    account,\n    chainOverride,\n    request\n  >;\n  session: SessionConfig;\n}\n\nexport async function signTransactionForSession<\n  chain extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n  account extends Account | undefined = Account | undefined,\n  chainOverride extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n>(\n  client: Client<Transport, ChainEIP712, Account>,\n  signerClient: WalletClient<Transport, ChainEIP712, Account>,\n  publicClient: PublicClient<Transport, ChainEIP712>,\n  parameters: SignEip712TransactionParameters<chain, account, chainOverride>,\n  session: SessionConfig,\n  customPaymasterHandler: CustomPaymasterHandler | undefined = undefined,\n): Promise<SignTransactionReturnType> {\n  const isDeployed = await isSmartAccountDeployed(\n    publicClient,\n    client.account.address,\n  );\n  if (!isDeployed) {\n    throw new BaseError('Smart account not deployed');\n  }\n\n  const selector: Hex | undefined = parameters.data\n    ? `0x${parameters.data.slice(2, 10)}`\n    : undefined;\n\n  if (!parameters.to) {\n    throw new BaseError('Transaction to field is not specified');\n  }\n\n  return await signTransaction(\n    client,\n    signerClient,\n    publicClient,\n    parameters,\n    SESSION_KEY_VALIDATOR_ADDRESS,\n    {\n      [SESSION_KEY_VALIDATOR_ADDRESS]: encodeSessionWithPeriodIds(\n        session,\n        getPeriodIdsForTransaction({\n          sessionConfig: session,\n          target: parameters.to,\n          selector,\n          timestamp: BigInt(Math.floor(Date.now() / 1000)),\n        }),\n      ),\n    },\n    customPaymasterHandler,\n  );\n}\n","import {\n  type Account,\n  BaseError,\n  type Client,\n  fromRlp,\n  hashTypedData,\n  type Hex,\n  type PublicClient,\n  type Transport,\n  type TypedData,\n  type TypedDataDefinition,\n  type WalletClient,\n} from 'viem';\nimport { type SignTypedDataParameters } from 'viem/accounts';\nimport type { ChainEIP712 } from 'viem/chains';\n\nimport {\n  EOA_VALIDATOR_ADDRESS,\n  SESSION_KEY_VALIDATOR_ADDRESS,\n} from '../constants.js';\nimport { getAgwTypedSignature } from '../getAgwTypedSignature.js';\nimport {\n  encodeSessionWithPeriodIds,\n  getPeriodIdsForTransaction,\n  type SessionConfig,\n} from '../sessions.js';\nimport type { CustomPaymasterHandler } from '../types/customPaymaster.js';\nimport { isEip712TypedData, transformEip712TypedData } from '../utils.js';\nimport { sendPrivySignTypedData } from './sendPrivyTransaction.js';\nimport {\n  signEip712TransactionInternal,\n  signTransaction,\n} from './signTransaction.js';\n\nexport async function signTypedData(\n  client: Client<Transport, ChainEIP712, Account>,\n  signerClient: WalletClient<Transport, ChainEIP712, Account>,\n  publicClient: PublicClient<Transport, ChainEIP712>,\n  parameters: Omit<SignTypedDataParameters, 'account' | 'privateKey'>,\n  isPrivyCrossApp = false,\n): Promise<Hex> {\n  // if the typed data is already a zkSync EIP712 transaction, don't try to transform it\n  // to an AGW typed signature, just pass it through to the signer.\n  if (isEip712TypedData(parameters)) {\n    const transformedTypedData = transformEip712TypedData(parameters);\n\n    if (transformedTypedData.chainId !== client.chain.id) {\n      throw new BaseError('Chain ID mismatch in AGW typed signature');\n    }\n\n    const signedTransaction = await signTransaction(\n      client,\n      signerClient,\n      publicClient,\n      {\n        ...transformedTypedData,\n        chain: client.chain,\n      },\n      EOA_VALIDATOR_ADDRESS,\n      {},\n      undefined,\n      isPrivyCrossApp,\n    );\n\n    if (!signedTransaction.startsWith('0x71')) {\n      throw new BaseError(\n        'Expected RLP encoded EIP-712 transaction as signature',\n      );\n    }\n\n    const rlpSignature: Hex = `0x${signedTransaction.slice(4)}`;\n\n    const signatureParts = fromRlp(rlpSignature, 'hex');\n    if (signatureParts.length < 15) {\n      throw new BaseError(\n        'Expected RLP encoded EIP-712 transaction with at least 15 fields',\n      );\n    }\n    // This is somewhat not type safe as it assumes that the signature from signTransaction is an\n    // RLP encoded 712 transaction and that the customSignature field is the 15th field in the transaction.\n    // That being said, it's a safe assumption for the current use case.\n    return signatureParts[14] as Hex;\n  } else if (isPrivyCrossApp) {\n    return await sendPrivySignTypedData(client, parameters);\n  }\n\n  return await getAgwTypedSignature({\n    client,\n    signer: signerClient,\n    messageHash: hashTypedData(parameters),\n  });\n}\n\nexport async function signTypedDataForSession<\n  const typedData extends TypedData | Record<string, unknown>,\n  primaryType extends string,\n>(\n  client: Client<Transport, ChainEIP712, Account>,\n  signerClient: WalletClient<Transport, ChainEIP712, Account>,\n  publicClient: PublicClient<Transport, ChainEIP712>,\n  parameters: TypedDataDefinition<typedData, primaryType>,\n  session: SessionConfig,\n  paymasterHandler?: CustomPaymasterHandler,\n): Promise<Hex> {\n  // if the typed data is already a zkSync EIP712 transaction, don't try to transform it\n  // to an AGW typed signature, just pass it through to the signer.\n  if (!isEip712TypedData(parameters as any)) {\n    throw new BaseError(\n      'Session client can only sign EIP712 transactions as typed data',\n    );\n  }\n\n  const transactionRequest = transformEip712TypedData(parameters as any);\n\n  if (!transactionRequest.to) {\n    throw new BaseError('Transaction must have a to address');\n  }\n\n  // Match the expect signature format of the AGW smart account so the result can be\n  // directly used in eth_sendRawTransaction as the customSignature field\n  const validationHookData = {\n    [SESSION_KEY_VALIDATOR_ADDRESS]: encodeSessionWithPeriodIds(\n      session,\n      getPeriodIdsForTransaction({\n        sessionConfig: session,\n        target: transactionRequest.to,\n        selector: (transactionRequest.data?.slice(0, 10) ?? '0x') as Hex,\n        timestamp: BigInt(Math.floor(Date.now() / 1000)),\n      }),\n    ),\n  };\n\n  const { customSignature } = await signEip712TransactionInternal(\n    client,\n    signerClient,\n    publicClient,\n    {\n      chain: client.chain,\n      ...transactionRequest,\n    },\n    SESSION_KEY_VALIDATOR_ADDRESS,\n    validationHookData,\n    paymasterHandler,\n  );\n\n  return customSignature;\n}\n","import type { Address } from 'abitype';\nimport {\n  type Account,\n  BaseError,\n  type Chain,\n  type Client,\n  type DeriveAccount,\n  type DeriveChain,\n  encodeFunctionData,\n  type ExactPartial,\n  ExecutionRevertedError,\n  formatGwei,\n  type FormattedTransactionRequest,\n  type GetChainParameter,\n  type GetTransactionRequestKzgParameter,\n  type IsNever,\n  keccak256,\n  type NonceManager,\n  type Prettify,\n  type PublicClient,\n  RpcRequestError,\n  type SendTransactionParameters,\n  toBytes,\n  type TransactionRequest,\n  type TransactionRequestEIP1559,\n  type TransactionRequestEIP2930,\n  type TransactionRequestEIP4844,\n  type TransactionRequestEIP7702,\n  type TransactionRequestLegacy,\n  type Transport,\n  type UnionOmit,\n  type UnionRequiredBy,\n  type WalletClient,\n} from 'viem';\nimport type { ParseAccountErrorType } from 'viem/accounts';\nimport {\n  type EstimateFeesPerGasErrorType,\n  estimateGas,\n  type EstimateGasErrorType,\n  type EstimateGasParameters,\n  getBalance,\n  type GetBlockErrorType,\n  getChainId as getChainId_,\n  getGasPrice,\n  getTransactionCount,\n  type GetTransactionCountErrorType,\n} from 'viem/actions';\nimport {\n  assertRequest,\n  type AssertRequestErrorType,\n  getAction,\n  type GetTransactionType,\n  parseAccount,\n} from 'viem/utils';\nimport type { ChainEIP712 } from 'viem/zksync';\n\nimport {\n  EOA_VALIDATOR_ADDRESS,\n  INSUFFICIENT_BALANCE_SELECTOR,\n  SMART_ACCOUNT_FACTORY_ADDRESS,\n} from '../constants.js';\nimport { InsufficientBalanceError } from '../errors/insufficientBalance.js';\nimport { AccountFactoryAbi } from '../exports/constants.js';\nimport type { Call } from '../types/call.js';\nimport { isSmartAccountDeployed, transformHexValues } from '../utils.js';\nimport { getInitializerCalldata } from '../utils.js';\n\nexport type IsUndefined<T> = [undefined] extends [T] ? true : false;\n\nexport const defaultParameters = [\n  'blobVersionedHashes',\n  'chainId',\n  'fees',\n  'gas',\n  'nonce',\n  'type',\n] as const;\n\nexport type AssertRequestParameters = ExactPartial<\n  SendTransactionParameters<Chain>\n>;\n\nexport class MaxFeePerGasTooLowError extends BaseError {\n  constructor({ maxPriorityFeePerGas }: { maxPriorityFeePerGas: bigint }) {\n    super(\n      `\\`maxFeePerGas\\` cannot be less than the \\`maxPriorityFeePerGas\\` (${formatGwei(\n        maxPriorityFeePerGas,\n      )} gwei).`,\n      { name: 'MaxFeePerGasTooLowError' },\n    );\n  }\n}\n\nexport type GetAccountParameter<\n  account extends Account | undefined = Account | undefined,\n  accountOverride extends Account | Address | undefined = Account | Address,\n  required extends boolean = true,\n> =\n  IsUndefined<account> extends true\n    ? required extends true\n      ? { account: accountOverride | Account | Address }\n      : { account?: accountOverride | Account | Address | undefined }\n    : { account?: accountOverride | Account | Address | undefined };\n\nexport type PrepareTransactionRequestParameterType =\n  | 'blobVersionedHashes'\n  | 'chainId'\n  | 'fees'\n  | 'gas'\n  | 'nonce'\n  | 'sidecars'\n  | 'type';\ntype ParameterTypeToParameters<\n  parameterType extends PrepareTransactionRequestParameterType,\n> = parameterType extends 'fees'\n  ? 'maxFeePerGas' | 'maxPriorityFeePerGas' | 'gasPrice'\n  : parameterType;\n\nexport type PrepareTransactionRequestRequest<\n  chain extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n  chainOverride extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n  ///\n  _derivedChain extends ChainEIP712 | undefined = DeriveChain<\n    chain,\n    chainOverride\n  >,\n> = UnionOmit<FormattedTransactionRequest<_derivedChain>, 'from'> &\n  GetTransactionRequestKzgParameter & {\n    /**\n     * Nonce manager to use for the transaction request.\n     */\n    nonceManager?: NonceManager | undefined;\n    /**\n     * Parameters to prepare for the transaction request.\n     *\n     * @default ['blobVersionedHashes', 'chainId', 'fees', 'gas', 'nonce', 'type']\n     */\n    parameters?: readonly PrepareTransactionRequestParameterType[] | undefined;\n\n    /**\n     * Whether the transaction is the first transaction of the account.\n     */\n    isInitialTransaction?: boolean;\n  };\n\nexport type PrepareTransactionRequestParameters<\n  chain extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n  account extends Account | undefined = Account | undefined,\n  chainOverride extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n  accountOverride extends Account | Address | undefined =\n    | Account\n    | Address\n    | undefined,\n  request extends PrepareTransactionRequestRequest<\n    chain,\n    chainOverride\n  > = PrepareTransactionRequestRequest<chain, chainOverride>,\n> = request &\n  GetAccountParameter<account, accountOverride, false> &\n  GetChainParameter<chain, chainOverride> &\n  GetTransactionRequestKzgParameter<request> & {\n    chainId?: number | undefined;\n  };\n\nexport type PrepareTransactionRequestReturnType<\n  chain extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n  account extends Account | undefined = Account | undefined,\n  chainOverride extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n  accountOverride extends Account | Address | undefined =\n    | Account\n    | Address\n    | undefined,\n  request extends PrepareTransactionRequestRequest<\n    chain,\n    chainOverride\n  > = PrepareTransactionRequestRequest<chain, chainOverride>,\n  ///\n  _derivedAccount extends Account | Address | undefined = DeriveAccount<\n    account,\n    accountOverride\n  >,\n  _derivedChain extends Chain | undefined = DeriveChain<chain, chainOverride>,\n  _transactionType = request['type'] extends string | undefined\n    ? request['type']\n    : GetTransactionType<request> extends 'legacy'\n      ? unknown\n      : GetTransactionType<request>,\n  _transactionRequest extends TransactionRequest =\n    | (_transactionType extends 'legacy' ? TransactionRequestLegacy : never)\n    | (_transactionType extends 'eip1559' ? TransactionRequestEIP1559 : never)\n    | (_transactionType extends 'eip2930' ? TransactionRequestEIP2930 : never)\n    | (_transactionType extends 'eip4844' ? TransactionRequestEIP4844 : never)\n    | (_transactionType extends 'eip7702' ? TransactionRequestEIP7702 : never),\n> = Prettify<\n  UnionRequiredBy<\n    Extract<\n      UnionOmit<FormattedTransactionRequest<_derivedChain>, 'from'> &\n        (_derivedChain extends Chain\n          ? { chain: _derivedChain }\n          : { chain?: undefined }) &\n        (_derivedAccount extends Account\n          ? { account: _derivedAccount; from: Address }\n          : { account?: undefined; from?: undefined }),\n      IsNever<_transactionRequest> extends true\n        ? unknown\n        : ExactPartial<_transactionRequest>\n    > & { chainId?: number | undefined },\n    ParameterTypeToParameters<\n      request['parameters'] extends readonly PrepareTransactionRequestParameterType[]\n        ? request['parameters'][number]\n        : (typeof defaultParameters)[number]\n    >\n  > &\n    (unknown extends request['kzg'] ? {} : Pick<request, 'kzg'>)\n>;\n\nexport type PrepareTransactionRequestErrorType =\n  | AssertRequestErrorType\n  | ParseAccountErrorType\n  | GetBlockErrorType\n  | GetTransactionCountErrorType\n  | EstimateGasErrorType\n  | EstimateFeesPerGasErrorType;\n\n/**\n * Prepares a transaction request for signing.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/prepareTransactionRequest\n *\n * @param args - {@link PrepareTransactionRequestParameters}\n * @returns The transaction request. {@link PrepareTransactionRequestReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { prepareTransactionRequest } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const request = await prepareTransactionRequest(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   to: '0x0000000000000000000000000000000000000000',\n *   value: 1n,\n * })\n *\n * @example\n * // Account Hoisting\n * import { createWalletClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { prepareTransactionRequest } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x…'),\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const request = await prepareTransactionRequest(client, {\n *   to: '0x0000000000000000000000000000000000000000',\n *   value: 1n,\n * })\n */\nexport async function prepareTransactionRequest<\n  chain extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n  account extends Account | undefined = Account | undefined,\n  accountOverride extends Account | Address | undefined = undefined,\n  chainOverride extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n  const request extends PrepareTransactionRequestRequest<\n    chain,\n    chainOverride\n  > = PrepareTransactionRequestRequest<chain, chainOverride>,\n>(\n  client: Client<Transport, ChainEIP712, Account>,\n  signerClient: WalletClient<Transport, ChainEIP712, Account>,\n  publicClient: PublicClient<Transport, ChainEIP712>,\n  args: PrepareTransactionRequestParameters<\n    chain,\n    account,\n    chainOverride,\n    accountOverride,\n    request\n  >,\n): Promise<PrepareTransactionRequestReturnType> {\n  // transform values in case any are provided in hex format (from rpc)\n  transformHexValues(args, [\n    'value',\n    'nonce',\n    'maxFeePerGas',\n    'maxPriorityFeePerGas',\n    'gas',\n    'chainId',\n    'gasPerPubdata',\n  ]);\n\n  const isSponsored =\n    'paymaster' in args &&\n    'paymasterInput' in args &&\n    args.paymaster !== undefined &&\n    args.paymasterInput !== undefined;\n\n  const {\n    gas,\n    nonce,\n    chain,\n    nonceManager,\n    parameters: parameterNames = defaultParameters,\n  } = args;\n\n  const isDeployed = await isSmartAccountDeployed(\n    publicClient,\n    client.account.address,\n  );\n\n  if (!isDeployed) {\n    const initialCall = {\n      target: args.to,\n      allowFailure: false,\n      value: args.value ?? 0,\n      callData: args.data ?? '0x',\n    } as Call;\n\n    // Create calldata for initializing the proxy account\n    const initializerCallData = getInitializerCalldata(\n      signerClient.account.address,\n      EOA_VALIDATOR_ADDRESS,\n      initialCall,\n    );\n    const addressBytes = toBytes(signerClient.account.address);\n    const salt = keccak256(addressBytes);\n    const deploymentCalldata = encodeFunctionData({\n      abi: AccountFactoryAbi,\n      functionName: 'deployAccount',\n      args: [salt, initializerCallData],\n    });\n\n    // Override transaction fields\n    args.to = SMART_ACCOUNT_FACTORY_ADDRESS;\n    args.data = deploymentCalldata;\n  }\n\n  const initiatorAccount = parseAccount(\n    isDeployed ? client.account : signerClient.account,\n  );\n  const request = {\n    ...args,\n    from: initiatorAccount.address,\n  };\n\n  // Prepare all async operations that can run in parallel\n  const asyncOperations = [];\n  let userBalance: bigint | undefined;\n\n  // Get balance if the transaction is not sponsored or has a value\n  if (!isSponsored || (request.value !== undefined && request.value > 0n)) {\n    asyncOperations.push(\n      getBalance(publicClient, {\n        address: initiatorAccount.address,\n      }).then((balance: bigint) => {\n        userBalance = balance;\n      }),\n    );\n  }\n\n  let chainId: number | undefined;\n  async function getChainId(): Promise<number> {\n    if (chainId) return chainId;\n    if (chain) return chain.id;\n    if (typeof args.chainId !== 'undefined') return args.chainId;\n    const chainId_ = await getAction(client, getChainId_, 'getChainId')({});\n    chainId = chainId_;\n    return chainId;\n  }\n\n  // Get nonce if needed\n  if (\n    parameterNames.includes('nonce') &&\n    typeof nonce === 'undefined' &&\n    initiatorAccount\n  ) {\n    if (nonceManager) {\n      asyncOperations.push(\n        (async () => {\n          const chainId = await getChainId();\n          request.nonce = await nonceManager.consume({\n            address: initiatorAccount.address,\n            chainId,\n            client: publicClient,\n          });\n        })(),\n      );\n    } else {\n      asyncOperations.push(\n        getAction(\n          publicClient,\n          getTransactionCount,\n          'getTransactionCount',\n        )({\n          address: initiatorAccount.address,\n          blockTag: 'pending',\n        }).then((nonce) => {\n          request.nonce = nonce;\n        }),\n      );\n    }\n  }\n\n  // Estimate fees if needed\n  if (parameterNames.includes('fees')) {\n    if (typeof request.maxFeePerGas === 'undefined') {\n      asyncOperations.push(\n        (async () => {\n          request.maxFeePerGas = await getGasPrice(publicClient);\n          request.maxPriorityFeePerGas = 0n;\n        })(),\n      );\n    }\n  }\n\n  // Estimate gas limit if needed\n  if (parameterNames.includes('gas') && typeof gas === 'undefined') {\n    asyncOperations.push(\n      (async () => {\n        try {\n          request.gas = await getAction(\n            client,\n            estimateGas,\n            'estimateGas',\n          )({\n            ...request,\n            account: initiatorAccount\n              ? { address: initiatorAccount.address, type: 'json-rpc' }\n              : undefined,\n          } as EstimateGasParameters);\n        } catch (error) {\n          if (\n            error instanceof Error &&\n            error.message.includes(INSUFFICIENT_BALANCE_SELECTOR)\n          ) {\n            throw new InsufficientBalanceError();\n          } else if (\n            error instanceof RpcRequestError &&\n            error.details.includes('execution reverted')\n          ) {\n            throw new ExecutionRevertedError({\n              message: `${error.data}`,\n            });\n          }\n          throw error;\n        }\n      })(),\n    );\n  }\n\n  // Wait for all async operations to complete\n  await Promise.all(asyncOperations);\n\n  // Check if user has enough balance\n  const gasCost =\n    isSponsored || !request.gas || !request.maxFeePerGas\n      ? 0n\n      : request.gas * request.maxFeePerGas;\n\n  if (\n    userBalance !== undefined &&\n    userBalance < (request.value ?? 0n) + gasCost\n  ) {\n    throw new InsufficientBalanceError();\n  }\n\n  assertRequest(request as AssertRequestParameters);\n\n  delete request.parameters;\n  delete request.isInitialTransaction;\n  delete request.nonceManager;\n\n  return request as any;\n}\n","export const SessionKeyPolicyRegistryAbi = [\n  {\n    inputs: [],\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n  {\n    inputs: [],\n    name: 'AccessControlBadConfirmation',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'neededRole',\n        type: 'bytes32',\n      },\n    ],\n    name: 'AccessControlUnauthorizedAccount',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'target',\n        type: 'address',\n      },\n    ],\n    name: 'AddressEmptyCode',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'implementation',\n        type: 'address',\n      },\n    ],\n    name: 'ERC1967InvalidImplementation',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'ERC1967NonPayable',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'FailedCall',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'InvalidInitialization',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'NotInitializing',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'UUPSUnauthorizedCallContext',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'slot',\n        type: 'bytes32',\n      },\n    ],\n    name: 'UUPSUnsupportedProxiableUUID',\n    type: 'error',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'uint64',\n        name: 'version',\n        type: 'uint64',\n      },\n    ],\n    name: 'Initialized',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'enum PolicyType',\n        name: 'policyType',\n        type: 'uint8',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'target',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'data',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'enum Status',\n        name: 'status',\n        type: 'uint8',\n      },\n    ],\n    name: 'PolicyStatusChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'previousAdminRole',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'newAdminRole',\n        type: 'bytes32',\n      },\n    ],\n    name: 'RoleAdminChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'sender',\n        type: 'address',\n      },\n    ],\n    name: 'RoleGranted',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'sender',\n        type: 'address',\n      },\n    ],\n    name: 'RoleRevoked',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'implementation',\n        type: 'address',\n      },\n    ],\n    name: 'Upgraded',\n    type: 'event',\n  },\n  {\n    inputs: [],\n    name: 'DEFAULT_ADMIN_ROLE',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'MANAGER_ROLE',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'UPGRADE_INTERFACE_VERSION',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'token',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'target',\n        type: 'address',\n      },\n    ],\n    name: 'getApprovalTargetStatus',\n    outputs: [\n      {\n        internalType: 'enum Status',\n        name: '',\n        type: 'uint8',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'target',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes4',\n        name: 'selector',\n        type: 'bytes4',\n      },\n    ],\n    name: 'getCallPolicyStatus',\n    outputs: [\n      {\n        internalType: 'enum Status',\n        name: '',\n        type: 'uint8',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32',\n      },\n    ],\n    name: 'getRoleAdmin',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'target',\n        type: 'address',\n      },\n    ],\n    name: 'getTransferPolicyStatus',\n    outputs: [\n      {\n        internalType: 'enum Status',\n        name: '',\n        type: 'uint8',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    name: 'grantRole',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    name: 'hasRole',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'initialize',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'proxiableUUID',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'callerConfirmation',\n        type: 'address',\n      },\n    ],\n    name: 'renounceRole',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    name: 'revokeRole',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'token',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'target',\n        type: 'address',\n      },\n      {\n        internalType: 'enum Status',\n        name: 'status',\n        type: 'uint8',\n      },\n    ],\n    name: 'setApprovalTargetStatus',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'target',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes4',\n        name: 'selector',\n        type: 'bytes4',\n      },\n      {\n        internalType: 'enum Status',\n        name: 'status',\n        type: 'uint8',\n      },\n    ],\n    name: 'setCallPolicyStatus',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'target',\n        type: 'address',\n      },\n      {\n        internalType: 'enum Status',\n        name: 'status',\n        type: 'uint8',\n      },\n    ],\n    name: 'setTransferPolicyStatus',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes4',\n        name: 'interfaceId',\n        type: 'bytes4',\n      },\n    ],\n    name: 'supportsInterface',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'newImplementation',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes',\n        name: 'data',\n        type: 'bytes',\n      },\n    ],\n    name: 'upgradeToAndCall',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n] as const;\n","import {\n  type Account,\n  BaseError,\n  type PublicClient,\n  toFunctionSelector,\n  type Transport,\n} from 'viem';\nimport { abstract } from 'viem/chains';\nimport { decodeAbiParameters, decodeFunctionData } from 'viem/utils';\nimport type { ChainEIP712, SignEip712TransactionParameters } from 'viem/zksync';\n\nimport { SessionKeyPolicyRegistryAbi } from './abis/SessionKeyPolicyRegistry.js';\nimport { SessionKeyValidatorAbi } from './abis/SessionKeyValidator.js';\nimport {\n  ADD_MODULE_SELECTOR,\n  BATCH_CALL_SELECTOR,\n  CREATE_SESSION_SELECTOR,\n  SESSION_KEY_POLICY_REGISTRY_ADDRESS,\n  SESSION_KEY_VALIDATOR_ADDRESS,\n} from './constants.js';\nimport { AGWAccountAbi } from './exports/constants.js';\nimport { ConstraintCondition, getSessionSpec } from './sessions.js';\n\nconst restrictedSelectors = new Set<string>([\n  toFunctionSelector('function setApprovalForAll(address, bool)'),\n  toFunctionSelector('function approve(address, uint256)'),\n  toFunctionSelector('function transfer(address, uint256)'),\n]);\n\nexport enum SessionKeyPolicyStatus {\n  Unset = 0,\n  Allowed = 1,\n  Denied = 2,\n}\n\nexport async function assertSessionKeyPolicies<\n  chain extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n  account extends Account = Account,\n  chainOverride extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n>(\n  client: PublicClient<Transport, ChainEIP712>,\n  chainId: number,\n  account: account,\n  transaction: Omit<\n    SignEip712TransactionParameters<chain, account, chainOverride>,\n    'account' | 'chain'\n  >,\n) {\n  // Only validate on Abstract mainnet\n  if (chainId !== abstract.id) {\n    return;\n  }\n\n  const sessions = [];\n\n  if (\n    transaction.to === account.address &&\n    transaction.data?.substring(0, 10) === BATCH_CALL_SELECTOR\n  ) {\n    const batchCall = decodeFunctionData({\n      abi: AGWAccountAbi,\n      data: transaction.data,\n    });\n    if (batchCall.functionName === 'batchCall') {\n      for (const call of batchCall.args[0]) {\n        const subTransaction = {\n          ...transaction,\n          to: call.target,\n          data: call.callData,\n        };\n        const session = getSessionFromTransaction(account, subTransaction);\n        if (session) {\n          sessions.push(session);\n        }\n      }\n    }\n  } else {\n    const session = getSessionFromTransaction(account, transaction);\n    if (session) {\n      sessions.push(session);\n    }\n  }\n\n  if (sessions.length === 0) {\n    // no session can be parsed from the transaction\n    return;\n  }\n\n  for (const session of sessions) {\n    const callPolicies = session.callPolicies;\n    const transferPolicies = session.transferPolicies;\n\n    const checks = [];\n\n    for (const callPolicy of callPolicies) {\n      if (restrictedSelectors.has(callPolicy.selector)) {\n        const destinationConstraints = callPolicy.constraints.filter(\n          (c) => c.index === 0n && c.condition === ConstraintCondition.Equal,\n        );\n\n        if (destinationConstraints.length === 0) {\n          throw new BaseError(\n            `Unconstrained token approval/transfer destination in call policy. Selector: ${callPolicy.selector}; Target: ${callPolicy.target}`,\n          );\n        }\n\n        for (const constraint of destinationConstraints) {\n          const [target] = decodeAbiParameters(\n            [\n              {\n                type: 'address',\n              },\n            ],\n            constraint.refValue,\n          );\n\n          checks.push({\n            target,\n            check: {\n              address: SESSION_KEY_POLICY_REGISTRY_ADDRESS,\n              abi: SessionKeyPolicyRegistryAbi,\n              functionName: 'getApprovalTargetStatus',\n              args: [\n                callPolicy.target, // token address\n                target, // allowed spender\n              ],\n            },\n          });\n        }\n      } else {\n        checks.push({\n          target: callPolicy.target,\n          check: {\n            address: SESSION_KEY_POLICY_REGISTRY_ADDRESS,\n            abi: SessionKeyPolicyRegistryAbi,\n            functionName: 'getCallPolicyStatus',\n            args: [callPolicy.target, callPolicy.selector],\n          },\n        });\n      }\n    }\n\n    for (const transferPolicy of transferPolicies) {\n      checks.push({\n        target: transferPolicy.target,\n        check: {\n          address: SESSION_KEY_POLICY_REGISTRY_ADDRESS,\n          abi: SessionKeyPolicyRegistryAbi,\n          functionName: 'getTransferPolicyStatus',\n          args: [transferPolicy.target],\n        },\n      });\n    }\n\n    const results = await client.multicall({\n      contracts: checks.map((c) => c.check),\n      allowFailure: false,\n    });\n\n    for (let i = 0; i < checks.length; i++) {\n      const result = results[i];\n      const check = checks[i];\n\n      if (Number(result) !== SessionKeyPolicyStatus.Allowed) {\n        throw new BaseError(\n          `Session key policy violation. Target: ${check?.target}; Status: ${SessionKeyPolicyStatus[Number(result)]}`,\n        );\n      }\n    }\n  }\n}\n\nfunction getSessionFromTransaction<\n  chain extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n  account extends Account | undefined = Account | undefined,\n  chainOverride extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n>(\n  account: account,\n  transaction: Omit<\n    SignEip712TransactionParameters<chain, account, chainOverride>,\n    'account' | 'chain'\n  >,\n) {\n  if (\n    transaction.to === SESSION_KEY_VALIDATOR_ADDRESS &&\n    transaction.data?.substring(0, 10) === CREATE_SESSION_SELECTOR\n  ) {\n    const sessionSpec = decodeFunctionData({\n      abi: SessionKeyValidatorAbi,\n      data: transaction.data,\n    });\n    if (sessionSpec.functionName === 'createSession') {\n      return sessionSpec.args[0];\n    }\n  }\n\n  if (\n    transaction.to === account?.address &&\n    transaction.data?.substring(0, 10) === ADD_MODULE_SELECTOR\n  ) {\n    const moduleAndData = decodeFunctionData({\n      abi: AGWAccountAbi,\n      data: transaction.data,\n    });\n    if (\n      moduleAndData.functionName === 'addModule' &&\n      moduleAndData.args[0]\n        .toLowerCase()\n        .startsWith(SESSION_KEY_VALIDATOR_ADDRESS.toLowerCase())\n    ) {\n      // Remove '0x' prefix (2 chars) + validator address 20 bytes (40 chars)\n      const sessionData = moduleAndData.args[0].substring(42);\n\n      return decodeAbiParameters([getSessionSpec()], `0x${sessionData}`)[0];\n    }\n  }\n\n  return undefined;\n}\n","import {\n  type Account,\n  type Address,\n  BaseError,\n  type Client,\n  encodeAbiParameters,\n  type Hex,\n  parseAbiParameters,\n  type PublicClient,\n  type Transport,\n  type UnionRequiredBy,\n  type WalletClient,\n} from 'viem';\nimport { getChainId, readContract, signTypedData } from 'viem/actions';\nimport { assertCurrentChain, getAction, parseAccount } from 'viem/utils';\nimport {\n  type ChainEIP712,\n  type SignEip712TransactionParameters,\n  type SignEip712TransactionReturnType,\n  type TransactionRequestEIP712,\n} from 'viem/zksync';\n\nimport AGWAccountAbi from '../abis/AGWAccount.js';\nimport {\n  assertEip712Request,\n  type AssertEip712RequestParameters,\n} from '../eip712.js';\nimport { AccountNotFoundError } from '../errors/account.js';\nimport { assertSessionKeyPolicies } from '../sessionValidator.js';\nimport type { CustomPaymasterHandler } from '../types/customPaymaster.js';\nimport { VALID_CHAINS } from '../utils.js';\nimport { transformHexValues } from '../utils.js';\nimport { signPrivyTransaction } from './sendPrivyTransaction.js';\n\nexport async function signTransaction<\n  chain extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n  account extends Account | undefined = Account | undefined,\n  chainOverride extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n>(\n  client: Client<Transport, ChainEIP712, Account>,\n  signerClient: WalletClient<Transport, ChainEIP712, Account>,\n  publicClient: PublicClient<Transport, ChainEIP712>,\n  args: SignEip712TransactionParameters<chain, account, chainOverride>,\n  validator: Address,\n  validationHookData: Record<string, Hex> = {},\n  customPaymasterHandler: CustomPaymasterHandler | undefined = undefined,\n  isPrivyCrossApp = false,\n): Promise<SignEip712TransactionReturnType> {\n  const chain = client.chain;\n\n  if (isPrivyCrossApp) {\n    return signPrivyTransaction(client, args);\n  }\n\n  if (!chain?.serializers?.transaction)\n    throw new BaseError('transaction serializer not found on chain.');\n\n  const { transaction, customSignature } = await signEip712TransactionInternal(\n    client,\n    signerClient,\n    publicClient,\n    args,\n    validator,\n    validationHookData,\n    customPaymasterHandler,\n  );\n\n  return chain.serializers.transaction(\n    {\n      ...transaction,\n      customSignature,\n      type: 'eip712',\n    } as any,\n    { r: '0x0', s: '0x0', v: 0n },\n  ) as SignEip712TransactionReturnType;\n}\n\nexport async function signEip712TransactionInternal<\n  chain extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n  account extends Account | undefined = Account | undefined,\n  chainOverride extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n>(\n  client: Client<Transport, ChainEIP712, Account>,\n  signerClient: WalletClient<Transport, ChainEIP712, Account>,\n  publicClient: PublicClient<Transport, ChainEIP712>,\n  args: SignEip712TransactionParameters<chain, account, chainOverride>,\n  validator: Address,\n  validationHookData: Record<string, Hex> = {},\n  customPaymasterHandler: CustomPaymasterHandler | undefined = undefined,\n): Promise<{\n  transaction: UnionRequiredBy<TransactionRequestEIP712, 'from'> & {\n    chainId: number;\n  };\n  customSignature: Hex;\n}> {\n  // ensure the transaction type is set to eip712\n  args.type = 'eip712';\n\n  const {\n    account: account_ = client.account,\n    chain = client.chain,\n    ...transaction\n  } = args;\n\n  transformHexValues(transaction, [\n    'value',\n    'nonce',\n    'maxFeePerGas',\n    'maxPriorityFeePerGas',\n    'gas',\n    'chainId',\n    'gasPerPubdata',\n  ]);\n\n  if (!account_)\n    throw new AccountNotFoundError({\n      docsPath: '/docs/actions/wallet/signTransaction',\n    });\n  const smartAccount = parseAccount(account_);\n  const useSignerAddress =\n    (transaction as any).from === signerClient.account.address;\n  const fromAccount = useSignerAddress ? signerClient.account : smartAccount;\n\n  assertEip712Request({\n    account: fromAccount,\n    chain,\n    ...(transaction as AssertEip712RequestParameters),\n  });\n\n  if (!chain || VALID_CHAINS[chain.id] === undefined) {\n    throw new BaseError('Invalid chain specified');\n  }\n\n  if (!chain?.custom?.getEip712Domain)\n    throw new BaseError('`getEip712Domain` not found on chain.');\n\n  const chainId = await getAction(client, getChainId, 'getChainId')({});\n  if (chain !== null)\n    assertCurrentChain({\n      currentChainId: chainId,\n      chain: chain,\n    });\n\n  await assertSessionKeyPolicies(\n    publicClient,\n    chainId,\n    fromAccount,\n    transaction,\n  );\n\n  const transactionWithPaymaster = await getTransactionWithPaymasterData(\n    chainId,\n    fromAccount,\n    transaction,\n    customPaymasterHandler,\n  );\n\n  if (transactionWithPaymaster.data === undefined) {\n    // serializer turns undefined into 0x00 which causes issues sending\n    // eth to contracts that don't have a fallback function\n    transactionWithPaymaster.data = '0x';\n  }\n\n  const eip712Domain = chain?.custom.getEip712Domain({\n    ...transactionWithPaymaster,\n    type: 'eip712',\n  });\n\n  const rawSignature = await signTypedData(signerClient, {\n    ...eip712Domain,\n    account: signerClient.account,\n  });\n\n  let signature;\n  if (useSignerAddress) {\n    signature = rawSignature;\n  } else {\n    const hookData: Hex[] = [];\n    if (!useSignerAddress) {\n      const validationHooks = await getAction(\n        client,\n        readContract,\n        'readContract',\n      )({\n        address: client.account.address,\n        abi: AGWAccountAbi,\n        functionName: 'listHooks',\n        args: [true],\n      });\n      for (const hook of validationHooks) {\n        hookData.push(validationHookData[hook] ?? '0x');\n      }\n    }\n    // Match the expect signature format of the AGW smart account\n    signature = encodeAbiParameters(\n      parseAbiParameters(['bytes', 'address', 'bytes[]']),\n      [rawSignature, validator, hookData],\n    );\n  }\n\n  return {\n    transaction: transactionWithPaymaster,\n    customSignature: signature,\n  };\n}\n\nasync function getTransactionWithPaymasterData(\n  chainId: number,\n  fromAccount: Account,\n  transaction: TransactionRequestEIP712,\n  customPaymasterHandler: CustomPaymasterHandler | undefined = undefined,\n): Promise<\n  UnionRequiredBy<TransactionRequestEIP712, 'from'> & { chainId: number }\n> {\n  if (\n    customPaymasterHandler &&\n    !transaction.paymaster &&\n    !transaction.paymasterInput\n  ) {\n    const paymasterResult = await customPaymasterHandler({\n      chainId,\n      from: fromAccount.address,\n      data: transaction.data,\n      gas: transaction.gas ?? 0n,\n      gasPrice: transaction.gasPrice ?? 0n,\n      gasPerPubdata: transaction.gasPerPubdata ?? 0n,\n      maxFeePerGas: transaction.maxFeePerGas ?? 0n,\n      maxPriorityFeePerGas: transaction.maxPriorityFeePerGas ?? 0n,\n      nonce: transaction.nonce ?? 0,\n      to: transaction.to ?? '0x0',\n      value: transaction.value ?? 0n,\n    });\n    return {\n      ...transaction,\n      ...paymasterResult,\n      from: fromAccount.address,\n      chainId,\n    };\n  }\n  return {\n    ...transaction,\n    from: fromAccount.address,\n    chainId,\n  };\n}\n","import {\n  type Account,\n  type Address,\n  BaseError,\n  type Chain,\n  type Client,\n  type Hex,\n  type PublicClient,\n  type SendTransactionRequest,\n  type Transport,\n  type WalletClient,\n} from 'viem';\nimport { getChainId, sendRawTransaction } from 'viem/actions';\nimport {\n  assertCurrentChain,\n  getAction,\n  getTransactionError,\n  type GetTransactionErrorParameters,\n  parseAccount,\n} from 'viem/utils';\nimport {\n  type ChainEIP712,\n  type SendEip712TransactionParameters,\n  type SendEip712TransactionReturnType,\n} from 'viem/zksync';\n\nimport { INSUFFICIENT_BALANCE_SELECTOR } from '../constants.js';\nimport { AccountNotFoundError } from '../errors/account.js';\nimport { InsufficientBalanceError } from '../errors/insufficientBalance.js';\nimport type { CustomPaymasterHandler } from '../types/customPaymaster.js';\nimport { prepareTransactionRequest } from './prepareTransaction.js';\nimport { signTransaction } from './signTransaction.js';\n\nexport async function sendTransactionInternal<\n  const request extends SendTransactionRequest<chain, chainOverride>,\n  chain extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n  account extends Account | undefined = Account | undefined,\n  chainOverride extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n>(\n  client: Client<Transport, ChainEIP712, Account>,\n  signerClient: WalletClient<Transport, ChainEIP712, Account>,\n  publicClient: PublicClient<Transport, ChainEIP712>,\n  parameters: SendEip712TransactionParameters<\n    chain,\n    account,\n    chainOverride,\n    request\n  >,\n  validator: Address,\n  validationHookData: Record<string, Hex> = {},\n  customPaymasterHandler: CustomPaymasterHandler | undefined = undefined,\n): Promise<SendEip712TransactionReturnType> {\n  const { chain = client.chain } = parameters;\n\n  if (!signerClient.account)\n    throw new AccountNotFoundError({\n      docsPath: '/docs/actions/wallet/sendTransaction',\n    });\n  const account = parseAccount(signerClient.account);\n\n  try {\n    // assertEip712Request(parameters)\n\n    // Prepare the request for signing (assign appropriate fees, etc.)\n    const request = await prepareTransactionRequest(\n      client,\n      signerClient,\n      publicClient,\n      {\n        ...parameters,\n        parameters: ['gas', 'nonce', 'fees'],\n        isSponsored:\n          customPaymasterHandler !== undefined ||\n          (parameters as any).paymaster !== undefined,\n        nonceManager: account.nonceManager,\n      } as any,\n    );\n\n    let chainId: number | undefined;\n    if (chain !== null) {\n      chainId = await getAction(signerClient, getChainId, 'getChainId')({});\n      assertCurrentChain({\n        currentChainId: chainId,\n        chain,\n      });\n    }\n\n    const serializedTransaction = await signTransaction(\n      client,\n      signerClient,\n      publicClient,\n      {\n        ...request,\n        chainId,\n      } as any,\n      validator,\n      validationHookData,\n      customPaymasterHandler,\n    );\n    return await getAction(\n      client,\n      sendRawTransaction,\n      'sendRawTransaction',\n    )({\n      serializedTransaction,\n    });\n  } catch (err) {\n    if (\n      err instanceof Error &&\n      err.message.includes(INSUFFICIENT_BALANCE_SELECTOR)\n    ) {\n      throw new InsufficientBalanceError();\n    }\n    throw getTransactionError(err as BaseError, {\n      ...(parameters as GetTransactionErrorParameters),\n      account,\n      chain: chain as Chain,\n    });\n  }\n}\n","import {\n  type Account,\n  BaseError,\n  type Client,\n  type PublicClient,\n  type SendTransactionRequest,\n  type Transport,\n  type WalletClient,\n} from 'viem';\nimport {\n  getTransactionError,\n  type GetTransactionErrorParameters,\n  parseAccount,\n} from 'viem/utils';\nimport {\n  type ChainEIP712,\n  type SendEip712TransactionParameters,\n  type SendEip712TransactionReturnType,\n} from 'viem/zksync';\n\nimport {\n  EOA_VALIDATOR_ADDRESS,\n  INSUFFICIENT_BALANCE_SELECTOR,\n} from '../constants.js';\nimport { InsufficientBalanceError } from '../errors/insufficientBalance.js';\nimport type {\n  CustomPaymasterHandler,\n  PaymasterArgs,\n} from '../types/customPaymaster.js';\nimport { signPrivyTransaction } from './sendPrivyTransaction.js';\nimport { sendTransactionInternal } from './sendTransactionInternal.js';\n\n/**\n * Function to send a transaction using the connected Abstract Global Wallet.\n *\n * Transactions are signed by the approved signer account (EOA) of the Abstract Global Wallet\n * and sent from the AGW smart contract itself.\n *\n * @example\n * ```tsx\n * import { useAbstractClient } from \"@abstract-foundation/agw-react\";\n *\n * export default function SendTransaction() {\n *   const { data: agwClient } = useAbstractClient();\n *\n *   async function sendTransaction() {\n *     if (!agwClient) return;\n *\n *     const hash = await agwClient.sendTransaction({\n *       to: \"0x273B3527BF5b607dE86F504fED49e1582dD2a1C6\",\n *       data: \"0x69\",\n *     });\n *   }\n * }\n * ```\n *\n * @param parameters - Transaction parameters\n * @param parameters.to - The recipient address of the transaction\n * @param parameters.from - The sender address of the transaction (defaults to the Abstract Global Wallet address)\n * @param parameters.data - Contract code or a hashed method call with encoded args\n * @param parameters.gas - Gas provided for transaction execution\n * @param parameters.nonce - Unique number identifying this transaction\n * @param parameters.value - Value in wei sent with this transaction\n * @param parameters.maxFeePerGas - Total fee per gas in wei (gasPrice/baseFeePerGas + maxPriorityFeePerGas)\n * @param parameters.maxPriorityFeePerGas - Max priority fee per gas (in wei)\n * @param parameters.gasPerPubdata - The amount of gas to pay per byte of data on Ethereum\n * @param parameters.factoryDeps - An array of bytecodes of contracts that are dependencies for the transaction\n * @param parameters.paymaster - Address of the paymaster smart contract that will pay the gas fees (requires paymasterInput)\n * @param parameters.paymasterInput - Input data to the paymaster (requires paymaster)\n * @param parameters.customSignature - Custom signature for the transaction\n * @param parameters.type - Transaction type. For EIP-712 transactions, this should be 'eip712'\n * @returns The transaction hash of the submitted transaction\n */\nexport async function sendTransaction<\n  chain extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n  account extends Account | undefined = Account | undefined,\n  chainOverride extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n  const request extends SendTransactionRequest<\n    chain,\n    chainOverride\n  > = SendTransactionRequest<chain, chainOverride>,\n>(\n  client: Client<Transport, ChainEIP712, Account>,\n  signerClient: WalletClient<Transport, ChainEIP712, Account>,\n  publicClient: PublicClient<Transport, ChainEIP712>,\n  parameters: SendEip712TransactionParameters<\n    chain,\n    account,\n    chainOverride,\n    request\n  >,\n  isPrivyCrossApp = false,\n  customPaymasterHandler: CustomPaymasterHandler | undefined = undefined,\n): Promise<SendEip712TransactionReturnType> {\n  if (isPrivyCrossApp) {\n    try {\n      let paymasterData: Partial<PaymasterArgs> = {};\n      // SendEip712TransactionParameters doesn't actually have paymaster or paymasterInput fields\n      // defined, so we just have to cast to any here to access them\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const requestAsAny = parameters as any;\n      if (\n        customPaymasterHandler &&\n        !requestAsAny.paymaster &&\n        !requestAsAny.paymasterInput\n      ) {\n        paymasterData = await customPaymasterHandler({\n          ...(parameters as any),\n          from: client.account.address,\n          chainId: parameters.chain?.id ?? client.chain.id,\n        });\n      }\n\n      const updatedParameters = {\n        ...parameters,\n        ...(paymasterData as any),\n      };\n      const signedTx = await signPrivyTransaction(client, updatedParameters);\n      return await publicClient.sendRawTransaction({\n        serializedTransaction: signedTx,\n      });\n    } catch (err) {\n      if (\n        err instanceof Error &&\n        err.message.includes(INSUFFICIENT_BALANCE_SELECTOR)\n      ) {\n        throw new InsufficientBalanceError();\n      }\n      throw getTransactionError(err as BaseError, {\n        ...(parameters as GetTransactionErrorParameters),\n        account: parameters.account ? parseAccount(parameters.account) : null,\n        chain: parameters.chain ?? undefined,\n      });\n    }\n  }\n\n  return sendTransactionInternal(\n    client,\n    signerClient,\n    publicClient,\n    parameters,\n    EOA_VALIDATOR_ADDRESS,\n    {},\n    customPaymasterHandler,\n  );\n}\n","import {\n  type Abi,\n  type Account,\n  type Client,\n  type ContractConstructorArgs,\n  type PublicClient,\n  type Transport,\n  type WalletClient,\n} from 'viem';\nimport {\n  type ChainEIP712,\n  type DeployContractParameters,\n  type DeployContractReturnType,\n  encodeDeployData,\n} from 'viem/zksync';\n\nimport { CONTRACT_DEPLOYER_ADDRESS } from '../constants.js';\nimport { sendTransaction } from './sendTransaction.js';\n\n/**\n * Function to deploy a smart contract from the connected Abstract Global Wallet.\n *\n * This extends the deployContract function from Viem to include options for contract deployment on Abstract.\n *\n * @example\n * ```tsx\n * import { useAbstractClient } from \"@abstract-foundation/agw-react\";\n * import { erc20Abi } from \"viem\"; // example abi\n * import { abstractTestnet } from \"viem/chains\";\n *\n * export default function DeployContract() {\n *     const { data: agwClient } = useAbstractClient();\n *\n *     async function deployContract() {\n *         if (!agwClient) return;\n *\n *         const hash = await agwClient.deployContract({\n *             abi: erc20Abi, // Your smart contract ABI\n *             account: agwClient.account,\n *             bytecode: \"0x...\", // Your smart contract bytecode\n *             chain: abstractTestnet,\n *             args: [], // Constructor arguments\n *         });\n *     }\n * }\n * ```\n *\n * @param parameters - Contract deployment parameters\n * @param parameters.abi - The ABI of the contract to deploy (required)\n * @param parameters.bytecode - The bytecode of the contract to deploy (required)\n * @param parameters.account - The account to deploy the contract from (required)\n * @param parameters.chain - The chain to deploy the contract on, e.g. abstractTestnet / abstract (required)\n * @param parameters.args - Constructor arguments to call upon deployment\n * @param parameters.deploymentType - Specifies the type of contract deployment ('create', 'create2', 'createAccount', 'create2Account'). Defaults to 'create'\n * @param parameters.factoryDeps - An array of bytecodes of contracts that are dependencies for the contract being deployed\n * @param parameters.salt - Specifies a unique identifier for the contract deployment\n * @param parameters.gasPerPubdata - The amount of gas to pay per byte of data on Ethereum\n * @param parameters.paymaster - Address of the paymaster smart contract that will pay the gas fees (requires paymasterInput)\n * @param parameters.paymasterInput - Input data to the paymaster (requires paymaster)\n * @returns The hash of the transaction that deployed the contract\n */\nexport function deployContract<\n  const abi extends Abi | readonly unknown[],\n  chain extends ChainEIP712 | undefined = ChainEIP712,\n  account extends Account | undefined = Account,\n  chainOverride extends ChainEIP712 | undefined = ChainEIP712,\n  allArgs = ContractConstructorArgs<abi>,\n>(\n  walletClient: Client<Transport, ChainEIP712, Account>,\n  signerClient: WalletClient<Transport, ChainEIP712, Account>,\n  publicClient: PublicClient<Transport, ChainEIP712>,\n  parameters: DeployContractParameters<\n    abi,\n    chain,\n    account,\n    chainOverride,\n    allArgs\n  >,\n  isPrivyCrossApp = false,\n): Promise<DeployContractReturnType> {\n  const { abi, args, bytecode, deploymentType, salt, ...request } =\n    parameters as DeployContractParameters;\n\n  const data = encodeDeployData({\n    abi,\n    args,\n    bytecode,\n    deploymentType,\n    salt,\n  });\n\n  // Add the bytecode to the factoryDeps if it's not already there\n  request.factoryDeps = request.factoryDeps || [];\n  if (!request.factoryDeps.includes(bytecode))\n    request.factoryDeps.push(bytecode);\n\n  return sendTransaction(\n    walletClient,\n    signerClient,\n    publicClient,\n    {\n      ...request,\n      data,\n      to: CONTRACT_DEPLOYER_ADDRESS,\n    },\n    isPrivyCrossApp,\n  );\n}\n","import {\n  type Account,\n  type Address,\n  checksumAddress,\n  type Client,\n  getAddress,\n  InvalidAddressError,\n  isAddress,\n  type Transport,\n} from 'viem';\nimport { readContract } from 'viem/actions';\nimport { getAction, parseAccount } from 'viem/utils';\nimport { type ChainEIP712 } from 'viem/zksync';\n\nimport { ExclusiveDelegateResolverAbi } from '../abis/ExclusiveDelegateResolver.js';\nimport {\n  AGW_LINK_DELEGATION_RIGHTS,\n  CANONICAL_EXCLUSIVE_DELEGATE_RESOLVER_ADDRESS,\n} from '../constants.js';\nimport { AccountNotFoundError } from '../errors/account.js';\n\nexport interface GetLinkedAccountsReturnType {\n  linkedAccounts: Address[];\n}\n\nexport interface GetLinkedAccountsParameters {\n  agwAddress: Address;\n}\n\nexport interface IsLinkedAccountParameters {\n  address: Address;\n}\n\n/**\n * Get all accounts linked to an Abstract Global Wallet.\n *\n * @example\n * ```tsx\n * import { useAbstractClient } from \"@abstract-foundation/agw-react\";\n *\n * export default function LinkedAccounts() {\n *     const { data: agwClient } = useAbstractClient();\n *\n *     async function fetchLinkedAccounts() {\n *         if (!agwClient) return;\n *\n *         const { linkedAccounts } = await agwClient.getLinkedAccounts({\n *             agwAddress: agwClient.account.address\n *         });\n *\n *         console.log(linkedAccounts); // Array of linked account addresses\n *     }\n * }\n * ```\n *\n * @param parameters - Parameters for getting linked accounts\n * @param parameters.agwAddress - Address of the Abstract Global Wallet to check for linked accounts (required)\n * @returns An object containing an array of linked account addresses\n */\nexport async function getLinkedAccounts<\n  transport extends Transport = Transport,\n  chain extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n  account extends Account | undefined = Account | undefined,\n>(\n  client: Client<transport, chain, account>,\n  parameters: GetLinkedAccountsParameters,\n): Promise<GetLinkedAccountsReturnType> {\n  const { agwAddress } = parameters;\n\n  if (!isAddress(agwAddress, { strict: false })) {\n    throw new InvalidAddressError({ address: agwAddress });\n  }\n\n  const checksummedAddress = getAddress(agwAddress);\n\n  const result = await getAction(\n    client,\n    readContract,\n    'readContract',\n  )({\n    abi: ExclusiveDelegateResolverAbi,\n    address: CANONICAL_EXCLUSIVE_DELEGATE_RESOLVER_ADDRESS,\n    functionName: 'delegatedWalletsByRights',\n    args: [checksummedAddress, AGW_LINK_DELEGATION_RIGHTS],\n  });\n\n  return {\n    linkedAccounts: [...result],\n  };\n}\n\n/**\n * Check if an address is linked to the connected Abstract Global Wallet.\n *\n * @example\n * ```tsx\n * import { useAbstractClient } from \"@abstract-foundation/agw-react\";\n *\n * export default function CheckLinkedAccount() {\n *     const { data: agwClient } = useAbstractClient();\n *     const addressToCheck = \"0x...\";\n *\n *     async function checkIfLinked() {\n *         if (!agwClient) return;\n *\n *         const isLinked = await agwClient.isLinkedAccount({\n *             address: addressToCheck\n *         });\n *\n *         console.log(isLinked); // true or false\n *     }\n * }\n * ```\n *\n * @param parameters - Parameters for checking linked account\n * @param parameters.address - Address to check if linked to the connected wallet (required)\n * @returns Boolean indicating if the address is linked to the connected wallet\n */\nexport async function isLinkedAccount(\n  client: Client<Transport, ChainEIP712, Account>,\n  parameters: IsLinkedAccountParameters,\n): Promise<boolean> {\n  const { address } = parameters;\n  if (!client.account) {\n    throw new AccountNotFoundError({\n      docsPath: '/docs/contract/readContract',\n    });\n  }\n  const clientAccount = parseAccount(client.account);\n  const { linkedAccounts } = await getLinkedAccounts(client, {\n    agwAddress: clientAccount.address,\n  });\n\n  return linkedAccounts.includes(checksumAddress(address));\n}\n","import {\n  type Account,\n  type Address,\n  BaseError,\n  type Chain,\n  type Client,\n  getAddress,\n  InvalidAddressError,\n  isAddress,\n  type Transport,\n} from 'viem';\nimport { readContract } from 'viem/actions';\nimport { getAction, parseAccount } from 'viem/utils';\nimport { type ChainEIP712 } from 'viem/zksync';\n\nimport { ExclusiveDelegateResolverAbi } from '../abis/ExclusiveDelegateResolver.js';\nimport {\n  AGW_LINK_DELEGATION_RIGHTS,\n  CANONICAL_EXCLUSIVE_DELEGATE_RESOLVER_ADDRESS,\n} from '../constants.js';\nimport { AccountNotFoundError } from '../errors/account.js';\n\nexport interface GetLinkedAgwReturnType {\n  agw: Address | undefined;\n}\n\nexport interface GetLinkedAgwParameters {\n  address?: Address | undefined;\n}\n\nexport interface IsLinkedAccountParameters {\n  address: Address;\n}\n\n/**\n * Get the linked Abstract Global Wallet for an Ethereum Mainnet address.\n *\n * @example\n * ```tsx\n * import { linkableWalletActions } from \"@abstract-foundation/agw-client\";\n * import { createWalletClient, custom } from \"viem\";\n * import { sepolia } from \"viem/chains\";\n *\n * export default function CheckLinkedWallet() {\n *   async function checkLinkedWallet() {\n *     // Initialize a Viem Wallet client and extend it with linkableWalletActions\n *     const client = createWalletClient({\n *       chain: sepolia,\n *       transport: custom(window.ethereum!),\n *     }).extend(linkableWalletActions());\n *\n *     // Check if an address has a linked AGW\n *     const { agw } = await client.getLinkedAgw();\n *\n *     if (agw) {\n *       console.log(\"Linked AGW:\", agw);\n *     } else {\n *       console.log(\"No linked AGW found\");\n *     }\n *   }\n *\n *   return <button onClick={checkLinkedWallet}>Check Linked AGW</button>;\n * }\n * ```\n *\n * @param parameters - Parameters for getting the linked AGW\n * @param parameters.address - The Ethereum Mainnet address to check for a linked AGW. If not provided, defaults to the connected account's address\n * @returns Object containing the address of the linked AGW, or undefined if no AGW is linked\n */\nexport async function getLinkedAgw<\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n>(\n  client: Client<Transport, chain, account>,\n  parameters: GetLinkedAgwParameters,\n): Promise<GetLinkedAgwReturnType> {\n  const { address = client.account?.address } = parameters;\n\n  if (address === undefined) {\n    throw new BaseError('No address provided');\n  }\n\n  if (!isAddress(address, { strict: false })) {\n    throw new InvalidAddressError({ address });\n  }\n\n  const checksummedAddress = getAddress(address);\n\n  const result = await getAction(\n    client,\n    readContract,\n    'readContract',\n  )({\n    abi: ExclusiveDelegateResolverAbi,\n    address: CANONICAL_EXCLUSIVE_DELEGATE_RESOLVER_ADDRESS,\n    functionName: 'exclusiveWalletByRights',\n    args: [checksummedAddress, AGW_LINK_DELEGATION_RIGHTS],\n  });\n\n  if (result === checksummedAddress) {\n    return {\n      agw: undefined,\n    };\n  }\n\n  return {\n    agw: result,\n  };\n}\n\nexport async function isLinkedAccount(\n  client: Client<Transport, ChainEIP712, Account>,\n  parameters: IsLinkedAccountParameters,\n): Promise<boolean> {\n  const { address } = parameters;\n\n  if (client.account === undefined) {\n    throw new AccountNotFoundError({\n      docsPath: '/docs/contract/readContract',\n    });\n  }\n\n  const clientAccount = parseAccount(client.account);\n\n  const { agw } = await getLinkedAgw(client, { address });\n  return agw === clientAccount.address;\n}\n","import type { Address, Hash, PublicClient, Transport } from 'viem';\n\nimport { SessionKeyValidatorAbi } from '../abis/SessionKeyValidator.js';\nimport { SESSION_KEY_VALIDATOR_ADDRESS } from '../constants.js';\nimport {\n  getSessionHash,\n  type SessionConfig,\n  SessionStatus,\n} from '../sessions.js';\n\n/**\n * Function to check the current status of a session key from the validator contract.\n *\n * Allows you to determine if a session is active, expired, closed, or not initialized.\n *\n * @example\n * ```tsx\n * import { useAbstractClient } from \"@abstract-foundation/agw-react\";\n * import { SessionStatus } from \"@abstract-foundation/agw-client/sessions\";\n * import { useAccount } from \"wagmi\";\n *\n * export default function CheckSessionStatus() {\n *   const { address } = useAccount();\n *   const { data: agwClient } = useAbstractClient();\n *\n *   async function checkStatus() {\n *     if (!address || !agwClient) return;\n *\n *     // Provide either a session hash or session config object\n *     const sessionHashOrConfig = \"...\"; // or { ... }\n *     const status = await agwClient.getSessionStatus(sessionHashOrConfig);\n *\n *     // Handle the different status cases\n *     switch (status) {\n *       case 0: // Not initialized\n *         console.log(\"Session does not exist\");\n *       case 1: // Active\n *         console.log(\"Session is active and can be used\");\n *       case 2: // Closed\n *         console.log(\"Session has been revoked\");\n *       case 3: // Expired\n *         console.log(\"Session has expired\");\n *     }\n *   }\n * }\n * ```\n *\n * @param sessionHashOrConfig - Either the hash of the session configuration or the session configuration object itself\n * @returns The current status of the session:\n * - `SessionStatus.NotInitialized` (0): The session has not been created\n * - `SessionStatus.Active` (1): The session is active and can be used\n * - `SessionStatus.Closed` (2): The session has been revoked\n * - `SessionStatus.Expired` (3): The session has expired\n */\nexport async function getSessionStatus(\n  publicClient: PublicClient<Transport>,\n  address: Address,\n  sessionHashOrConfig: Hash | SessionConfig,\n): Promise<SessionStatus> {\n  const sessionHash =\n    typeof sessionHashOrConfig === 'string'\n      ? sessionHashOrConfig\n      : getSessionHash(sessionHashOrConfig);\n\n  return await publicClient.readContract({\n    address: SESSION_KEY_VALIDATOR_ADDRESS as Address,\n    abi: SessionKeyValidatorAbi,\n    functionName: 'sessionStatus',\n    args: [address, sessionHash],\n  });\n}\n","import {\n  type Account,\n  type Address,\n  type Client,\n  type Hash,\n  type Hex,\n  type Transport,\n} from 'viem';\nimport { writeContract } from 'viem/actions';\nimport type { ChainEIP712 } from 'viem/chains';\nimport { getAction } from 'viem/utils';\n\nimport { SessionKeyValidatorAbi } from '../abis/SessionKeyValidator.js';\nimport { SESSION_KEY_VALIDATOR_ADDRESS } from '../constants.js';\nimport { getSessionHash, type SessionConfig } from '../sessions.js';\n\nexport interface RevokeSessionsParameters {\n  session: SessionConfig | Hash | (SessionConfig | Hash)[];\n  paymaster?: Address;\n  paymasterInput?: Hex;\n}\nexport interface RevokeSessionsReturnType {\n  transactionHash: Hash | undefined;\n}\n\n/**\n * Function to revoke session keys from the connected Abstract Global Wallet.\n *\n * This allows you to invalidate existing session keys, preventing them from being used for future transactions.\n *\n * @example\n * ```tsx\n * import { useAbstractClient } from \"@abstract-foundation/agw-react\";\n *\n * export default function RevokeSessions() {\n *   const { data: agwClient } = useAbstractClient();\n *\n *   async function revokeSessions() {\n *     if (!agwClient) return;\n *\n *     // Revoke a single session by passing the session configuration\n *     const { transactionHash } = await agwClient.revokeSessions({\n *       session: existingSession,\n *     });\n *\n *     // Or - revoke multiple sessions at once\n *     const { transactionHash } = await agwClient.revokeSessions({\n *       session: [existingSession1, existingSession2],\n *     });\n *\n *     // Or - revoke sessions using their creation transaction hashes\n *     const { transactionHash } = await agwClient.revokeSessions({\n *       session: \"0x1234...\",\n *     });\n *\n *     // Or - revoke multiple sessions using their creation transaction hashes\n *     const { transactionHash } = await agwClient.revokeSessions({\n *       session: [\"0x1234...\", \"0x5678...\"],\n *     });\n *\n *     // Or - revoke multiple sessions using both session configuration and creation transaction hashes\n *     const { transactionHash } = await agwClient.revokeSessions({\n *       session: [existingSession, \"0x1234...\"],\n *     });\n *   }\n * }\n * ```\n *\n * @param parameters - Parameters for revoking sessions\n * @param parameters.session - The session(s) to revoke (required). Can be provided in three formats:\n *                           - A single SessionConfig object\n *                           - A single session key creation transaction hash from createSession\n *                           - An array of SessionConfig objects and/or session key creation transaction hashes\n * @param parameters.paymaster - Optional paymaster address to sponsor the transaction\n * @param parameters.paymasterInput - Optional paymaster input data\n * @returns Object containing the transaction hash of the revocation transaction\n */\nexport async function revokeSessions(\n  client: Client<Transport, ChainEIP712, Account>,\n  args: RevokeSessionsParameters,\n): Promise<RevokeSessionsReturnType> {\n  const { session, ...rest } = args;\n\n  const sessionHashes =\n    typeof session === 'string'\n      ? [session as Hash]\n      : Array.isArray(session)\n        ? session.map(sessionHash)\n        : [getSessionHash(session)];\n\n  const transactionHash = await getAction(\n    client,\n    writeContract,\n    'writeContract',\n  )({\n    address: SESSION_KEY_VALIDATOR_ADDRESS,\n    abi: SessionKeyValidatorAbi,\n    functionName: 'revokeKeys',\n    args: [sessionHashes],\n    ...rest,\n  } as any);\n\n  return { transactionHash };\n}\n\nfunction sessionHash(session: SessionConfig | Hash): Hash {\n  if (typeof session === 'string') {\n    return session;\n  }\n  return getSessionHash(session);\n}\n","import {\n  type Account,\n  type Address,\n  type Client,\n  encodeFunctionData,\n  type PublicClient,\n  type SendTransactionRequest,\n  type SendTransactionReturnType,\n  type Transport,\n  type WalletClient,\n} from 'viem';\nimport { type ChainEIP712 } from 'viem/zksync';\n\nimport AGWAccountAbi from '../abis/AGWAccount.js';\nimport { EOA_VALIDATOR_ADDRESS } from '../constants.js';\nimport { type Call } from '../types/call.js';\nimport type { CustomPaymasterHandler } from '../types/customPaymaster.js';\nimport type { SendTransactionBatchParameters } from '../types/sendTransactionBatch.js';\nimport type { SignTransactionBatchParameters } from '../types/signTransactionBatch.js';\nimport { signPrivyTransaction } from './sendPrivyTransaction.js';\nimport { sendTransactionInternal } from './sendTransactionInternal.js';\n\nexport function getBatchTransactionObject<\n  chain extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n  account extends Account | undefined = Account | undefined,\n  chainOverride extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n  request extends SendTransactionRequest<\n    chain,\n    chainOverride\n  > = SendTransactionRequest<chain, chainOverride>,\n>(\n  address: Address,\n  parameters:\n    | SendTransactionBatchParameters<request>\n    | SignTransactionBatchParameters<chain, account, chainOverride>,\n) {\n  const { calls, paymaster, paymasterInput } = parameters;\n  const batchCalls: Call[] = calls.map((tx) => {\n    if (!tx.to) throw new Error('Transaction target (to) is required');\n    return {\n      target: tx.to,\n      allowFailure: false,\n      value: BigInt(tx.value ?? 0),\n      callData: tx.data ?? '0x',\n    };\n  });\n\n  const batchCallData = encodeFunctionData({\n    abi: AGWAccountAbi,\n    functionName: 'batchCall',\n    args: [batchCalls],\n  });\n\n  // Get cumulative value passed in\n  const totalValue = batchCalls.reduce(\n    (sum, call) => sum + BigInt(call.value),\n    BigInt(0),\n  );\n\n  const batchTransaction = {\n    to: address,\n    data: batchCallData,\n    value: totalValue,\n    paymaster: paymaster,\n    paymasterInput: paymasterInput,\n    type: 'eip712',\n  } as any;\n\n  return batchTransaction;\n}\n\n/**\n * Function to send a batch of transactions in a single call using the connected Abstract Global Wallet.\n *\n * @example\n * ```tsx\n * import { useAbstractClient } from \"@abstract-foundation/agw-react\";\n * import { encodeFunctionData, parseUnits } from \"viem\";\n *\n * export default function SendTransactionBatch() {\n *   const { data: agwClient } = useAbstractClient();\n *\n *   async function sendTransactionBatch() {\n *     if (!agwClient) return;\n *\n *     // Batch multiple transactions in a single call\n *     const hash = await agwClient.sendTransactionBatch({\n *       calls: [\n *         // 1. Simple ETH transfer\n *         {\n *           to: \"0x1234567890123456789012345678901234567890\",\n *           value: parseUnits(\"0.1\", 18), // 0.1 ETH\n *         },\n *         // 2. Contract interaction\n *         {\n *           to: \"0xabcdef0123456789abcdef0123456789abcdef01\",\n *           data: encodeFunctionData({\n *             abi: [\n *               {\n *                 name: \"transfer\",\n *                 type: \"function\",\n *                 inputs: [\n *                   { name: \"to\", type: \"address\" },\n *                   { name: \"amount\", type: \"uint256\" }\n *                 ],\n *                 outputs: [{ type: \"bool\" }],\n *                 stateMutability: \"nonpayable\"\n *               }\n *             ],\n *             functionName: \"transfer\",\n *             args: [\"0x9876543210987654321098765432109876543210\", parseUnits(\"10\", 18)]\n *           })\n *         }\n *       ]\n *     });\n *\n *     console.log(\"Transaction hash:\", hash);\n *   }\n * }\n * ```\n *\n * @param parameters - Parameters for sending a batch of transactions\n * @param parameters.calls - An array of transaction requests. Each transaction can include:\n *   - to: The recipient address (required)\n *   - from: The sender address (defaults to the AGW address)\n *   - data: Contract code or method call with encoded args\n *   - gas: Gas provided for execution\n *   - nonce: Unique transaction identifier\n *   - value: Amount in wei to send\n *   - maxFeePerGas: Total fee per gas\n *   - maxPriorityFeePerGas: Priority fee per gas\n *   - gasPerPubdata: Gas per byte of data\n *   - factoryDeps: Bytecodes of contract dependencies\n *   - customSignature: Custom transaction signature\n *   - type: Transaction type\n * @param parameters.paymaster - Address of the paymaster smart contract that will pay the gas fees\n * @param parameters.paymasterInput - Input data to the paymaster\n * @returns The transaction hash of the submitted transaction batch\n */\nexport async function sendTransactionBatch<\n  chain extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n  chainOverride extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n  request extends SendTransactionRequest<\n    chain,\n    chainOverride\n  > = SendTransactionRequest<chain, chainOverride>,\n>(\n  client: Client<Transport, ChainEIP712, Account>,\n  signerClient: WalletClient<Transport, ChainEIP712, Account>,\n  publicClient: PublicClient<Transport, ChainEIP712>,\n  parameters: SendTransactionBatchParameters<request>,\n  isPrivyCrossApp = false,\n  customPaymasterHandler: CustomPaymasterHandler | undefined = undefined,\n): Promise<SendTransactionReturnType> {\n  const { calls, ...rest } = parameters;\n  if (calls.length === 0) {\n    throw new Error('No calls provided');\n  }\n  if (isPrivyCrossApp) {\n    const signedTx = await signPrivyTransaction(client, parameters as any);\n    return await publicClient.sendRawTransaction({\n      serializedTransaction: signedTx,\n    });\n  }\n\n  const batchTransaction = getBatchTransactionObject(\n    client.account.address,\n    parameters,\n  );\n\n  return sendTransactionInternal(\n    client,\n    signerClient,\n    publicClient,\n    {\n      ...batchTransaction,\n      ...rest,\n    },\n    EOA_VALIDATOR_ADDRESS,\n    {},\n    customPaymasterHandler,\n  );\n}\n","import {\n  type Account,\n  BaseError,\n  type Client,\n  type Hex,\n  type PublicClient,\n  type SendTransactionRequest,\n  type Transport,\n  type WalletClient,\n} from 'viem';\nimport {\n  type ChainEIP712,\n  type SendEip712TransactionParameters,\n  type SendEip712TransactionReturnType,\n} from 'viem/zksync';\n\nimport { SESSION_KEY_VALIDATOR_ADDRESS } from '../constants.js';\nimport {\n  encodeSessionWithPeriodIds,\n  getPeriodIdsForTransaction,\n  type SessionConfig,\n} from '../sessions.js';\nimport type { CustomPaymasterHandler } from '../types/customPaymaster.js';\nimport { sendTransactionInternal } from './sendTransactionInternal.js';\n\nexport interface SendTransactionForSessionParameters<\n  chain extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n  account extends Account | undefined = Account | undefined,\n  chainOverride extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n  request extends SendTransactionRequest<\n    chain,\n    chainOverride\n  > = SendTransactionRequest<chain, chainOverride>,\n> {\n  parameters: SendEip712TransactionParameters<\n    chain,\n    account,\n    chainOverride,\n    request\n  >;\n  session: SessionConfig;\n}\n\nexport async function sendTransactionForSession<\n  chain extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n  account extends Account | undefined = Account | undefined,\n  chainOverride extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n  const request extends SendTransactionRequest<\n    chain,\n    chainOverride\n  > = SendTransactionRequest<chain, chainOverride>,\n>(\n  client: Client<Transport, ChainEIP712, Account>,\n  signerClient: WalletClient<Transport, ChainEIP712, Account>,\n  publicClient: PublicClient<Transport, ChainEIP712>,\n  parameters: SendEip712TransactionParameters<\n    chain,\n    account,\n    chainOverride,\n    request\n  >,\n  session: SessionConfig,\n  customPaymasterHandler: CustomPaymasterHandler | undefined = undefined,\n): Promise<SendEip712TransactionReturnType> {\n  const selector: Hex | undefined = parameters.data\n    ? `0x${parameters.data.slice(2, 10)}`\n    : undefined;\n\n  if (!parameters.to) {\n    throw new BaseError('Transaction to field is not specified');\n  }\n  return sendTransactionInternal(\n    client,\n    signerClient,\n    publicClient,\n    parameters,\n    SESSION_KEY_VALIDATOR_ADDRESS,\n    {\n      [SESSION_KEY_VALIDATOR_ADDRESS]: encodeSessionWithPeriodIds(\n        session,\n        getPeriodIdsForTransaction({\n          sessionConfig: session,\n          target: parameters.to,\n          selector,\n          timestamp: BigInt(Math.floor(Date.now() / 1000)),\n        }),\n      ),\n    },\n    customPaymasterHandler,\n  );\n}\n","import type { WalletClient } from 'viem';\nimport {\n  type Account,\n  type Client,\n  encodeAbiParameters,\n  encodeFunctionData,\n  type Hash,\n  type Hex,\n  keccak256,\n  parseAbiParameters,\n  serializeErc6492Signature,\n  toBytes,\n  type Transport,\n  zeroAddress,\n} from 'viem';\nimport { getCode, signTypedData } from 'viem/actions';\nimport type { ChainEIP712 } from 'viem/chains';\n\nimport AccountFactoryAbi from './abis/AccountFactory.js';\nimport {\n  EOA_VALIDATOR_ADDRESS,\n  SMART_ACCOUNT_FACTORY_ADDRESS,\n} from './constants.js';\nimport { getInitializerCalldata } from './utils.js';\n\nexport interface GetAgwTypedSignatureParams {\n  client: Client<Transport, ChainEIP712, Account>;\n  signer: WalletClient<Transport, ChainEIP712, Account>;\n  messageHash: Hash;\n}\n\nexport async function getAgwTypedSignature(\n  args: GetAgwTypedSignatureParams,\n): Promise<Hex> {\n  const { client, signer, messageHash } = args;\n  const chainId = client.chain.id;\n  const account = client.account;\n\n  const rawSignature = await signTypedData(signer, {\n    domain: {\n      name: 'AbstractGlobalWallet',\n      version: '1.0.0',\n      chainId: BigInt(chainId),\n      verifyingContract: account.address,\n    },\n    types: {\n      EIP712Domain: [\n        { name: 'name', type: 'string' },\n        { name: 'version', type: 'string' },\n        { name: 'chainId', type: 'uint256' },\n        { name: 'verifyingContract', type: 'address' },\n      ],\n      AGWMessage: [{ name: 'signedHash', type: 'bytes32' }],\n    },\n    message: {\n      signedHash: messageHash,\n    },\n    primaryType: 'AGWMessage',\n  });\n\n  const signature = encodeAbiParameters(\n    parseAbiParameters(['bytes', 'address']),\n    [rawSignature, EOA_VALIDATOR_ADDRESS],\n  );\n\n  const code = await getCode(client, {\n    address: account.address,\n  });\n\n  // if the account is already deployed, we can use signature directly\n  // otherwise, we provide an ERC-6492 compatible signature\n  if (code !== undefined) {\n    return signature;\n  }\n\n  // Generate the ERC-6492 compatible signature\n  // https://eips.ethereum.org/EIPS/eip-6492\n\n  // 1. Generate the salt for account deployment\n  const addressBytes = toBytes(signer.account.address);\n  const salt = keccak256(addressBytes);\n\n  // 2. Generate the ERC-6492 compatible signature with deploy parameters\n  return serializeErc6492Signature({\n    address: SMART_ACCOUNT_FACTORY_ADDRESS,\n    data: encodeFunctionData({\n      abi: AccountFactoryAbi,\n      functionName: 'deployAccount',\n      args: [\n        salt,\n        getInitializerCalldata(signer.account.address, EOA_VALIDATOR_ADDRESS, {\n          target: zeroAddress,\n          allowFailure: false,\n          callData: '0x',\n          value: 0n,\n        }),\n      ],\n    }),\n    signature,\n  });\n}\n","import type { Address } from 'abitype'\nimport { erc6492MagicBytes } from '../../constants/bytes.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { encodeAbiParameters } from '../abi/encodeAbiParameters.js'\nimport { concatHex } from '../data/concat.js'\nimport { hexToBytes } from '../encoding/toBytes.js'\n\ntype To = 'bytes' | 'hex'\n\nexport type SerializeErc6492SignatureParameters<to extends To = 'hex'> = {\n  /** The ERC-4337 Account Factory address to use for counterfactual verification. */\n  address: Address\n  /** Calldata to pass to deploy account (if not deployed) for counterfactual verification. */\n  data: Hex\n  /** The original signature. */\n  signature: Hex\n  to?: to | To | undefined\n}\n\nexport type SerializeErc6492SignatureReturnType<to extends To = 'hex'> =\n  | (to extends 'hex' ? Hex : never)\n  | (to extends 'bytes' ? ByteArray : never)\n\nexport type SerializeErc6492SignatureErrorType = ErrorType\n\n/**\n * @description Serializes a ERC-6492 flavoured signature into hex format.\n *\n * @param signature ERC-6492 signature in object format.\n * @returns ERC-6492 signature in hex format.\n *\n * @example\n * serializeSignature({ address: '0x...', data: '0x...', signature: '0x...' })\n * // '0x000000000000000000000000cafebabecafebabecafebabecafebabecafebabe000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000004deadbeef000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000041a461f509887bd19e312c0c58467ce8ff8e300d3c1a90b608a760c5b80318eaf15fe57c96f9175d6cd4daad4663763baa7e78836e067d0163e9a2ccf2ff753f5b1b000000000000000000000000000000000000000000000000000000000000006492649264926492649264926492649264926492649264926492649264926492'\n */\nexport function serializeErc6492Signature<to extends To = 'hex'>(\n  parameters: SerializeErc6492SignatureParameters<to>,\n): SerializeErc6492SignatureReturnType<to> {\n  const { address, data, signature, to = 'hex' } = parameters\n  const signature_ = concatHex([\n    encodeAbiParameters(\n      [{ type: 'address' }, { type: 'bytes' }, { type: 'bytes' }],\n      [address, data, signature],\n    ),\n    erc6492MagicBytes,\n  ])\n\n  if (to === 'hex') return signature_ as SerializeErc6492SignatureReturnType<to>\n  return hexToBytes(signature_) as SerializeErc6492SignatureReturnType<to>\n}\n","import { BaseError, type BaseErrorType } from '../../errors/base.js'\nimport {\n  InvalidHexValueError,\n  type InvalidHexValueErrorType,\n} from '../../errors/encoding.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport {\n  type CreateCursorErrorType,\n  type Cursor,\n  createCursor,\n} from '../cursor.js'\nimport { type HexToBytesErrorType, hexToBytes } from './toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from './toHex.js'\n\nimport type { RecursiveArray } from './toRlp.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type FromRlpReturnType<to extends To> =\n  | (to extends 'bytes' ? RecursiveArray<ByteArray> : never)\n  | (to extends 'hex' ? RecursiveArray<Hex> : never)\n\nexport type FromRlpErrorType =\n  | CreateCursorErrorType\n  | FromRlpCursorErrorType\n  | HexToBytesErrorType\n  | InvalidHexValueErrorType\n  | ErrorType\n\nexport function fromRlp<to extends To = 'hex'>(\n  value: ByteArray | Hex,\n  to: to | To | undefined = 'hex',\n): FromRlpReturnType<to> {\n  const bytes = (() => {\n    if (typeof value === 'string') {\n      if (value.length > 3 && value.length % 2 !== 0)\n        throw new InvalidHexValueError(value)\n      return hexToBytes(value)\n    }\n    return value\n  })()\n\n  const cursor = createCursor(bytes, {\n    recursiveReadLimit: Number.POSITIVE_INFINITY,\n  })\n  const result = fromRlpCursor(cursor, to)\n\n  return result as FromRlpReturnType<to>\n}\n\ntype FromRlpCursorErrorType =\n  | BytesToHexErrorType\n  | ReadLengthErrorType\n  | ReadListErrorType\n  | ErrorType\n\nfunction fromRlpCursor<to extends To = 'hex'>(\n  cursor: Cursor,\n  to: to | To | undefined = 'hex',\n): FromRlpReturnType<to> {\n  if (cursor.bytes.length === 0)\n    return (\n      to === 'hex' ? bytesToHex(cursor.bytes) : cursor.bytes\n    ) as FromRlpReturnType<to>\n\n  const prefix = cursor.readByte()\n  if (prefix < 0x80) cursor.decrementPosition(1)\n\n  // bytes\n  if (prefix < 0xc0) {\n    const length = readLength(cursor, prefix, 0x80)\n    const bytes = cursor.readBytes(length)\n    return (to === 'hex' ? bytesToHex(bytes) : bytes) as FromRlpReturnType<to>\n  }\n\n  // list\n  const length = readLength(cursor, prefix, 0xc0)\n  return readList(cursor, length, to) as {} as FromRlpReturnType<to>\n}\n\ntype ReadLengthErrorType = BaseErrorType | ErrorType\n\nfunction readLength(cursor: Cursor, prefix: number, offset: number) {\n  if (offset === 0x80 && prefix < 0x80) return 1\n  if (prefix <= offset + 55) return prefix - offset\n  if (prefix === offset + 55 + 1) return cursor.readUint8()\n  if (prefix === offset + 55 + 2) return cursor.readUint16()\n  if (prefix === offset + 55 + 3) return cursor.readUint24()\n  if (prefix === offset + 55 + 4) return cursor.readUint32()\n  throw new BaseError('Invalid RLP prefix')\n}\n\ntype ReadListErrorType = ErrorType\n\nfunction readList<to extends To>(cursor: Cursor, length: number, to: to | To) {\n  const position = cursor.position\n  const value: FromRlpReturnType<to>[] = []\n  while (cursor.position - position < length)\n    value.push(fromRlpCursor(cursor, to))\n  return value\n}\n","import {\n  type Account,\n  bytesToString,\n  type Client,\n  fromHex,\n  hashMessage,\n  type Hex,\n  type SignMessageParameters,\n  type Transport,\n  type WalletClient,\n} from 'viem';\nimport type { ChainEIP712 } from 'viem/chains';\n\nimport { getAgwTypedSignature } from '../getAgwTypedSignature.js';\nimport { sendPrivySignMessage } from './sendPrivyTransaction.js';\n\n/**\n * Function to sign messages using the connected Abstract Global Wallet.\n *\n * This method follows the EIP-1271 standard for contract signature verification.\n *\n * @example\n * ```tsx\n * import { useAbstractClient } from \"@abstract-foundation/agw-react\";\n *\n * export default function SignMessage() {\n *   const { data: agwClient } = useAbstractClient();\n *\n *   async function signMessage() {\n *     if (!agwClient) return;\n *\n *     const signature = await agwClient.signMessage({\n *       message: \"Hello, Abstract!\",\n *     });\n *\n *     console.log(\"Signature:\", signature);\n *   }\n * }\n * ```\n *\n * @param parameters - Parameters for signing a message\n * @param parameters.message - The message to sign. Can be a string or a hex value (required)\n * @returns A Promise containing the signature of the message\n */\nexport async function signMessage(\n  client: Client<Transport, ChainEIP712, Account>,\n  signerClient: WalletClient<Transport, ChainEIP712, Account>,\n  parameters: Omit<SignMessageParameters, 'account'>,\n  isPrivyCrossApp = false,\n): Promise<Hex> {\n  if (isPrivyCrossApp) {\n    // We handle {message: {raw}} here because the message is expected to be a string\n    if (typeof parameters.message === 'object') {\n      if (parameters.message.raw instanceof Uint8Array) {\n        parameters.message = bytesToString(parameters.message.raw);\n      } else {\n        parameters.message = fromHex(parameters.message.raw, 'string');\n      }\n    }\n    return await sendPrivySignMessage(client, parameters);\n  }\n\n  return await getAgwTypedSignature({\n    client,\n    signer: signerClient,\n    messageHash: hashMessage(parameters.message),\n  });\n}\n","import {\n  type Account,\n  type Address,\n  type Client,\n  type Hex,\n  type PublicClient,\n  type Transport,\n  type WalletClient,\n} from 'viem';\nimport {\n  type ChainEIP712,\n  type SignEip712TransactionReturnType,\n} from 'viem/zksync';\n\nimport type { CustomPaymasterHandler } from '../types/customPaymaster.js';\nimport type { SignTransactionBatchParameters } from '../types/signTransactionBatch.js';\nimport { signPrivyTransaction } from './sendPrivyTransaction.js';\nimport { getBatchTransactionObject } from './sendTransactionBatch.js';\nimport { signTransaction } from './signTransaction.js';\n\n/**\n * Function to sign a batch of transactions in a single call using the connected Abstract Global Wallet.\n *\n * @example\n * ```tsx\n * import { useAbstractClient } from \"@abstract-foundation/agw-react\";\n * import { encodeFunctionData, parseUnits } from \"viem\";\n *\n * export default function SignTransactionBatch() {\n *   const { data: agwClient } = useAbstractClient();\n *\n *   async function signTransactionBatch() {\n *     if (!agwClient) return;\n *\n *     // Sign a batch of multiple transactions in a single call\n *     const rawTransaction = await agwClient.signTransactionBatch({\n *       calls: [\n *         // 1. Simple ETH transfer\n *         {\n *           to: \"0x1234567890123456789012345678901234567890\",\n *           value: parseUnits(\"0.1\", 18), // 0.1 ETH\n *         },\n *         // 2. Contract interaction\n *         {\n *           to: \"0xabcdef0123456789abcdef0123456789abcdef01\",\n *           data: encodeFunctionData({\n *             abi: [\n *               {\n *                 name: \"transfer\",\n *                 type: \"function\",\n *                 inputs: [\n *                   { name: \"to\", type: \"address\" },\n *                   { name: \"amount\", type: \"uint256\" }\n *                 ],\n *                 outputs: [{ type: \"bool\" }],\n *                 stateMutability: \"nonpayable\"\n *               }\n *             ],\n *             functionName: \"transfer\",\n *             args: [\"0x9876543210987654321098765432109876543210\", parseUnits(\"10\", 18)]\n *           })\n *         }\n *       ]\n *     });\n *\n *     console.log(\"Serialized transaction:\", rawTransaction);\n *   }\n * }\n * ```\n *\n * @param parameters - Parameters for signing a batch of transactions\n * @param parameters.calls - An array of transaction requests. Each transaction can include:\n *   - to: The recipient address (required)\n *   - data: Contract code or method call with encoded args\n *   - value: Amount in wei to send\n * @param parameters.paymaster - Address of the paymaster smart contract that will pay the gas fees\n * @param parameters.paymasterInput - Input data to the paymaster\n * @returns The transaction hash of the submitted transaction batch\n */\nexport async function signTransactionBatch<\n  chain extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n  account extends Account | undefined = Account | undefined,\n  chainOverride extends ChainEIP712 | undefined = ChainEIP712 | undefined,\n>(\n  client: Client<Transport, ChainEIP712, Account>,\n  signerClient: WalletClient<Transport, ChainEIP712, Account>,\n  publicClient: PublicClient<Transport, ChainEIP712>,\n  parameters: SignTransactionBatchParameters<chain, account, chainOverride>,\n  validator: Address,\n  validationHookData: Record<string, Hex> = {},\n  customPaymasterHandler: CustomPaymasterHandler | undefined = undefined,\n  isPrivyCrossApp = false,\n): Promise<SignEip712TransactionReturnType> {\n  const { calls, ...rest } = parameters;\n  if (calls.length === 0) {\n    throw new Error('No calls provided');\n  }\n  if (isPrivyCrossApp) {\n    return await signPrivyTransaction(client, parameters);\n  }\n\n  const batchTransaction = getBatchTransactionObject(\n    client.account.address,\n    parameters,\n  );\n\n  return signTransaction(\n    client,\n    signerClient,\n    publicClient,\n    {\n      ...batchTransaction,\n      ...rest,\n    },\n    validator,\n    validationHookData,\n    customPaymasterHandler,\n  );\n}\n","import {\n  type Abi,\n  type Account,\n  BaseError,\n  type Client,\n  type ContractFunctionArgs,\n  type ContractFunctionName,\n  encodeFunctionData,\n  type EncodeFunctionDataParameters,\n  type PublicClient,\n  type Transport,\n  type WalletClient,\n  type WriteContractParameters,\n  type WriteContractReturnType,\n} from 'viem';\nimport { getContractError, parseAccount } from 'viem/utils';\nimport { type ChainEIP712 } from 'viem/zksync';\n\nimport { AccountNotFoundError } from '../errors/account.js';\nimport { sendTransaction } from './sendTransaction.js';\n\n/**\n * Function to call functions on a smart contract using the connected Abstract Global Wallet.\n *\n * @example\n * ```tsx\n * import { useAbstractClient } from \"@abstract-foundation/agw-react\";\n * import { parseAbi } from \"viem\";\n *\n * export default function WriteContract() {\n *   const { data: agwClient } = useAbstractClient();\n *\n *   async function writeContract() {\n *     if (!agwClient) return;\n *\n *     const transactionHash = await agwClient.writeContract({\n *       abi: parseAbi([\"function mint(address,uint256) external\"]), // Your contract ABI\n *       address: \"0xC4822AbB9F05646A9Ce44EFa6dDcda0Bf45595AA\",\n *       functionName: \"mint\",\n *       args: [\"0x273B3527BF5b607dE86F504fED49e1582dD2a1C6\", BigInt(1)],\n *     });\n *\n *     console.log(\"Transaction hash:\", transactionHash);\n *   }\n * }\n * ```\n *\n * @param parameters - Parameters for writing to a contract\n * @param parameters.address - The address of the contract to write to (required)\n * @param parameters.abi - The ABI of the contract to write to (required)\n * @param parameters.functionName - The name of the function to call on the contract (required)\n * @param parameters.args - The arguments to pass to the function\n * @param parameters.account - The account to use for the transaction (defaults to the AGW's account)\n * @param parameters.chain - The chain to use for the transaction (defaults to the chain in the AbstractClient)\n * @param parameters.value - The amount of native token to send with the transaction (in wei)\n * @param parameters.dataSuffix - Data to append to the end of the calldata\n * @param parameters.gasPerPubdata - The amount of gas to pay per byte of data on Ethereum\n * @param parameters.paymaster - Address of the paymaster smart contract that will pay the gas fees\n * @param parameters.paymasterInput - Input data to the paymaster (required if paymaster is provided)\n * @returns The transaction hash of the contract write operation\n */\nexport async function writeContract<\n  chain extends ChainEIP712 | undefined,\n  account extends Account | undefined,\n  const abi extends Abi | readonly unknown[],\n  functionName extends ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n  args extends ContractFunctionArgs<\n    abi,\n    'nonpayable' | 'payable',\n    functionName\n  >,\n  chainOverride extends ChainEIP712 | undefined,\n>(\n  client: Client<Transport, ChainEIP712, Account>,\n  signerClient: WalletClient<Transport, ChainEIP712, Account>,\n  publicClient: PublicClient<Transport, ChainEIP712>,\n  parameters: WriteContractParameters<\n    abi,\n    functionName,\n    args,\n    chain,\n    account,\n    chainOverride\n  >,\n  isPrivyCrossApp = false,\n): Promise<WriteContractReturnType> {\n  const {\n    abi,\n    account: account_ = client.account,\n    address,\n    args,\n    dataSuffix,\n    functionName,\n    ...request\n  } = parameters as WriteContractParameters;\n\n  if (!account_)\n    throw new AccountNotFoundError({\n      docsPath: '/docs/contract/writeContract',\n    });\n  const account = parseAccount(account_);\n\n  const data = encodeFunctionData({\n    abi,\n    args,\n    functionName,\n  } as EncodeFunctionDataParameters);\n\n  try {\n    return await sendTransaction(\n      client,\n      signerClient,\n      publicClient,\n      {\n        data: `${data}${dataSuffix ? dataSuffix.replace('0x', '') : ''}`,\n        to: address,\n        account,\n        ...request,\n      },\n      isPrivyCrossApp,\n    );\n  } catch (error) {\n    throw getContractError(error as BaseError, {\n      abi,\n      address,\n      args,\n      docsPath: '/docs/contract/writeContract',\n      functionName,\n      sender: account.address,\n    });\n  }\n}\n","import {\n  type Account,\n  type Address,\n  type Client,\n  createClient,\n  createPublicClient,\n  createWalletClient,\n  http,\n  type Transport,\n} from 'viem';\nimport { toAccount } from 'viem/accounts';\nimport { type ChainEIP712 } from 'viem/zksync';\n\nimport type { CustomPaymasterHandler } from './types/customPaymaster.js';\nimport { getSmartAccountAddressFromInitialSigner } from './utils.js';\nimport {\n  type AbstractWalletActions,\n  globalWalletActions,\n} from './walletActions.js';\n\n/**\n * Parameters for creating an AbstractClient instance.\n * @interface CreateAbstractClientParameters\n */\ninterface CreateAbstractClientParameters {\n  /**\n   * The account used for signing AGW transactions.\n   * @type {Account}\n   */\n  signer: Account;\n\n  /**\n   * The chain configuration supporting EIP-712.\n   * @type {ChainEIP712}\n   */\n  chain: ChainEIP712;\n\n  /**\n   * Optional transport layer for network communication.\n   * If not provided, a default HTTP transport will be used.\n   * @type {Transport}\n   * @optional\n   */\n  transport?: Transport;\n\n  /**\n   * The address of the smart account.\n   * @type {Address}\n   * @optional\n   */\n  address?: Address;\n\n  /**\n   * Whether the client is a Privy cross-app client.\n   * @type {boolean}\n   * @optional\n   */\n  isPrivyCrossApp?: boolean;\n\n  /**\n   * The transport layer for the underlying public client.\n   * @type {Transport}\n   * @optional\n   */\n  publicTransport?: Transport;\n\n  /**\n   * The custom paymaster handler.\n   * @type {CustomPaymasterHandler}\n   * @optional\n   */\n  customPaymasterHandler?: CustomPaymasterHandler;\n}\n\ntype AbstractClientActions = AbstractWalletActions<ChainEIP712, Account>;\n\nexport type AbstractClient = Client<Transport, ChainEIP712, Account> &\n  AbstractClientActions;\n\nexport async function createAbstractClient({\n  signer,\n  chain,\n  transport,\n  address,\n  isPrivyCrossApp = false,\n  publicTransport = http(undefined, {\n    batch: true,\n  }),\n  customPaymasterHandler,\n}: CreateAbstractClientParameters): Promise<AbstractClient> {\n  if (!transport) {\n    throw new Error('Transport is required');\n  }\n\n  const publicClient = createPublicClient({\n    chain: chain,\n    transport: publicTransport,\n  });\n\n  const smartAccountAddress =\n    address ??\n    (await getSmartAccountAddressFromInitialSigner(\n      signer.address,\n      publicClient,\n    ));\n\n  const baseClient = createClient({\n    account: toAccount(smartAccountAddress),\n    chain: chain,\n    transport,\n  });\n\n  // Create a signer wallet client to handle actual signing\n  const signerWalletClient = createWalletClient({\n    account: signer,\n    chain: chain,\n    transport,\n  });\n\n  const abstractClient = baseClient.extend(\n    globalWalletActions(\n      signerWalletClient,\n      publicClient,\n      isPrivyCrossApp,\n      customPaymasterHandler,\n    ),\n  );\n  return abstractClient as AbstractClient;\n}\n","import type { Address, Hex, RpcTransactionReceipt } from 'viem';\n\nenum CallStatus {\n  Pending = 100,\n  Confirmed = 200,\n  OffchainFailure = 400,\n  Reverted = 500,\n  PartiallyReverted = 600,\n}\n\ninterface PaymasterServiceCapability {\n  url: string;\n}\n\ninterface AtomicCapabilityV1 {\n  supported: boolean;\n}\n\ninterface AtomicCapabilityV2 {\n  status: 'supported' | 'ready' | 'unsupported';\n}\n\ninterface ChainCapabilitiesV1 {\n  paymasterService?: PaymasterServiceCapability;\n  atomicBatch?: AtomicCapabilityV1;\n}\n\ninterface ChainCapabilitiesV2 {\n  paymasterService?: PaymasterServiceCapability;\n  atomic?: AtomicCapabilityV2;\n}\n\ntype WalletCapabilitiesV1 = Record<`0x${string}`, ChainCapabilitiesV1>;\n\ntype WalletCapabilitiesV2 = Record<`0x${string}`, ChainCapabilitiesV2>;\n\nexport type WalletCapabilities = Record<\n  `0x${string}`,\n  ChainCapabilitiesV1 & ChainCapabilitiesV2\n>;\n\nexport type SendCallsParams = SendCallsParamsV1 | SendCallsParamsV2;\n\nexport interface SendCallsParamsV1 {\n  version: '1.0';\n  from: Address;\n  calls: {\n    to?: Address | undefined;\n    data?: Hex | undefined;\n    value?: Hex | undefined;\n    chainId?: Hex | undefined;\n  }[];\n  capabilities?: WalletCapabilitiesV1 | undefined;\n}\n\nexport interface SendCallsParamsV2 {\n  version: '2.0.0';\n  id: string;\n  from: Address;\n  chainId: Hex;\n  atomicRequired: boolean;\n  calls: {\n    to?: Address | undefined;\n    data?: Hex | undefined;\n    value?: Hex | undefined;\n  }[];\n  capabilities: WalletCapabilitiesV2 | undefined;\n}\n\nexport const agwCapabilitiesV2: WalletCapabilities = {\n  '0xab5': {\n    atomicBatch: {\n      supported: true,\n    },\n    atomic: {\n      status: 'supported',\n    },\n  },\n  '0x2b74': {\n    atomicBatch: {\n      supported: true,\n    },\n    atomic: {\n      status: 'supported',\n    },\n  },\n};\n\nexport function getReceiptStatus(\n  receipt: RpcTransactionReceipt | undefined,\n): CallStatus {\n  switch (receipt?.status) {\n    case undefined:\n      return CallStatus.Pending;\n    case '0x1':\n      return CallStatus.Confirmed;\n    case '0x0':\n      return CallStatus.Reverted;\n  }\n}\n","import {\n  type Address,\n  assertCurrentChain,\n  type Chain,\n  createPublicClient,\n  createWalletClient,\n  custom,\n  type CustomSource,\n  type EIP1193Provider,\n  type EIP1193RequestFn,\n  type EIP1474Methods,\n  fromHex,\n  type Hex,\n  hexToBigInt,\n  hexToNumber,\n  isHex,\n  toHex,\n  type Transport,\n} from 'viem';\nimport { parseAccount, toAccount } from 'viem/accounts';\n\nimport { createAbstractClient } from './abstractClient.js';\nimport {\n  agwCapabilitiesV2,\n  getReceiptStatus,\n  type SendCallsParams,\n  type WalletCapabilities,\n} from './eip5792.js';\nimport { type CustomPaymasterHandler, validChains } from './exports/index.js';\nimport { getSmartAccountAddressFromInitialSigner } from './utils.js';\n\ninterface TransformEIP1193ProviderOptions {\n  provider: EIP1193Provider;\n  chain: Chain;\n  transport?: Transport;\n  isPrivyCrossApp?: boolean;\n  customPaymasterHandler?: CustomPaymasterHandler;\n}\n\nasync function getAgwAddressFromInitialSigner(\n  chain: Chain,\n  transport: Transport,\n  signer: Address,\n) {\n  const publicClient = createPublicClient({\n    chain,\n    transport,\n  });\n\n  return await getSmartAccountAddressFromInitialSigner(signer, publicClient);\n}\n\nasync function getAgwSigner(\n  provider: EIP1193Provider,\n  method: 'eth_requestAccounts' | 'eth_accounts' = 'eth_accounts',\n): Promise<Address | undefined> {\n  const accounts = await provider.request({ method });\n  return accounts?.[0];\n}\n\nasync function getAgwClient(\n  account: Address,\n  chain: Chain,\n  transport: Transport,\n  isPrivyCrossApp: boolean,\n  overrideTransport: Transport | undefined,\n  customPaymasterHandler: CustomPaymasterHandler | undefined,\n) {\n  const wallet = createWalletClient({\n    account,\n    transport,\n  });\n\n  const signer = toAccount({\n    address: account,\n    signMessage: wallet.signMessage,\n    signTransaction: wallet.signTransaction as CustomSource['signTransaction'],\n    signTypedData: wallet.signTypedData as CustomSource['signTypedData'],\n  });\n\n  const abstractClient = await createAbstractClient({\n    chain,\n    signer,\n    transport,\n    isPrivyCrossApp,\n    publicTransport: overrideTransport,\n    customPaymasterHandler,\n  });\n\n  return abstractClient;\n}\n\nexport function transformEIP1193Provider(\n  options: TransformEIP1193ProviderOptions,\n): EIP1193Provider {\n  const {\n    provider,\n    chain,\n    transport: overrideTransport,\n    isPrivyCrossApp = false,\n    customPaymasterHandler,\n  } = options;\n\n  const transport = custom(provider);\n\n  const handler: EIP1193RequestFn<EIP1474Methods> = async (e: any) => {\n    const { method, params } = e;\n\n    switch (method) {\n      case 'eth_requestAccounts': {\n        const signer = await getAgwSigner(provider, method);\n        if (!signer) {\n          return [];\n        }\n\n        const smartAccount = await getAgwAddressFromInitialSigner(\n          chain,\n          transport,\n          signer,\n        );\n\n        return [smartAccount, signer];\n      }\n      case 'eth_accounts': {\n        const signer = await getAgwSigner(provider);\n        if (!signer) {\n          return [];\n        }\n\n        const smartAccount = await getAgwAddressFromInitialSigner(\n          chain,\n          transport,\n          signer,\n        );\n\n        return [smartAccount, signer];\n      }\n      case 'eth_signTypedData_v4': {\n        const account = await getAgwSigner(provider);\n        if (!account) {\n          throw new Error('Account not found');\n        }\n        if (params[0] === account) {\n          return provider.request(e);\n        }\n\n        const abstractClient = await getAgwClient(\n          account,\n          chain,\n          transport,\n          isPrivyCrossApp,\n          overrideTransport,\n          customPaymasterHandler,\n        );\n\n        return abstractClient.signTypedData(JSON.parse(params[1]));\n      }\n      case 'personal_sign': {\n        const account = await getAgwSigner(provider);\n        if (!account) {\n          throw new Error('Account not found');\n        }\n        if (params[1] === account) {\n          return provider.request(e);\n        }\n\n        const abstractClient = await getAgwClient(\n          account,\n          chain,\n          transport,\n          isPrivyCrossApp,\n          overrideTransport,\n          customPaymasterHandler,\n        );\n\n        return await abstractClient.signMessage({\n          message: {\n            raw: params[0],\n          },\n        });\n      }\n      case 'eth_signTransaction':\n      case 'eth_sendTransaction': {\n        const account = await getAgwSigner(provider);\n        if (!account) {\n          throw new Error('Account not found');\n        }\n        const transaction = params[0];\n\n        if (transaction.from === account) {\n          return await provider.request(e);\n        }\n\n        const abstractClient = await getAgwClient(\n          account,\n          chain,\n          transport,\n          isPrivyCrossApp,\n          overrideTransport,\n          customPaymasterHandler,\n        );\n\n        // Undo the automatic formatting applied by Wagmi's eth_signTransaction\n        // Formatter: https://github.com/wevm/viem/blob/main/src/zksync/formatters.ts#L114\n        if (transaction.eip712Meta && transaction.eip712Meta.paymasterParams) {\n          transaction.paymaster =\n            transaction.eip712Meta.paymasterParams.paymaster;\n          transaction.paymasterInput = toHex(\n            transaction.eip712Meta.paymasterParams.paymasterInput,\n          );\n        }\n\n        if (method === 'eth_signTransaction') {\n          return (await abstractClient.signTransaction(transaction)) as any;\n        } else if (method === 'eth_sendTransaction') {\n          return await abstractClient.sendTransaction(transaction);\n        }\n        throw new Error('Should not have reached this point');\n      }\n      case 'wallet_sendCalls': {\n        const account = await getAgwSigner(provider);\n        if (!account) {\n          throw new Error('Account not found');\n        }\n        const sendCallsParams = params[0] as SendCallsParams;\n\n        if (sendCallsParams.from === account) {\n          return await provider.request(e);\n        }\n\n        if (\n          sendCallsParams.version === '1.0' ||\n          sendCallsParams.version === undefined\n        ) {\n          sendCallsParams.calls.forEach((call) => {\n            if (call.chainId) {\n              assertCurrentChain({\n                chain,\n                currentChainId: fromHex(call.chainId, 'number'),\n              });\n            }\n          });\n        }\n        if (sendCallsParams.version === '2.0.0') {\n          if (fromHex(sendCallsParams.chainId, 'number') !== chain.id) {\n            return {\n              code: 5710,\n              message: 'Chain not supported',\n            };\n          }\n        }\n\n        const abstractClient = await getAgwClient(\n          account,\n          chain,\n          transport,\n          isPrivyCrossApp,\n          overrideTransport,\n          customPaymasterHandler,\n        );\n\n        if (\n          sendCallsParams.from !== parseAccount(abstractClient.account).address\n        ) {\n          return {\n            code: 4001,\n            message: 'Unauthorized',\n          };\n        }\n\n        const txHash = await abstractClient.sendTransactionBatch({\n          calls: sendCallsParams.calls.map((call) => ({\n            to: call.to,\n            value: call.value ? hexToBigInt(call.value) : undefined,\n            data: call.data,\n          })),\n        });\n\n        if (\n          sendCallsParams.version === undefined ||\n          sendCallsParams.version === '1.0'\n        ) {\n          return txHash;\n        }\n\n        return {\n          id: txHash,\n        };\n      }\n      case 'wallet_getCallsStatus': {\n        const receipt = await provider.request({\n          method: 'eth_getTransactionReceipt',\n          params,\n        });\n        return {\n          version: '2.0.0',\n          id: params[0],\n          chainId: toHex(chain.id),\n          status: getReceiptStatus(receipt ?? undefined),\n          atomic: true, // AGW will always process multiple calls as an atomic batch\n          receipts: receipt != null ? [receipt] : undefined,\n        };\n      }\n      case 'wallet_addEthereumChain':\n      case 'wallet_switchEthereumChain': {\n        const request = params[0];\n        const chainIdHex = request.chainId;\n        if (!chainIdHex) {\n          throw new Error('Chain ID is required');\n        }\n        // chainId is hex most likely, convert to number\n        const chainId = isHex(chainIdHex)\n          ? hexToNumber(chainIdHex)\n          : chainIdHex;\n        const chain = Object.values(validChains).find((c) => c.id === chainId);\n        if (!chain) {\n          throw new Error(`Chain ${chainId} not supported`);\n        }\n        return await provider.request(e);\n      }\n      case 'wallet_showCallsStatus': {\n        // not implemented\n        return undefined;\n      }\n      case 'wallet_getCapabilities': {\n        const account = await getAgwSigner(provider);\n        if (!account) {\n          throw new Error('Account not found');\n        }\n        if (params[0] === account) {\n          return await provider.request(e);\n        }\n        const chainIds = params[1] as Hex[] | undefined;\n\n        const capabilities = agwCapabilitiesV2;\n        if (chainIds) {\n          const filteredCapabilities: WalletCapabilities = {};\n          for (const chainId of chainIds) {\n            if (capabilities[chainId]) {\n              filteredCapabilities[chainId] = capabilities[chainId];\n            }\n          }\n          return filteredCapabilities;\n        } else {\n          return capabilities;\n        }\n      }\n      default: {\n        return await provider.request(e);\n      }\n    }\n  };\n\n  return {\n    ...provider,\n    on: provider.on,\n    removeListener: provider.removeListener,\n    request: handler,\n  };\n}\n","function _checkPrivateRedeclaration(e, t) {\n  if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n}\nexport { _checkPrivateRedeclaration as default };","import checkPrivateRedeclaration from \"./checkPrivateRedeclaration.js\";\nfunction _classPrivateFieldInitSpec(e, t, a) {\n  checkPrivateRedeclaration(e, t), t.set(e, a);\n}\nexport { _classPrivateFieldInitSpec as default };","function _assertClassBrand(e, t, n) {\n  if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n;\n  throw new TypeError(\"Private element is not present on this object\");\n}\nexport { _assertClassBrand as default };","import assertClassBrand from \"./assertClassBrand.js\";\nfunction _classPrivateFieldGet2(s, a) {\n  return s.get(assertClassBrand(s, a));\n}\nexport { _classPrivateFieldGet2 as default };","import assertClassBrand from \"./assertClassBrand.js\";\nfunction _classPrivateFieldSet2(s, a, r) {\n  return s.set(assertClassBrand(s, a), r), r;\n}\nexport { _classPrivateFieldSet2 as default };","/**\n * {@link TimeoutManager} does not support passing arguments to the callback.\n *\n * `(_: void)` is the argument type inferred by TypeScript's default typings for\n * `setTimeout(cb, number)`.\n * If we don't accept a single void argument, then\n * `new Promise(resolve => timeoutManager.setTimeout(resolve, N))` is a type error.\n */\nexport type TimeoutCallback = (_: void) => void\n\n/**\n * Wrapping `setTimeout` is awkward from a typing perspective because platform\n * typings may extend the return type of `setTimeout`. For example, NodeJS\n * typings add `NodeJS.Timeout`; but a non-default `timeoutManager` may not be\n * able to return such a type.\n */\nexport type ManagedTimerId = number | { [Symbol.toPrimitive]: () => number }\n\n/**\n * Backend for timer functions.\n */\nexport type TimeoutProvider<TTimerId extends ManagedTimerId = ManagedTimerId> =\n  {\n    readonly setTimeout: (callback: TimeoutCallback, delay: number) => TTimerId\n    readonly clearTimeout: (timeoutId: TTimerId | undefined) => void\n\n    readonly setInterval: (callback: TimeoutCallback, delay: number) => TTimerId\n    readonly clearInterval: (intervalId: TTimerId | undefined) => void\n  }\n\nexport const defaultTimeoutProvider: TimeoutProvider<\n  ReturnType<typeof setTimeout>\n> = {\n  // We need the wrapper function syntax below instead of direct references to\n  // global setTimeout etc.\n  //\n  // BAD: `setTimeout: setTimeout`\n  // GOOD: `setTimeout: (cb, delay) => setTimeout(cb, delay)`\n  //\n  // If we use direct references here, then anything that wants to spy on or\n  // replace the global setTimeout (like tests) won't work since we'll already\n  // have a hard reference to the original implementation at the time when this\n  // file was imported.\n  setTimeout: (callback, delay) => setTimeout(callback, delay),\n  clearTimeout: (timeoutId) => clearTimeout(timeoutId),\n\n  setInterval: (callback, delay) => setInterval(callback, delay),\n  clearInterval: (intervalId) => clearInterval(intervalId),\n}\n\n/**\n * Allows customization of how timeouts are created.\n *\n * @tanstack/query-core makes liberal use of timeouts to implement `staleTime`\n * and `gcTime`. The default TimeoutManager provider uses the platform's global\n * `setTimeout` implementation, which is known to have scalability issues with\n * thousands of timeouts on the event loop.\n *\n * If you hit this limitation, consider providing a custom TimeoutProvider that\n * coalesces timeouts.\n */\nexport class TimeoutManager implements Omit<TimeoutProvider, 'name'> {\n  // We cannot have TimeoutManager<T> as we must instantiate it with a concrete\n  // type at app boot; and if we leave that type, then any new timer provider\n  // would need to support ReturnType<typeof setTimeout>, which is infeasible.\n  //\n  // We settle for type safety for the TimeoutProvider type, and accept that\n  // this class is unsafe internally to allow for extension.\n  #provider: TimeoutProvider<any> = defaultTimeoutProvider\n  #providerCalled = false\n\n  setTimeoutProvider<TTimerId extends ManagedTimerId>(\n    provider: TimeoutProvider<TTimerId>,\n  ): void {\n    if (process.env.NODE_ENV !== 'production') {\n      if (this.#providerCalled && provider !== this.#provider) {\n        // After changing providers, `clearTimeout` will not work as expected for\n        // timeouts from the previous provider.\n        //\n        // Since they may allocate the same timeout ID, clearTimeout may cancel an\n        // arbitrary different timeout, or unexpected no-op.\n        //\n        // We could protect against this by mixing the timeout ID bits\n        // deterministically with some per-provider bits.\n        //\n        // We could internally queue `setTimeout` calls to `TimeoutManager` until\n        // some API call to set the initial provider.\n        console.error(\n          `[timeoutManager]: Switching provider after calls to previous provider might result in unexpected behavior.`,\n          { previous: this.#provider, provider },\n        )\n      }\n    }\n\n    this.#provider = provider\n    if (process.env.NODE_ENV !== 'production') {\n      this.#providerCalled = false\n    }\n  }\n\n  setTimeout(callback: TimeoutCallback, delay: number): ManagedTimerId {\n    if (process.env.NODE_ENV !== 'production') {\n      this.#providerCalled = true\n    }\n    return this.#provider.setTimeout(callback, delay)\n  }\n\n  clearTimeout(timeoutId: ManagedTimerId | undefined): void {\n    this.#provider.clearTimeout(timeoutId)\n  }\n\n  setInterval(callback: TimeoutCallback, delay: number): ManagedTimerId {\n    if (process.env.NODE_ENV !== 'production') {\n      this.#providerCalled = true\n    }\n    return this.#provider.setInterval(callback, delay)\n  }\n\n  clearInterval(intervalId: ManagedTimerId | undefined): void {\n    this.#provider.clearInterval(intervalId)\n  }\n}\n\nexport const timeoutManager = new TimeoutManager()\n\n/**\n * In many cases code wants to delay to the next event loop tick; this is not\n * mediated by {@link timeoutManager}.\n *\n * This function is provided to make auditing the `tanstack/query-core` for\n * incorrect use of system `setTimeout` easier.\n */\nexport function systemSetTimeoutZero(callback: TimeoutCallback): void {\n  setTimeout(callback, 0)\n}\n","import { timeoutManager } from './timeoutManager'\nimport type {\n  DefaultError,\n  Enabled,\n  FetchStatus,\n  MutationKey,\n  MutationStatus,\n  QueryFunction,\n  QueryKey,\n  QueryOptions,\n  StaleTime,\n  StaleTimeFunction,\n} from './types'\nimport type { Mutation } from './mutation'\nimport type { FetchOptions, Query } from './query'\n\n// TYPES\n\nexport interface QueryFilters<TQueryKey extends QueryKey = QueryKey> {\n  /**\n   * Filter to active queries, inactive queries or all queries\n   */\n  type?: QueryTypeFilter\n  /**\n   * Match query key exactly\n   */\n  exact?: boolean\n  /**\n   * Include queries matching this predicate function\n   */\n  predicate?: (query: Query) => boolean\n  /**\n   * Include queries matching this query key\n   */\n  queryKey?: TQueryKey\n  /**\n   * Include or exclude stale queries\n   */\n  stale?: boolean\n  /**\n   * Include queries matching their fetchStatus\n   */\n  fetchStatus?: FetchStatus\n}\n\nexport interface MutationFilters<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = unknown,\n  TContext = unknown,\n> {\n  /**\n   * Match mutation key exactly\n   */\n  exact?: boolean\n  /**\n   * Include mutations matching this predicate function\n   */\n  predicate?: (\n    mutation: Mutation<TData, TError, TVariables, TContext>,\n  ) => boolean\n  /**\n   * Include mutations matching this mutation key\n   */\n  mutationKey?: MutationKey\n  /**\n   * Filter by mutation status\n   */\n  status?: MutationStatus\n}\n\nexport type Updater<TInput, TOutput> = TOutput | ((input: TInput) => TOutput)\n\nexport type QueryTypeFilter = 'all' | 'active' | 'inactive'\n\n// UTILS\n\nexport const isServer = typeof window === 'undefined' || 'Deno' in globalThis\n\nexport function noop(): void\nexport function noop(): undefined\nexport function noop() {}\n\nexport function functionalUpdate<TInput, TOutput>(\n  updater: Updater<TInput, TOutput>,\n  input: TInput,\n): TOutput {\n  return typeof updater === 'function'\n    ? (updater as (_: TInput) => TOutput)(input)\n    : updater\n}\n\nexport function isValidTimeout(value: unknown): value is number {\n  return typeof value === 'number' && value >= 0 && value !== Infinity\n}\n\nexport function timeUntilStale(updatedAt: number, staleTime?: number): number {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0)\n}\n\nexport function resolveStaleTime<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  staleTime:\n    | undefined\n    | StaleTimeFunction<TQueryFnData, TError, TData, TQueryKey>,\n  query: Query<TQueryFnData, TError, TData, TQueryKey>,\n): StaleTime | undefined {\n  return typeof staleTime === 'function' ? staleTime(query) : staleTime\n}\n\nexport function resolveEnabled<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  enabled: undefined | Enabled<TQueryFnData, TError, TData, TQueryKey>,\n  query: Query<TQueryFnData, TError, TData, TQueryKey>,\n): boolean | undefined {\n  return typeof enabled === 'function' ? enabled(query) : enabled\n}\n\nexport function matchQuery(\n  filters: QueryFilters,\n  query: Query<any, any, any, any>,\n): boolean {\n  const {\n    type = 'all',\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale,\n  } = filters\n\n  if (queryKey) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false\n    }\n  }\n\n  if (type !== 'all') {\n    const isActive = query.isActive()\n    if (type === 'active' && !isActive) {\n      return false\n    }\n    if (type === 'inactive' && isActive) {\n      return false\n    }\n  }\n\n  if (typeof stale === 'boolean' && query.isStale() !== stale) {\n    return false\n  }\n\n  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n    return false\n  }\n\n  if (predicate && !predicate(query)) {\n    return false\n  }\n\n  return true\n}\n\nexport function matchMutation(\n  filters: MutationFilters,\n  mutation: Mutation<any, any>,\n): boolean {\n  const { exact, status, predicate, mutationKey } = filters\n  if (mutationKey) {\n    if (!mutation.options.mutationKey) {\n      return false\n    }\n    if (exact) {\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n        return false\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false\n    }\n  }\n\n  if (status && mutation.state.status !== status) {\n    return false\n  }\n\n  if (predicate && !predicate(mutation)) {\n    return false\n  }\n\n  return true\n}\n\nexport function hashQueryKeyByOptions<TQueryKey extends QueryKey = QueryKey>(\n  queryKey: TQueryKey,\n  options?: Pick<QueryOptions<any, any, any, any>, 'queryKeyHashFn'>,\n): string {\n  const hashFn = options?.queryKeyHashFn || hashKey\n  return hashFn(queryKey)\n}\n\n/**\n * Default query & mutation keys hash function.\n * Hashes the value into a stable hash.\n */\nexport function hashKey(queryKey: QueryKey | MutationKey): string {\n  return JSON.stringify(queryKey, (_, val) =>\n    isPlainObject(val)\n      ? Object.keys(val)\n          .sort()\n          .reduce((result, key) => {\n            result[key] = val[key]\n            return result\n          }, {} as any)\n      : val,\n  )\n}\n\n/**\n * Checks if key `b` partially matches with key `a`.\n */\nexport function partialMatchKey(a: QueryKey, b: QueryKey): boolean\nexport function partialMatchKey(a: any, b: any): boolean {\n  if (a === b) {\n    return true\n  }\n\n  if (typeof a !== typeof b) {\n    return false\n  }\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    return Object.keys(b).every((key) => partialMatchKey(a[key], b[key]))\n  }\n\n  return false\n}\n\nconst hasOwn = Object.prototype.hasOwnProperty\n\n/**\n * This function returns `a` if `b` is deeply equal.\n * If not, it will replace any deeply equal children of `b` with those of `a`.\n * This can be used for structural sharing between JSON values for example.\n */\nexport function replaceEqualDeep<T>(a: unknown, b: T): T\nexport function replaceEqualDeep(a: any, b: any): any {\n  if (a === b) {\n    return a\n  }\n\n  const array = isPlainArray(a) && isPlainArray(b)\n\n  if (!array && !(isPlainObject(a) && isPlainObject(b))) return b\n\n  const aItems = array ? a : Object.keys(a)\n  const aSize = aItems.length\n  const bItems = array ? b : Object.keys(b)\n  const bSize = bItems.length\n  const copy: any = array ? new Array(bSize) : {}\n\n  let equalItems = 0\n\n  for (let i = 0; i < bSize; i++) {\n    const key: any = array ? i : bItems[i]\n    const aItem = a[key]\n    const bItem = b[key]\n\n    if (aItem === bItem) {\n      copy[key] = aItem\n      if (array ? i < aSize : hasOwn.call(a, key)) equalItems++\n      continue\n    }\n\n    if (\n      aItem === null ||\n      bItem === null ||\n      typeof aItem !== 'object' ||\n      typeof bItem !== 'object'\n    ) {\n      copy[key] = bItem\n      continue\n    }\n\n    const v = replaceEqualDeep(aItem, bItem)\n    copy[key] = v\n    if (v === aItem) equalItems++\n  }\n\n  return aSize === bSize && equalItems === aSize ? a : copy\n}\n\n/**\n * Shallow compare objects.\n */\nexport function shallowEqualObjects<T extends Record<string, any>>(\n  a: T,\n  b: T | undefined,\n): boolean {\n  if (!b || Object.keys(a).length !== Object.keys(b).length) {\n    return false\n  }\n\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false\n    }\n  }\n\n  return true\n}\n\nexport function isPlainArray(value: unknown): value is Array<unknown> {\n  return Array.isArray(value) && value.length === Object.keys(value).length\n}\n\n// Copied from: https://github.com/jonschlinkert/is-plain-object\nexport function isPlainObject(o: any): o is Record<PropertyKey, unknown> {\n  if (!hasObjectPrototype(o)) {\n    return false\n  }\n\n  // If has no constructor\n  const ctor = o.constructor\n  if (ctor === undefined) {\n    return true\n  }\n\n  // If has modified prototype\n  const prot = ctor.prototype\n  if (!hasObjectPrototype(prot)) {\n    return false\n  }\n\n  // If constructor does not have an Object-specific method\n  if (!prot.hasOwnProperty('isPrototypeOf')) {\n    return false\n  }\n\n  // Handles Objects created by Object.create(<arbitrary prototype>)\n  if (Object.getPrototypeOf(o) !== Object.prototype) {\n    return false\n  }\n\n  // Most likely a plain Object\n  return true\n}\n\nfunction hasObjectPrototype(o: any): boolean {\n  return Object.prototype.toString.call(o) === '[object Object]'\n}\n\nexport function sleep(timeout: number): Promise<void> {\n  return new Promise((resolve) => {\n    timeoutManager.setTimeout(resolve, timeout)\n  })\n}\n\nexport function replaceData<\n  TData,\n  TOptions extends QueryOptions<any, any, any, any>,\n>(prevData: TData | undefined, data: TData, options: TOptions): TData {\n  if (typeof options.structuralSharing === 'function') {\n    return options.structuralSharing(prevData, data) as TData\n  } else if (options.structuralSharing !== false) {\n    if (process.env.NODE_ENV !== 'production') {\n      try {\n        return replaceEqualDeep(prevData, data)\n      } catch (error) {\n        console.error(\n          `Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${options.queryHash}]: ${error}`,\n        )\n\n        // Prevent the replaceEqualDeep from being called again down below.\n        throw error\n      }\n    }\n    // Structurally share data between prev and new data if needed\n    return replaceEqualDeep(prevData, data)\n  }\n  return data\n}\n\nexport function keepPreviousData<T>(\n  previousData: T | undefined,\n): T | undefined {\n  return previousData\n}\n\nexport function addToEnd<T>(items: Array<T>, item: T, max = 0): Array<T> {\n  const newItems = [...items, item]\n  return max && newItems.length > max ? newItems.slice(1) : newItems\n}\n\nexport function addToStart<T>(items: Array<T>, item: T, max = 0): Array<T> {\n  const newItems = [item, ...items]\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems\n}\n\nexport const skipToken = Symbol()\nexport type SkipToken = typeof skipToken\n\nexport function ensureQueryFn<\n  TQueryFnData = unknown,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: {\n    queryFn?: QueryFunction<TQueryFnData, TQueryKey> | SkipToken\n    queryHash?: string\n  },\n  fetchOptions?: FetchOptions<TQueryFnData>,\n): QueryFunction<TQueryFnData, TQueryKey> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (options.queryFn === skipToken) {\n      console.error(\n        `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`,\n      )\n    }\n  }\n\n  // if we attempt to retry a fetch that was triggered from an initialPromise\n  // when we don't have a queryFn yet, we can't retry, so we just return the already rejected initialPromise\n  // if an observer has already mounted, we will be able to retry with that queryFn\n  if (!options.queryFn && fetchOptions?.initialPromise) {\n    return () => fetchOptions.initialPromise!\n  }\n\n  if (!options.queryFn || options.queryFn === skipToken) {\n    return () =>\n      Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`))\n  }\n\n  return options.queryFn\n}\n\nexport function shouldThrowError<T extends (...args: Array<any>) => boolean>(\n  throwOnError: boolean | T | undefined,\n  params: Parameters<T>,\n): boolean {\n  // Allow throwOnError function to override throwing behavior on a per-error basis\n  if (typeof throwOnError === 'function') {\n    return throwOnError(...params)\n  }\n\n  return !!throwOnError\n}\n","import checkPrivateRedeclaration from \"./checkPrivateRedeclaration.js\";\nfunction _classPrivateMethodInitSpec(e, a) {\n  checkPrivateRedeclaration(e, a), a.add(e);\n}\nexport { _classPrivateMethodInitSpec as default };","// TYPES\n\nimport { systemSetTimeoutZero } from './timeoutManager'\n\ntype NotifyCallback = () => void\n\ntype NotifyFunction = (callback: () => void) => void\n\ntype BatchNotifyFunction = (callback: () => void) => void\n\ntype BatchCallsCallback<T extends Array<unknown>> = (...args: T) => void\n\ntype ScheduleFunction = (callback: () => void) => void\n\nexport const defaultScheduler: ScheduleFunction = systemSetTimeoutZero\n\nexport function createNotifyManager() {\n  let queue: Array<NotifyCallback> = []\n  let transactions = 0\n  let notifyFn: NotifyFunction = (callback) => {\n    callback()\n  }\n  let batchNotifyFn: BatchNotifyFunction = (callback: () => void) => {\n    callback()\n  }\n  let scheduleFn = defaultScheduler\n\n  const schedule = (callback: NotifyCallback): void => {\n    if (transactions) {\n      queue.push(callback)\n    } else {\n      scheduleFn(() => {\n        notifyFn(callback)\n      })\n    }\n  }\n  const flush = (): void => {\n    const originalQueue = queue\n    queue = []\n    if (originalQueue.length) {\n      scheduleFn(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback)\n          })\n        })\n      })\n    }\n  }\n\n  return {\n    batch: <T>(callback: () => T): T => {\n      let result\n      transactions++\n      try {\n        result = callback()\n      } finally {\n        transactions--\n        if (!transactions) {\n          flush()\n        }\n      }\n      return result\n    },\n    /**\n     * All calls to the wrapped function will be batched.\n     */\n    batchCalls: <T extends Array<unknown>>(\n      callback: BatchCallsCallback<T>,\n    ): BatchCallsCallback<T> => {\n      return (...args) => {\n        schedule(() => {\n          callback(...args)\n        })\n      }\n    },\n    schedule,\n    /**\n     * Use this method to set a custom notify function.\n     * This can be used to for example wrap notifications with `React.act` while running tests.\n     */\n    setNotifyFunction: (fn: NotifyFunction) => {\n      notifyFn = fn\n    },\n    /**\n     * Use this method to set a custom function to batch notifications together into a single tick.\n     * By default React Query will use the batch function provided by ReactDOM or React Native.\n     */\n    setBatchNotifyFunction: (fn: BatchNotifyFunction) => {\n      batchNotifyFn = fn\n    },\n    setScheduler: (fn: ScheduleFunction) => {\n      scheduleFn = fn\n    },\n  } as const\n}\n\n// SINGLETON\nexport const notifyManager = createNotifyManager()\n","export class Subscribable<TListener extends Function> {\n  protected listeners = new Set<TListener>()\n\n  constructor() {\n    this.subscribe = this.subscribe.bind(this)\n  }\n\n  subscribe(listener: TListener): () => void {\n    this.listeners.add(listener)\n\n    this.onSubscribe()\n\n    return () => {\n      this.listeners.delete(listener)\n      this.onUnsubscribe()\n    }\n  }\n\n  hasListeners(): boolean {\n    return this.listeners.size > 0\n  }\n\n  protected onSubscribe(): void {\n    // Do nothing\n  }\n\n  protected onUnsubscribe(): void {\n    // Do nothing\n  }\n}\n","import { Subscribable } from './subscribable'\nimport { isServer } from './utils'\n\ntype Listener = (focused: boolean) => void\n\ntype SetupFn = (\n  setFocused: (focused?: boolean) => void,\n) => (() => void) | undefined\n\nexport class FocusManager extends Subscribable<Listener> {\n  #focused?: boolean\n  #cleanup?: () => void\n\n  #setup: SetupFn\n\n  constructor() {\n    super()\n    this.#setup = (onFocus) => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus()\n        // Listen to visibilitychange\n        window.addEventListener('visibilitychange', listener, false)\n\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('visibilitychange', listener)\n        }\n      }\n      return\n    }\n  }\n\n  protected onSubscribe(): void {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup)\n    }\n  }\n\n  protected onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.()\n      this.#cleanup = undefined\n    }\n  }\n\n  setEventListener(setup: SetupFn): void {\n    this.#setup = setup\n    this.#cleanup?.()\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === 'boolean') {\n        this.setFocused(focused)\n      } else {\n        this.onFocus()\n      }\n    })\n  }\n\n  setFocused(focused?: boolean): void {\n    const changed = this.#focused !== focused\n    if (changed) {\n      this.#focused = focused\n      this.onFocus()\n    }\n  }\n\n  onFocus(): void {\n    const isFocused = this.isFocused()\n    this.listeners.forEach((listener) => {\n      listener(isFocused)\n    })\n  }\n\n  isFocused(): boolean {\n    if (typeof this.#focused === 'boolean') {\n      return this.#focused\n    }\n\n    // document global can be unavailable in react native\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    return globalThis.document?.visibilityState !== 'hidden'\n  }\n}\n\nexport const focusManager = new FocusManager()\n","import { Subscribable } from './subscribable'\nimport { isServer } from './utils'\n\ntype Listener = (online: boolean) => void\ntype SetupFn = (setOnline: Listener) => (() => void) | undefined\n\nexport class OnlineManager extends Subscribable<Listener> {\n  #online = true\n  #cleanup?: () => void\n\n  #setup: SetupFn\n\n  constructor() {\n    super()\n    this.#setup = (onOnline) => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true)\n        const offlineListener = () => onOnline(false)\n        // Listen to online\n        window.addEventListener('online', onlineListener, false)\n        window.addEventListener('offline', offlineListener, false)\n\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('online', onlineListener)\n          window.removeEventListener('offline', offlineListener)\n        }\n      }\n\n      return\n    }\n  }\n\n  protected onSubscribe(): void {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup)\n    }\n  }\n\n  protected onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.()\n      this.#cleanup = undefined\n    }\n  }\n\n  setEventListener(setup: SetupFn): void {\n    this.#setup = setup\n    this.#cleanup?.()\n    this.#cleanup = setup(this.setOnline.bind(this))\n  }\n\n  setOnline(online: boolean): void {\n    const changed = this.#online !== online\n\n    if (changed) {\n      this.#online = online\n      this.listeners.forEach((listener) => {\n        listener(online)\n      })\n    }\n  }\n\n  isOnline(): boolean {\n    return this.#online\n  }\n}\n\nexport const onlineManager = new OnlineManager()\n","/**\n * Thenable types which matches React's types for promises\n *\n * React seemingly uses `.status`, `.value` and `.reason` properties on a promises to optimistically unwrap data from promises\n *\n * @see https://github.com/facebook/react/blob/main/packages/shared/ReactTypes.js#L112-L138\n * @see https://github.com/facebook/react/blob/4f604941569d2e8947ce1460a0b2997e835f37b9/packages/react-debug-tools/src/ReactDebugHooks.js#L224-L227\n */\n\nimport { noop } from './utils'\n\ninterface Fulfilled<T> {\n  status: 'fulfilled'\n  value: T\n}\ninterface Rejected {\n  status: 'rejected'\n  reason: unknown\n}\ninterface Pending<T> {\n  status: 'pending'\n\n  /**\n   * Resolve the promise with a value.\n   * Will remove the `resolve` and `reject` properties from the promise.\n   */\n  resolve: (value: T) => void\n  /**\n   * Reject the promise with a reason.\n   * Will remove the `resolve` and `reject` properties from the promise.\n   */\n  reject: (reason: unknown) => void\n}\n\nexport type FulfilledThenable<T> = Promise<T> & Fulfilled<T>\nexport type RejectedThenable<T> = Promise<T> & Rejected\nexport type PendingThenable<T> = Promise<T> & Pending<T>\n\nexport type Thenable<T> =\n  | FulfilledThenable<T>\n  | RejectedThenable<T>\n  | PendingThenable<T>\n\nexport function pendingThenable<T>(): PendingThenable<T> {\n  let resolve: Pending<T>['resolve']\n  let reject: Pending<T>['reject']\n  // this could use `Promise.withResolvers()` in the future\n  const thenable = new Promise((_resolve, _reject) => {\n    resolve = _resolve\n    reject = _reject\n  }) as PendingThenable<T>\n\n  thenable.status = 'pending'\n  thenable.catch(() => {\n    // prevent unhandled rejection errors\n  })\n\n  function finalize(data: Fulfilled<T> | Rejected) {\n    Object.assign(thenable, data)\n\n    // clear pending props props to avoid calling them twice\n    delete (thenable as Partial<PendingThenable<T>>).resolve\n    delete (thenable as Partial<PendingThenable<T>>).reject\n  }\n\n  thenable.resolve = (value) => {\n    finalize({\n      status: 'fulfilled',\n      value,\n    })\n\n    resolve(value)\n  }\n  thenable.reject = (reason) => {\n    finalize({\n      status: 'rejected',\n      reason,\n    })\n\n    reject(reason)\n  }\n\n  return thenable\n}\n\n/**\n * This function takes a Promise-like input and detects whether the data\n * is synchronously available or not.\n *\n * It does not inspect .status, .value or .reason properties of the promise,\n * as those are not always available, and the .status of React's promises\n * should not be considered part of the public API.\n */\nexport function tryResolveSync(promise: Promise<unknown> | Thenable<unknown>) {\n  let data: unknown\n\n  promise\n    .then((result) => {\n      data = result\n      return result\n    }, noop)\n    // .catch can be unavailable on certain kinds of thenable's\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    ?.catch(noop)\n\n  if (data !== undefined) {\n    return { data }\n  }\n\n  return undefined\n}\n","import { focusManager } from './focusManager'\nimport { onlineManager } from './onlineManager'\nimport { pendingThenable } from './thenable'\nimport { isServer, sleep } from './utils'\nimport type { Thenable } from './thenable'\nimport type { CancelOptions, DefaultError, NetworkMode } from './types'\n\n// TYPES\n\ninterface RetryerConfig<TData = unknown, TError = DefaultError> {\n  fn: () => TData | Promise<TData>\n  initialPromise?: Promise<TData>\n  onCancel?: (error: TError) => void\n  onFail?: (failureCount: number, error: TError) => void\n  onPause?: () => void\n  onContinue?: () => void\n  retry?: RetryValue<TError>\n  retryDelay?: RetryDelayValue<TError>\n  networkMode: NetworkMode | undefined\n  canRun: () => boolean\n}\n\nexport interface Retryer<TData = unknown> {\n  promise: Promise<TData>\n  cancel: (cancelOptions?: CancelOptions) => void\n  continue: () => Promise<unknown>\n  cancelRetry: () => void\n  continueRetry: () => void\n  canStart: () => boolean\n  start: () => Promise<TData>\n  status: () => 'pending' | 'resolved' | 'rejected'\n}\n\nexport type RetryValue<TError> = boolean | number | ShouldRetryFunction<TError>\n\ntype ShouldRetryFunction<TError = DefaultError> = (\n  failureCount: number,\n  error: TError,\n) => boolean\n\nexport type RetryDelayValue<TError> = number | RetryDelayFunction<TError>\n\ntype RetryDelayFunction<TError = DefaultError> = (\n  failureCount: number,\n  error: TError,\n) => number\n\nfunction defaultRetryDelay(failureCount: number) {\n  return Math.min(1000 * 2 ** failureCount, 30000)\n}\n\nexport function canFetch(networkMode: NetworkMode | undefined): boolean {\n  return (networkMode ?? 'online') === 'online'\n    ? onlineManager.isOnline()\n    : true\n}\n\nexport class CancelledError extends Error {\n  revert?: boolean\n  silent?: boolean\n  constructor(options?: CancelOptions) {\n    super('CancelledError')\n    this.revert = options?.revert\n    this.silent = options?.silent\n  }\n}\n\n/**\n * @deprecated Use instanceof `CancelledError` instead.\n */\nexport function isCancelledError(value: any): value is CancelledError {\n  return value instanceof CancelledError\n}\n\nexport function createRetryer<TData = unknown, TError = DefaultError>(\n  config: RetryerConfig<TData, TError>,\n): Retryer<TData> {\n  let isRetryCancelled = false\n  let failureCount = 0\n  let continueFn: ((value?: unknown) => void) | undefined\n\n  const thenable = pendingThenable<TData>()\n\n  const isResolved = () =>\n    (thenable.status as Thenable<TData>['status']) !== 'pending'\n\n  const cancel = (cancelOptions?: CancelOptions): void => {\n    if (!isResolved()) {\n      const error = new CancelledError(cancelOptions) as TError\n      reject(error)\n\n      config.onCancel?.(error)\n    }\n  }\n  const cancelRetry = () => {\n    isRetryCancelled = true\n  }\n\n  const continueRetry = () => {\n    isRetryCancelled = false\n  }\n\n  const canContinue = () =>\n    focusManager.isFocused() &&\n    (config.networkMode === 'always' || onlineManager.isOnline()) &&\n    config.canRun()\n\n  const canStart = () => canFetch(config.networkMode) && config.canRun()\n\n  const resolve = (value: any) => {\n    if (!isResolved()) {\n      continueFn?.()\n      thenable.resolve(value)\n    }\n  }\n\n  const reject = (value: any) => {\n    if (!isResolved()) {\n      continueFn?.()\n      thenable.reject(value)\n    }\n  }\n\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        if (isResolved() || canContinue()) {\n          continueResolve(value)\n        }\n      }\n      config.onPause?.()\n    }).then(() => {\n      continueFn = undefined\n      if (!isResolved()) {\n        config.onContinue?.()\n      }\n    })\n  }\n\n  // Create loop function\n  const run = () => {\n    // Do nothing if already resolved\n    if (isResolved()) {\n      return\n    }\n\n    let promiseOrValue: any\n\n    // we can re-use config.initialPromise on the first call of run()\n    const initialPromise =\n      failureCount === 0 ? config.initialPromise : undefined\n\n    // Execute query\n    try {\n      promiseOrValue = initialPromise ?? config.fn()\n    } catch (error) {\n      promiseOrValue = Promise.reject(error)\n    }\n\n    Promise.resolve(promiseOrValue)\n      .then(resolve)\n      .catch((error) => {\n        // Stop if the fetch is already resolved\n        if (isResolved()) {\n          return\n        }\n\n        // Do we need to retry the request?\n        const retry = config.retry ?? (isServer ? 0 : 3)\n        const retryDelay = config.retryDelay ?? defaultRetryDelay\n        const delay =\n          typeof retryDelay === 'function'\n            ? retryDelay(failureCount, error)\n            : retryDelay\n        const shouldRetry =\n          retry === true ||\n          (typeof retry === 'number' && failureCount < retry) ||\n          (typeof retry === 'function' && retry(failureCount, error))\n\n        if (isRetryCancelled || !shouldRetry) {\n          // We are done if the query does not need to be retried\n          reject(error)\n          return\n        }\n\n        failureCount++\n\n        // Notify on fail\n        config.onFail?.(failureCount, error)\n\n        // Delay\n        sleep(delay)\n          // Pause if the document is not visible or when the device is offline\n          .then(() => {\n            return canContinue() ? undefined : pause()\n          })\n          .then(() => {\n            if (isRetryCancelled) {\n              reject(error)\n            } else {\n              run()\n            }\n          })\n      })\n  }\n\n  return {\n    promise: thenable,\n    status: () => thenable.status,\n    cancel,\n    continue: () => {\n      continueFn?.()\n      return thenable\n    },\n    cancelRetry,\n    continueRetry,\n    canStart,\n    start: () => {\n      // Start loop\n      if (canStart()) {\n        run()\n      } else {\n        pause().then(run)\n      }\n      return thenable\n    },\n  }\n}\n","import { timeoutManager } from './timeoutManager'\nimport { isServer, isValidTimeout } from './utils'\nimport type { ManagedTimerId } from './timeoutManager'\n\nexport abstract class Removable {\n  gcTime!: number\n  #gcTimeout?: ManagedTimerId\n\n  destroy(): void {\n    this.clearGcTimeout()\n  }\n\n  protected scheduleGc(): void {\n    this.clearGcTimeout()\n\n    if (isValidTimeout(this.gcTime)) {\n      this.#gcTimeout = timeoutManager.setTimeout(() => {\n        this.optionalRemove()\n      }, this.gcTime)\n    }\n  }\n\n  protected updateGcTime(newGcTime: number | undefined): void {\n    // Default to 5 minutes (Infinity for server-side) if no gcTime is set\n    this.gcTime = Math.max(\n      this.gcTime || 0,\n      newGcTime ?? (isServer ? Infinity : 5 * 60 * 1000),\n    )\n  }\n\n  protected clearGcTimeout() {\n    if (this.#gcTimeout) {\n      timeoutManager.clearTimeout(this.#gcTimeout)\n      this.#gcTimeout = undefined\n    }\n  }\n\n  protected abstract optionalRemove(): void\n}\n","import {\n  ensureQueryFn,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  skipToken,\n  timeUntilStale,\n} from './utils'\nimport { notifyManager } from './notifyManager'\nimport { CancelledError, canFetch, createRetryer } from './retryer'\nimport { Removable } from './removable'\nimport type { QueryCache } from './queryCache'\nimport type { QueryClient } from './queryClient'\nimport type {\n  CancelOptions,\n  DefaultError,\n  FetchStatus,\n  InitialDataFunction,\n  OmitKeyof,\n  QueryFunctionContext,\n  QueryKey,\n  QueryMeta,\n  QueryOptions,\n  QueryStatus,\n  SetDataOptions,\n  StaleTime,\n} from './types'\nimport type { QueryObserver } from './queryObserver'\nimport type { Retryer } from './retryer'\n\n// TYPES\n\ninterface QueryConfig<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey extends QueryKey = QueryKey,\n> {\n  client: QueryClient\n  queryKey: TQueryKey\n  queryHash: string\n  options?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  defaultOptions?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  state?: QueryState<TData, TError>\n}\n\nexport interface QueryState<TData = unknown, TError = DefaultError> {\n  data: TData | undefined\n  dataUpdateCount: number\n  dataUpdatedAt: number\n  error: TError | null\n  errorUpdateCount: number\n  errorUpdatedAt: number\n  fetchFailureCount: number\n  fetchFailureReason: TError | null\n  fetchMeta: FetchMeta | null\n  isInvalidated: boolean\n  status: QueryStatus\n  fetchStatus: FetchStatus\n}\n\nexport interface FetchContext<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey extends QueryKey = QueryKey,\n> {\n  fetchFn: () => unknown | Promise<unknown>\n  fetchOptions?: FetchOptions\n  signal: AbortSignal\n  options: QueryOptions<TQueryFnData, TError, TData, any>\n  client: QueryClient\n  queryKey: TQueryKey\n  state: QueryState<TData, TError>\n}\n\nexport interface QueryBehavior<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> {\n  onFetch: (\n    context: FetchContext<TQueryFnData, TError, TData, TQueryKey>,\n    query: Query,\n  ) => void\n}\n\nexport type FetchDirection = 'forward' | 'backward'\n\nexport interface FetchMeta {\n  fetchMore?: { direction: FetchDirection }\n}\n\nexport interface FetchOptions<TData = unknown> {\n  cancelRefetch?: boolean\n  meta?: FetchMeta\n  initialPromise?: Promise<TData>\n}\n\ninterface FailedAction<TError> {\n  type: 'failed'\n  failureCount: number\n  error: TError\n}\n\ninterface FetchAction {\n  type: 'fetch'\n  meta?: FetchMeta\n}\n\ninterface SuccessAction<TData> {\n  data: TData | undefined\n  type: 'success'\n  dataUpdatedAt?: number\n  manual?: boolean\n}\n\ninterface ErrorAction<TError> {\n  type: 'error'\n  error: TError\n}\n\ninterface InvalidateAction {\n  type: 'invalidate'\n}\n\ninterface PauseAction {\n  type: 'pause'\n}\n\ninterface ContinueAction {\n  type: 'continue'\n}\n\ninterface SetStateAction<TData, TError> {\n  type: 'setState'\n  state: Partial<QueryState<TData, TError>>\n  setStateOptions?: SetStateOptions\n}\n\nexport type Action<TData, TError> =\n  | ContinueAction\n  | ErrorAction<TError>\n  | FailedAction<TError>\n  | FetchAction\n  | InvalidateAction\n  | PauseAction\n  | SetStateAction<TData, TError>\n  | SuccessAction<TData>\n\nexport interface SetStateOptions {\n  meta?: any\n}\n\n// CLASS\n\nexport class Query<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> extends Removable {\n  queryKey: TQueryKey\n  queryHash: string\n  options!: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  state: QueryState<TData, TError>\n\n  #initialState: QueryState<TData, TError>\n  #revertState?: QueryState<TData, TError>\n  #cache: QueryCache\n  #client: QueryClient\n  #retryer?: Retryer<TData>\n  observers: Array<QueryObserver<any, any, any, any, any>>\n  #defaultOptions?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  #abortSignalConsumed: boolean\n\n  constructor(config: QueryConfig<TQueryFnData, TError, TData, TQueryKey>) {\n    super()\n\n    this.#abortSignalConsumed = false\n    this.#defaultOptions = config.defaultOptions\n    this.setOptions(config.options)\n    this.observers = []\n    this.#client = config.client\n    this.#cache = this.#client.getQueryCache()\n    this.queryKey = config.queryKey\n    this.queryHash = config.queryHash\n    this.#initialState = getDefaultState(this.options)\n    this.state = config.state ?? this.#initialState\n    this.scheduleGc()\n  }\n  get meta(): QueryMeta | undefined {\n    return this.options.meta\n  }\n\n  get promise(): Promise<TData> | undefined {\n    return this.#retryer?.promise\n  }\n\n  setOptions(\n    options?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): void {\n    this.options = { ...this.#defaultOptions, ...options }\n\n    this.updateGcTime(this.options.gcTime)\n\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (this.state && this.state.data === undefined) {\n      const defaultState = getDefaultState(this.options)\n      if (defaultState.data !== undefined) {\n        this.setData(defaultState.data, {\n          updatedAt: defaultState.dataUpdatedAt,\n          manual: true,\n        })\n        this.#initialState = defaultState\n      }\n    }\n  }\n\n  protected optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === 'idle') {\n      this.#cache.remove(this)\n    }\n  }\n\n  setData(\n    newData: TData,\n    options?: SetDataOptions & { manual: boolean },\n  ): TData {\n    const data = replaceData(this.state.data, newData, this.options)\n\n    // Set data and mark it as cached\n    this.#dispatch({\n      data,\n      type: 'success',\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual,\n    })\n\n    return data\n  }\n\n  setState(\n    state: Partial<QueryState<TData, TError>>,\n    setStateOptions?: SetStateOptions,\n  ): void {\n    this.#dispatch({ type: 'setState', state, setStateOptions })\n  }\n\n  cancel(options?: CancelOptions): Promise<void> {\n    const promise = this.#retryer?.promise\n    this.#retryer?.cancel(options)\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve()\n  }\n\n  destroy(): void {\n    super.destroy()\n\n    this.cancel({ silent: true })\n  }\n\n  reset(): void {\n    this.destroy()\n    this.setState(this.#initialState)\n  }\n\n  isActive(): boolean {\n    return this.observers.some(\n      (observer) => resolveEnabled(observer.options.enabled, this) !== false,\n    )\n  }\n\n  isDisabled(): boolean {\n    if (this.getObserversCount() > 0) {\n      return !this.isActive()\n    }\n    // if a query has no observers, it should still be considered disabled if it never attempted a fetch\n    return (\n      this.options.queryFn === skipToken ||\n      this.state.dataUpdateCount + this.state.errorUpdateCount === 0\n    )\n  }\n\n  isStatic(): boolean {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) =>\n          resolveStaleTime(observer.options.staleTime, this) === 'static',\n      )\n    }\n\n    return false\n  }\n\n  isStale(): boolean {\n    // check observers first, their `isStale` has the source of truth\n    // calculated with `isStaleByTime` and it takes `enabled` into account\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => observer.getCurrentResult().isStale,\n      )\n    }\n\n    return this.state.data === undefined || this.state.isInvalidated\n  }\n\n  isStaleByTime(staleTime: StaleTime = 0): boolean {\n    // no data is always stale\n    if (this.state.data === undefined) {\n      return true\n    }\n    // static is never stale\n    if (staleTime === 'static') {\n      return false\n    }\n    // if the query is invalidated, it is stale\n    if (this.state.isInvalidated) {\n      return true\n    }\n\n    return !timeUntilStale(this.state.dataUpdatedAt, staleTime)\n  }\n\n  onFocus(): void {\n    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus())\n\n    observer?.refetch({ cancelRefetch: false })\n\n    // Continue fetch if currently paused\n    this.#retryer?.continue()\n  }\n\n  onOnline(): void {\n    const observer = this.observers.find((x) => x.shouldFetchOnReconnect())\n\n    observer?.refetch({ cancelRefetch: false })\n\n    // Continue fetch if currently paused\n    this.#retryer?.continue()\n  }\n\n  addObserver(observer: QueryObserver<any, any, any, any, any>): void {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer)\n\n      // Stop the query from being garbage collected\n      this.clearGcTimeout()\n\n      this.#cache.notify({ type: 'observerAdded', query: this, observer })\n    }\n  }\n\n  removeObserver(observer: QueryObserver<any, any, any, any, any>): void {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter((x) => x !== observer)\n\n      if (!this.observers.length) {\n        // If the transport layer does not support cancellation\n        // we'll let the query continue so the result can be cached\n        if (this.#retryer) {\n          if (this.#abortSignalConsumed) {\n            this.#retryer.cancel({ revert: true })\n          } else {\n            this.#retryer.cancelRetry()\n          }\n        }\n\n        this.scheduleGc()\n      }\n\n      this.#cache.notify({ type: 'observerRemoved', query: this, observer })\n    }\n  }\n\n  getObserversCount(): number {\n    return this.observers.length\n  }\n\n  invalidate(): void {\n    if (!this.state.isInvalidated) {\n      this.#dispatch({ type: 'invalidate' })\n    }\n  }\n\n  async fetch(\n    options?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    fetchOptions?: FetchOptions<TQueryFnData>,\n  ): Promise<TData> {\n    if (\n      this.state.fetchStatus !== 'idle' &&\n      // If the promise in the retyer is already rejected, we have to definitely\n      // re-start the fetch; there is a chance that the query is still in a\n      // pending state when that happens\n      this.#retryer?.status() !== 'rejected'\n    ) {\n      if (this.state.data !== undefined && fetchOptions?.cancelRefetch) {\n        // Silently cancel current fetch if the user wants to cancel refetch\n        this.cancel({ silent: true })\n      } else if (this.#retryer) {\n        // make sure that retries that were potentially cancelled due to unmounts can continue\n        this.#retryer.continueRetry()\n        // Return current promise if we are already fetching\n        return this.#retryer.promise\n      }\n    }\n\n    // Update config if passed, otherwise the config from the last execution is used\n    if (options) {\n      this.setOptions(options)\n    }\n\n    // Use the options from the first observer with a query function if no function is found.\n    // This can happen when the query is hydrated or created with setQueryData.\n    if (!this.options.queryFn) {\n      const observer = this.observers.find((x) => x.options.queryFn)\n      if (observer) {\n        this.setOptions(observer.options)\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!Array.isArray(this.options.queryKey)) {\n        console.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`,\n        )\n      }\n    }\n\n    const abortController = new AbortController()\n\n    // Adds an enumerable signal property to the object that\n    // which sets abortSignalConsumed to true when the signal\n    // is read.\n    const addSignalProperty = (object: unknown) => {\n      Object.defineProperty(object, 'signal', {\n        enumerable: true,\n        get: () => {\n          this.#abortSignalConsumed = true\n          return abortController.signal\n        },\n      })\n    }\n\n    // Create fetch function\n    const fetchFn = () => {\n      const queryFn = ensureQueryFn(this.options, fetchOptions)\n\n      // Create query function context\n      const createQueryFnContext = (): QueryFunctionContext<TQueryKey> => {\n        const queryFnContext: OmitKeyof<\n          QueryFunctionContext<TQueryKey>,\n          'signal'\n        > = {\n          client: this.#client,\n          queryKey: this.queryKey,\n          meta: this.meta,\n        }\n        addSignalProperty(queryFnContext)\n        return queryFnContext as QueryFunctionContext<TQueryKey>\n      }\n\n      const queryFnContext = createQueryFnContext()\n\n      this.#abortSignalConsumed = false\n      if (this.options.persister) {\n        return this.options.persister(\n          queryFn,\n          queryFnContext,\n          this as unknown as Query,\n        )\n      }\n\n      return queryFn(queryFnContext)\n    }\n\n    // Trigger behavior hook\n    const createFetchContext = (): FetchContext<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryKey\n    > => {\n      const context: OmitKeyof<\n        FetchContext<TQueryFnData, TError, TData, TQueryKey>,\n        'signal'\n      > = {\n        fetchOptions,\n        options: this.options,\n        queryKey: this.queryKey,\n        client: this.#client,\n        state: this.state,\n        fetchFn,\n      }\n\n      addSignalProperty(context)\n      return context as FetchContext<TQueryFnData, TError, TData, TQueryKey>\n    }\n\n    const context = createFetchContext()\n\n    this.options.behavior?.onFetch(context, this as unknown as Query)\n\n    // Store state in case the current fetch needs to be reverted\n    this.#revertState = this.state\n\n    // Set to fetching state if not already in it\n    if (\n      this.state.fetchStatus === 'idle' ||\n      this.state.fetchMeta !== context.fetchOptions?.meta\n    ) {\n      this.#dispatch({ type: 'fetch', meta: context.fetchOptions?.meta })\n    }\n\n    // Try to fetch the data\n    this.#retryer = createRetryer({\n      initialPromise: fetchOptions?.initialPromise as\n        | Promise<TData>\n        | undefined,\n      fn: context.fetchFn as () => Promise<TData>,\n      onCancel: (error) => {\n        if (error instanceof CancelledError && error.revert) {\n          this.setState({\n            ...this.#revertState,\n            fetchStatus: 'idle' as const,\n          })\n        }\n        abortController.abort()\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: 'failed', failureCount, error })\n      },\n      onPause: () => {\n        this.#dispatch({ type: 'pause' })\n      },\n      onContinue: () => {\n        this.#dispatch({ type: 'continue' })\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n      canRun: () => true,\n    })\n\n    try {\n      const data = await this.#retryer.start()\n      // this is more of a runtime guard\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (data === undefined) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error(\n            `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`,\n          )\n        }\n        throw new Error(`${this.queryHash} data is undefined`)\n      }\n\n      this.setData(data)\n\n      // Notify cache callback\n      this.#cache.config.onSuccess?.(data, this as Query<any, any, any, any>)\n      this.#cache.config.onSettled?.(\n        data,\n        this.state.error as any,\n        this as Query<any, any, any, any>,\n      )\n      return data\n    } catch (error) {\n      if (error instanceof CancelledError) {\n        if (error.silent) {\n          // silent cancellation implies a new fetch is going to be started,\n          // so we piggyback onto that promise\n          return this.#retryer.promise\n        } else if (error.revert) {\n          // transform error into reverted state data\n          // if the initial fetch was cancelled, we have no data, so we have\n          // to get reject with a CancelledError\n          if (this.state.data === undefined) {\n            throw error\n          }\n          return this.state.data\n        }\n      }\n      this.#dispatch({\n        type: 'error',\n        error: error as TError,\n      })\n\n      // Notify cache callback\n      this.#cache.config.onError?.(\n        error as any,\n        this as Query<any, any, any, any>,\n      )\n      this.#cache.config.onSettled?.(\n        this.state.data,\n        error as any,\n        this as Query<any, any, any, any>,\n      )\n\n      throw error // rethrow the error for further handling\n    } finally {\n      // Schedule query gc after fetching\n      this.scheduleGc()\n    }\n  }\n\n  #dispatch(action: Action<TData, TError>): void {\n    const reducer = (\n      state: QueryState<TData, TError>,\n    ): QueryState<TData, TError> => {\n      switch (action.type) {\n        case 'failed':\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error,\n          }\n        case 'pause':\n          return {\n            ...state,\n            fetchStatus: 'paused',\n          }\n        case 'continue':\n          return {\n            ...state,\n            fetchStatus: 'fetching',\n          }\n        case 'fetch':\n          return {\n            ...state,\n            ...fetchState(state.data, this.options),\n            fetchMeta: action.meta ?? null,\n          }\n        case 'success':\n          const newState = {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: 'success' as const,\n            ...(!action.manual && {\n              fetchStatus: 'idle' as const,\n              fetchFailureCount: 0,\n              fetchFailureReason: null,\n            }),\n          }\n          // If fetching ends successfully, we don't need revertState as a fallback anymore.\n          // For manual updates, capture the state to revert to it in case of a cancellation.\n          this.#revertState = action.manual ? newState : undefined\n\n          return newState\n        case 'error':\n          const error = action.error\n          return {\n            ...state,\n            error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: 'idle',\n            status: 'error',\n          }\n        case 'invalidate':\n          return {\n            ...state,\n            isInvalidated: true,\n          }\n        case 'setState':\n          return {\n            ...state,\n            ...action.state,\n          }\n      }\n    }\n\n    this.state = reducer(this.state)\n\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onQueryUpdate()\n      })\n\n      this.#cache.notify({ query: this, type: 'updated', action })\n    })\n  }\n}\n\nexport function fetchState<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey extends QueryKey,\n>(\n  data: TData | undefined,\n  options: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n) {\n  return {\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchStatus: canFetch(options.networkMode) ? 'fetching' : 'paused',\n    ...(data === undefined &&\n      ({\n        error: null,\n        status: 'pending',\n      } as const)),\n  } as const\n}\n\nfunction getDefaultState<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey extends QueryKey,\n>(\n  options: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n): QueryState<TData, TError> {\n  const data =\n    typeof options.initialData === 'function'\n      ? (options.initialData as InitialDataFunction<TData>)()\n      : options.initialData\n\n  const hasData = data !== undefined\n\n  const initialDataUpdatedAt = hasData\n    ? typeof options.initialDataUpdatedAt === 'function'\n      ? (options.initialDataUpdatedAt as () => number | undefined)()\n      : options.initialDataUpdatedAt\n    : 0\n\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? (initialDataUpdatedAt ?? Date.now()) : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? 'success' : 'pending',\n    fetchStatus: 'idle',\n  }\n}\n","import { hashQueryKeyByOptions, matchQuery } from './utils'\nimport { Query } from './query'\nimport { notifyManager } from './notifyManager'\nimport { Subscribable } from './subscribable'\nimport type { QueryFilters } from './utils'\nimport type { Action, QueryState } from './query'\nimport type {\n  DefaultError,\n  NotifyEvent,\n  QueryKey,\n  QueryOptions,\n  WithRequired,\n} from './types'\nimport type { QueryClient } from './queryClient'\nimport type { QueryObserver } from './queryObserver'\n\n// TYPES\n\ninterface QueryCacheConfig {\n  onError?: (\n    error: DefaultError,\n    query: Query<unknown, unknown, unknown>,\n  ) => void\n  onSuccess?: (data: unknown, query: Query<unknown, unknown, unknown>) => void\n  onSettled?: (\n    data: unknown | undefined,\n    error: DefaultError | null,\n    query: Query<unknown, unknown, unknown>,\n  ) => void\n}\n\ninterface NotifyEventQueryAdded extends NotifyEvent {\n  type: 'added'\n  query: Query<any, any, any, any>\n}\n\ninterface NotifyEventQueryRemoved extends NotifyEvent {\n  type: 'removed'\n  query: Query<any, any, any, any>\n}\n\ninterface NotifyEventQueryUpdated extends NotifyEvent {\n  type: 'updated'\n  query: Query<any, any, any, any>\n  action: Action<any, any>\n}\n\ninterface NotifyEventQueryObserverAdded extends NotifyEvent {\n  type: 'observerAdded'\n  query: Query<any, any, any, any>\n  observer: QueryObserver<any, any, any, any, any>\n}\n\ninterface NotifyEventQueryObserverRemoved extends NotifyEvent {\n  type: 'observerRemoved'\n  query: Query<any, any, any, any>\n  observer: QueryObserver<any, any, any, any, any>\n}\n\ninterface NotifyEventQueryObserverResultsUpdated extends NotifyEvent {\n  type: 'observerResultsUpdated'\n  query: Query<any, any, any, any>\n}\n\ninterface NotifyEventQueryObserverOptionsUpdated extends NotifyEvent {\n  type: 'observerOptionsUpdated'\n  query: Query<any, any, any, any>\n  observer: QueryObserver<any, any, any, any, any>\n}\n\nexport type QueryCacheNotifyEvent =\n  | NotifyEventQueryAdded\n  | NotifyEventQueryRemoved\n  | NotifyEventQueryUpdated\n  | NotifyEventQueryObserverAdded\n  | NotifyEventQueryObserverRemoved\n  | NotifyEventQueryObserverResultsUpdated\n  | NotifyEventQueryObserverOptionsUpdated\n\ntype QueryCacheListener = (event: QueryCacheNotifyEvent) => void\n\nexport interface QueryStore {\n  has: (queryHash: string) => boolean\n  set: (queryHash: string, query: Query) => void\n  get: (queryHash: string) => Query | undefined\n  delete: (queryHash: string) => void\n  values: () => IterableIterator<Query>\n}\n\n// CLASS\n\nexport class QueryCache extends Subscribable<QueryCacheListener> {\n  #queries: QueryStore\n\n  constructor(public config: QueryCacheConfig = {}) {\n    super()\n    this.#queries = new Map<string, Query>()\n  }\n\n  build<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    client: QueryClient,\n    options: WithRequired<\n      QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n      'queryKey'\n    >,\n    state?: QueryState<TData, TError>,\n  ): Query<TQueryFnData, TError, TData, TQueryKey> {\n    const queryKey = options.queryKey\n    const queryHash =\n      options.queryHash ?? hashQueryKeyByOptions(queryKey, options)\n    let query = this.get<TQueryFnData, TError, TData, TQueryKey>(queryHash)\n\n    if (!query) {\n      query = new Query({\n        client,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey),\n      })\n      this.add(query)\n    }\n\n    return query\n  }\n\n  add(query: Query<any, any, any, any>): void {\n    if (!this.#queries.has(query.queryHash)) {\n      this.#queries.set(query.queryHash, query)\n\n      this.notify({\n        type: 'added',\n        query,\n      })\n    }\n  }\n\n  remove(query: Query<any, any, any, any>): void {\n    const queryInMap = this.#queries.get(query.queryHash)\n\n    if (queryInMap) {\n      query.destroy()\n\n      if (queryInMap === query) {\n        this.#queries.delete(query.queryHash)\n      }\n\n      this.notify({ type: 'removed', query })\n    }\n  }\n\n  clear(): void {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        this.remove(query)\n      })\n    })\n  }\n\n  get<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryHash: string,\n  ): Query<TQueryFnData, TError, TData, TQueryKey> | undefined {\n    return this.#queries.get(queryHash) as\n      | Query<TQueryFnData, TError, TData, TQueryKey>\n      | undefined\n  }\n\n  getAll(): Array<Query> {\n    return [...this.#queries.values()]\n  }\n\n  find<TQueryFnData = unknown, TError = DefaultError, TData = TQueryFnData>(\n    filters: WithRequired<QueryFilters, 'queryKey'>,\n  ): Query<TQueryFnData, TError, TData> | undefined {\n    const defaultedFilters = { exact: true, ...filters }\n\n    return this.getAll().find((query) =>\n      matchQuery(defaultedFilters, query),\n    ) as Query<TQueryFnData, TError, TData> | undefined\n  }\n\n  findAll(filters: QueryFilters<any> = {}): Array<Query> {\n    const queries = this.getAll()\n    return Object.keys(filters).length > 0\n      ? queries.filter((query) => matchQuery(filters, query))\n      : queries\n  }\n\n  notify(event: QueryCacheNotifyEvent): void {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event)\n      })\n    })\n  }\n\n  onFocus(): void {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onFocus()\n      })\n    })\n  }\n\n  onOnline(): void {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onOnline()\n      })\n    })\n  }\n}\n","import { notifyManager } from './notifyManager'\nimport { Removable } from './removable'\nimport { createRetryer } from './retryer'\nimport type {\n  DefaultError,\n  MutationMeta,\n  MutationOptions,\n  MutationStatus,\n} from './types'\nimport type { MutationCache } from './mutationCache'\nimport type { MutationObserver } from './mutationObserver'\nimport type { Retryer } from './retryer'\n\n// TYPES\n\ninterface MutationConfig<TData, TError, TVariables, TContext> {\n  mutationId: number\n  mutationCache: MutationCache\n  options: MutationOptions<TData, TError, TVariables, TContext>\n  state?: MutationState<TData, TError, TVariables, TContext>\n}\n\nexport interface MutationState<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = unknown,\n  TContext = unknown,\n> {\n  context: TContext | undefined\n  data: TData | undefined\n  error: TError | null\n  failureCount: number\n  failureReason: TError | null\n  isPaused: boolean\n  status: MutationStatus\n  variables: TVariables | undefined\n  submittedAt: number\n}\n\ninterface FailedAction<TError> {\n  type: 'failed'\n  failureCount: number\n  error: TError | null\n}\n\ninterface PendingAction<TVariables, TContext> {\n  type: 'pending'\n  isPaused: boolean\n  variables?: TVariables\n  context?: TContext\n}\n\ninterface SuccessAction<TData> {\n  type: 'success'\n  data: TData\n}\n\ninterface ErrorAction<TError> {\n  type: 'error'\n  error: TError\n}\n\ninterface PauseAction {\n  type: 'pause'\n}\n\ninterface ContinueAction {\n  type: 'continue'\n}\n\nexport type Action<TData, TError, TVariables, TContext> =\n  | ContinueAction\n  | ErrorAction<TError>\n  | FailedAction<TError>\n  | PendingAction<TVariables, TContext>\n  | PauseAction\n  | SuccessAction<TData>\n\n// CLASS\n\nexport class Mutation<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = unknown,\n  TContext = unknown,\n> extends Removable {\n  state: MutationState<TData, TError, TVariables, TContext>\n  options!: MutationOptions<TData, TError, TVariables, TContext>\n  readonly mutationId: number\n\n  #observers: Array<MutationObserver<TData, TError, TVariables, TContext>>\n  #mutationCache: MutationCache\n  #retryer?: Retryer<TData>\n\n  constructor(config: MutationConfig<TData, TError, TVariables, TContext>) {\n    super()\n\n    this.mutationId = config.mutationId\n    this.#mutationCache = config.mutationCache\n    this.#observers = []\n    this.state = config.state || getDefaultState()\n\n    this.setOptions(config.options)\n    this.scheduleGc()\n  }\n\n  setOptions(\n    options: MutationOptions<TData, TError, TVariables, TContext>,\n  ): void {\n    this.options = options\n\n    this.updateGcTime(this.options.gcTime)\n  }\n\n  get meta(): MutationMeta | undefined {\n    return this.options.meta\n  }\n\n  addObserver(observer: MutationObserver<any, any, any, any>): void {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer)\n\n      // Stop the mutation from being garbage collected\n      this.clearGcTimeout()\n\n      this.#mutationCache.notify({\n        type: 'observerAdded',\n        mutation: this,\n        observer,\n      })\n    }\n  }\n\n  removeObserver(observer: MutationObserver<any, any, any, any>): void {\n    this.#observers = this.#observers.filter((x) => x !== observer)\n\n    this.scheduleGc()\n\n    this.#mutationCache.notify({\n      type: 'observerRemoved',\n      mutation: this,\n      observer,\n    })\n  }\n\n  protected optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === 'pending') {\n        this.scheduleGc()\n      } else {\n        this.#mutationCache.remove(this)\n      }\n    }\n  }\n\n  continue(): Promise<unknown> {\n    return (\n      this.#retryer?.continue() ??\n      // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n      this.execute(this.state.variables!)\n    )\n  }\n\n  async execute(variables: TVariables): Promise<TData> {\n    const onContinue = () => {\n      this.#dispatch({ type: 'continue' })\n    }\n\n    this.#retryer = createRetryer({\n      fn: () => {\n        if (!this.options.mutationFn) {\n          return Promise.reject(new Error('No mutationFn found'))\n        }\n        return this.options.mutationFn(variables)\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: 'failed', failureCount, error })\n      },\n      onPause: () => {\n        this.#dispatch({ type: 'pause' })\n      },\n      onContinue,\n      retry: this.options.retry ?? 0,\n      retryDelay: this.options.retryDelay,\n      networkMode: this.options.networkMode,\n      canRun: () => this.#mutationCache.canRun(this),\n    })\n\n    const restored = this.state.status === 'pending'\n    const isPaused = !this.#retryer.canStart()\n\n    try {\n      if (restored) {\n        // Dispatch continue action to unpause restored mutation\n        onContinue()\n      } else {\n        this.#dispatch({ type: 'pending', variables, isPaused })\n        // Notify cache callback\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this as Mutation<unknown, unknown, unknown, unknown>,\n        )\n        const context = await this.options.onMutate?.(variables)\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: 'pending',\n            context,\n            variables,\n            isPaused,\n          })\n        }\n      }\n      const data = await this.#retryer.start()\n\n      // Notify cache callback\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this as Mutation<unknown, unknown, unknown, unknown>,\n      )\n\n      await this.options.onSuccess?.(data, variables, this.state.context!)\n\n      // Notify cache callback\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this as Mutation<unknown, unknown, unknown, unknown>,\n      )\n\n      await this.options.onSettled?.(data, null, variables, this.state.context)\n\n      this.#dispatch({ type: 'success', data })\n      return data\n    } catch (error) {\n      try {\n        // Notify cache callback\n        await this.#mutationCache.config.onError?.(\n          error as any,\n          variables,\n          this.state.context,\n          this as Mutation<unknown, unknown, unknown, unknown>,\n        )\n\n        await this.options.onError?.(\n          error as TError,\n          variables,\n          this.state.context,\n        )\n\n        // Notify cache callback\n        await this.#mutationCache.config.onSettled?.(\n          undefined,\n          error as any,\n          this.state.variables,\n          this.state.context,\n          this as Mutation<unknown, unknown, unknown, unknown>,\n        )\n\n        await this.options.onSettled?.(\n          undefined,\n          error as TError,\n          variables,\n          this.state.context,\n        )\n        throw error\n      } finally {\n        this.#dispatch({ type: 'error', error: error as TError })\n      }\n    } finally {\n      this.#mutationCache.runNext(this)\n    }\n  }\n\n  #dispatch(action: Action<TData, TError, TVariables, TContext>): void {\n    const reducer = (\n      state: MutationState<TData, TError, TVariables, TContext>,\n    ): MutationState<TData, TError, TVariables, TContext> => {\n      switch (action.type) {\n        case 'failed':\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error,\n          }\n        case 'pause':\n          return {\n            ...state,\n            isPaused: true,\n          }\n        case 'continue':\n          return {\n            ...state,\n            isPaused: false,\n          }\n        case 'pending':\n          return {\n            ...state,\n            context: action.context,\n            data: undefined,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: action.isPaused,\n            status: 'pending',\n            variables: action.variables,\n            submittedAt: Date.now(),\n          }\n        case 'success':\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: 'success',\n            isPaused: false,\n          }\n        case 'error':\n          return {\n            ...state,\n            data: undefined,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: 'error',\n          }\n      }\n    }\n    this.state = reducer(this.state)\n\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action)\n      })\n      this.#mutationCache.notify({\n        mutation: this,\n        type: 'updated',\n        action,\n      })\n    })\n  }\n}\n\nexport function getDefaultState<\n  TData,\n  TError,\n  TVariables,\n  TContext,\n>(): MutationState<TData, TError, TVariables, TContext> {\n  return {\n    context: undefined,\n    data: undefined,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: 'idle',\n    variables: undefined,\n    submittedAt: 0,\n  }\n}\n","import { notifyManager } from './notifyManager'\nimport { Mutation } from './mutation'\nimport { matchMutation, noop } from './utils'\nimport { Subscribable } from './subscribable'\nimport type { MutationObserver } from './mutationObserver'\nimport type { DefaultError, MutationOptions, NotifyEvent } from './types'\nimport type { QueryClient } from './queryClient'\nimport type { Action, MutationState } from './mutation'\nimport type { MutationFilters } from './utils'\n\n// TYPES\n\ninterface MutationCacheConfig {\n  onError?: (\n    error: DefaultError,\n    variables: unknown,\n    context: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n  onSuccess?: (\n    data: unknown,\n    variables: unknown,\n    context: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n  onMutate?: (\n    variables: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n  onSettled?: (\n    data: unknown | undefined,\n    error: DefaultError | null,\n    variables: unknown,\n    context: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n}\n\ninterface NotifyEventMutationAdded extends NotifyEvent {\n  type: 'added'\n  mutation: Mutation<any, any, any, any>\n}\ninterface NotifyEventMutationRemoved extends NotifyEvent {\n  type: 'removed'\n  mutation: Mutation<any, any, any, any>\n}\n\ninterface NotifyEventMutationObserverAdded extends NotifyEvent {\n  type: 'observerAdded'\n  mutation: Mutation<any, any, any, any>\n  observer: MutationObserver<any, any, any>\n}\n\ninterface NotifyEventMutationObserverRemoved extends NotifyEvent {\n  type: 'observerRemoved'\n  mutation: Mutation<any, any, any, any>\n  observer: MutationObserver<any, any, any>\n}\n\ninterface NotifyEventMutationObserverOptionsUpdated extends NotifyEvent {\n  type: 'observerOptionsUpdated'\n  mutation?: Mutation<any, any, any, any>\n  observer: MutationObserver<any, any, any, any>\n}\n\ninterface NotifyEventMutationUpdated extends NotifyEvent {\n  type: 'updated'\n  mutation: Mutation<any, any, any, any>\n  action: Action<any, any, any, any>\n}\n\nexport type MutationCacheNotifyEvent =\n  | NotifyEventMutationAdded\n  | NotifyEventMutationRemoved\n  | NotifyEventMutationObserverAdded\n  | NotifyEventMutationObserverRemoved\n  | NotifyEventMutationObserverOptionsUpdated\n  | NotifyEventMutationUpdated\n\ntype MutationCacheListener = (event: MutationCacheNotifyEvent) => void\n\n// CLASS\n\nexport class MutationCache extends Subscribable<MutationCacheListener> {\n  #mutations: Set<Mutation<any, any, any, any>>\n  #scopes: Map<string, Array<Mutation<any, any, any, any>>>\n  #mutationId: number\n\n  constructor(public config: MutationCacheConfig = {}) {\n    super()\n    this.#mutations = new Set()\n    this.#scopes = new Map()\n    this.#mutationId = 0\n  }\n\n  build<TData, TError, TVariables, TContext>(\n    client: QueryClient,\n    options: MutationOptions<TData, TError, TVariables, TContext>,\n    state?: MutationState<TData, TError, TVariables, TContext>,\n  ): Mutation<TData, TError, TVariables, TContext> {\n    const mutation = new Mutation({\n      mutationCache: this,\n      mutationId: ++this.#mutationId,\n      options: client.defaultMutationOptions(options),\n      state,\n    })\n\n    this.add(mutation)\n\n    return mutation\n  }\n\n  add(mutation: Mutation<any, any, any, any>): void {\n    this.#mutations.add(mutation)\n    const scope = scopeFor(mutation)\n    if (typeof scope === 'string') {\n      const scopedMutations = this.#scopes.get(scope)\n      if (scopedMutations) {\n        scopedMutations.push(mutation)\n      } else {\n        this.#scopes.set(scope, [mutation])\n      }\n    }\n    this.notify({ type: 'added', mutation })\n  }\n\n  remove(mutation: Mutation<any, any, any, any>): void {\n    if (this.#mutations.delete(mutation)) {\n      const scope = scopeFor(mutation)\n      if (typeof scope === 'string') {\n        const scopedMutations = this.#scopes.get(scope)\n        if (scopedMutations) {\n          if (scopedMutations.length > 1) {\n            const index = scopedMutations.indexOf(mutation)\n            if (index !== -1) {\n              scopedMutations.splice(index, 1)\n            }\n          } else if (scopedMutations[0] === mutation) {\n            this.#scopes.delete(scope)\n          }\n        }\n      }\n    }\n\n    // Currently we notify the removal even if the mutation was already removed.\n    // Consider making this an error or not notifying of the removal depending on the desired semantics.\n    this.notify({ type: 'removed', mutation })\n  }\n\n  canRun(mutation: Mutation<any, any, any, any>): boolean {\n    const scope = scopeFor(mutation)\n    if (typeof scope === 'string') {\n      const mutationsWithSameScope = this.#scopes.get(scope)\n      const firstPendingMutation = mutationsWithSameScope?.find(\n        (m) => m.state.status === 'pending',\n      )\n      // we can run if there is no current pending mutation (start use-case)\n      // or if WE are the first pending mutation (continue use-case)\n      return !firstPendingMutation || firstPendingMutation === mutation\n    } else {\n      // For unscoped mutations there are never any pending mutations in front of the\n      // current mutation\n      return true\n    }\n  }\n\n  runNext(mutation: Mutation<any, any, any, any>): Promise<unknown> {\n    const scope = scopeFor(mutation)\n    if (typeof scope === 'string') {\n      const foundMutation = this.#scopes\n        .get(scope)\n        ?.find((m) => m !== mutation && m.state.isPaused)\n\n      return foundMutation?.continue() ?? Promise.resolve()\n    } else {\n      return Promise.resolve()\n    }\n  }\n\n  clear(): void {\n    notifyManager.batch(() => {\n      this.#mutations.forEach((mutation) => {\n        this.notify({ type: 'removed', mutation })\n      })\n      this.#mutations.clear()\n      this.#scopes.clear()\n    })\n  }\n\n  getAll(): Array<Mutation> {\n    return Array.from(this.#mutations)\n  }\n\n  find<\n    TData = unknown,\n    TError = DefaultError,\n    TVariables = any,\n    TContext = unknown,\n  >(\n    filters: MutationFilters,\n  ): Mutation<TData, TError, TVariables, TContext> | undefined {\n    const defaultedFilters = { exact: true, ...filters }\n\n    return this.getAll().find((mutation) =>\n      matchMutation(defaultedFilters, mutation),\n    ) as Mutation<TData, TError, TVariables, TContext> | undefined\n  }\n\n  findAll(filters: MutationFilters = {}): Array<Mutation> {\n    return this.getAll().filter((mutation) => matchMutation(filters, mutation))\n  }\n\n  notify(event: MutationCacheNotifyEvent) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event)\n      })\n    })\n  }\n\n  resumePausedMutations(): Promise<unknown> {\n    const pausedMutations = this.getAll().filter((x) => x.state.isPaused)\n\n    return notifyManager.batch(() =>\n      Promise.all(\n        pausedMutations.map((mutation) => mutation.continue().catch(noop)),\n      ),\n    )\n  }\n}\n\nfunction scopeFor(mutation: Mutation<any, any, any, any>) {\n  return mutation.options.scope?.id\n}\n","import { addToEnd, addToStart, ensureQueryFn } from './utils'\nimport type { QueryBehavior } from './query'\nimport type {\n  InfiniteData,\n  InfiniteQueryPageParamsOptions,\n  OmitKeyof,\n  QueryFunctionContext,\n  QueryKey,\n} from './types'\n\nexport function infiniteQueryBehavior<TQueryFnData, TError, TData, TPageParam>(\n  pages?: number,\n): QueryBehavior<TQueryFnData, TError, InfiniteData<TData, TPageParam>> {\n  return {\n    onFetch: (context, query) => {\n      const options = context.options as InfiniteQueryPageParamsOptions<TData>\n      const direction = context.fetchOptions?.meta?.fetchMore?.direction\n      const oldPages = context.state.data?.pages || []\n      const oldPageParams = context.state.data?.pageParams || []\n      let result: InfiniteData<unknown> = { pages: [], pageParams: [] }\n      let currentPage = 0\n\n      const fetchFn = async () => {\n        let cancelled = false\n        const addSignalProperty = (object: unknown) => {\n          Object.defineProperty(object, 'signal', {\n            enumerable: true,\n            get: () => {\n              if (context.signal.aborted) {\n                cancelled = true\n              } else {\n                context.signal.addEventListener('abort', () => {\n                  cancelled = true\n                })\n              }\n              return context.signal\n            },\n          })\n        }\n\n        const queryFn = ensureQueryFn(context.options, context.fetchOptions)\n\n        // Create function to fetch a page\n        const fetchPage = async (\n          data: InfiniteData<unknown>,\n          param: unknown,\n          previous?: boolean,\n        ): Promise<InfiniteData<unknown>> => {\n          if (cancelled) {\n            return Promise.reject()\n          }\n\n          if (param == null && data.pages.length) {\n            return Promise.resolve(data)\n          }\n\n          const createQueryFnContext = () => {\n            const queryFnContext: OmitKeyof<\n              QueryFunctionContext<QueryKey, unknown>,\n              'signal'\n            > = {\n              client: context.client,\n              queryKey: context.queryKey,\n              pageParam: param,\n              direction: previous ? 'backward' : 'forward',\n              meta: context.options.meta,\n            }\n            addSignalProperty(queryFnContext)\n            return queryFnContext as QueryFunctionContext<QueryKey, unknown>\n          }\n\n          const queryFnContext = createQueryFnContext()\n\n          const page = await queryFn(queryFnContext)\n\n          const { maxPages } = context.options\n          const addTo = previous ? addToStart : addToEnd\n\n          return {\n            pages: addTo(data.pages, page, maxPages),\n            pageParams: addTo(data.pageParams, param, maxPages),\n          }\n        }\n\n        // fetch next / previous page?\n        if (direction && oldPages.length) {\n          const previous = direction === 'backward'\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam\n          const oldData = {\n            pages: oldPages,\n            pageParams: oldPageParams,\n          }\n          const param = pageParamFn(options, oldData)\n\n          result = await fetchPage(oldData, param, previous)\n        } else {\n          const remainingPages = pages ?? oldPages.length\n\n          // Fetch all pages\n          do {\n            const param =\n              currentPage === 0\n                ? (oldPageParams[0] ?? options.initialPageParam)\n                : getNextPageParam(options, result)\n            if (currentPage > 0 && param == null) {\n              break\n            }\n            result = await fetchPage(result, param)\n            currentPage++\n          } while (currentPage < remainingPages)\n        }\n\n        return result\n      }\n      if (context.options.persister) {\n        context.fetchFn = () => {\n          return context.options.persister?.(\n            fetchFn as any,\n            {\n              client: context.client,\n              queryKey: context.queryKey,\n              meta: context.options.meta,\n              signal: context.signal,\n            },\n            query,\n          )\n        }\n      } else {\n        context.fetchFn = fetchFn\n      }\n    },\n  }\n}\n\nfunction getNextPageParam(\n  options: InfiniteQueryPageParamsOptions<any>,\n  { pages, pageParams }: InfiniteData<unknown>,\n): unknown | undefined {\n  const lastIndex = pages.length - 1\n  return pages.length > 0\n    ? options.getNextPageParam(\n        pages[lastIndex],\n        pages,\n        pageParams[lastIndex],\n        pageParams,\n      )\n    : undefined\n}\n\nfunction getPreviousPageParam(\n  options: InfiniteQueryPageParamsOptions<any>,\n  { pages, pageParams }: InfiniteData<unknown>,\n): unknown | undefined {\n  return pages.length > 0\n    ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams)\n    : undefined\n}\n\n/**\n * Checks if there is a next page.\n */\nexport function hasNextPage(\n  options: InfiniteQueryPageParamsOptions<any, any>,\n  data?: InfiniteData<unknown>,\n): boolean {\n  if (!data) return false\n  return getNextPageParam(options, data) != null\n}\n\n/**\n * Checks if there is a previous page.\n */\nexport function hasPreviousPage(\n  options: InfiniteQueryPageParamsOptions<any, any>,\n  data?: InfiniteData<unknown>,\n): boolean {\n  if (!data || !options.getPreviousPageParam) return false\n  return getPreviousPageParam(options, data) != null\n}\n","import {\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  noop,\n  partialMatchKey,\n  resolveStaleTime,\n  skipToken,\n} from './utils'\nimport { QueryCache } from './queryCache'\nimport { MutationCache } from './mutationCache'\nimport { focusManager } from './focusManager'\nimport { onlineManager } from './onlineManager'\nimport { notifyManager } from './notifyManager'\nimport { infiniteQueryBehavior } from './infiniteQueryBehavior'\nimport type {\n  CancelOptions,\n  DefaultError,\n  DefaultOptions,\n  DefaultedQueryObserverOptions,\n  EnsureInfiniteQueryDataOptions,\n  EnsureQueryDataOptions,\n  FetchInfiniteQueryOptions,\n  FetchQueryOptions,\n  InferDataFromTag,\n  InferErrorFromTag,\n  InfiniteData,\n  InvalidateOptions,\n  InvalidateQueryFilters,\n  MutationKey,\n  MutationObserverOptions,\n  MutationOptions,\n  NoInfer,\n  OmitKeyof,\n  QueryClientConfig,\n  QueryKey,\n  QueryObserverOptions,\n  QueryOptions,\n  RefetchOptions,\n  RefetchQueryFilters,\n  ResetOptions,\n  SetDataOptions,\n} from './types'\nimport type { QueryState } from './query'\nimport type { MutationFilters, QueryFilters, Updater } from './utils'\n\n// TYPES\n\ninterface QueryDefaults {\n  queryKey: QueryKey\n  defaultOptions: OmitKeyof<QueryOptions<any, any, any>, 'queryKey'>\n}\n\ninterface MutationDefaults {\n  mutationKey: MutationKey\n  defaultOptions: MutationOptions<any, any, any, any>\n}\n\n// CLASS\n\nexport class QueryClient {\n  #queryCache: QueryCache\n  #mutationCache: MutationCache\n  #defaultOptions: DefaultOptions\n  #queryDefaults: Map<string, QueryDefaults>\n  #mutationDefaults: Map<string, MutationDefaults>\n  #mountCount: number\n  #unsubscribeFocus?: () => void\n  #unsubscribeOnline?: () => void\n\n  constructor(config: QueryClientConfig = {}) {\n    this.#queryCache = config.queryCache || new QueryCache()\n    this.#mutationCache = config.mutationCache || new MutationCache()\n    this.#defaultOptions = config.defaultOptions || {}\n    this.#queryDefaults = new Map()\n    this.#mutationDefaults = new Map()\n    this.#mountCount = 0\n  }\n\n  mount(): void {\n    this.#mountCount++\n    if (this.#mountCount !== 1) return\n\n    this.#unsubscribeFocus = focusManager.subscribe(async (focused) => {\n      if (focused) {\n        await this.resumePausedMutations()\n        this.#queryCache.onFocus()\n      }\n    })\n    this.#unsubscribeOnline = onlineManager.subscribe(async (online) => {\n      if (online) {\n        await this.resumePausedMutations()\n        this.#queryCache.onOnline()\n      }\n    })\n  }\n\n  unmount(): void {\n    this.#mountCount--\n    if (this.#mountCount !== 0) return\n\n    this.#unsubscribeFocus?.()\n    this.#unsubscribeFocus = undefined\n\n    this.#unsubscribeOnline?.()\n    this.#unsubscribeOnline = undefined\n  }\n\n  isFetching<TQueryFilters extends QueryFilters<any> = QueryFilters>(\n    filters?: TQueryFilters,\n  ): number {\n    return this.#queryCache.findAll({ ...filters, fetchStatus: 'fetching' })\n      .length\n  }\n\n  isMutating<\n    TMutationFilters extends MutationFilters<any, any> = MutationFilters,\n  >(filters?: TMutationFilters): number {\n    return this.#mutationCache.findAll({ ...filters, status: 'pending' }).length\n  }\n\n  /**\n   * Imperative (non-reactive) way to retrieve data for a QueryKey.\n   * Should only be used in callbacks or functions where reading the latest data is necessary, e.g. for optimistic updates.\n   *\n   * Hint: Do not use this function inside a component, because it won't receive updates.\n   * Use `useQuery` to create a `QueryObserver` that subscribes to changes.\n   */\n  getQueryData<\n    TQueryFnData = unknown,\n    TTaggedQueryKey extends QueryKey = QueryKey,\n    TInferredQueryFnData = InferDataFromTag<TQueryFnData, TTaggedQueryKey>,\n  >(queryKey: TTaggedQueryKey): TInferredQueryFnData | undefined {\n    const options = this.defaultQueryOptions({ queryKey })\n\n    return this.#queryCache.get<TInferredQueryFnData>(options.queryHash)?.state\n      .data\n  }\n\n  ensureQueryData<\n    TQueryFnData,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    options: EnsureQueryDataOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<TData> {\n    const defaultedOptions = this.defaultQueryOptions(options)\n    const query = this.#queryCache.build(this, defaultedOptions)\n    const cachedData = query.state.data\n\n    if (cachedData === undefined) {\n      return this.fetchQuery(options)\n    }\n\n    if (\n      options.revalidateIfStale &&\n      query.isStaleByTime(resolveStaleTime(defaultedOptions.staleTime, query))\n    ) {\n      void this.prefetchQuery(defaultedOptions)\n    }\n\n    return Promise.resolve(cachedData)\n  }\n\n  getQueriesData<\n    TQueryFnData = unknown,\n    TQueryFilters extends QueryFilters<any> = QueryFilters,\n  >(filters: TQueryFilters): Array<[QueryKey, TQueryFnData | undefined]> {\n    return this.#queryCache.findAll(filters).map(({ queryKey, state }) => {\n      const data = state.data as TQueryFnData | undefined\n      return [queryKey, data]\n    })\n  }\n\n  setQueryData<\n    TQueryFnData = unknown,\n    TTaggedQueryKey extends QueryKey = QueryKey,\n    TInferredQueryFnData = InferDataFromTag<TQueryFnData, TTaggedQueryKey>,\n  >(\n    queryKey: TTaggedQueryKey,\n    updater: Updater<\n      NoInfer<TInferredQueryFnData> | undefined,\n      NoInfer<TInferredQueryFnData> | undefined\n    >,\n    options?: SetDataOptions,\n  ): NoInfer<TInferredQueryFnData> | undefined {\n    const defaultedOptions = this.defaultQueryOptions<\n      any,\n      any,\n      unknown,\n      any,\n      QueryKey\n    >({ queryKey })\n\n    const query = this.#queryCache.get<TInferredQueryFnData>(\n      defaultedOptions.queryHash,\n    )\n    const prevData = query?.state.data\n    const data = functionalUpdate(updater, prevData)\n\n    if (data === undefined) {\n      return undefined\n    }\n\n    return this.#queryCache\n      .build(this, defaultedOptions)\n      .setData(data, { ...options, manual: true })\n  }\n\n  setQueriesData<\n    TQueryFnData,\n    TQueryFilters extends QueryFilters<any> = QueryFilters,\n  >(\n    filters: TQueryFilters,\n    updater: Updater<\n      NoInfer<TQueryFnData> | undefined,\n      NoInfer<TQueryFnData> | undefined\n    >,\n    options?: SetDataOptions,\n  ): Array<[QueryKey, TQueryFnData | undefined]> {\n    return notifyManager.batch(() =>\n      this.#queryCache\n        .findAll(filters)\n        .map(({ queryKey }) => [\n          queryKey,\n          this.setQueryData<TQueryFnData>(queryKey, updater, options),\n        ]),\n    )\n  }\n\n  getQueryState<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TTaggedQueryKey extends QueryKey = QueryKey,\n    TInferredQueryFnData = InferDataFromTag<TQueryFnData, TTaggedQueryKey>,\n    TInferredError = InferErrorFromTag<TError, TTaggedQueryKey>,\n  >(\n    queryKey: TTaggedQueryKey,\n  ): QueryState<TInferredQueryFnData, TInferredError> | undefined {\n    const options = this.defaultQueryOptions({ queryKey })\n    return this.#queryCache.get<TInferredQueryFnData, TInferredError>(\n      options.queryHash,\n    )?.state\n  }\n\n  removeQueries<TTaggedQueryKey extends QueryKey = QueryKey>(\n    filters?: QueryFilters<TTaggedQueryKey>,\n  ): void {\n    const queryCache = this.#queryCache\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query)\n      })\n    })\n  }\n\n  resetQueries<TTaggedQueryKey extends QueryKey = QueryKey>(\n    filters?: QueryFilters<TTaggedQueryKey>,\n    options?: ResetOptions,\n  ): Promise<void> {\n    const queryCache = this.#queryCache\n\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset()\n      })\n      return this.refetchQueries(\n        {\n          type: 'active',\n          ...filters,\n        },\n        options,\n      )\n    })\n  }\n\n  cancelQueries<TTaggedQueryKey extends QueryKey = QueryKey>(\n    filters?: QueryFilters<TTaggedQueryKey>,\n    cancelOptions: CancelOptions = {},\n  ): Promise<void> {\n    const defaultedCancelOptions = { revert: true, ...cancelOptions }\n\n    const promises = notifyManager.batch(() =>\n      this.#queryCache\n        .findAll(filters)\n        .map((query) => query.cancel(defaultedCancelOptions)),\n    )\n\n    return Promise.all(promises).then(noop).catch(noop)\n  }\n\n  invalidateQueries<TTaggedQueryKey extends QueryKey = QueryKey>(\n    filters?: InvalidateQueryFilters<TTaggedQueryKey>,\n    options: InvalidateOptions = {},\n  ): Promise<void> {\n    return notifyManager.batch(() => {\n      this.#queryCache.findAll(filters).forEach((query) => {\n        query.invalidate()\n      })\n\n      if (filters?.refetchType === 'none') {\n        return Promise.resolve()\n      }\n      return this.refetchQueries(\n        {\n          ...filters,\n          type: filters?.refetchType ?? filters?.type ?? 'active',\n        },\n        options,\n      )\n    })\n  }\n\n  refetchQueries<TTaggedQueryKey extends QueryKey = QueryKey>(\n    filters?: RefetchQueryFilters<TTaggedQueryKey>,\n    options: RefetchOptions = {},\n  ): Promise<void> {\n    const fetchOptions = {\n      ...options,\n      cancelRefetch: options.cancelRefetch ?? true,\n    }\n    const promises = notifyManager.batch(() =>\n      this.#queryCache\n        .findAll(filters)\n        .filter((query) => !query.isDisabled() && !query.isStatic())\n        .map((query) => {\n          let promise = query.fetch(undefined, fetchOptions)\n          if (!fetchOptions.throwOnError) {\n            promise = promise.catch(noop)\n          }\n          return query.state.fetchStatus === 'paused'\n            ? Promise.resolve()\n            : promise\n        }),\n    )\n\n    return Promise.all(promises).then(noop)\n  }\n\n  fetchQuery<\n    TQueryFnData,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n    TPageParam = never,\n  >(\n    options: FetchQueryOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryKey,\n      TPageParam\n    >,\n  ): Promise<TData> {\n    const defaultedOptions = this.defaultQueryOptions(options)\n\n    // https://github.com/tannerlinsley/react-query/issues/652\n    if (defaultedOptions.retry === undefined) {\n      defaultedOptions.retry = false\n    }\n\n    const query = this.#queryCache.build(this, defaultedOptions)\n\n    return query.isStaleByTime(\n      resolveStaleTime(defaultedOptions.staleTime, query),\n    )\n      ? query.fetch(defaultedOptions)\n      : Promise.resolve(query.state.data as TData)\n  }\n\n  prefetchQuery<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    options: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<void> {\n    return this.fetchQuery(options).then(noop).catch(noop)\n  }\n\n  fetchInfiniteQuery<\n    TQueryFnData,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n    TPageParam = unknown,\n  >(\n    options: FetchInfiniteQueryOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryKey,\n      TPageParam\n    >,\n  ): Promise<InfiniteData<TData, TPageParam>> {\n    options.behavior = infiniteQueryBehavior<\n      TQueryFnData,\n      TError,\n      TData,\n      TPageParam\n    >(options.pages)\n    return this.fetchQuery(options as any)\n  }\n\n  prefetchInfiniteQuery<\n    TQueryFnData,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n    TPageParam = unknown,\n  >(\n    options: FetchInfiniteQueryOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryKey,\n      TPageParam\n    >,\n  ): Promise<void> {\n    return this.fetchInfiniteQuery(options).then(noop).catch(noop)\n  }\n\n  ensureInfiniteQueryData<\n    TQueryFnData,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n    TPageParam = unknown,\n  >(\n    options: EnsureInfiniteQueryDataOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryKey,\n      TPageParam\n    >,\n  ): Promise<InfiniteData<TData, TPageParam>> {\n    options.behavior = infiniteQueryBehavior<\n      TQueryFnData,\n      TError,\n      TData,\n      TPageParam\n    >(options.pages)\n\n    return this.ensureQueryData(options as any)\n  }\n\n  resumePausedMutations(): Promise<unknown> {\n    if (onlineManager.isOnline()) {\n      return this.#mutationCache.resumePausedMutations()\n    }\n    return Promise.resolve()\n  }\n\n  getQueryCache(): QueryCache {\n    return this.#queryCache\n  }\n\n  getMutationCache(): MutationCache {\n    return this.#mutationCache\n  }\n\n  getDefaultOptions(): DefaultOptions {\n    return this.#defaultOptions\n  }\n\n  setDefaultOptions(options: DefaultOptions): void {\n    this.#defaultOptions = options\n  }\n\n  setQueryDefaults<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryData = TQueryFnData,\n  >(\n    queryKey: QueryKey,\n    options: Partial<\n      OmitKeyof<\n        QueryObserverOptions<TQueryFnData, TError, TData, TQueryData>,\n        'queryKey'\n      >\n    >,\n  ): void {\n    this.#queryDefaults.set(hashKey(queryKey), {\n      queryKey,\n      defaultOptions: options,\n    })\n  }\n\n  getQueryDefaults(\n    queryKey: QueryKey,\n  ): OmitKeyof<QueryObserverOptions<any, any, any, any, any>, 'queryKey'> {\n    const defaults = [...this.#queryDefaults.values()]\n\n    const result: OmitKeyof<\n      QueryObserverOptions<any, any, any, any, any>,\n      'queryKey'\n    > = {}\n\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(queryKey, queryDefault.queryKey)) {\n        Object.assign(result, queryDefault.defaultOptions)\n      }\n    })\n    return result\n  }\n\n  setMutationDefaults<\n    TData = unknown,\n    TError = DefaultError,\n    TVariables = void,\n    TContext = unknown,\n  >(\n    mutationKey: MutationKey,\n    options: OmitKeyof<\n      MutationObserverOptions<TData, TError, TVariables, TContext>,\n      'mutationKey'\n    >,\n  ): void {\n    this.#mutationDefaults.set(hashKey(mutationKey), {\n      mutationKey,\n      defaultOptions: options,\n    })\n  }\n\n  getMutationDefaults(\n    mutationKey: MutationKey,\n  ): OmitKeyof<MutationObserverOptions<any, any, any, any>, 'mutationKey'> {\n    const defaults = [...this.#mutationDefaults.values()]\n\n    const result: OmitKeyof<\n      MutationObserverOptions<any, any, any, any>,\n      'mutationKey'\n    > = {}\n\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(mutationKey, queryDefault.mutationKey)) {\n        Object.assign(result, queryDefault.defaultOptions)\n      }\n    })\n\n    return result\n  }\n\n  defaultQueryOptions<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n    TPageParam = never,\n  >(\n    options:\n      | QueryObserverOptions<\n          TQueryFnData,\n          TError,\n          TData,\n          TQueryData,\n          TQueryKey,\n          TPageParam\n        >\n      | DefaultedQueryObserverOptions<\n          TQueryFnData,\n          TError,\n          TData,\n          TQueryData,\n          TQueryKey\n        >,\n  ): DefaultedQueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  > {\n    if (options._defaulted) {\n      return options as DefaultedQueryObserverOptions<\n        TQueryFnData,\n        TError,\n        TData,\n        TQueryData,\n        TQueryKey\n      >\n    }\n\n    const defaultedOptions = {\n      ...this.#defaultOptions.queries,\n      ...this.getQueryDefaults(options.queryKey),\n      ...options,\n      _defaulted: true,\n    }\n\n    if (!defaultedOptions.queryHash) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(\n        defaultedOptions.queryKey,\n        defaultedOptions,\n      )\n    }\n\n    // dependent default values\n    if (defaultedOptions.refetchOnReconnect === undefined) {\n      defaultedOptions.refetchOnReconnect =\n        defaultedOptions.networkMode !== 'always'\n    }\n    if (defaultedOptions.throwOnError === undefined) {\n      defaultedOptions.throwOnError = !!defaultedOptions.suspense\n    }\n\n    if (!defaultedOptions.networkMode && defaultedOptions.persister) {\n      defaultedOptions.networkMode = 'offlineFirst'\n    }\n\n    if (defaultedOptions.queryFn === skipToken) {\n      defaultedOptions.enabled = false\n    }\n\n    return defaultedOptions as DefaultedQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >\n  }\n\n  defaultMutationOptions<T extends MutationOptions<any, any, any, any>>(\n    options?: T,\n  ): T {\n    if (options?._defaulted) {\n      return options\n    }\n    return {\n      ...this.#defaultOptions.mutations,\n      ...(options?.mutationKey &&\n        this.getMutationDefaults(options.mutationKey)),\n      ...options,\n      _defaulted: true,\n    } as T\n  }\n\n  clear(): void {\n    this.#queryCache.clear()\n    this.#mutationCache.clear()\n  }\n}\n","'use client'\nimport * as React from 'react'\n\nimport type { QueryClient } from '@tanstack/query-core'\n\nexport const QueryClientContext = React.createContext<QueryClient | undefined>(\n  undefined,\n)\n\nexport const useQueryClient = (queryClient?: QueryClient) => {\n  const client = React.useContext(QueryClientContext)\n\n  if (queryClient) {\n    return queryClient\n  }\n\n  if (!client) {\n    throw new Error('No QueryClient set, use QueryClientProvider to set one')\n  }\n\n  return client\n}\n\nexport type QueryClientProviderProps = {\n  client: QueryClient\n  children?: React.ReactNode\n}\n\nexport const QueryClientProvider = ({\n  client,\n  children,\n}: QueryClientProviderProps): React.JSX.Element => {\n  React.useEffect(() => {\n    client.mount()\n    return () => {\n      client.unmount()\n    }\n  }, [client])\n\n  return (\n    <QueryClientContext.Provider value={client}>\n      {children}\n    </QueryClientContext.Provider>\n  )\n}\n","import type { Rdns } from './register.js'\nimport type { EIP6963ProviderDetail } from './types.js'\nimport { requestProviders } from './utils.js'\n\nexport type Listener = (\n  providerDetails: readonly EIP6963ProviderDetail[],\n  meta?:\n    | {\n        added?: readonly EIP6963ProviderDetail[] | undefined\n        removed?: readonly EIP6963ProviderDetail[] | undefined\n      }\n    | undefined,\n) => void\n\nexport type Store = {\n  /**\n   * Clears the store, including all provider details.\n   */\n  clear(): void\n  /**\n   * Destroys the store, including all provider details and listeners.\n   */\n  destroy(): void\n  /**\n   * Finds a provider detail by its RDNS (Reverse Domain Name Identifier).\n   */\n  findProvider(args: { rdns: Rdns }): EIP6963ProviderDetail | undefined\n  /**\n   * Returns all provider details that have been emitted.\n   */\n  getProviders(): readonly EIP6963ProviderDetail[]\n  /**\n   * Resets the store, and emits an event to request provider details.\n   */\n  reset(): void\n  /**\n   * Subscribes to emitted provider details.\n   */\n  subscribe(\n    listener: Listener,\n    args?: { emitImmediately?: boolean | undefined } | undefined,\n  ): () => void\n\n  /**\n   * @internal\n   * Current state of listening listeners.\n   */\n  _listeners(): Set<Listener>\n}\n\nexport function createStore(): Store {\n  const listeners: Set<Listener> = new Set()\n  let providerDetails: readonly EIP6963ProviderDetail[] = []\n\n  const request = () =>\n    requestProviders((providerDetail) => {\n      if (\n        providerDetails.some(\n          ({ info }) => info.uuid === providerDetail.info.uuid,\n        )\n      )\n        return\n\n      providerDetails = [...providerDetails, providerDetail]\n      listeners.forEach((listener) =>\n        listener(providerDetails, { added: [providerDetail] }),\n      )\n    })\n  let unwatch = request()\n\n  return {\n    _listeners() {\n      return listeners\n    },\n    clear() {\n      listeners.forEach((listener) =>\n        listener([], { removed: [...providerDetails] }),\n      )\n      providerDetails = []\n    },\n    destroy() {\n      this.clear()\n      listeners.clear()\n      unwatch?.()\n    },\n    findProvider({ rdns }) {\n      return providerDetails.find(\n        (providerDetail) => providerDetail.info.rdns === rdns,\n      )\n    },\n    getProviders() {\n      return providerDetails\n    },\n    reset() {\n      this.clear()\n      unwatch?.()\n      unwatch = request()\n    },\n    subscribe(listener, { emitImmediately } = {}) {\n      listeners.add(listener)\n      if (emitImmediately) listener(providerDetails, { added: providerDetails })\n      return () => listeners.delete(listener)\n    },\n  }\n}\n","import type { EIP1193Provider } from './register.js'\nimport type {\n  EIP6963AnnounceProviderEvent,\n  EIP6963ProviderDetail,\n} from './types.js'\n\n////////////////////////////////////////////////////////////////////////////\n// Announce Provider\n\nexport type AnnounceProviderParameters = EIP6963ProviderDetail<\n  EIP1193Provider,\n  string\n>\nexport type AnnounceProviderReturnType = () => void\n\n/**\n * Announces an EIP-1193 Provider.\n */\nexport function announceProvider(\n  detail: AnnounceProviderParameters,\n): AnnounceProviderReturnType {\n  const event: CustomEvent<EIP6963ProviderDetail> = new CustomEvent(\n    'eip6963:announceProvider',\n    { detail: Object.freeze(detail) },\n  )\n\n  window.dispatchEvent(event)\n\n  const handler = () => window.dispatchEvent(event)\n  window.addEventListener('eip6963:requestProvider', handler)\n  return () => window.removeEventListener('eip6963:requestProvider', handler)\n}\n\n////////////////////////////////////////////////////////////////////////////\n// Request Providers\n\nexport type RequestProvidersParameters = (\n  providerDetail: EIP6963ProviderDetail,\n) => void\nexport type RequestProvidersReturnType = (() => void) | undefined\n\n/**\n * Watches for EIP-1193 Providers to be announced.\n */\nexport function requestProviders(\n  listener: RequestProvidersParameters,\n): RequestProvidersReturnType {\n  if (typeof window === 'undefined') return\n  const handler = (event: EIP6963AnnounceProviderEvent) =>\n    listener(event.detail)\n\n  window.addEventListener('eip6963:announceProvider', handler)\n\n  window.dispatchEvent(new CustomEvent('eip6963:requestProvider'))\n\n  return () => window.removeEventListener('eip6963:announceProvider', handler)\n}\n","const reduxImpl = (reducer, initial) => (set, _get, api) => {\n  api.dispatch = (action) => {\n    set((state) => reducer(state, action), false, action);\n    return action;\n  };\n  api.dispatchFromDevtools = true;\n  return { dispatch: (...a) => api.dispatch(...a), ...initial };\n};\nconst redux = reduxImpl;\n\nconst trackedConnections = /* @__PURE__ */ new Map();\nconst getTrackedConnectionState = (name) => {\n  const api = trackedConnections.get(name);\n  if (!api) return {};\n  return Object.fromEntries(\n    Object.entries(api.stores).map(([key, api2]) => [key, api2.getState()])\n  );\n};\nconst extractConnectionInformation = (store, extensionConnector, options) => {\n  if (store === void 0) {\n    return {\n      type: \"untracked\",\n      connection: extensionConnector.connect(options)\n    };\n  }\n  const existingConnection = trackedConnections.get(options.name);\n  if (existingConnection) {\n    return { type: \"tracked\", store, ...existingConnection };\n  }\n  const newConnection = {\n    connection: extensionConnector.connect(options),\n    stores: {}\n  };\n  trackedConnections.set(options.name, newConnection);\n  return { type: \"tracked\", store, ...newConnection };\n};\nconst devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {\n  const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\n  let extensionConnector;\n  try {\n    extensionConnector = (enabled != null ? enabled : (import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch (e) {\n  }\n  if (!extensionConnector) {\n    return fn(set, get, api);\n  }\n  const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\n  let isRecording = true;\n  api.setState = (state, replace, nameOrAction) => {\n    const r = set(state, replace);\n    if (!isRecording) return r;\n    const action = nameOrAction === void 0 ? { type: anonymousActionType || \"anonymous\" } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction;\n    if (store === void 0) {\n      connection == null ? void 0 : connection.send(action, get());\n      return r;\n    }\n    connection == null ? void 0 : connection.send(\n      {\n        ...action,\n        type: `${store}/${action.type}`\n      },\n      {\n        ...getTrackedConnectionState(options.name),\n        [store]: api.getState()\n      }\n    );\n    return r;\n  };\n  const setStateFromDevtools = (...a) => {\n    const originalIsRecording = isRecording;\n    isRecording = false;\n    set(...a);\n    isRecording = originalIsRecording;\n  };\n  const initialState = fn(api.setState, get, api);\n  if (connectionInformation.type === \"untracked\") {\n    connection == null ? void 0 : connection.init(initialState);\n  } else {\n    connectionInformation.stores[connectionInformation.store] = api;\n    connection == null ? void 0 : connection.init(\n      Object.fromEntries(\n        Object.entries(connectionInformation.stores).map(([key, store2]) => [\n          key,\n          key === connectionInformation.store ? initialState : store2.getState()\n        ])\n      )\n    );\n  }\n  if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n    let didWarnAboutReservedActionType = false;\n    const originalDispatch = api.dispatch;\n    api.dispatch = (...a) => {\n      if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && a[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n        console.warn(\n          '[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.'\n        );\n        didWarnAboutReservedActionType = true;\n      }\n      originalDispatch(...a);\n    };\n  }\n  connection.subscribe((message) => {\n    var _a;\n    switch (message.type) {\n      case \"ACTION\":\n        if (typeof message.payload !== \"string\") {\n          console.error(\n            \"[zustand devtools middleware] Unsupported action format\"\n          );\n          return;\n        }\n        return parseJsonThen(\n          message.payload,\n          (action) => {\n            if (action.type === \"__setState\") {\n              if (store === void 0) {\n                setStateFromDevtools(action.state);\n                return;\n              }\n              if (Object.keys(action.state).length !== 1) {\n                console.error(\n                  `\n                    [zustand devtools middleware] Unsupported __setState action format.\n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\n                    `\n                );\n              }\n              const stateFromDevtools = action.state[store];\n              if (stateFromDevtools === void 0 || stateFromDevtools === null) {\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\n                setStateFromDevtools(stateFromDevtools);\n              }\n              return;\n            }\n            if (!api.dispatchFromDevtools) return;\n            if (typeof api.dispatch !== \"function\") return;\n            api.dispatch(action);\n          }\n        );\n      case \"DISPATCH\":\n        switch (message.payload.type) {\n          case \"RESET\":\n            setStateFromDevtools(initialState);\n            if (store === void 0) {\n              return connection == null ? void 0 : connection.init(api.getState());\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"COMMIT\":\n            if (store === void 0) {\n              connection == null ? void 0 : connection.init(api.getState());\n              return;\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"ROLLBACK\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                connection == null ? void 0 : connection.init(api.getState());\n                return;\n              }\n              setStateFromDevtools(state[store]);\n              connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n            });\n          case \"JUMP_TO_STATE\":\n          case \"JUMP_TO_ACTION\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\n                setStateFromDevtools(state[store]);\n              }\n            });\n          case \"IMPORT_STATE\": {\n            const { nextLiftedState } = message.payload;\n            const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a.state;\n            if (!lastComputedState) return;\n            if (store === void 0) {\n              setStateFromDevtools(lastComputedState);\n            } else {\n              setStateFromDevtools(lastComputedState[store]);\n            }\n            connection == null ? void 0 : connection.send(\n              null,\n              // FIXME no-any\n              nextLiftedState\n            );\n            return;\n          }\n          case \"PAUSE_RECORDING\":\n            return isRecording = !isRecording;\n        }\n        return;\n    }\n  });\n  return initialState;\n};\nconst devtools = devtoolsImpl;\nconst parseJsonThen = (stringified, f) => {\n  let parsed;\n  try {\n    parsed = JSON.parse(stringified);\n  } catch (e) {\n    console.error(\n      \"[zustand devtools middleware] Could not parse the received json\",\n      e\n    );\n  }\n  if (parsed !== void 0) f(parsed);\n};\n\nconst subscribeWithSelectorImpl = (fn) => (set, get, api) => {\n  const origSubscribe = api.subscribe;\n  api.subscribe = (selector, optListener, options) => {\n    let listener = selector;\n    if (optListener) {\n      const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\n      let currentSlice = selector(api.getState());\n      listener = (state) => {\n        const nextSlice = selector(state);\n        if (!equalityFn(currentSlice, nextSlice)) {\n          const previousSlice = currentSlice;\n          optListener(currentSlice = nextSlice, previousSlice);\n        }\n      };\n      if (options == null ? void 0 : options.fireImmediately) {\n        optListener(currentSlice, currentSlice);\n      }\n    }\n    return origSubscribe(listener);\n  };\n  const initialState = fn(set, get, api);\n  return initialState;\n};\nconst subscribeWithSelector = subscribeWithSelectorImpl;\n\nconst combine = (initialState, create) => (...a) => Object.assign({}, initialState, create(...a));\n\nfunction createJSONStorage(getStorage, options) {\n  let storage;\n  try {\n    storage = getStorage();\n  } catch (e) {\n    return;\n  }\n  const persistStorage = {\n    getItem: (name) => {\n      var _a;\n      const parse = (str2) => {\n        if (str2 === null) {\n          return null;\n        }\n        return JSON.parse(str2, options == null ? void 0 : options.reviver);\n      };\n      const str = (_a = storage.getItem(name)) != null ? _a : null;\n      if (str instanceof Promise) {\n        return str.then(parse);\n      }\n      return parse(str);\n    },\n    setItem: (name, newValue) => storage.setItem(\n      name,\n      JSON.stringify(newValue, options == null ? void 0 : options.replacer)\n    ),\n    removeItem: (name) => storage.removeItem(name)\n  };\n  return persistStorage;\n}\nconst toThenable = (fn) => (input) => {\n  try {\n    const result = fn(input);\n    if (result instanceof Promise) {\n      return result;\n    }\n    return {\n      then(onFulfilled) {\n        return toThenable(onFulfilled)(result);\n      },\n      catch(_onRejected) {\n        return this;\n      }\n    };\n  } catch (e) {\n    return {\n      then(_onFulfilled) {\n        return this;\n      },\n      catch(onRejected) {\n        return toThenable(onRejected)(e);\n      }\n    };\n  }\n};\nconst persistImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    storage: createJSONStorage(() => localStorage),\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage = options.storage;\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    return storage.setItem(options.name, {\n      state,\n      version: options.version\n    });\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  api.getInitialState = () => configResult;\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a, _b;\n    if (!storage) return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => {\n      var _a2;\n      return cb((_a2 = get()) != null ? _a2 : configResult);\n    });\n    const postRehydrationCallback = ((_b = options.onRehydrateStorage) == null ? void 0 : _b.call(options, (_a = get()) != null ? _a : configResult)) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return [\n              true,\n              options.migrate(\n                deserializedStorageValue.state,\n                deserializedStorageValue.version\n              )\n            ];\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return [false, deserializedStorageValue.state];\n        }\n      }\n      return [false, void 0];\n    }).then((migrationResult) => {\n      var _a2;\n      const [migrated, migratedState] = migrationResult;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      if (migrated) {\n        return setItem();\n      }\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      stateFromStorage = get();\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.storage) {\n        storage = newOptions.storage;\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  if (!options.skipHydration) {\n    hydrate();\n  }\n  return stateFromStorage || configResult;\n};\nconst persist = persistImpl;\n\nexport { combine, createJSONStorage, devtools, persist, redux, subscribeWithSelector };\n","const createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\" || nextState === null) ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const getInitialState = () => initialState;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const api = { setState, getState, getInitialState, subscribe };\n  const initialState = state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\n\nexport { createStore };\n","export const version = '2.20.3'\n","import type { Compute, OneOf } from '../types/utils.js'\nimport { getVersion } from '../utils/getVersion.js'\n\nexport type ErrorType<name extends string = 'Error'> = Error & { name: name }\n\ntype BaseErrorOptions = Compute<\n  OneOf<{ details?: string | undefined } | { cause: BaseError | Error }> & {\n    docsPath?: string | undefined\n    docsSlug?: string | undefined\n    metaMessages?: string[] | undefined\n  }\n>\n\nexport type BaseErrorType = BaseError & { name: 'WagmiCoreError' }\nexport class BaseError extends Error {\n  details: string\n  docsPath?: string | undefined\n  metaMessages?: string[] | undefined\n  shortMessage: string\n\n  override name = 'WagmiCoreError'\n  get docsBaseUrl() {\n    return 'https://wagmi.sh/core'\n  }\n  get version() {\n    return getVersion()\n  }\n\n  constructor(shortMessage: string, options: BaseErrorOptions = {}) {\n    super()\n\n    const details =\n      options.cause instanceof BaseError\n        ? options.cause.details\n        : options.cause?.message\n          ? options.cause.message\n          : options.details!\n    const docsPath =\n      options.cause instanceof BaseError\n        ? options.cause.docsPath || options.docsPath\n        : options.docsPath\n\n    this.message = [\n      shortMessage || 'An error occurred.',\n      '',\n      ...(options.metaMessages ? [...options.metaMessages, ''] : []),\n      ...(docsPath\n        ? [\n            `Docs: ${this.docsBaseUrl}${docsPath}.html${\n              options.docsSlug ? `#${options.docsSlug}` : ''\n            }`,\n          ]\n        : []),\n      ...(details ? [`Details: ${details}`] : []),\n      `Version: ${this.version}`,\n    ].join('\\n')\n\n    if (options.cause) this.cause = options.cause\n    this.details = details\n    this.docsPath = docsPath\n    this.metaMessages = options.metaMessages\n    this.shortMessage = shortMessage\n  }\n\n  walk(fn?: (err: unknown) => boolean) {\n    return this.#walk(this, fn)\n  }\n\n  #walk(err: unknown, fn?: (err: unknown) => boolean): unknown {\n    if (fn?.(err)) return err\n    if ((err as Error).cause) return this.#walk((err as Error).cause, fn)\n    return err\n  }\n}\n","import { version } from '../version.js'\n\nexport const getVersion = () => `@wagmi/core@${version}`\n","import type { Address } from 'viem'\n\nimport type { Connector } from '../createConfig.js'\nimport { BaseError } from './base.js'\n\nexport type ChainNotConfiguredErrorType = ChainNotConfiguredError & {\n  name: 'ChainNotConfiguredError'\n}\nexport class ChainNotConfiguredError extends BaseError {\n  override name = 'ChainNotConfiguredError'\n  constructor() {\n    super('Chain not configured.')\n  }\n}\n\nexport type ConnectorAlreadyConnectedErrorType =\n  ConnectorAlreadyConnectedError & {\n    name: 'ConnectorAlreadyConnectedError'\n  }\nexport class ConnectorAlreadyConnectedError extends BaseError {\n  override name = 'ConnectorAlreadyConnectedError'\n  constructor() {\n    super('Connector already connected.')\n  }\n}\n\nexport type ConnectorNotConnectedErrorType = ConnectorNotConnectedError & {\n  name: 'ConnectorNotConnectedError'\n}\nexport class ConnectorNotConnectedError extends BaseError {\n  override name = 'ConnectorNotConnectedError'\n  constructor() {\n    super('Connector not connected.')\n  }\n}\n\nexport type ConnectorNotFoundErrorType = ConnectorNotFoundError & {\n  name: 'ConnectorNotFoundError'\n}\nexport class ConnectorNotFoundError extends BaseError {\n  override name = 'ConnectorNotFoundError'\n  constructor() {\n    super('Connector not found.')\n  }\n}\n\nexport type ConnectorAccountNotFoundErrorType =\n  ConnectorAccountNotFoundError & {\n    name: 'ConnectorAccountNotFoundError'\n  }\nexport class ConnectorAccountNotFoundError extends BaseError {\n  override name = 'ConnectorAccountNotFoundError'\n  constructor({\n    address,\n    connector,\n  }: {\n    address: Address\n    connector: Connector\n  }) {\n    super(`Account \"${address}\" not found for connector \"${connector.name}\".`)\n  }\n}\n\nexport type ConnectorChainMismatchErrorType = ConnectorAccountNotFoundError & {\n  name: 'ConnectorChainMismatchError'\n}\nexport class ConnectorChainMismatchError extends BaseError {\n  override name = 'ConnectorChainMismatchError'\n  constructor({\n    connectionChainId,\n    connectorChainId,\n  }: {\n    connectionChainId: number\n    connectorChainId: number\n  }) {\n    super(\n      `The current chain of the connector (id: ${connectorChainId}) does not match the connection's chain (id: ${connectionChainId}).`,\n      {\n        metaMessages: [\n          `Current Chain ID:  ${connectorChainId}`,\n          `Expected Chain ID: ${connectionChainId}`,\n        ],\n      },\n    )\n  }\n}\n\nexport type ConnectorUnavailableReconnectingErrorType =\n  ConnectorUnavailableReconnectingError & {\n    name: 'ConnectorUnavailableReconnectingError'\n  }\nexport class ConnectorUnavailableReconnectingError extends BaseError {\n  override name = 'ConnectorUnavailableReconnectingError'\n  constructor({ connector }: { connector: { name: string } }) {\n    super(`Connector \"${connector.name}\" unavailable while reconnecting.`, {\n      details: [\n        'During the reconnection step, the only connector methods guaranteed to be available are: `id`, `name`, `type`, `uid`.',\n        'All other methods are not guaranteed to be available until reconnection completes and connectors are fully restored.',\n        'This error commonly occurs for connectors that asynchronously inject after reconnection has already started.',\n      ].join(' '),\n    })\n  }\n}\n","import type { Connector } from '../createConfig.js'\nimport { BaseError } from './base.js'\n\nexport type ProviderNotFoundErrorType = ProviderNotFoundError & {\n  name: 'ProviderNotFoundError'\n}\nexport class ProviderNotFoundError extends BaseError {\n  override name = 'ProviderNotFoundError'\n  constructor() {\n    super('Provider not found.')\n  }\n}\n\nexport type SwitchChainNotSupportedErrorType = SwitchChainNotSupportedError & {\n  name: 'SwitchChainNotSupportedError'\n}\nexport class SwitchChainNotSupportedError extends BaseError {\n  override name = 'SwitchChainNotSupportedError'\n\n  constructor({ connector }: { connector: Connector }) {\n    super(`\"${connector.name}\" does not support programmatic chain switching.`)\n  }\n}\n","import {\n  type AddEthereumChainParameter,\n  type Address,\n  type EIP1193Provider,\n  getAddress,\n  numberToHex,\n  type ProviderConnectInfo,\n  type ProviderRpcError,\n  ResourceUnavailableRpcError,\n  type RpcError,\n  SwitchChainError,\n  UserRejectedRequestError,\n  withRetry,\n  withTimeout,\n} from 'viem'\n\nimport type { Connector } from '../createConfig.js'\nimport { ChainNotConfiguredError } from '../errors/config.js'\nimport { ProviderNotFoundError } from '../errors/connector.js'\nimport type { Compute } from '../types/utils.js'\nimport { createConnector } from './createConnector.js'\n\nexport type InjectedParameters = {\n  /**\n   * Some injected providers do not support programmatic disconnect.\n   * This flag simulates the disconnect behavior by keeping track of connection status in storage.\n   * @default true\n   */\n  shimDisconnect?: boolean | undefined\n  /**\n   * [EIP-1193](https://eips.ethereum.org/EIPS/eip-1193) Ethereum Provider to target\n   */\n  target?: TargetId | Target | (() => Target | undefined) | undefined\n  unstable_shimAsyncInject?: boolean | number | undefined\n}\n\ninjected.type = 'injected' as const\nexport function injected(parameters: InjectedParameters = {}) {\n  const { shimDisconnect = true, unstable_shimAsyncInject } = parameters\n\n  function getTarget(): Compute<Target & { id: string }> {\n    const target = parameters.target\n    if (typeof target === 'function') {\n      const result = target()\n      if (result) return result\n    }\n\n    if (typeof target === 'object') return target\n\n    if (typeof target === 'string')\n      return {\n        ...(targetMap[target as keyof typeof targetMap] ?? {\n          id: target,\n          name: `${target[0]!.toUpperCase()}${target.slice(1)}`,\n          provider: `is${target[0]!.toUpperCase()}${target.slice(1)}`,\n        }),\n      }\n\n    return {\n      id: 'injected',\n      name: 'Injected',\n      provider(window) {\n        return window?.ethereum\n      },\n    }\n  }\n\n  type Provider = WalletProvider | undefined\n  type Properties = {\n    onConnect(connectInfo: ProviderConnectInfo): void\n  }\n  type StorageItem = {\n    [_ in 'injected.connected' | `${string}.disconnected`]: true\n  }\n\n  let accountsChanged: Connector['onAccountsChanged'] | undefined\n  let chainChanged: Connector['onChainChanged'] | undefined\n  let connect: Connector['onConnect'] | undefined\n  let disconnect: Connector['onDisconnect'] | undefined\n\n  return createConnector<Provider, Properties, StorageItem>((config) => ({\n    get icon() {\n      return getTarget().icon\n    },\n    get id() {\n      return getTarget().id\n    },\n    get name() {\n      return getTarget().name\n    },\n    /** @deprecated */\n    get supportsSimulation() {\n      return true\n    },\n    type: injected.type,\n    async setup() {\n      const provider = await this.getProvider()\n      // Only start listening for events if `target` is set, otherwise `injected()` will also receive events\n      if (provider?.on && parameters.target) {\n        if (!connect) {\n          connect = this.onConnect.bind(this)\n          provider.on('connect', connect)\n        }\n\n        // We shouldn't need to listen for `'accountsChanged'` here since the `'connect'` event should suffice (and wallet shouldn't be connected yet).\n        // Some wallets, like MetaMask, do not implement the `'connect'` event and overload `'accountsChanged'` instead.\n        if (!accountsChanged) {\n          accountsChanged = this.onAccountsChanged.bind(this)\n          provider.on('accountsChanged', accountsChanged)\n        }\n      }\n    },\n    async connect({ chainId, isReconnecting } = {}) {\n      const provider = await this.getProvider()\n      if (!provider) throw new ProviderNotFoundError()\n\n      let accounts: readonly Address[] = []\n      if (isReconnecting) accounts = await this.getAccounts().catch(() => [])\n      else if (shimDisconnect) {\n        // Attempt to show another prompt for selecting account if `shimDisconnect` flag is enabled\n        try {\n          const permissions = await provider.request({\n            method: 'wallet_requestPermissions',\n            params: [{ eth_accounts: {} }],\n          })\n          accounts = (permissions[0]?.caveats?.[0]?.value as string[])?.map(\n            (x) => getAddress(x),\n          )\n          // `'wallet_requestPermissions'` can return a different order of accounts than `'eth_accounts'`\n          // switch to `'eth_accounts'` ordering if more than one account is connected\n          // https://github.com/wevm/wagmi/issues/4140\n          if (accounts.length > 0) {\n            const sortedAccounts = await this.getAccounts()\n            accounts = sortedAccounts\n          }\n        } catch (err) {\n          const error = err as RpcError\n          // Not all injected providers support `wallet_requestPermissions` (e.g. MetaMask iOS).\n          // Only bubble up error if user rejects request\n          if (error.code === UserRejectedRequestError.code)\n            throw new UserRejectedRequestError(error)\n          // Or prompt is already open\n          if (error.code === ResourceUnavailableRpcError.code) throw error\n        }\n      }\n\n      try {\n        if (!accounts?.length && !isReconnecting) {\n          const requestedAccounts = await provider.request({\n            method: 'eth_requestAccounts',\n          })\n          accounts = requestedAccounts.map((x) => getAddress(x))\n        }\n\n        // Manage EIP-1193 event listeners\n        // https://eips.ethereum.org/EIPS/eip-1193#events\n        if (connect) {\n          provider.removeListener('connect', connect)\n          connect = undefined\n        }\n        if (!accountsChanged) {\n          accountsChanged = this.onAccountsChanged.bind(this)\n          provider.on('accountsChanged', accountsChanged)\n        }\n        if (!chainChanged) {\n          chainChanged = this.onChainChanged.bind(this)\n          provider.on('chainChanged', chainChanged)\n        }\n        if (!disconnect) {\n          disconnect = this.onDisconnect.bind(this)\n          provider.on('disconnect', disconnect)\n        }\n\n        // Switch to chain if provided\n        let currentChainId = await this.getChainId()\n        if (chainId && currentChainId !== chainId) {\n          const chain = await this.switchChain!({ chainId }).catch((error) => {\n            if (error.code === UserRejectedRequestError.code) throw error\n            return { id: currentChainId }\n          })\n          currentChainId = chain?.id ?? currentChainId\n        }\n\n        // Remove disconnected shim if it exists\n        if (shimDisconnect)\n          await config.storage?.removeItem(`${this.id}.disconnected`)\n\n        // Add connected shim if no target exists\n        if (!parameters.target)\n          await config.storage?.setItem('injected.connected', true)\n\n        return { accounts, chainId: currentChainId }\n      } catch (err) {\n        const error = err as RpcError\n        if (error.code === UserRejectedRequestError.code)\n          throw new UserRejectedRequestError(error)\n        if (error.code === ResourceUnavailableRpcError.code)\n          throw new ResourceUnavailableRpcError(error)\n        throw error\n      }\n    },\n    async disconnect() {\n      const provider = await this.getProvider()\n      if (!provider) throw new ProviderNotFoundError()\n\n      // Manage EIP-1193 event listeners\n      if (chainChanged) {\n        provider.removeListener('chainChanged', chainChanged)\n        chainChanged = undefined\n      }\n      if (disconnect) {\n        provider.removeListener('disconnect', disconnect)\n        disconnect = undefined\n      }\n      if (!connect) {\n        connect = this.onConnect.bind(this)\n        provider.on('connect', connect)\n      }\n\n      // Experimental support for MetaMask disconnect\n      // https://github.com/MetaMask/metamask-improvement-proposals/blob/main/MIPs/mip-2.md\n      try {\n        // Adding timeout as not all wallets support this method and can hang\n        // https://github.com/wevm/wagmi/issues/4064\n        await withTimeout(\n          () =>\n            // TODO: Remove explicit type for viem@3\n            provider.request<{\n              Method: 'wallet_revokePermissions'\n              Parameters: [permissions: { eth_accounts: Record<string, any> }]\n              ReturnType: null\n            }>({\n              // `'wallet_revokePermissions'` added in `viem@2.10.3`\n              method: 'wallet_revokePermissions',\n              params: [{ eth_accounts: {} }],\n            }),\n          { timeout: 100 },\n        )\n      } catch {}\n\n      // Add shim signalling connector is disconnected\n      if (shimDisconnect) {\n        await config.storage?.setItem(`${this.id}.disconnected`, true)\n      }\n\n      if (!parameters.target)\n        await config.storage?.removeItem('injected.connected')\n    },\n    async getAccounts() {\n      const provider = await this.getProvider()\n      if (!provider) throw new ProviderNotFoundError()\n      const accounts = await provider.request({ method: 'eth_accounts' })\n      return accounts.map((x) => getAddress(x))\n    },\n    async getChainId() {\n      const provider = await this.getProvider()\n      if (!provider) throw new ProviderNotFoundError()\n      const hexChainId = await provider.request({ method: 'eth_chainId' })\n      return Number(hexChainId)\n    },\n    async getProvider() {\n      if (typeof window === 'undefined') return undefined\n\n      let provider: Provider\n      const target = getTarget()\n      if (typeof target.provider === 'function')\n        provider = target.provider(window as Window | undefined)\n      else if (typeof target.provider === 'string')\n        provider = findProvider(window, target.provider)\n      else provider = target.provider\n\n      // Some wallets do not conform to EIP-1193 (e.g. Trust Wallet)\n      // https://github.com/wevm/wagmi/issues/3526#issuecomment-1912683002\n      if (provider && !provider.removeListener) {\n        // Try using `off` handler if it exists, otherwise noop\n        if ('off' in provider && typeof provider.off === 'function')\n          provider.removeListener =\n            provider.off as typeof provider.removeListener\n        else provider.removeListener = () => {}\n      }\n\n      return provider\n    },\n    async isAuthorized() {\n      try {\n        const isDisconnected =\n          shimDisconnect &&\n          // If shim exists in storage, connector is disconnected\n          (await config.storage?.getItem(`${this.id}.disconnected`))\n        if (isDisconnected) return false\n\n        // Don't allow injected connector to connect if no target is set and it hasn't already connected\n        // (e.g. flag in storage is not set). This prevents a targetless injected connector from connecting\n        // automatically whenever there is a targeted connector configured.\n        if (!parameters.target) {\n          const connected = await config.storage?.getItem('injected.connected')\n          if (!connected) return false\n        }\n\n        const provider = await this.getProvider()\n        if (!provider) {\n          if (\n            unstable_shimAsyncInject !== undefined &&\n            unstable_shimAsyncInject !== false\n          ) {\n            // If no provider is found, check for async injection\n            // https://github.com/wevm/references/issues/167\n            // https://github.com/MetaMask/detect-provider\n            const handleEthereum = async () => {\n              if (typeof window !== 'undefined')\n                window.removeEventListener(\n                  'ethereum#initialized',\n                  handleEthereum,\n                )\n              const provider = await this.getProvider()\n              return !!provider\n            }\n            const timeout =\n              typeof unstable_shimAsyncInject === 'number'\n                ? unstable_shimAsyncInject\n                : 1_000\n            const res = await Promise.race([\n              ...(typeof window !== 'undefined'\n                ? [\n                    new Promise<boolean>((resolve) =>\n                      window.addEventListener(\n                        'ethereum#initialized',\n                        () => resolve(handleEthereum()),\n                        { once: true },\n                      ),\n                    ),\n                  ]\n                : []),\n              new Promise<boolean>((resolve) =>\n                setTimeout(() => resolve(handleEthereum()), timeout),\n              ),\n            ])\n            if (res) return true\n          }\n\n          throw new ProviderNotFoundError()\n        }\n\n        // Use retry strategy as some injected wallets (e.g. MetaMask) fail to\n        // immediately resolve JSON-RPC requests on page load.\n        const accounts = await withRetry(() => this.getAccounts())\n        return !!accounts.length\n      } catch {\n        return false\n      }\n    },\n    async switchChain({ addEthereumChainParameter, chainId }) {\n      const provider = await this.getProvider()\n      if (!provider) throw new ProviderNotFoundError()\n\n      const chain = config.chains.find((x) => x.id === chainId)\n      if (!chain) throw new SwitchChainError(new ChainNotConfiguredError())\n\n      const promise = new Promise<void>((resolve) => {\n        const listener = ((data) => {\n          if ('chainId' in data && data.chainId === chainId) {\n            config.emitter.off('change', listener)\n            resolve()\n          }\n        }) satisfies Parameters<typeof config.emitter.on>[1]\n        config.emitter.on('change', listener)\n      })\n\n      try {\n        await Promise.all([\n          provider\n            .request({\n              method: 'wallet_switchEthereumChain',\n              params: [{ chainId: numberToHex(chainId) }],\n            })\n            // During `'wallet_switchEthereumChain'`, MetaMask makes a `'net_version'` RPC call to the target chain.\n            // If this request fails, MetaMask does not emit the `'chainChanged'` event, but will still switch the chain.\n            // To counter this behavior, we request and emit the current chain ID to confirm the chain switch either via\n            // this callback or an externally emitted `'chainChanged'` event.\n            // https://github.com/MetaMask/metamask-extension/issues/24247\n            .then(async () => {\n              const currentChainId = await this.getChainId()\n              if (currentChainId === chainId)\n                config.emitter.emit('change', { chainId })\n            }),\n          promise,\n        ])\n        return chain\n      } catch (err) {\n        const error = err as RpcError\n\n        // Indicates chain is not added to provider\n        if (\n          error.code === 4902 ||\n          // Unwrapping for MetaMask Mobile\n          // https://github.com/MetaMask/metamask-mobile/issues/2944#issuecomment-976988719\n          (error as ProviderRpcError<{ originalError?: { code: number } }>)\n            ?.data?.originalError?.code === 4902\n        ) {\n          try {\n            const { default: blockExplorer, ...blockExplorers } =\n              chain.blockExplorers ?? {}\n            let blockExplorerUrls: string[] | undefined\n            if (addEthereumChainParameter?.blockExplorerUrls)\n              blockExplorerUrls = addEthereumChainParameter.blockExplorerUrls\n            else if (blockExplorer)\n              blockExplorerUrls = [\n                blockExplorer.url,\n                ...Object.values(blockExplorers).map((x) => x.url),\n              ]\n\n            let rpcUrls: readonly string[]\n            if (addEthereumChainParameter?.rpcUrls?.length)\n              rpcUrls = addEthereumChainParameter.rpcUrls\n            else rpcUrls = [chain.rpcUrls.default?.http[0] ?? '']\n\n            const addEthereumChain = {\n              blockExplorerUrls,\n              chainId: numberToHex(chainId),\n              chainName: addEthereumChainParameter?.chainName ?? chain.name,\n              iconUrls: addEthereumChainParameter?.iconUrls,\n              nativeCurrency:\n                addEthereumChainParameter?.nativeCurrency ??\n                chain.nativeCurrency,\n              rpcUrls,\n            } satisfies AddEthereumChainParameter\n\n            await Promise.all([\n              provider\n                .request({\n                  method: 'wallet_addEthereumChain',\n                  params: [addEthereumChain],\n                })\n                .then(async () => {\n                  const currentChainId = await this.getChainId()\n                  if (currentChainId === chainId)\n                    config.emitter.emit('change', { chainId })\n                  else\n                    throw new UserRejectedRequestError(\n                      new Error('User rejected switch after adding network.'),\n                    )\n                }),\n              promise,\n            ])\n\n            return chain\n          } catch (error) {\n            throw new UserRejectedRequestError(error as Error)\n          }\n        }\n\n        if (error.code === UserRejectedRequestError.code)\n          throw new UserRejectedRequestError(error)\n        throw new SwitchChainError(error)\n      }\n    },\n    async onAccountsChanged(accounts) {\n      // Disconnect if there are no accounts\n      if (accounts.length === 0) this.onDisconnect()\n      // Connect if emitter is listening for connect event (e.g. is disconnected and connects through wallet interface)\n      else if (config.emitter.listenerCount('connect')) {\n        const chainId = (await this.getChainId()).toString()\n        this.onConnect({ chainId })\n        // Remove disconnected shim if it exists\n        if (shimDisconnect)\n          await config.storage?.removeItem(`${this.id}.disconnected`)\n      }\n      // Regular change event\n      else\n        config.emitter.emit('change', {\n          accounts: accounts.map((x) => getAddress(x)),\n        })\n    },\n    onChainChanged(chain) {\n      const chainId = Number(chain)\n      config.emitter.emit('change', { chainId })\n    },\n    async onConnect(connectInfo) {\n      const accounts = await this.getAccounts()\n      if (accounts.length === 0) return\n\n      const chainId = Number(connectInfo.chainId)\n      config.emitter.emit('connect', { accounts, chainId })\n\n      // Manage EIP-1193 event listeners\n      const provider = await this.getProvider()\n      if (provider) {\n        if (connect) {\n          provider.removeListener('connect', connect)\n          connect = undefined\n        }\n        if (!accountsChanged) {\n          accountsChanged = this.onAccountsChanged.bind(this)\n          provider.on('accountsChanged', accountsChanged)\n        }\n        if (!chainChanged) {\n          chainChanged = this.onChainChanged.bind(this)\n          provider.on('chainChanged', chainChanged)\n        }\n        if (!disconnect) {\n          disconnect = this.onDisconnect.bind(this)\n          provider.on('disconnect', disconnect)\n        }\n      }\n    },\n    async onDisconnect(error) {\n      const provider = await this.getProvider()\n\n      // If MetaMask emits a `code: 1013` error, wait for reconnection before disconnecting\n      // https://github.com/MetaMask/providers/pull/120\n      if (error && (error as RpcError<1013>).code === 1013) {\n        if (provider && !!(await this.getAccounts()).length) return\n      }\n\n      // No need to remove `${this.id}.disconnected` from storage because `onDisconnect` is typically\n      // only called when the wallet is disconnected through the wallet's interface, meaning the wallet\n      // actually disconnected and we don't need to simulate it.\n      config.emitter.emit('disconnect')\n\n      // Manage EIP-1193 event listeners\n      if (provider) {\n        if (chainChanged) {\n          provider.removeListener('chainChanged', chainChanged)\n          chainChanged = undefined\n        }\n        if (disconnect) {\n          provider.removeListener('disconnect', disconnect)\n          disconnect = undefined\n        }\n        if (!connect) {\n          connect = this.onConnect.bind(this)\n          provider.on('connect', connect)\n        }\n      }\n    },\n  }))\n}\n\nconst targetMap = {\n  coinbaseWallet: {\n    id: 'coinbaseWallet',\n    name: 'Coinbase Wallet',\n    provider(window) {\n      if (window?.coinbaseWalletExtension) return window.coinbaseWalletExtension\n      return findProvider(window, 'isCoinbaseWallet')\n    },\n  },\n  metaMask: {\n    id: 'metaMask',\n    name: 'MetaMask',\n    provider(window) {\n      return findProvider(window, (provider) => {\n        if (!provider.isMetaMask) return false\n        // Brave tries to make itself look like MetaMask\n        // Could also try RPC `web3_clientVersion` if following is unreliable\n        if (provider.isBraveWallet && !provider._events && !provider._state)\n          return false\n        // Other wallets that try to look like MetaMask\n        const flags = [\n          'isApexWallet',\n          'isAvalanche',\n          'isBitKeep',\n          'isBlockWallet',\n          'isKuCoinWallet',\n          'isMathWallet',\n          'isOkxWallet',\n          'isOKExWallet',\n          'isOneInchIOSWallet',\n          'isOneInchAndroidWallet',\n          'isOpera',\n          'isPhantom',\n          'isPortal',\n          'isRabby',\n          'isTokenPocket',\n          'isTokenary',\n          'isUniswapWallet',\n          'isZerion',\n        ] satisfies WalletProviderFlags[]\n        for (const flag of flags) if (provider[flag]) return false\n        return true\n      })\n    },\n  },\n  phantom: {\n    id: 'phantom',\n    name: 'Phantom',\n    provider(window) {\n      if (window?.phantom?.ethereum) return window.phantom?.ethereum\n      return findProvider(window, 'isPhantom')\n    },\n  },\n} as const satisfies TargetMap\n\ntype TargetMap = { [_ in TargetId]?: Target | undefined }\n\ntype Target = {\n  icon?: string | undefined\n  id: string\n  name: string\n  provider:\n    | WalletProviderFlags\n    | WalletProvider\n    | ((window?: Window | undefined) => WalletProvider | undefined)\n}\n\n/** @deprecated */\ntype TargetId = Compute<WalletProviderFlags> extends `is${infer name}`\n  ? name extends `${infer char}${infer rest}`\n    ? `${Lowercase<char>}${rest}`\n    : never\n  : never\n\n/**\n * @deprecated As of 2024/10/16, we are no longer accepting new provider flags as EIP-6963 should be used instead.\n */\ntype WalletProviderFlags =\n  | 'isApexWallet'\n  | 'isAvalanche'\n  | 'isBackpack'\n  | 'isBifrost'\n  | 'isBitKeep'\n  | 'isBitski'\n  | 'isBlockWallet'\n  | 'isBraveWallet'\n  | 'isCoinbaseWallet'\n  | 'isDawn'\n  | 'isEnkrypt'\n  | 'isExodus'\n  | 'isFrame'\n  | 'isFrontier'\n  | 'isGamestop'\n  | 'isHyperPay'\n  | 'isImToken'\n  | 'isKuCoinWallet'\n  | 'isMathWallet'\n  | 'isMetaMask'\n  | 'isOkxWallet'\n  | 'isOKExWallet'\n  | 'isOneInchAndroidWallet'\n  | 'isOneInchIOSWallet'\n  | 'isOpera'\n  | 'isPhantom'\n  | 'isPortal'\n  | 'isRabby'\n  | 'isRainbow'\n  | 'isStatus'\n  | 'isTally'\n  | 'isTokenPocket'\n  | 'isTokenary'\n  | 'isTrust'\n  | 'isTrustWallet'\n  | 'isUniswapWallet'\n  | 'isXDEFI'\n  | 'isZerion'\n\ntype WalletProvider = Compute<\n  EIP1193Provider & {\n    [key in WalletProviderFlags]?: true | undefined\n  } & {\n    providers?: WalletProvider[] | undefined\n    /** Only exists in MetaMask as of 2022/04/03 */\n    _events?: { connect?: (() => void) | undefined } | undefined\n    /** Only exists in MetaMask as of 2022/04/03 */\n    _state?:\n      | {\n          accounts?: string[]\n          initialized?: boolean\n          isConnected?: boolean\n          isPermanentlyDisconnected?: boolean\n          isUnlocked?: boolean\n        }\n      | undefined\n  }\n>\n\ntype Window = {\n  coinbaseWalletExtension?: WalletProvider | undefined\n  ethereum?: WalletProvider | undefined\n  phantom?: { ethereum: WalletProvider } | undefined\n}\n\nfunction findProvider(\n  window: globalThis.Window | Window | undefined,\n  select?: WalletProviderFlags | ((provider: WalletProvider) => boolean),\n) {\n  function isProvider(provider: WalletProvider) {\n    if (typeof select === 'function') return select(provider)\n    if (typeof select === 'string') return provider[select]\n    return true\n  }\n\n  const ethereum = (window as Window).ethereum\n  if (ethereum?.providers)\n    return ethereum.providers.find((provider) => isProvider(provider))\n  if (ethereum && isProvider(ethereum)) return ethereum\n  return undefined\n}\n","import { EventEmitter } from 'eventemitter3'\n\ntype EventMap = Record<string, object | never>\ntype EventKey<eventMap extends EventMap> = string & keyof eventMap\ntype EventFn<parameters extends unknown[] = any[]> = (\n  ...parameters: parameters\n) => void\nexport type EventData<\n  eventMap extends EventMap,\n  eventName extends keyof eventMap,\n> = (eventMap[eventName] extends [never] ? unknown : eventMap[eventName]) & {\n  uid: string\n}\n\nexport class Emitter<eventMap extends EventMap> {\n  _emitter = new EventEmitter()\n\n  constructor(public uid: string) {}\n\n  on<key extends EventKey<eventMap>>(\n    eventName: key,\n    fn: EventFn<\n      eventMap[key] extends [never]\n        ? [{ uid: string }]\n        : [data: eventMap[key] & { uid: string }]\n    >,\n  ) {\n    this._emitter.on(eventName, fn as EventFn)\n  }\n\n  once<key extends EventKey<eventMap>>(\n    eventName: key,\n    fn: EventFn<\n      eventMap[key] extends [never]\n        ? [{ uid: string }]\n        : [data: eventMap[key] & { uid: string }]\n    >,\n  ) {\n    this._emitter.once(eventName, fn as EventFn)\n  }\n\n  off<key extends EventKey<eventMap>>(\n    eventName: key,\n    fn: EventFn<\n      eventMap[key] extends [never]\n        ? [{ uid: string }]\n        : [data: eventMap[key] & { uid: string }]\n    >,\n  ) {\n    this._emitter.off(eventName, fn as EventFn)\n  }\n\n  emit<key extends EventKey<eventMap>>(\n    eventName: key,\n    ...params: eventMap[key] extends [never] ? [] : [data: eventMap[key]]\n  ) {\n    const data = params[0]\n    this._emitter.emit(eventName, { uid: this.uid, ...data })\n  }\n\n  listenerCount<key extends EventKey<eventMap>>(eventName: key) {\n    return this._emitter.listenerCount(eventName)\n  }\n}\n\nexport function createEmitter<eventMap extends EventMap>(uid: string) {\n  return new Emitter<eventMap>(uid)\n}\n","type Reviver = (key: string, value: any) => any\n\nexport function deserialize<type>(value: string, reviver?: Reviver): type {\n  return JSON.parse(value, (key, value_) => {\n    let value = value_\n    if (value?.__type === 'bigint') value = BigInt(value.value)\n    if (value?.__type === 'Map') value = new Map(value.value)\n    return reviver?.(key, value) ?? value\n  })\n}\n","/**\n * Get the reference key for the circular value\n *\n * @param keys the keys to build the reference key from\n * @param cutoff the maximum number of keys to include\n * @returns the reference key\n */\nfunction getReferenceKey(keys: string[], cutoff: number) {\n  return keys.slice(0, cutoff).join('.') || '.'\n}\n\n/**\n * Faster `Array.prototype.indexOf` implementation build for slicing / splicing\n *\n * @param array the array to match the value in\n * @param value the value to match\n * @returns the matching index, or -1\n */\nfunction getCutoff(array: any[], value: any) {\n  const { length } = array\n\n  for (let index = 0; index < length; ++index) {\n    if (array[index] === value) {\n      return index + 1\n    }\n  }\n\n  return 0\n}\n\ntype StandardReplacer = (key: string, value: any) => any\ntype CircularReplacer = (key: string, value: any, referenceKey: string) => any\n\n/**\n * Create a replacer method that handles circular values\n *\n * @param [replacer] a custom replacer to use for non-circular values\n * @param [circularReplacer] a custom replacer to use for circular methods\n * @returns the value to stringify\n */\nfunction createReplacer(\n  replacer?: StandardReplacer | null | undefined,\n  circularReplacer?: CircularReplacer | null | undefined,\n): StandardReplacer {\n  const hasReplacer = typeof replacer === 'function'\n  const hasCircularReplacer = typeof circularReplacer === 'function'\n\n  const cache: any[] = []\n  const keys: string[] = []\n\n  return function replace(this: any, key: string, value: any) {\n    if (typeof value === 'object') {\n      if (cache.length) {\n        const thisCutoff = getCutoff(cache, this)\n\n        if (thisCutoff === 0) {\n          cache[cache.length] = this\n        } else {\n          cache.splice(thisCutoff)\n          keys.splice(thisCutoff)\n        }\n\n        keys[keys.length] = key\n\n        const valueCutoff = getCutoff(cache, value)\n\n        if (valueCutoff !== 0) {\n          return hasCircularReplacer\n            ? circularReplacer.call(\n                this,\n                key,\n                value,\n                getReferenceKey(keys, valueCutoff),\n              )\n            : `[ref=${getReferenceKey(keys, valueCutoff)}]`\n        }\n      } else {\n        cache[0] = value\n        keys[0] = key\n      }\n    }\n\n    return hasReplacer ? replacer.call(this, key, value) : value\n  }\n}\n\n/**\n * Stringifier that handles circular values\n *\n * Forked from https://github.com/planttheidea/fast-stringify\n *\n * @param value to stringify\n * @param [replacer] a custom replacer function for handling standard values\n * @param [indent] the number of spaces to indent the output by\n * @param [circularReplacer] a custom replacer function for handling circular values\n * @returns the stringified output\n */\nexport function serialize(\n  value: any,\n  replacer?: StandardReplacer | null | undefined,\n  indent?: number | null | undefined,\n  circularReplacer?: CircularReplacer | null | undefined,\n) {\n  return JSON.stringify(\n    value,\n    createReplacer((key, value_) => {\n      let value = value_\n      if (typeof value === 'bigint')\n        value = { __type: 'bigint', value: value_.toString() }\n      if (value instanceof Map)\n        value = { __type: 'Map', value: Array.from(value_.entries()) }\n      return replacer?.(key, value) ?? value\n    }, circularReplacer),\n    indent ?? undefined,\n  )\n}\n","import type { PartializedState } from './createConfig.js'\nimport type { Compute } from './types/utils.js'\nimport { deserialize as deserialize_ } from './utils/deserialize.js'\nimport { serialize as serialize_ } from './utils/serialize.js'\n\n// key-values for loose autocomplete and typing\nexport type StorageItemMap = {\n  recentConnectorId: string\n  state: PartializedState\n}\n\nexport type Storage<\n  itemMap extends Record<string, unknown> = Record<string, unknown>,\n  ///\n  storageItemMap extends StorageItemMap = StorageItemMap & itemMap,\n> = {\n  key: string\n  getItem<\n    key extends keyof storageItemMap,\n    value extends storageItemMap[key],\n    defaultValue extends value | null | undefined,\n  >(\n    key: key,\n    defaultValue?: defaultValue | undefined,\n  ):\n    | (defaultValue extends null ? value | null : value)\n    | Promise<defaultValue extends null ? value | null : value>\n  setItem<\n    key extends keyof storageItemMap,\n    value extends storageItemMap[key] | null,\n  >(key: key, value: value): void | Promise<void>\n  removeItem(key: keyof storageItemMap): void | Promise<void>\n}\n\nexport type BaseStorage = {\n  getItem(\n    key: string,\n  ): string | null | undefined | Promise<string | null | undefined>\n  setItem(key: string, value: string): void | Promise<void>\n  removeItem(key: string): void | Promise<void>\n}\n\nexport type CreateStorageParameters = {\n  deserialize?: (<type>(value: string) => type | unknown) | undefined\n  key?: string | undefined\n  serialize?: (<type>(value: type | any) => string) | undefined\n  storage?: Compute<BaseStorage> | undefined\n}\n\nexport function createStorage<\n  itemMap extends Record<string, unknown> = Record<string, unknown>,\n  storageItemMap extends StorageItemMap = StorageItemMap & itemMap,\n>(parameters: CreateStorageParameters): Compute<Storage<storageItemMap>> {\n  const {\n    deserialize = deserialize_,\n    key: prefix = 'wagmi',\n    serialize = serialize_,\n    storage = noopStorage,\n  } = parameters\n\n  function unwrap<type>(value: type): type | Promise<type> {\n    if (value instanceof Promise) return value.then((x) => x).catch(() => null)\n    return value\n  }\n\n  return {\n    ...storage,\n    key: prefix,\n    async getItem(key, defaultValue) {\n      const value = storage.getItem(`${prefix}.${key as string}`)\n      const unwrapped = await unwrap(value)\n      if (unwrapped) return deserialize(unwrapped) ?? null\n      return (defaultValue ?? null) as any\n    },\n    async setItem(key, value) {\n      const storageKey = `${prefix}.${key as string}`\n      if (value === null) await unwrap(storage.removeItem(storageKey))\n      else await unwrap(storage.setItem(storageKey, serialize(value)))\n    },\n    async removeItem(key) {\n      await unwrap(storage.removeItem(`${prefix}.${key as string}`))\n    },\n  }\n}\n\nexport const noopStorage = {\n  getItem: () => null,\n  setItem: () => {},\n  removeItem: () => {},\n} satisfies BaseStorage\n\nexport function getDefaultStorage() {\n  const storage = (() => {\n    if (typeof window !== 'undefined' && window.localStorage)\n      return window.localStorage\n    return noopStorage\n  })()\n  return {\n    getItem(key) {\n      return storage.getItem(key)\n    },\n    removeItem(key) {\n      storage.removeItem(key)\n    },\n    setItem(key, value) {\n      try {\n        storage.setItem(key, value)\n        // silence errors by default (QuotaExceededError, SecurityError, etc.)\n      } catch {}\n    },\n  } satisfies BaseStorage\n}\n","const size = 256\nlet index = size\nlet buffer: string\n\nexport function uid(length = 11) {\n  if (!buffer || index + length > size * 2) {\n    buffer = ''\n    index = 0\n    for (let i = 0; i < size; i++) {\n      buffer += ((256 + Math.random() * 256) | 0).toString(16).substring(1)\n    }\n  }\n  return buffer.substring(index, index++ + length)\n}\n","import {\n  createStore as createMipd,\n  type EIP6963ProviderDetail,\n  type Store as MipdStore,\n} from 'mipd'\nimport {\n  type Address,\n  type Chain,\n  type Client,\n  createClient,\n  type EIP1193RequestFn,\n  type ClientConfig as viem_ClientConfig,\n  type Transport as viem_Transport,\n} from 'viem'\nimport { persist, subscribeWithSelector } from 'zustand/middleware'\nimport { createStore, type Mutate, type StoreApi } from 'zustand/vanilla'\n\nimport type {\n  ConnectorEventMap,\n  CreateConnectorFn,\n} from './connectors/createConnector.js'\nimport { injected } from './connectors/injected.js'\nimport { createEmitter, type Emitter, type EventData } from './createEmitter.js'\nimport {\n  createStorage,\n  getDefaultStorage,\n  type Storage,\n} from './createStorage.js'\nimport { ChainNotConfiguredError } from './errors/config.js'\nimport type {\n  Compute,\n  ExactPartial,\n  LooseOmit,\n  OneOf,\n  RemoveUndefined,\n} from './types/utils.js'\nimport { uid } from './utils/uid.js'\nimport { version } from './version.js'\n\nexport function createConfig<\n  const chains extends readonly [Chain, ...Chain[]],\n  transports extends Record<chains[number]['id'], Transport>,\n  const connectorFns extends readonly CreateConnectorFn[],\n>(\n  parameters: CreateConfigParameters<chains, transports, connectorFns>,\n): Config<chains, transports, connectorFns> {\n  const {\n    multiInjectedProviderDiscovery = true,\n    storage = createStorage({\n      storage: getDefaultStorage(),\n    }),\n    syncConnectedChain = true,\n    ssr = false,\n    ...rest\n  } = parameters\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n  // Set up connectors, clients, etc.\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  const mipd =\n    typeof window !== 'undefined' && multiInjectedProviderDiscovery\n      ? createMipd()\n      : undefined\n\n  const chains = createStore(() => rest.chains)\n  const connectors = createStore(() => {\n    const collection = []\n    const rdnsSet = new Set<string>()\n    for (const connectorFns of rest.connectors ?? []) {\n      const connector = setup(connectorFns)\n      collection.push(connector)\n      if (!ssr && connector.rdns) {\n        const rdnsValues =\n          typeof connector.rdns === 'string' ? [connector.rdns] : connector.rdns\n        for (const rdns of rdnsValues) {\n          rdnsSet.add(rdns)\n        }\n      }\n    }\n    if (!ssr && mipd) {\n      const providers = mipd.getProviders()\n      for (const provider of providers) {\n        if (rdnsSet.has(provider.info.rdns)) continue\n        collection.push(setup(providerDetailToConnector(provider)))\n      }\n    }\n    return collection\n  })\n  function setup(connectorFn: CreateConnectorFn): Connector {\n    // Set up emitter with uid and add to connector so they are \"linked\" together.\n    const emitter = createEmitter<ConnectorEventMap>(uid())\n    const connector = {\n      ...connectorFn({\n        emitter,\n        chains: chains.getState(),\n        storage,\n        transports: rest.transports,\n      }),\n      emitter,\n      uid: emitter.uid,\n    }\n\n    // Start listening for `connect` events on connector setup\n    // This allows connectors to \"connect\" themselves without user interaction (e.g. MetaMask's \"Manually connect to current site\")\n    emitter.on('connect', connect)\n    connector.setup?.()\n\n    return connector\n  }\n  function providerDetailToConnector(providerDetail: EIP6963ProviderDetail) {\n    const { info } = providerDetail\n    const provider = providerDetail.provider as any\n    return injected({ target: { ...info, id: info.rdns, provider } })\n  }\n\n  const clients = new Map<number, Client<Transport, chains[number]>>()\n  function getClient<chainId extends chains[number]['id']>(\n    config: { chainId?: chainId | chains[number]['id'] | undefined } = {},\n  ): Client<Transport, Extract<chains[number], { id: chainId }>> {\n    const chainId = config.chainId ?? store.getState().chainId\n    const chain = chains.getState().find((x) => x.id === chainId)\n\n    // chainId specified and not configured\n    if (config.chainId && !chain) throw new ChainNotConfiguredError()\n\n    // If the target chain is not configured, use the client of the current chain.\n    type Return = Client<Transport, Extract<chains[number], { id: chainId }>>\n    {\n      const client = clients.get(store.getState().chainId)\n      if (client && !chain) return client as Return\n      if (!chain) throw new ChainNotConfiguredError()\n    }\n\n    // If a memoized client exists for a chain id, use that.\n    {\n      const client = clients.get(chainId)\n      if (client) return client as Return\n    }\n\n    let client: Client<Transport, chains[number]>\n    if (rest.client) client = rest.client({ chain })\n    else {\n      const chainId = chain.id as chains[number]['id']\n      const chainIds = chains.getState().map((x) => x.id)\n      // Grab all properties off `rest` and resolve for use in `createClient`\n      const properties: Partial<viem_ClientConfig> = {}\n      const entries = Object.entries(rest) as [keyof typeof rest, any][]\n\n      for (const [key, value] of entries) {\n        if (\n          key === 'chains' ||\n          key === 'client' ||\n          key === 'connectors' ||\n          key === 'transports'\n        )\n          continue\n\n        if (typeof value === 'object') {\n          // check if value is chainId-specific since some values can be objects\n          // e.g. { batch: { multicall: { batchSize: 1024 } } }\n          if (chainId in value) properties[key] = value[chainId]\n          else {\n            // check if value is chainId-specific, but does not have value for current chainId\n            const hasChainSpecificValue = chainIds.some((x) => x in value)\n            if (hasChainSpecificValue) continue\n            properties[key] = value\n          }\n        } else properties[key] = value\n      }\n\n      client = createClient({\n        ...properties,\n        chain,\n        batch: properties.batch ?? { multicall: true },\n        transport: (parameters) =>\n          rest.transports[chainId]({ ...parameters, connectors }),\n      })\n    }\n\n    clients.set(chainId, client)\n    return client as Return\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n  // Create store\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  function getInitialState(): State {\n    return {\n      chainId: chains.getState()[0].id,\n      connections: new Map<string, Connection>(),\n      current: null,\n      status: 'disconnected',\n    }\n  }\n\n  let currentVersion: number\n  const prefix = '0.0.0-canary-'\n  if (version.startsWith(prefix))\n    currentVersion = Number.parseInt(version.replace(prefix, ''))\n  // use package major version to version store\n  else currentVersion = Number.parseInt(version.split('.')[0] ?? '0')\n\n  const store = createStore(\n    subscribeWithSelector(\n      // only use persist middleware if storage exists\n      storage\n        ? persist(getInitialState, {\n            migrate(persistedState, version) {\n              if (version === currentVersion) return persistedState as State\n\n              const initialState = getInitialState()\n              const chainId = validatePersistedChainId(\n                persistedState,\n                initialState.chainId,\n              )\n              return { ...initialState, chainId }\n            },\n            name: 'store',\n            partialize(state) {\n              // Only persist \"critical\" store properties to preserve storage size.\n              return {\n                connections: {\n                  __type: 'Map',\n                  value: Array.from(state.connections.entries()).map(\n                    ([key, connection]) => {\n                      const { id, name, type, uid } = connection.connector\n                      const connector = { id, name, type, uid }\n                      return [key, { ...connection, connector }]\n                    },\n                  ),\n                } as unknown as PartializedState['connections'],\n                chainId: state.chainId,\n                current: state.current,\n              } satisfies PartializedState\n            },\n            merge(persistedState, currentState) {\n              // `status` should not be persisted as it messes with reconnection\n              if (\n                typeof persistedState === 'object' &&\n                persistedState &&\n                'status' in persistedState\n              )\n                delete persistedState.status\n              // Make sure persisted `chainId` is valid\n              const chainId = validatePersistedChainId(\n                persistedState,\n                currentState.chainId,\n              )\n              return {\n                ...currentState,\n                ...(persistedState as object),\n                chainId,\n              }\n            },\n            skipHydration: ssr,\n            storage: storage as Storage<Record<string, unknown>>,\n            version: currentVersion,\n          })\n        : getInitialState,\n    ),\n  )\n  store.setState(getInitialState())\n\n  function validatePersistedChainId(\n    persistedState: unknown,\n    defaultChainId: number,\n  ) {\n    return persistedState &&\n      typeof persistedState === 'object' &&\n      'chainId' in persistedState &&\n      typeof persistedState.chainId === 'number' &&\n      chains.getState().some((x) => x.id === persistedState.chainId)\n      ? persistedState.chainId\n      : defaultChainId\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n  // Subscribe to changes\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  // Update default chain when connector chain changes\n  if (syncConnectedChain)\n    store.subscribe(\n      ({ connections, current }) =>\n        current ? connections.get(current)?.chainId : undefined,\n      (chainId) => {\n        // If chain is not configured, then don't switch over to it.\n        const isChainConfigured = chains\n          .getState()\n          .some((x) => x.id === chainId)\n        if (!isChainConfigured) return\n\n        return store.setState((x) => ({\n          ...x,\n          chainId: chainId ?? x.chainId,\n        }))\n      },\n    )\n\n  // EIP-6963 subscribe for new wallet providers\n  mipd?.subscribe((providerDetails) => {\n    const connectorIdSet = new Set<string>()\n    const connectorRdnsSet = new Set<string>()\n    for (const connector of connectors.getState()) {\n      connectorIdSet.add(connector.id)\n      if (connector.rdns) {\n        const rdnsValues =\n          typeof connector.rdns === 'string' ? [connector.rdns] : connector.rdns\n        for (const rdns of rdnsValues) {\n          connectorRdnsSet.add(rdns)\n        }\n      }\n    }\n\n    const newConnectors: Connector[] = []\n    for (const providerDetail of providerDetails) {\n      if (connectorRdnsSet.has(providerDetail.info.rdns)) continue\n      const connector = setup(providerDetailToConnector(providerDetail))\n      if (connectorIdSet.has(connector.id)) continue\n      newConnectors.push(connector)\n    }\n\n    if (storage && !store.persist.hasHydrated()) return\n    connectors.setState((x) => [...x, ...newConnectors], true)\n  })\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n  // Emitter listeners\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  function change(data: EventData<ConnectorEventMap, 'change'>) {\n    store.setState((x) => {\n      const connection = x.connections.get(data.uid)\n      if (!connection) return x\n      return {\n        ...x,\n        connections: new Map(x.connections).set(data.uid, {\n          accounts:\n            (data.accounts as readonly [Address, ...Address[]]) ??\n            connection.accounts,\n          chainId: data.chainId ?? connection.chainId,\n          connector: connection.connector,\n        }),\n      }\n    })\n  }\n  function connect(data: EventData<ConnectorEventMap, 'connect'>) {\n    // Disable handling if reconnecting/connecting\n    if (\n      store.getState().status === 'connecting' ||\n      store.getState().status === 'reconnecting'\n    )\n      return\n\n    store.setState((x) => {\n      const connector = connectors.getState().find((x) => x.uid === data.uid)\n      if (!connector) return x\n\n      if (connector.emitter.listenerCount('connect'))\n        connector.emitter.off('connect', change)\n      if (!connector.emitter.listenerCount('change'))\n        connector.emitter.on('change', change)\n      if (!connector.emitter.listenerCount('disconnect'))\n        connector.emitter.on('disconnect', disconnect)\n\n      return {\n        ...x,\n        connections: new Map(x.connections).set(data.uid, {\n          accounts: data.accounts as readonly [Address, ...Address[]],\n          chainId: data.chainId,\n          connector: connector,\n        }),\n        current: data.uid,\n        status: 'connected',\n      }\n    })\n  }\n  function disconnect(data: EventData<ConnectorEventMap, 'disconnect'>) {\n    store.setState((x) => {\n      const connection = x.connections.get(data.uid)\n      if (connection) {\n        const connector = connection.connector\n        if (connector.emitter.listenerCount('change'))\n          connection.connector.emitter.off('change', change)\n        if (connector.emitter.listenerCount('disconnect'))\n          connection.connector.emitter.off('disconnect', disconnect)\n        if (!connector.emitter.listenerCount('connect'))\n          connection.connector.emitter.on('connect', connect)\n      }\n\n      x.connections.delete(data.uid)\n\n      if (x.connections.size === 0)\n        return {\n          ...x,\n          connections: new Map(),\n          current: null,\n          status: 'disconnected',\n        }\n\n      const nextConnection = x.connections.values().next().value as Connection\n      return {\n        ...x,\n        connections: new Map(x.connections),\n        current: nextConnection.connector.uid,\n      }\n    })\n  }\n\n  return {\n    get chains() {\n      return chains.getState() as chains\n    },\n    get connectors() {\n      return connectors.getState() as Connector<connectorFns[number]>[]\n    },\n    storage,\n\n    getClient,\n    get state() {\n      return store.getState() as unknown as State<chains>\n    },\n    setState(value) {\n      let newState: State\n      if (typeof value === 'function') newState = value(store.getState() as any)\n      else newState = value\n\n      // Reset state if it got set to something not matching the base state\n      const initialState = getInitialState()\n      if (typeof newState !== 'object') newState = initialState\n      const isCorrupt = Object.keys(initialState).some((x) => !(x in newState))\n      if (isCorrupt) newState = initialState\n\n      store.setState(newState, true)\n    },\n    subscribe(selector, listener, options) {\n      return store.subscribe(\n        selector as unknown as (state: State) => any,\n        listener,\n        options\n          ? ({\n              ...options,\n              fireImmediately: options.emitImmediately,\n              // Workaround cast since Zustand does not support `'exactOptionalPropertyTypes'`\n            } as RemoveUndefined<typeof options>)\n          : undefined,\n      )\n    },\n\n    _internal: {\n      mipd,\n      async revalidate() {\n        // Check connections to see if they are still active\n        const state = store.getState()\n        const connections = state.connections\n        let current = state.current\n        for (const [, connection] of connections) {\n          const connector = connection.connector\n          // check if `connect.isAuthorized` exists\n          // partial connectors in storage do not have it\n          const isAuthorized = connector.isAuthorized\n            ? await connector.isAuthorized()\n            : false\n          if (isAuthorized) continue\n          // Remove stale connection\n          connections.delete(connector.uid)\n          if (current === connector.uid) current = null\n        }\n        // set connections\n        store.setState((x) => ({ ...x, connections, current }))\n      },\n      store,\n      ssr: Boolean(ssr),\n      syncConnectedChain,\n      transports: rest.transports as transports,\n      chains: {\n        setState(value) {\n          const nextChains = (\n            typeof value === 'function' ? value(chains.getState()) : value\n          ) as chains\n          if (nextChains.length === 0) return\n          return chains.setState(nextChains, true)\n        },\n        subscribe(listener) {\n          return chains.subscribe(listener)\n        },\n      },\n      connectors: {\n        providerDetailToConnector,\n        setup: setup as <connectorFn extends CreateConnectorFn>(\n          connectorFn: connectorFn,\n        ) => Connector<connectorFn>,\n        setState(value) {\n          return connectors.setState(\n            typeof value === 'function' ? value(connectors.getState()) : value,\n            true,\n          )\n        },\n        subscribe(listener) {\n          return connectors.subscribe(listener)\n        },\n      },\n      events: { change, connect, disconnect },\n    },\n  }\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////\n// Types\n/////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport type CreateConfigParameters<\n  chains extends readonly [Chain, ...Chain[]] = readonly [Chain, ...Chain[]],\n  transports extends Record<chains[number]['id'], Transport> = Record<\n    chains[number]['id'],\n    Transport\n  >,\n  connectorFns extends\n    readonly CreateConnectorFn[] = readonly CreateConnectorFn[],\n> = Compute<\n  {\n    chains: chains\n    connectors?: connectorFns | undefined\n    multiInjectedProviderDiscovery?: boolean | undefined\n    storage?: Storage | null | undefined\n    ssr?: boolean | undefined\n    syncConnectedChain?: boolean | undefined\n  } & OneOf<\n    | ({ transports: transports } & {\n        [key in keyof ClientConfig]?:\n          | ClientConfig[key]\n          | { [_ in chains[number]['id']]?: ClientConfig[key] | undefined }\n          | undefined\n      })\n    | {\n        client(parameters: {\n          chain: chains[number]\n        }): Client<transports[chains[number]['id']], chains[number]>\n      }\n  >\n>\n\nexport type Config<\n  chains extends readonly [Chain, ...Chain[]] = readonly [Chain, ...Chain[]],\n  transports extends Record<chains[number]['id'], Transport> = Record<\n    chains[number]['id'],\n    Transport\n  >,\n  connectorFns extends\n    readonly CreateConnectorFn[] = readonly CreateConnectorFn[],\n> = {\n  readonly chains: chains\n  readonly connectors: readonly Connector<connectorFns[number]>[]\n  readonly storage: Storage | null\n\n  readonly state: State<chains>\n  setState<tchains extends readonly [Chain, ...Chain[]] = chains>(\n    value: State<tchains> | ((state: State<tchains>) => State<tchains>),\n  ): void\n  subscribe<state>(\n    selector: (state: State<chains>) => state,\n    listener: (state: state, previousState: state) => void,\n    options?:\n      | {\n          emitImmediately?: boolean | undefined\n          equalityFn?: ((a: state, b: state) => boolean) | undefined\n        }\n      | undefined,\n  ): () => void\n\n  getClient<chainId extends chains[number]['id']>(parameters?: {\n    chainId?: chainId | chains[number]['id'] | undefined\n  }): Client<transports[chainId], Extract<chains[number], { id: chainId }>>\n\n  /**\n   * Not part of versioned API, proceed with caution.\n   * @internal\n   */\n  _internal: Internal<chains, transports>\n}\n\ntype Internal<\n  chains extends readonly [Chain, ...Chain[]] = readonly [Chain, ...Chain[]],\n  transports extends Record<chains[number]['id'], Transport> = Record<\n    chains[number]['id'],\n    Transport\n  >,\n> = {\n  readonly mipd: MipdStore | undefined\n  revalidate: () => Promise<void>\n  readonly store: Mutate<StoreApi<any>, [['zustand/persist', any]]>\n  readonly ssr: boolean\n  readonly syncConnectedChain: boolean\n  readonly transports: transports\n\n  chains: {\n    setState(\n      value:\n        | readonly [Chain, ...Chain[]]\n        | ((\n            state: readonly [Chain, ...Chain[]],\n          ) => readonly [Chain, ...Chain[]]),\n    ): void\n    subscribe(\n      listener: (\n        state: readonly [Chain, ...Chain[]],\n        prevState: readonly [Chain, ...Chain[]],\n      ) => void,\n    ): () => void\n  }\n  connectors: {\n    providerDetailToConnector(\n      providerDetail: EIP6963ProviderDetail,\n    ): CreateConnectorFn\n    setup<connectorFn extends CreateConnectorFn>(\n      connectorFn: connectorFn,\n    ): Connector<connectorFn>\n    setState(value: Connector[] | ((state: Connector[]) => Connector[])): void\n    subscribe(\n      listener: (state: Connector[], prevState: Connector[]) => void,\n    ): () => void\n  }\n  events: {\n    change(data: EventData<ConnectorEventMap, 'change'>): void\n    connect(data: EventData<ConnectorEventMap, 'connect'>): void\n    disconnect(data: EventData<ConnectorEventMap, 'disconnect'>): void\n  }\n}\n\nexport type State<\n  chains extends readonly [Chain, ...Chain[]] = readonly [Chain, ...Chain[]],\n> = {\n  chainId: chains[number]['id']\n  connections: Map<string, Connection>\n  current: string | null\n  status: 'connected' | 'connecting' | 'disconnected' | 'reconnecting'\n}\n\nexport type PartializedState = Compute<\n  ExactPartial<Pick<State, 'chainId' | 'connections' | 'current' | 'status'>>\n>\n\nexport type Connection = {\n  accounts: readonly [Address, ...Address[]]\n  chainId: number\n  connector: Connector\n}\n\nexport type Connector<\n  createConnectorFn extends CreateConnectorFn = CreateConnectorFn,\n> = ReturnType<createConnectorFn> & {\n  emitter: Emitter<ConnectorEventMap>\n  uid: string\n}\n\nexport type Transport<\n  type extends string = string,\n  rpcAttributes = Record<string, any>,\n  eip1193RequestFn extends EIP1193RequestFn = EIP1193RequestFn,\n> = (\n  params: Parameters<\n    viem_Transport<type, rpcAttributes, eip1193RequestFn>\n  >[0] & {\n    connectors?: StoreApi<Connector[]> | undefined\n  },\n) => ReturnType<viem_Transport<type, rpcAttributes, eip1193RequestFn>>\n\ntype ClientConfig = LooseOmit<\n  viem_ClientConfig,\n  'account' | 'chain' | 'key' | 'name' | 'transport' | 'type'\n>\n","import type { Address } from 'viem'\n\nimport type { CreateConnectorFn } from '../connectors/createConnector.js'\nimport type { Config, Connection, Connector } from '../createConfig.js'\nimport type { ErrorType } from '../errors/base.js'\nimport type { Compute } from '../types/utils.js'\n\nexport type ReconnectParameters = {\n  /** Connectors to attempt reconnect with */\n  connectors?: readonly (CreateConnectorFn | Connector)[] | undefined\n}\n\nexport type ReconnectReturnType = Compute<Connection>[]\n\nexport type ReconnectErrorType = ErrorType\n\nlet isReconnecting = false\n\n/** https://wagmi.sh/core/api/actions/reconnect */\nexport async function reconnect(\n  config: Config,\n  parameters: ReconnectParameters = {},\n): Promise<ReconnectReturnType> {\n  // If already reconnecting, do nothing\n  if (isReconnecting) return []\n  isReconnecting = true\n\n  config.setState((x) => ({\n    ...x,\n    status: x.current ? 'reconnecting' : 'connecting',\n  }))\n\n  const connectors: Connector[] = []\n  if (parameters.connectors?.length) {\n    for (const connector_ of parameters.connectors) {\n      let connector: Connector\n      // \"Register\" connector if not already created\n      if (typeof connector_ === 'function')\n        connector = config._internal.connectors.setup(connector_)\n      else connector = connector_\n      connectors.push(connector)\n    }\n  } else connectors.push(...config.connectors)\n\n  // Try recently-used connectors first\n  let recentConnectorId: string | null | undefined\n  try {\n    recentConnectorId = await config.storage?.getItem('recentConnectorId')\n  } catch {}\n  const scores: Record<string, number> = {}\n  for (const [, connection] of config.state.connections) {\n    scores[connection.connector.id] = 1\n  }\n  if (recentConnectorId) scores[recentConnectorId] = 0\n  const sorted =\n    Object.keys(scores).length > 0\n      ? // .toSorted()\n        [...connectors].sort(\n          (a, b) => (scores[a.id] ?? 10) - (scores[b.id] ?? 10),\n        )\n      : connectors\n\n  // Iterate through each connector and try to connect\n  let connected = false\n  const connections: Connection[] = []\n  const providers: unknown[] = []\n  for (const connector of sorted) {\n    const provider = await connector.getProvider().catch(() => undefined)\n    if (!provider) continue\n\n    // If we already have an instance of this connector's provider,\n    // then we have already checked it (ie. injected connectors can\n    // share the same `window.ethereum` instance, so we don't want to\n    // connect to it again).\n    if (providers.some((x) => x === provider)) continue\n\n    const isAuthorized = await connector.isAuthorized()\n    if (!isAuthorized) continue\n\n    const data = await connector\n      .connect({ isReconnecting: true })\n      .catch(() => null)\n    if (!data) continue\n\n    connector.emitter.off('connect', config._internal.events.connect)\n    connector.emitter.on('change', config._internal.events.change)\n    connector.emitter.on('disconnect', config._internal.events.disconnect)\n\n    config.setState((x) => {\n      const connections = new Map(connected ? x.connections : new Map()).set(\n        connector.uid,\n        { accounts: data.accounts, chainId: data.chainId, connector },\n      )\n      return {\n        ...x,\n        current: connected ? x.current : connector.uid,\n        connections,\n      }\n    })\n    connections.push({\n      accounts: data.accounts as readonly [Address, ...Address[]],\n      chainId: data.chainId,\n      connector,\n    })\n    providers.push(provider)\n    connected = true\n  }\n\n  // Prevent overwriting connected status from race condition\n  if (\n    config.state.status === 'reconnecting' ||\n    config.state.status === 'connecting'\n  ) {\n    // If connecting didn't succeed, set to disconnected\n    if (!connected)\n      config.setState((x) => ({\n        ...x,\n        connections: new Map(),\n        current: null,\n        status: 'disconnected',\n      }))\n    else config.setState((x) => ({ ...x, status: 'connected' }))\n  }\n\n  isReconnecting = false\n  return connections\n}\n","import { reconnect } from './actions/reconnect.js'\nimport type { Config, State } from './createConfig.js'\n\ntype HydrateParameters = {\n  initialState?: State | undefined\n  reconnectOnMount?: boolean | undefined\n}\n\nexport function hydrate(config: Config, parameters: HydrateParameters) {\n  const { initialState, reconnectOnMount } = parameters\n\n  if (initialState && !config._internal.store.persist.hasHydrated())\n    config.setState({\n      ...initialState,\n      chainId: config.chains.some((x) => x.id === initialState.chainId)\n        ? initialState.chainId\n        : config.chains[0].id,\n      connections: reconnectOnMount ? initialState.connections : new Map(),\n      status: reconnectOnMount ? 'reconnecting' : 'disconnected',\n    })\n\n  return {\n    async onMount() {\n      if (config._internal.ssr) {\n        await config._internal.store.persist.rehydrate()\n        if (config._internal.mipd) {\n          config._internal.connectors.setState((connectors) => {\n            const rdnsSet = new Set<string>()\n            for (const connector of connectors ?? []) {\n              if (connector.rdns) {\n                const rdnsValues = Array.isArray(connector.rdns)\n                  ? connector.rdns\n                  : [connector.rdns]\n                for (const rdns of rdnsValues) {\n                  rdnsSet.add(rdns)\n                }\n              }\n            }\n            const mipdConnectors = []\n            const providers = config._internal.mipd?.getProviders() ?? []\n            for (const provider of providers) {\n              if (rdnsSet.has(provider.info.rdns)) continue\n              const connectorFn =\n                config._internal.connectors.providerDetailToConnector(provider)\n              const connector = config._internal.connectors.setup(connectorFn)\n              mipdConnectors.push(connector)\n            }\n            return [...connectors, ...mipdConnectors]\n          })\n        }\n      }\n\n      if (reconnectOnMount) reconnect(config)\n      else if (config.storage)\n        // Reset connections that may have been hydrated from storage.\n        config.setState((x) => ({\n          ...x,\n          connections: new Map(),\n        }))\n    },\n  }\n}\n","'use client'\n\nimport { hydrate, type ResolvedRegister, type State } from '@wagmi/core'\nimport { type ReactElement, useEffect, useRef } from 'react'\n\nexport type HydrateProps = {\n  config: ResolvedRegister['config']\n  initialState?: State | undefined\n  reconnectOnMount?: boolean | undefined\n}\n\nexport function Hydrate(parameters: React.PropsWithChildren<HydrateProps>) {\n  const { children, config, initialState, reconnectOnMount = true } = parameters\n\n  const { onMount } = hydrate(config, {\n    initialState,\n    reconnectOnMount,\n  })\n\n  // Hydrate for non-SSR\n  if (!config._internal.ssr) onMount()\n\n  // Hydrate for SSR\n  const active = useRef(true)\n  // biome-ignore lint/correctness/useExhaustiveDependencies: `queryKey` not required\n  useEffect(() => {\n    if (!active.current) return\n    if (!config._internal.ssr) return\n    onMount()\n    return () => {\n      active.current = false\n    }\n  }, [])\n\n  return children as ReactElement\n}\n","'use client'\n\nimport type { ResolvedRegister, State } from '@wagmi/core'\nimport { createContext, createElement } from 'react'\nimport { Hydrate } from './hydrate.js'\n\nexport const WagmiContext = createContext<\n  ResolvedRegister['config'] | undefined\n>(undefined)\n\nexport type WagmiProviderProps = {\n  config: ResolvedRegister['config']\n  initialState?: State | undefined\n  reconnectOnMount?: boolean | undefined\n}\n\nexport function WagmiProvider(\n  parameters: React.PropsWithChildren<WagmiProviderProps>,\n) {\n  const { children, config } = parameters\n\n  const props = { value: config }\n  return createElement(\n    Hydrate,\n    parameters,\n    createElement(WagmiContext.Provider, props, children),\n  )\n}\n","/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// Utilities\n/**\n * @__NO_SIDE_EFFECTS__\n */\nexport function assertNumber(n: number) {\n  if (!Number.isSafeInteger(n)) throw new Error(`Wrong integer: ${n}`);\n}\nexport interface Coder<F, T> {\n  encode(from: F): T;\n  decode(to: T): F;\n}\n\nexport interface BytesCoder extends Coder<Uint8Array, string> {\n  encode: (data: Uint8Array) => string;\n  decode: (str: string) => Uint8Array;\n}\n\nfunction isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\n// TODO: some recusive type inference so it would check correct order of input/output inside rest?\n// like <string, number>, <number, bytes>, <bytes, float>\ntype Chain = [Coder<any, any>, ...Coder<any, any>[]];\n// Extract info from Coder type\ntype Input<F> = F extends Coder<infer T, any> ? T : never;\ntype Output<F> = F extends Coder<any, infer T> ? T : never;\n// Generic function for arrays\ntype First<T> = T extends [infer U, ...any[]] ? U : never;\ntype Last<T> = T extends [...any[], infer U] ? U : never;\ntype Tail<T> = T extends [any, ...infer U] ? U : never;\n\ntype AsChain<C extends Chain, Rest = Tail<C>> = {\n  // C[K] = Coder<Input<C[K]>, Input<Rest[k]>>\n  [K in keyof C]: Coder<Input<C[K]>, Input<K extends keyof Rest ? Rest[K] : any>>;\n};\n\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction chain<T extends Chain & AsChain<T>>(...args: T): Coder<Input<First<T>>, Output<Last<T>>> {\n  const id = (a: any) => a;\n  // Wrap call in closure so JIT can inline calls\n  const wrap = (a: any, b: any) => (c: any) => a(b(c));\n  // Construct chain of args[-1].encode(args[-2].encode([...]))\n  const encode = args.map((x) => x.encode).reduceRight(wrap, id);\n  // Construct chain of args[0].decode(args[1].decode(...))\n  const decode = args.map((x) => x.decode).reduce(wrap, id);\n  return { encode, decode };\n}\n\ntype Alphabet = string[] | string;\n\n/**\n * Encodes integer radix representation to array of strings using alphabet and back\n * @__NO_SIDE_EFFECTS__\n */\nfunction alphabet(alphabet: Alphabet): Coder<number[], string[]> {\n  return {\n    encode: (digits: number[]) => {\n      if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n        throw new Error('alphabet.encode input should be an array of numbers');\n      return digits.map((i) => {\n        assertNumber(i);\n        if (i < 0 || i >= alphabet.length)\n          throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n        return alphabet[i]!;\n      });\n    },\n    decode: (input: string[]) => {\n      if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n        throw new Error('alphabet.decode input should be array of strings');\n      return input.map((letter) => {\n        if (typeof letter !== 'string')\n          throw new Error(`alphabet.decode: not string element=${letter}`);\n        const index = alphabet.indexOf(letter);\n        if (index === -1) throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n        return index;\n      });\n    },\n  };\n}\n\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction join(separator = ''): Coder<string[], string> {\n  if (typeof separator !== 'string') throw new Error('join separator should be string');\n  return {\n    encode: (from) => {\n      if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n        throw new Error('join.encode input should be array of strings');\n      for (let i of from)\n        if (typeof i !== 'string') throw new Error(`join.encode: non-string input=${i}`);\n      return from.join(separator);\n    },\n    decode: (to) => {\n      if (typeof to !== 'string') throw new Error('join.decode input should be string');\n      return to.split(separator);\n    },\n  };\n}\n\n/**\n * Pad strings array so it has integer number of bits\n * @__NO_SIDE_EFFECTS__\n */\nfunction padding(bits: number, chr = '='): Coder<string[], string[]> {\n  assertNumber(bits);\n  if (typeof chr !== 'string') throw new Error('padding chr should be string');\n  return {\n    encode(data: string[]): string[] {\n      if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n        throw new Error('padding.encode input should be array of strings');\n      for (let i of data)\n        if (typeof i !== 'string') throw new Error(`padding.encode: non-string input=${i}`);\n      while ((data.length * bits) % 8) data.push(chr);\n      return data;\n    },\n    decode(input: string[]): string[] {\n      if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n        throw new Error('padding.encode input should be array of strings');\n      for (let i of input)\n        if (typeof i !== 'string') throw new Error(`padding.decode: non-string input=${i}`);\n      let end = input.length;\n      if ((end * bits) % 8)\n        throw new Error('Invalid padding: string should have whole number of bytes');\n      for (; end > 0 && input[end - 1] === chr; end--) {\n        if (!(((end - 1) * bits) % 8))\n          throw new Error('Invalid padding: string has too much padding');\n      }\n      return input.slice(0, end);\n    },\n  };\n}\n\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction normalize<T>(fn: (val: T) => T): Coder<T, T> {\n  if (typeof fn !== 'function') throw new Error('normalize fn should be function');\n  return { encode: (from: T) => from, decode: (to: T) => fn(to) };\n}\n\n/**\n * Slow: O(n^2) time complexity\n * @__NO_SIDE_EFFECTS__\n */\nfunction convertRadix(data: number[], from: number, to: number): number[] {\n  // base 1 is impossible\n  if (from < 2) throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n  if (to < 2) throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n  if (!Array.isArray(data)) throw new Error('convertRadix: data should be array');\n  if (!data.length) return [];\n  let pos = 0;\n  const res = [];\n  const digits = Array.from(data);\n  digits.forEach((d) => {\n    assertNumber(d);\n    if (d < 0 || d >= from) throw new Error(`Wrong integer: ${d}`);\n  });\n  while (true) {\n    let carry = 0;\n    let done = true;\n    for (let i = pos; i < digits.length; i++) {\n      const digit = digits[i]!;\n      const digitBase = from * carry + digit;\n      if (\n        !Number.isSafeInteger(digitBase) ||\n        (from * carry) / from !== carry ||\n        digitBase - digit !== from * carry\n      ) {\n        throw new Error('convertRadix: carry overflow');\n      }\n      carry = digitBase % to;\n      const rounded = Math.floor(digitBase / to);\n      digits[i] = rounded;\n      if (!Number.isSafeInteger(rounded) || rounded * to + carry !== digitBase)\n        throw new Error('convertRadix: carry overflow');\n      if (!done) continue;\n      else if (!rounded) pos = i;\n      else done = false;\n    }\n    res.push(carry);\n    if (done) break;\n  }\n  for (let i = 0; i < data.length - 1 && data[i] === 0; i++) res.push(0);\n  return res.reverse();\n}\n\nconst gcd = /* @__NO_SIDE_EFFECTS__ */ (a: number, b: number): number => (!b ? a : gcd(b, a % b));\nconst radix2carry = /*@__NO_SIDE_EFFECTS__ */ (from: number, to: number) =>\n  from + (to - gcd(from, to));\n/**\n * Implemented with numbers, because BigInt is 5x slower\n * @__NO_SIDE_EFFECTS__\n */\nfunction convertRadix2(data: number[], from: number, to: number, padding: boolean): number[] {\n  if (!Array.isArray(data)) throw new Error('convertRadix2: data should be array');\n  if (from <= 0 || from > 32) throw new Error(`convertRadix2: wrong from=${from}`);\n  if (to <= 0 || to > 32) throw new Error(`convertRadix2: wrong to=${to}`);\n  if (radix2carry(from, to) > 32) {\n    throw new Error(\n      `convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`\n    );\n  }\n  let carry = 0;\n  let pos = 0; // bitwise position in current element\n  const mask = 2 ** to - 1;\n  const res: number[] = [];\n  for (const n of data) {\n    assertNumber(n);\n    if (n >= 2 ** from) throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n    carry = (carry << from) | n;\n    if (pos + from > 32) throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n    pos += from;\n    for (; pos >= to; pos -= to) res.push(((carry >> (pos - to)) & mask) >>> 0);\n    carry &= 2 ** pos - 1; // clean carry, otherwise it will cause overflow\n  }\n  carry = (carry << (to - pos)) & mask;\n  if (!padding && pos >= from) throw new Error('Excess padding');\n  if (!padding && carry) throw new Error(`Non-zero padding: ${carry}`);\n  if (padding && pos > 0) res.push(carry >>> 0);\n  return res;\n}\n\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction radix(num: number): Coder<Uint8Array, number[]> {\n  assertNumber(num);\n  return {\n    encode: (bytes: Uint8Array) => {\n      if (!isBytes(bytes)) throw new Error('radix.encode input should be Uint8Array');\n      return convertRadix(Array.from(bytes), 2 ** 8, num);\n    },\n    decode: (digits: number[]) => {\n      if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n        throw new Error('radix.decode input should be array of numbers');\n      return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n    },\n  };\n}\n\n/**\n * If both bases are power of same number (like `2**8 <-> 2**64`),\n * there is a linear algorithm. For now we have implementation for power-of-two bases only.\n * @__NO_SIDE_EFFECTS__\n */\nfunction radix2(bits: number, revPadding = false): Coder<Uint8Array, number[]> {\n  assertNumber(bits);\n  if (bits <= 0 || bits > 32) throw new Error('radix2: bits should be in (0..32]');\n  if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n    throw new Error('radix2: carry overflow');\n  return {\n    encode: (bytes: Uint8Array) => {\n      if (!isBytes(bytes)) throw new Error('radix2.encode input should be Uint8Array');\n      return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n    },\n    decode: (digits: number[]) => {\n      if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n        throw new Error('radix2.decode input should be array of numbers');\n      return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n    },\n  };\n}\n\ntype ArgumentTypes<F extends Function> = F extends (...args: infer A) => any ? A : never;\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction unsafeWrapper<T extends (...args: any) => any>(fn: T) {\n  if (typeof fn !== 'function') throw new Error('unsafeWrapper fn should be function');\n  return function (...args: ArgumentTypes<T>): ReturnType<T> | void {\n    try {\n      return fn.apply(null, args);\n    } catch (e) {}\n  };\n}\n\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction checksum(\n  len: number,\n  fn: (data: Uint8Array) => Uint8Array\n): Coder<Uint8Array, Uint8Array> {\n  assertNumber(len);\n  if (typeof fn !== 'function') throw new Error('checksum fn should be function');\n  return {\n    encode(data: Uint8Array) {\n      if (!isBytes(data)) throw new Error('checksum.encode: input should be Uint8Array');\n      const checksum = fn(data).slice(0, len);\n      const res = new Uint8Array(data.length + len);\n      res.set(data);\n      res.set(checksum, data.length);\n      return res;\n    },\n    decode(data: Uint8Array) {\n      if (!isBytes(data)) throw new Error('checksum.decode: input should be Uint8Array');\n      const payload = data.slice(0, -len);\n      const newChecksum = fn(payload).slice(0, len);\n      const oldChecksum = data.slice(-len);\n      for (let i = 0; i < len; i++)\n        if (newChecksum[i] !== oldChecksum[i]) throw new Error('Invalid checksum');\n      return payload;\n    },\n  };\n}\n\n// prettier-ignore\nexport const utils = {\n  alphabet, chain, checksum, convertRadix, convertRadix2, radix, radix2, join, padding,\n};\n\n// RFC 4648 aka RFC 3548\n// ---------------------\nexport const base16: BytesCoder = /* @__PURE__ */ chain(\n  radix2(4),\n  alphabet('0123456789ABCDEF'),\n  join('')\n);\nexport const base32: BytesCoder = /* @__PURE__ */ chain(\n  radix2(5),\n  alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'),\n  padding(5),\n  join('')\n);\nexport const base32nopad: BytesCoder = /* @__PURE__ */ chain(\n  radix2(5),\n  alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'),\n  join('')\n);\nexport const base32hex: BytesCoder = /* @__PURE__ */ chain(\n  radix2(5),\n  alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'),\n  padding(5),\n  join('')\n);\nexport const base32hexnopad: BytesCoder = /* @__PURE__ */ chain(\n  radix2(5),\n  alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'),\n  join('')\n);\nexport const base32crockford: BytesCoder = /* @__PURE__ */ chain(\n  radix2(5),\n  alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'),\n  join(''),\n  normalize((s: string) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1'))\n);\nexport const base64: BytesCoder = /* @__PURE__ */ chain(\n  radix2(6),\n  alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'),\n  padding(6),\n  join('')\n);\nexport const base64nopad: BytesCoder = /* @__PURE__ */ chain(\n  radix2(6),\n  alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'),\n  join('')\n);\nexport const base64url: BytesCoder = /* @__PURE__ */ chain(\n  radix2(6),\n  alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'),\n  padding(6),\n  join('')\n);\nexport const base64urlnopad: BytesCoder = /* @__PURE__ */ chain(\n  radix2(6),\n  alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'),\n  join('')\n);\n\n// base58 code\n// -----------\nconst genBase58 = (abc: string) => chain(radix(58), alphabet(abc), join(''));\n\nexport const base58: BytesCoder = /* @__PURE__ */ genBase58(\n  '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n);\nexport const base58flickr: BytesCoder = /* @__PURE__ */ genBase58(\n  '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n);\nexport const base58xrp: BytesCoder = /* @__PURE__ */ genBase58(\n  'rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz'\n);\n\n// xmr ver is done in 8-byte blocks (which equals 11 chars in decoding). Last (non-full) block padded with '1' to size in XMR_BLOCK_LEN.\n// Block encoding significantly reduces quadratic complexity of base58.\n\n// Data len (index) -> encoded block len\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexport const base58xmr: BytesCoder = {\n  encode(data: Uint8Array) {\n    let res = '';\n    for (let i = 0; i < data.length; i += 8) {\n      const block = data.subarray(i, i + 8);\n      res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length]!, '1');\n    }\n    return res;\n  },\n  decode(str: string) {\n    let res: number[] = [];\n    for (let i = 0; i < str.length; i += 11) {\n      const slice = str.slice(i, i + 11);\n      const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n      const block = base58.decode(slice);\n      for (let j = 0; j < block.length - blockLen; j++) {\n        if (block[j] !== 0) throw new Error('base58xmr: wrong padding');\n      }\n      res = res.concat(Array.from(block.slice(block.length - blockLen)));\n    }\n    return Uint8Array.from(res);\n  },\n};\n\nexport const createBase58check = (sha256: (data: Uint8Array) => Uint8Array): BytesCoder =>\n  chain(\n    checksum(4, (data) => sha256(sha256(data))),\n    base58\n  );\n// legacy export, bad name\nexport const base58check = createBase58check;\n\n// Bech32 code\n// -----------\nexport interface Bech32Decoded<Prefix extends string = string> {\n  prefix: Prefix;\n  words: number[];\n}\nexport interface Bech32DecodedWithArray<Prefix extends string = string> {\n  prefix: Prefix;\n  words: number[];\n  bytes: Uint8Array;\n}\n\nconst BECH_ALPHABET: Coder<number[], string> = /* @__PURE__ */ chain(\n  alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'),\n  join('')\n);\n\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction bech32Polymod(pre: number): number {\n  const b = pre >> 25;\n  let chk = (pre & 0x1ffffff) << 5;\n  for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n    if (((b >> i) & 1) === 1) chk ^= POLYMOD_GENERATORS[i]!;\n  }\n  return chk;\n}\n\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction bechChecksum(prefix: string, words: number[], encodingConst = 1): string {\n  const len = prefix.length;\n  let chk = 1;\n  for (let i = 0; i < len; i++) {\n    const c = prefix.charCodeAt(i);\n    if (c < 33 || c > 126) throw new Error(`Invalid prefix (${prefix})`);\n    chk = bech32Polymod(chk) ^ (c >> 5);\n  }\n  chk = bech32Polymod(chk);\n  for (let i = 0; i < len; i++) chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n  for (let v of words) chk = bech32Polymod(chk) ^ v;\n  for (let i = 0; i < 6; i++) chk = bech32Polymod(chk);\n  chk ^= encodingConst;\n  return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\n\nexport interface Bech32 {\n  encode<Prefix extends string>(\n    prefix: Prefix,\n    words: number[] | Uint8Array,\n    limit?: number | false\n  ): `${Lowercase<Prefix>}1${string}`;\n  decode<Prefix extends string>(\n    str: `${Prefix}1${string}`,\n    limit?: number | false\n  ): Bech32Decoded<Prefix>;\n  encodeFromBytes(prefix: string, bytes: Uint8Array): string;\n  decodeToBytes(str: string): Bech32DecodedWithArray;\n  decodeUnsafe(str: string, limit?: number | false): void | Bech32Decoded<string>;\n  fromWords(to: number[]): Uint8Array;\n  fromWordsUnsafe(to: number[]): void | Uint8Array;\n  toWords(from: Uint8Array): number[];\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction genBech32(encoding: 'bech32' | 'bech32m'): Bech32 {\n  const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n  const _words = radix2(5);\n  const fromWords = _words.decode;\n  const toWords = _words.encode;\n  const fromWordsUnsafe = unsafeWrapper(fromWords);\n\n  function encode<Prefix extends string>(\n    prefix: Prefix,\n    words: number[] | Uint8Array,\n    limit: number | false = 90\n  ): `${Lowercase<Prefix>}1${string}` {\n    if (typeof prefix !== 'string')\n      throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n    if (words instanceof Uint8Array) words = Array.from(words);\n    if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n      throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n    if (prefix.length === 0) throw new TypeError(`Invalid prefix length ${prefix.length}`);\n    const actualLength = prefix.length + 7 + words.length;\n    if (limit !== false && actualLength > limit)\n      throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n    const lowered = prefix.toLowerCase();\n    const sum = bechChecksum(lowered, words, ENCODING_CONST);\n    return `${lowered}1${BECH_ALPHABET.encode(words)}${sum}` as `${Lowercase<Prefix>}1${string}`;\n  }\n\n  function decode<Prefix extends string>(\n    str: `${Prefix}1${string}`,\n    limit?: number | false\n  ): Bech32Decoded<Prefix>;\n  function decode(str: string, limit?: number | false): Bech32Decoded;\n  function decode(str: string, limit: number | false = 90): Bech32Decoded {\n    if (typeof str !== 'string')\n      throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n    if (str.length < 8 || (limit !== false && str.length > limit))\n      throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n    // don't allow mixed case\n    const lowered = str.toLowerCase();\n    if (str !== lowered && str !== str.toUpperCase())\n      throw new Error(`String must be lowercase or uppercase`);\n    const sepIndex = lowered.lastIndexOf('1');\n    if (sepIndex === 0 || sepIndex === -1)\n      throw new Error(`Letter \"1\" must be present between prefix and data only`);\n    const prefix = lowered.slice(0, sepIndex);\n    const data = lowered.slice(sepIndex + 1);\n    if (data.length < 6) throw new Error('Data must be at least 6 characters long');\n    const words = BECH_ALPHABET.decode(data).slice(0, -6);\n    const sum = bechChecksum(prefix, words, ENCODING_CONST);\n    if (!data.endsWith(sum)) throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n    return { prefix, words };\n  }\n\n  const decodeUnsafe = unsafeWrapper(decode);\n\n  function decodeToBytes(str: string): Bech32DecodedWithArray {\n    const { prefix, words } = decode(str, false);\n    return { prefix, words, bytes: fromWords(words) };\n  }\n\n  function encodeFromBytes(prefix: string, bytes: Uint8Array) {\n    return encode(prefix, toWords(bytes));\n  }\n\n  return {\n    encode,\n    decode,\n    encodeFromBytes,\n    decodeToBytes,\n    decodeUnsafe,\n    fromWords,\n    fromWordsUnsafe,\n    toWords,\n  };\n}\n\nexport const bech32: Bech32 = /* @__PURE__ */ genBech32('bech32');\nexport const bech32m: Bech32 = /* @__PURE__ */ genBech32('bech32m');\n\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\nexport const utf8: BytesCoder = {\n  encode: (data) => new TextDecoder().decode(data),\n  decode: (str) => new TextEncoder().encode(str),\n};\n\nexport const hex: BytesCoder = /* @__PURE__ */ chain(\n  radix2(4),\n  alphabet('0123456789abcdef'),\n  join(''),\n  normalize((s: string) => {\n    if (typeof s !== 'string' || s.length % 2)\n      throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n  })\n);\n\n// prettier-ignore\nconst CODERS = {\n  utf8, hex, base16, base32, base64, base64url, base58, base58xmr\n};\ntype CoderType = keyof typeof CODERS;\nconst coderTypeError =\n  'Invalid encoding type. Available types: utf8, hex, base16, base32, base64, base64url, base58, base58xmr';\n\nexport const bytesToString = (type: CoderType, bytes: Uint8Array): string => {\n  if (typeof type !== 'string' || !CODERS.hasOwnProperty(type)) throw new TypeError(coderTypeError);\n  if (!isBytes(bytes)) throw new TypeError('bytesToString() expects Uint8Array');\n  return CODERS[type].encode(bytes);\n};\nexport const str = bytesToString; // as in python, but for bytes only\n\nexport const stringToBytes = (type: CoderType, str: string): Uint8Array => {\n  if (!CODERS.hasOwnProperty(type)) throw new TypeError(coderTypeError);\n  if (typeof str !== 'string') throw new TypeError('stringToBytes() expects string');\n  return CODERS[type].decode(str);\n};\nexport const bytes = stringToBytes;\n","// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\nvar wk = (function (c, id, msg, transfer, cb) {\n    var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([\n        c + ';addEventListener(\"error\",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'\n    ], { type: 'text/javascript' }))));\n    w.onmessage = function (e) {\n        var d = e.data, ed = d.$e$;\n        if (ed) {\n            var err = new Error(ed[0]);\n            err['code'] = ed[1];\n            err.stack = ed[2];\n            cb(err, null);\n        }\n        else\n            cb(null, d);\n    };\n    w.postMessage(msg, transfer);\n    return w;\n});\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, i32 = Int32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new i32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return { b: b, r: r };\n};\nvar _a = freb(fleb, 2), fl = _a.b, revfl = _a.r;\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b.b, revfd = _b.r;\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >> 8) | ((x & 0x00FF) << 8)) >> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i) {\n        if (cd[i])\n            ++l[cd[i] - 1];\n    }\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 1; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p + 7) / 8) | 0; };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    return new u8(v.subarray(s, e));\n};\n/**\n * Codes for errors generated within this library\n */\nexport var FlateErrorCode = {\n    UnexpectedEOF: 0,\n    InvalidBlockType: 1,\n    InvalidLengthLiteral: 2,\n    InvalidDistance: 3,\n    StreamFinished: 4,\n    NoStreamHandler: 5,\n    InvalidHeader: 6,\n    NoCallback: 7,\n    InvalidUTF8: 8,\n    ExtraFieldTooLong: 9,\n    InvalidDate: 10,\n    FilenameTooLong: 11,\n    StreamFinishing: 12,\n    InvalidZipData: 13,\n    UnknownCompressionMethod: 14\n};\n// error codes\nvar ec = [\n    'unexpected EOF',\n    'invalid block type',\n    'invalid length/literal',\n    'invalid distance',\n    'stream finished',\n    'no stream handler',\n    ,\n    'no callback',\n    'invalid UTF-8 data',\n    'extra field too long',\n    'date not in range 1980-2099',\n    'filename too long',\n    'stream finishing',\n    'invalid zip data'\n    // determined by unknown compression method\n];\n;\nvar err = function (ind, msg, nt) {\n    var e = new Error(msg || ec[ind]);\n    e.code = ind;\n    if (Error.captureStackTrace)\n        Error.captureStackTrace(e, err);\n    if (!nt)\n        throw e;\n    return e;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, st, buf, dict) {\n    // source length       dict length\n    var sl = dat.length, dl = dict ? dict.length : 0;\n    if (!sl || st.f && !st.l)\n        return buf || new u8(0);\n    var noBuf = !buf;\n    // have to estimate size\n    var resize = noBuf || st.i != 2;\n    // no state\n    var noSt = st.i;\n    // Assumes roughly 33% compression ratio average\n    if (noBuf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                // ensure size\n                if (resize)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8, st.f = final;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                err(1);\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17\n        if (resize)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n            if (!c)\n                err(2);\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >> 4;\n                if (!d)\n                    err(3);\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & (1 << b) - 1, pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                if (resize)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                if (bt < dt) {\n                    var shift = dl - dt, dend = Math.min(dt, end);\n                    if (shift + bt < 0)\n                        err(3);\n                    for (; bt < dend; ++bt)\n                        buf[bt] = dict[shift + bt];\n                }\n                for (; bt < end; ++bt)\n                    buf[bt] = buf[bt - dt];\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    // don't reallocate for streams or user buffers\n    return bt != buf.length && noBuf ? slc(buf, 0, bt) : buf.subarray(0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n    d[o + 2] |= v >> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return { t: et, l: 0 };\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return { t: v, l: 1 };\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return { t: new u8(tr), l: mbt };\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return { c: cl.subarray(0, cli), n: s };\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a.t, mlb = _a.l;\n    var _b = hTree(df, 15), ddt = _b.t, mdb = _b.l;\n    var _c = lc(dlt), lclt = _c.c, nlc = _c.n;\n    var _d = lc(ddt), lcdt = _d.c, ndc = _d.n;\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        ++lcfreq[lclt[i] & 31];\n    for (var i = 0; i < lcdt.length; ++i)\n        ++lcfreq[lcdt[i] & 31];\n    var _e = hTree(lcfreq, 7), lct = _e.t, mlcb = _e.l;\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + 2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18];\n    if (bs >= 0 && flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >> 5) & 127), p += clct[i] >> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        var sym = syms[i];\n        if (sym > 255) {\n            var len = (sym >> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (sym >> 23) & 31), p += fleb[len];\n            var dst = sym & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (sym >> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[sym]), p += ll[sym];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new i32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, st) {\n    var s = st.z || dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var lst = st.l;\n    var pos = (st.r || 0) & 7;\n    if (lvl) {\n        if (pos)\n            w[0] = st.r >> 3;\n        var opt = deo[lvl - 1];\n        var n = opt >> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = st.p || new u16(32768), head = st.h || new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new i32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index          l/lind  waitdx          blkpos\n        var lc_1 = 0, eb = 0, i = st.i || 0, li = 0, wi = st.w || 0, bs = 0;\n        for (; i + 2 < s; ++i) {\n            // hash value\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && (rem > 423 || !lst)) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = imod - pimod & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = i - dif + j & 32767;\n                                    var pti = prev[ti];\n                                    var cd = ti - pti & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += imod - pimod & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one int32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        for (i = Math.max(i, wi); i < s; ++i) {\n            syms[li++] = dat[i];\n            ++lf[dat[i]];\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        if (!lst) {\n            st.r = (pos & 7) | w[(pos / 8) | 0] << 3;\n            // shft(pos) now 1 less if pos & 7 != 0\n            pos -= 7;\n            st.h = head, st.p = prev, st.i = i, st.w = wi;\n        }\n    }\n    else {\n        for (var i = st.w || 0; i < s + lst; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e >= s) {\n                // write final block\n                w[(pos / 8) | 0] = lst;\n                e = s;\n            }\n            pos = wfblk(w, pos + 1, dat.subarray(i, e));\n        }\n        st.i = s;\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new Int32Array(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && -306674912) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = -1;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return ~c; }\n    };\n};\n// Adler32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length | 0;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 2655, l);\n                for (; i < e; ++i)\n                    m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function () {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a & 0xFF00) << 8 | (b & 255) << 8 | (b >> 8);\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    if (!st) {\n        st = { l: 1 };\n        if (opt.dictionary) {\n            var dict = opt.dictionary.subarray(-32768);\n            var newDat = new u8(dict.length + dat.length);\n            newDat.set(dict);\n            newDat.set(dat, dict.length);\n            dat = newDat;\n            st.w = dict.length;\n        }\n    }\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? (st.l ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : 20) : (12 + opt.mem), pre, post, st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/\\s+/g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return fnStr;\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k].buffer) {\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n        }\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            fnStr = wcln(fns[i], fnStr, td_1);\n        ch[id] = { c: wcln(fns[m], fnStr, td_1), e: td_1 };\n    }\n    var td = mrg({}, ch[id].e);\n    return wk(ch[id].c + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, i32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gopt]; };\nvar bDflt = function () { return [u8, u16, i32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zls]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get opts\nvar gopt = function (o) { return o && {\n    out: o.size && new u8(o.size),\n    dictionary: o.dictionary\n}; };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) {\n        if (ev.data.length) {\n            strm.push(ev.data[0], ev.data[1]);\n            postMessage([ev.data[0].length]);\n        }\n        else\n            strm.flush();\n    };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id, flush, ext) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else if (!Array.isArray(dat))\n            ext(dat);\n        else if (dat.length == 1) {\n            strm.queuedSize -= dat[0];\n            if (strm.ondrain)\n                strm.ondrain(dat[0]);\n        }\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.queuedSize = 0;\n    strm.push = function (d, f) {\n        if (!strm.ondata)\n            err(5);\n        if (t)\n            strm.ondata(err(4, 0, 1), null, !!f);\n        strm.queuedSize += d.length;\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n    if (flush) {\n        strm.flush = function () { w.postMessage([]); };\n    }\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        err(6, 'invalid gzip data');\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += (d[10] | d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return (d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16 | d[l - 1] << 24) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + (o.filename ? o.filename.length + 1 : 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (o.dictionary && 32);\n    c[1] |= 31 - ((c[0] << 8) | c[1]) % 31;\n    if (o.dictionary) {\n        var h = adler();\n        h.p(o.dictionary);\n        wbytes(c, 2, h.d());\n    }\n};\n// zlib start\nvar zls = function (d, dict) {\n    if ((d[0] & 15) != 8 || (d[0] >> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        err(6, 'invalid zlib data');\n    if ((d[1] >> 5 & 1) == +!dict)\n        err(6, 'invalid zlib data: ' + (d[1] & 32 ? 'need' : 'unexpected') + ' dictionary');\n    return (d[1] >> 3 & 4) + 2;\n};\nfunction StrmOpt(opts, cb) {\n    if (typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n        this.s = { l: 0, i: 32768, w: 32768, z: 32768 };\n        // Buffer length must always be 0 mod 32768 for index calculations to be correct when modifying head and prev\n        // 98304 = 32768 (lookback) + 65536 (common chunk size)\n        this.b = new u8(98304);\n        if (this.o.dictionary) {\n            var dict = this.o.dictionary.subarray(-32768);\n            this.b.set(dict, 32768 - dict.length);\n            this.s.i = 32768 - dict.length;\n        }\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, this.s), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        var endLen = chunk.length + this.s.z;\n        if (endLen > this.b.length) {\n            if (endLen > 2 * this.b.length - 32768) {\n                var newBuf = new u8(endLen & -32768);\n                newBuf.set(this.b.subarray(0, this.s.z));\n                this.b = newBuf;\n            }\n            var split = this.b.length - this.s.z;\n            this.b.set(chunk.subarray(0, split), this.s.z);\n            this.s.z = this.b.length;\n            this.p(this.b, false);\n            this.b.set(this.b.subarray(-32768));\n            this.b.set(chunk.subarray(split), 32768);\n            this.s.z = chunk.length - split + 32768;\n            this.s.i = 32766, this.s.w = 32768;\n        }\n        else {\n            this.b.set(chunk, this.s.z);\n            this.s.z += chunk.length;\n        }\n        this.s.l = final & 1;\n        if (this.s.z > this.s.w + 8191 || final) {\n            this.p(this.b, final || false);\n            this.s.w = this.s.i, this.s.i -= 2;\n        }\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * deflated output for small inputs.\n     */\n    Deflate.prototype.flush = function () {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        this.p(this.b, false);\n        this.s.w = this.s.i, this.s.i -= 2;\n    };\n    return Deflate;\n}());\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6, 1);\n    }\n    return AsyncDeflate;\n}());\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    function Inflate(opts, cb) {\n        // no StrmOpt here to avoid adding to workerizer\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        var dict = opts && opts.dictionary && opts.dictionary.subarray(-32768);\n        this.s = { i: 0, b: dict ? dict.length : 0 };\n        this.o = new u8(32768);\n        this.p = new u8(0);\n        if (dict)\n            this.o.set(dict);\n    }\n    Inflate.prototype.e = function (c) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        if (!this.p.length)\n            this.p = c;\n        else if (c.length) {\n            var n = new u8(this.p.length + c.length);\n            n.set(this.p), n.set(c, this.p.length), this.p = n;\n        }\n    };\n    Inflate.prototype.c = function (final) {\n        this.s.i = +(this.d = final || false);\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.s, this.o);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    function AsyncInflate(opts, cb) {\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Inflate(ev.data);\n            onmessage = astrm(strm);\n        }, 7, 0);\n    }\n    return AsyncInflate;\n}());\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gopt(ev.data[1]))); }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, opts) {\n    return inflt(data, { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        this.l += chunk.length;\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, this.s);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * GZIPped output for small inputs.\n     */\n    Gzip.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Gzip;\n}());\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8, 1);\n    }\n    return AsyncGzip;\n}());\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming single or multi-member GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    function Gunzip(opts, cb) {\n        this.v = 1;\n        this.r = 0;\n        Inflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        this.r += chunk.length;\n        if (this.v) {\n            var p = this.p.subarray(this.v - 1);\n            var s = p.length > 3 ? gzs(p) : 4;\n            if (s > p.length) {\n                if (!final)\n                    return;\n            }\n            else if (this.v > 1 && this.onmember) {\n                this.onmember(this.r - p.length);\n            }\n            this.p = p.subarray(s), this.v = 0;\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n        // process concatenated GZIP\n        if (this.s.f && !this.s.l && !final) {\n            this.v = shft(this.s.p) + 9;\n            this.s = { i: 0 };\n            this.o = new u8(0);\n            this.push(new u8(0), final);\n        }\n    };\n    return Gunzip;\n}());\nexport { Gunzip };\n/**\n * Asynchronous streaming single or multi-member GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    function AsyncGunzip(opts, cb) {\n        var _this = this;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gunzip(ev.data);\n            strm.onmember = function (offset) { return postMessage(offset); };\n            onmessage = astrm(strm);\n        }, 9, 0, function (offset) { return _this.onmember && _this.onmember(offset); });\n    }\n    return AsyncGunzip;\n}());\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0], ev.data[1])); }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, opts) {\n    var st = gzs(data);\n    if (st + 8 > data.length)\n        err(6, 'invalid gzip data');\n    return inflt(data.subarray(st, -8), { i: 2 }, opts && opts.out || new u8(gzl(data)), opts && opts.dictionary);\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && (this.o.dictionary ? 6 : 2), f && 4, this.s);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * zlibbed output for small inputs.\n     */\n    Zlib.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Zlib;\n}());\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10, 1);\n    }\n    return AsyncZlib;\n}());\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, opts.dictionary ? 6 : 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    function Unzlib(opts, cb) {\n        Inflate.call(this, opts, cb);\n        this.v = opts && opts.dictionary ? 2 : 1;\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 6 && !final)\n                return;\n            this.p = this.p.subarray(zls(this.p, this.v - 1)), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                err(6, 'invalid zlib data');\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    function AsyncUnzlib(opts, cb) {\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Unzlib(ev.data);\n            onmessage = astrm(strm);\n        }, 11, 0);\n    }\n    return AsyncUnzlib;\n}());\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gopt(ev.data[1]))); }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, opts) {\n    return inflt(data.subarray(zls(data, opts && opts.dictionary), -4), { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    function Decompress(opts, cb) {\n        this.o = StrmOpt.call(this, opts, cb) || {};\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n    }\n    // init substream\n    // overriden by AsyncDecompress\n    Decompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (dat, final) {\n            _this.ondata(dat, final);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(this.o)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(this.o)\n                        : new this.Z(this.o);\n                this.i();\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    function AsyncDecompress(opts, cb) {\n        Decompress.call(this, opts, cb);\n        this.queuedSize = 0;\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n    }\n    AsyncDecompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        };\n        this.s.ondrain = function (size) {\n            _this.queuedSize -= size;\n            if (_this.ondrain)\n                _this.ondrain(size);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        this.queuedSize += chunk.length;\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, opts) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, opts)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, opts)\n            : unzlibSync(data, opts);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k, op = o;\n        if (Array.isArray(val))\n            op = mrg(o, val[1]), val = val[0];\n        if (val instanceof u8)\n            t[n] = [val, op];\n        else {\n            t[n += '/'] = [new u8(0), op];\n            fltn(val, n, t, o);\n        }\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n// decode UTF8\nvar dutf8 = function (d) {\n    for (var r = '', i = 0;;) {\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length)\n            return { s: r, r: slc(d, i - 1) };\n        if (!eb)\n            r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n        }\n        else if (eb & 1)\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\n        else\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */\n    function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds)\n            this.t = new TextDecoder();\n        else\n            this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    DecodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\n            if (final) {\n                if (this.t.decode().length)\n                    err(8);\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p)\n            err(4);\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (final) {\n            if (r.length)\n                err(8);\n            this.p = null;\n        }\n        else\n            this.p = r;\n        this.ondata(s, final);\n    };\n    return DecodeUTF8;\n}());\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */\n    function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */\n    EncodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}());\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for (var i = 0; i < str.length; ++i)\n            ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te)\n        return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = '';\n        for (var i = 0; i < dat.length; i += 16384)\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    }\n    else if (td) {\n        return td.decode(dat);\n    }\n    else {\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (r.length)\n            err(8);\n        return s;\n    }\n}\n;\n// deflate bit flag\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n    var le = 0;\n    if (ex) {\n        for (var k in ex) {\n            var l = ex[k].length;\n            if (l > 65535)\n                err(9);\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (f.flag << 1) | (c < 0 && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        err(10);\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >> 1)), b += 4;\n    if (c != -1) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c < 0 ? -c - 2 : c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for (var k in ex) {\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col)\n        d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/ (function () {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */\n    function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.process = function (chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final)\n            this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}());\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function ZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function (chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}());\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function AsyncZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}());\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */\n    function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */\n    Zip.prototype.add = function (file) {\n        var _this = this;\n        if (!this.ondata)\n            err(5);\n        // finishing or finished\n        if (this.d & 2)\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, false);\n        else {\n            var f = strToU8(file.filename), fl_1 = f.length;\n            var com = file.comment, o = com && strToU8(com);\n            var u = fl_1 != file.filename.length || (o && (com.length != o.length));\n            var hl_1 = fl_1 + exfl(file.extra) + 30;\n            if (fl_1 > 65535)\n                this.ondata(err(11, 0, 1), null, false);\n            var header = new u8(hl_1);\n            wzh(header, 0, file, f, u, -1);\n            var chks_1 = [header];\n            var pAll_1 = function () {\n                for (var _i = 0, chks_2 = chks_1; _i < chks_2.length; _i++) {\n                    var chk = chks_2[_i];\n                    _this.ondata(null, chk, false);\n                }\n                chks_1 = [];\n            };\n            var tr_1 = this.d;\n            this.d = 0;\n            var ind_1 = this.u.length;\n            var uf_1 = mrg(file, {\n                f: f,\n                u: u,\n                o: o,\n                t: function () {\n                    if (file.terminate)\n                        file.terminate();\n                },\n                r: function () {\n                    pAll_1();\n                    if (tr_1) {\n                        var nxt = _this.u[ind_1 + 1];\n                        if (nxt)\n                            nxt.r();\n                        else\n                            _this.d = 1;\n                    }\n                    tr_1 = 1;\n                }\n            });\n            var cl_1 = 0;\n            file.ondata = function (err, dat, final) {\n                if (err) {\n                    _this.ondata(err, dat, final);\n                    _this.terminate();\n                }\n                else {\n                    cl_1 += dat.length;\n                    chks_1.push(dat);\n                    if (final) {\n                        var dd = new u8(16);\n                        wbytes(dd, 0, 0x8074B50);\n                        wbytes(dd, 4, file.crc);\n                        wbytes(dd, 8, cl_1);\n                        wbytes(dd, 12, file.size);\n                        chks_1.push(dd);\n                        uf_1.c = cl_1, uf_1.b = hl_1 + cl_1 + 16, uf_1.crc = file.crc, uf_1.size = file.size;\n                        if (tr_1)\n                            uf_1.r();\n                        tr_1 = 1;\n                    }\n                    else if (tr_1)\n                        pAll_1();\n                }\n            };\n            this.u.push(uf_1);\n        }\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */\n    Zip.prototype.end = function () {\n        var _this = this;\n        if (this.d & 2) {\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, true);\n            return;\n        }\n        if (this.d)\n            this.e();\n        else\n            this.u.push({\n                r: function () {\n                    if (!(_this.d & 1))\n                        return;\n                    _this.u.splice(-1, 1);\n                    _this.e();\n                },\n                t: function () { }\n            });\n        this.d = 3;\n    };\n    Zip.prototype.e = function () {\n        var bt = 0, l = 0, tl = 0;\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, -f.c - 2, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */\n    Zip.prototype.terminate = function () {\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}());\nexport { Zip };\nexport function zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            }\n            catch (e) {\n                return cbd(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cbd(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cbd(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || (m && (com.length != ms)),\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (s > 65535)\n            cbl(err(11, 0, 1), null);\n        if (!compression)\n            cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535)\n            err(11);\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || (m && (com.length != ms)),\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\n    function UnzipPassThrough() {\n    }\n    UnzipPassThrough.prototype.push = function (data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}());\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function UnzipInflate() {\n        var _this = this;\n        this.i = new Inflate(function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function (data, final) {\n        try {\n            this.i.push(data, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}());\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function AsyncUnzipInflate(_, sz) {\n        var _this = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function (dat, final) {\n                _this.ondata(null, dat, final);\n            });\n        }\n        else {\n            this.i = new AsyncInflate(function (err, dat, final) {\n                _this.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function (data, final) {\n        if (this.i.terminate)\n            data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}());\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */\n    function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzip.prototype.push = function (chunk, final) {\n        var _this = this;\n        if (!this.onfile)\n            err(5);\n        if (!this.p)\n            err(4);\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d)\n                this.d.push(toAdd, !this.c);\n            else\n                this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length)\n                return this.push(chunk, final);\n        }\n        else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length)\n                buf = chunk;\n            else if (!chunk.length)\n                buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function () {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_3 = [];\n                        this_1.k.unshift(chks_3);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        }\n                        else if (dd)\n                            sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function () {\n                                if (!file_1.ondata)\n                                    err(5);\n                                if (!sc_1)\n                                    file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this.o[cmp_1];\n                                    if (!ctr)\n                                        file_1.ondata(err(14, 'unknown compression type ' + cmp_1, 1), null, false);\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\n                                    for (var _i = 0, chks_4 = chks_3; _i < chks_4.length; _i++) {\n                                        var dat = chks_4[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this.k[0] == chks_3 && _this.c)\n                                        _this.d = d_1;\n                                    else\n                                        d_1.push(et, true);\n                                }\n                            },\n                            terminate: function () {\n                                if (d_1 && d_1.terminate)\n                                    d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0)\n                            file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                }\n                else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                    else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for (; i < l - 4; ++i) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add)\n                    add.push(dat, !!f);\n                else\n                    this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2)\n                return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c)\n                err(13);\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */\n    Unzip.prototype.register = function (decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}());\nexport { Unzip };\nvar mt = typeof queueMicrotask == 'function' ? queueMicrotask : typeof setTimeout == 'function' ? setTimeout : function (fn) { fn(); };\nexport function unzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cbd(err(13, 0, 1), null);\n            return tAll;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (lft) {\n        var c = lft;\n        var o = b4(data, e + 16);\n        var z = o == 4294967295 || c == 65535;\n        if (z) {\n            var ze = b4(data, e - 12);\n            z = b4(data, ze) == 0x6064B50;\n            if (z) {\n                c = lft = b4(data, ze + 32);\n                o = b4(data, ze + 48);\n            }\n        }\n        var fltr = opts && opts.filter;\n        var _loop_3 = function (i) {\n            var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n            o = no;\n            var cbl = function (e, d) {\n                if (e) {\n                    tAll();\n                    cbd(e, null);\n                }\n                else {\n                    if (d)\n                        files[fn] = d;\n                    if (!--lft)\n                        cbd(null, files);\n                }\n            };\n            if (!fltr || fltr({\n                name: fn,\n                size: sc,\n                originalSize: su,\n                compression: c_1\n            })) {\n                if (!c_1)\n                    cbl(null, slc(data, b, b + sc));\n                else if (c_1 == 8) {\n                    var infl = data.subarray(b, b + sc);\n                    // Synchronously decompress under 512KB, or barely-compressed data\n                    if (su < 524288 || sc > 0.8 * su) {\n                        try {\n                            cbl(null, inflateSync(infl, { out: new u8(su) }));\n                        }\n                        catch (e) {\n                            cbl(e, null);\n                        }\n                    }\n                    else\n                        term.push(inflate(infl, { size: su }, cbl));\n                }\n                else\n                    cbl(err(14, 'unknown compression type ' + c_1, 1), null);\n            }\n            else\n                cbl(null, null);\n        };\n        for (var i = 0; i < c; ++i) {\n            _loop_3(i);\n        }\n    }\n    else\n        cbd(null, {});\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @param opts The ZIP extraction options\n * @returns The decompressed files\n */\nexport function unzipSync(data, opts) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            err(13);\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295 || c == 65535;\n    if (z) {\n        var ze = b4(data, e - 12);\n        z = b4(data, ze) == 0x6064B50;\n        if (z) {\n            c = b4(data, ze + 32);\n            o = b4(data, ze + 48);\n        }\n    }\n    var fltr = opts && opts.filter;\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!fltr || fltr({\n            name: fn,\n            size: sc,\n            originalSize: su,\n            compression: c_2\n        })) {\n            if (!c_2)\n                files[fn] = slc(data, b, b + sc);\n            else if (c_2 == 8)\n                files[fn] = inflateSync(data.subarray(b, b + sc), { out: new u8(su) });\n            else\n                err(14, 'unknown compression type ' + c_2);\n        }\n    }\n    return files;\n}\n","import{secp256k1 as e}from\"@noble/curves/secp256k1\";import{base64 as t}from\"@scure/base\";import{Buffer as r}from\"buffer\";import{zlibSync as c,unzlibSync as n}from\"fflate\";function o(){let r=e.utils.randomPrivateKey(),c=e.getPublicKey(r);return{privateKey:t.encode(r),publicKey:t.encode(c)}}function d({privateKey:r,publicKey:c}){let n=e.getSharedSecret(t.decode(r),t.decode(c)).slice(1);return t.encode(n)}async function i(e,r){let n=JSON.stringify(e),o=c((new TextEncoder).encode(n)),d=t.decode(r),i=await crypto.subtle.importKey(\"raw\",d,{name:\"AES-GCM\"},!0,[\"encrypt\"]),a=crypto.getRandomValues(new Uint8Array(12)),y=await crypto.subtle.encrypt({name:\"AES-GCM\",iv:a},i,o);return{iv:t.encode(a),encryptedRequest:t.encode(new Uint8Array(y))}}async function a({encryptedResult:e,iv:c,sharedSecret:o}){let d=t.decode(o),i=t.decode(c),a=await crypto.subtle.importKey(\"raw\",d,{name:\"AES-GCM\"},!0,[\"decrypt\"]),y=t.decode(e),p=await crypto.subtle.decrypt({name:\"AES-GCM\",iv:i},a,y),u=n(r.from(p));return(new TextDecoder).decode(u)}export{a as decryptResult,i as encryptRequest,o as generateKeyPair,d as recoverSharedSecret};\n","async function e(e){let n=window.open(void 0,void 0,t({w:440,h:680}));if(!n)throw Error(\"\");return n.location=e.href,new Promise(((e,t)=>{let o,i=setTimeout((()=>{t(Error(\"Authorization request timed out after 2 minutes.\")),r()}),12e4);function r(){n?.close(),window.removeEventListener(\"message\",c)}let d=setInterval((()=>{n?.closed&&!o&&(r(),clearInterval(d),clearTimeout(i),t(Error(\"User rejected request\")))}),300);function c(d){d.data&&(\"PRIVY_CROSS_APP_CONNECT_RESPONSE\"===d.data.type&&(e(d.data),n?.close()),\"PRIVY_OAUTH_ERROR\"===d.data.type&&(clearTimeout(i),t(Error(d.data.error)),r()),\"PRIVY_OAUTH_USE_BROADCAST_CHANNEL\"===d.data.type&&((o=new BroadcastChannel(\"popup-privy-oauth\")).onmessage=c))}window.addEventListener(\"message\",c)}))}function t({w:e,h:t}){let n=void 0!==window.screenLeft?window.screenLeft:window.screenX,o=void 0!==window.screenTop?window.screenTop:window.screenY,i=window.innerWidth?window.innerWidth:document.documentElement.clientWidth?document.documentElement.clientWidth:screen.width,r=window.innerHeight?window.innerHeight:document.documentElement.clientHeight?document.documentElement.clientHeight:screen.height;return`toolbar=0,location=0,menubar=0,height=${t},width=${e},popup=1,left=${(i-e)/2/(i/window.screen.availWidth)+n},top=${(r-t)/2/(r/window.screen.availHeight)+o}`}export{t as getPopupOptions,e as triggerPopup};\n","import{encryptRequest as e,decryptResult as r}from\"./crypto.mjs\";import{getPopupOptions as t}from\"./triggerPopup.mjs\";import\"@noble/curves/secp256k1\";import\"@scure/base\";import\"buffer\";import\"fflate\";async function a({request:a,apiUrl:o,publicKey:i,sharedSecret:c,providerAppId:d}){let n=window.open(void 0,void 0,t({w:400,h:680}));if(!n)throw Error(\"Failed to initialize request\");let p=new URL(o),{encryptedRequest:m,iv:u}=await e(a,c);return p.searchParams.set(\"requester_public_key\",i),p.searchParams.set(\"encrypted_request\",m),p.searchParams.set(\"requester_origin\",window.location.origin),p.searchParams.set(\"iv\",u),p.searchParams.set(\"provider_app_id\",d),p.searchParams.set(\"signout_enabled\",\"true\"),p.searchParams.set(\"v\",\"1\"),n.location=p.href,new Promise(((e,t)=>{let a=setTimeout((()=>{d(),t(new s(\"Request timeout\"))}),12e4),o=setInterval((()=>{n.closed&&(d(),t(new s(\"User rejected request\")))}),300),i=async a=>{a.data&&(\"PRIVY_CROSS_APP_ACTION_RESPONSE\"===a.data.type&&a.data.encryptedResult&&(d(),e(await r({encryptedResult:a.data.encryptedResult,iv:a.data.iv,sharedSecret:c}))),\"PRIVY_CROSS_APP_ACTION_ERROR\"===a.data.type&&a.data.error&&(d(),t(new s(a.data.error,{mwp:a.data.mwp,code:a.data?.errorCode}))))};window.addEventListener(\"message\",i);let d=()=>{n.close(),clearInterval(o),clearTimeout(a),window.removeEventListener(\"message\",i)}}))}class s extends Error{constructor(e,r){super(e),r?.mwp?.action&&(this.action=r.mwp.action),r?.code&&(this.code=r.code)}}export{s as PopupRequestError,a as sendRequestToPopup};\n","import{generateKeyPair as e,recoverSharedSecret as r}from\"./crypto.mjs\";import{triggerPopup as t}from\"./triggerPopup.mjs\";import\"@noble/curves/secp256k1\";import\"@scure/base\";import\"buffer\";import\"fflate\";async function s({providerAppId:s,providerUrl:a,connectionOpts:i}){let p=new URL(a),{privateKey:o,publicKey:c}=e();p.searchParams.set(\"requester_public_key\",c),p.searchParams.set(\"connect\",\"true\"),p.searchParams.set(\"provider_app_id\",s),p.searchParams.set(\"requester_origin\",window.location.origin),p.searchParams.set(\"smart_wallet_mode\",i?.smartWalletMode?\"true\":\"false\");let{address:m,providerPublicKey:l,exp:n}=await t(p);return{address:m,sharedSecret:r({privateKey:o,publicKey:l}),publicKey:c,exp:n}}export{s as sendConnectionRequestToPopup};\n","class e{get(e){return this._cache[e]}put(e,t){void 0!==t?this._cache[e]=t:this.del(e)}del(e){delete this._cache[e]}getKeys(){return Object.keys(this._cache)}constructor(){this._cache={}}}class t{get(e){let t=localStorage.getItem(e);return null===t?void 0:JSON.parse(t)}put(e,t){void 0!==t?localStorage.setItem(e,JSON.stringify(t)):this.del(e)}del(e){localStorage.removeItem(e)}getKeys(){return Object.entries(localStorage).map((([e])=>e))}}function r(){try{let e=\"privy:__session_storage__test\",r=new t;return r.put(e,\"blobby\"),r.del(e),!0}catch(e){return!1}}var s=\"undefined\"!=typeof window&&window.localStorage?new t:new e;export{e as InMemoryCache,t as LocalStorage,s as default,r as isLocalStorageAccessible};\n","import{getCrossAppProviderDetails as t}from\"./getCrossAppProviderDetails.mjs\";import{sendRequestToPopup as e,PopupRequestError as r}from\"./request.mjs\";import{sendConnectionRequestToPopup as i}from\"./sendConnectionRequestToPopup.mjs\";import s from\"./storage.mjs\";import\"./crypto.mjs\";import\"@noble/curves/secp256k1\";import\"@scure/base\";import\"buffer\";import\"fflate\";import\"./triggerPopup.mjs\";const a=({providerAppId:t,chains:e,chainId:r,apiUrl:i,connectionOpts:s})=>new o(t,e,r,i,s);class o{get STORAGE_CONNECTION_KEY(){let{smartWalletMode:t}=this._connectionOpts??{};return`privy-caw:${this.providerAppId}:connection${t?\":smart-wallet\":\"\"}`}get STORAGE_CHAIN_ID_KEY(){let{smartWalletMode:t}=this._connectionOpts??{};return`privy-caw:${this.providerAppId}:connection_chain_id${t?\":smart-wallet\":\"\"}`}async loadProviderDetails(){if(!this._providerDetailsLoaded){let{url:e,customConnectUrl:r,customTransactUrl:i}=await t({providerAppId:this.providerAppId,apiUrl:this._apiUrl});this._providerConnectUrl=r||`${e}/cross-app/connect`,this._providerTransactUrl=i||`${e}/cross-app/transact`,this._providerDetailsLoaded=!0}}async getProviderConnectUrl(){return await this.loadProviderDetails(),this._providerConnectUrl}async getProviderTransactUrl(){return await this.loadProviderDetails(),this._providerTransactUrl}clearConnection(){this._sharedSecret=void 0,this._publicKey=void 0,this._address=void 0,s.del(this.STORAGE_CONNECTION_KEY),s.del(this.STORAGE_CHAIN_ID_KEY)}get chain(){return this.chains.find((({id:t})=>t===this.chainId))}get address(){return this._address}async requestConnection(){let{address:t,sharedSecret:e,publicKey:r,exp:a}=await i({providerAppId:this.providerAppId,providerUrl:await this.getProviderConnectUrl(),connectionOpts:this._connectionOpts});s.put(this.STORAGE_CONNECTION_KEY,{address:t,sharedSecret:e,publicKey:r,exp:a}),this._address=t,this._sharedSecret=e,this._publicKey=r}switchChain({id:t}){this.chainId=t,s.put(this.STORAGE_CHAIN_ID_KEY,this.chainId)}async sendRequest(t,i){if(!this._sharedSecret||!this._publicKey)throw Error(`Must call 'eth_requestAccounts' before ${t}`);try{return await e({request:{method:t,params:i,chainId:this.chainId},apiUrl:await this.getProviderTransactUrl(),publicKey:this._publicKey,providerAppId:this.providerAppId,sharedSecret:this._sharedSecret})}catch(t){throw t instanceof r&&\"clear\"===t.action&&this.clearConnection(),t}}constructor(t,e,r,i,a){this._providerDetailsLoaded=!1,this.providerAppId=t,this.chains=e,this._apiUrl=i??\"https://auth.privy.io\",this._connectionOpts=a;let o=s.get(this.STORAGE_CONNECTION_KEY),c=o&&o.exp>(new Date).getTime(),d=s.get(this.STORAGE_CHAIN_ID_KEY);this.chainId=r??d??e[0].id,c?(this._sharedSecret=o.sharedSecret,this._publicKey=o.publicKey,this._address=o.address):this.clearConnection(),this.loadProviderDetails()}}export{a as createPrivyCrossAppClient};\n","async function t({providerAppId:t,apiUrl:a}){let n=await fetch(`${a}/api/v1/apps/${t}/cross-app/details`,{method:\"GET\",headers:{\"Content-Type\":\"application/json\"}}),{custom_connect_url:o,custom_transact_url:r,custom_api_url:c,icon_url:e,name:s}=await n.json();return{url:c,customConnectUrl:o,customTransactUrl:r,name:s,iconUrl:e}}export{t as getCrossAppProviderDetails};\n","import{createPublicClient as e,http as t,ProviderRpcError as a}from\"viem\";import{createPrivyCrossAppClient as s}from\"./client.mjs\";import{PopupRequestError as n}from\"./request.mjs\";import\"./getCrossAppProviderDetails.mjs\";import\"./sendConnectionRequestToPopup.mjs\";import\"./crypto.mjs\";import\"@noble/curves/secp256k1\";import\"@scure/base\";import\"buffer\";import\"fflate\";import\"./triggerPopup.mjs\";import\"./storage.mjs\";const r=r=>{let i=s({providerAppId:r.providerAppId,chains:r.chains,chainId:r.chainId,apiUrl:r.apiUrl,connectionOpts:{smartWalletMode:r.smartWalletMode}}),h=e({chain:i.chain,transport:r.transports?.[i.chain.id]??t()}),d={accountsChanged:[],connect:[],chainChanged:[],disconnect:[],message:[]},l=()=>{i.clearConnection(),d.accountsChanged?.forEach((e=>e([])))};return{on:(e,t)=>{d[e].push(t)},removeListener:(e,t)=>{let a=d[e].indexOf(t);a>-1&&d[e].splice(a)},request:async s=>{r.smartWalletMode&&(\"eth_sendTransaction\"===s.method&&(s.method=\"privy_sendSmartWalletTx\"),\"eth_signTransaction\"===s.method&&(s.method=\"privy_signSmartWalletTx\"),\"personal_sign\"===s.method&&(s.method=\"privy_signSmartWalletMessage\"),\"eth_signTypedData_v4\"===s.method&&(s.method=\"privy_signSmartWalletTypedData\"));let{method:_,params:m}=s;if(console.debug(\"PrivyWalletProvider.request\",{method:_,params:m}),\"wallet_requestPermissions\"===_||\"eth_requestAccounts\"===_&&!i.address)return await i.requestConnection(),d.accountsChanged?.forEach((e=>e([i.address]))),void d.connect?.forEach((e=>e({chainId:o(i.chain.id)})));if(\"eth_chainId\"===_)return i.chain.id;if(c(_))return h.request({method:_,params:m});switch(_){case\"eth_requestAccounts\":case\"eth_accounts\":return i.address?[i.address]:[];case\"wallet_switchEthereumChain\":return i.switchChain({id:Number(m[0].chainId)}),h=e({chain:i.chain,transport:r.transports?.[i.chain.id]??t()}),d.chainChanged.forEach((e=>e(o(i.chain.id)))),null;case\"wallet_revokePermissions\":return void l();case\"eth_sendTransaction\":case\"eth_signTransaction\":case\"eth_signTypedData_v4\":case\"eth_sign\":case\"privy_signSmartWalletMessage\":case\"privy_signSmartWalletTypedData\":case\"privy_signSmartWalletTx\":case\"privy_sendSmartWalletTx\":case\"personal_sign\":[\"eth_sendTransaction\",\"eth_signTransaction\",\"privy_sendSmartWalletTx\",\"privy_signSmartWalletTx\"].includes(_)&&(m[0].chainId??=i.chain.id);try{return await i.sendRequest(_,m)}catch(e){if(e instanceof n&&(\"clear\"===e.action&&l(),void 0===e.code&&\"User rejected request\"===e.message))throw new a(Error(\"User rejected request\"),{code:4001,shortMessage:\"User rejected request\"});throw new a(e,{code:e.code??-1,shortMessage:e.message})}default:throw new a(Error(\"Unsupported method\"),{code:4200,shortMessage:`Unsupported method: ${_}`})}}}};let o=e=>`0x${e.toString(16)}`,i={web3_clientVersion:!0,web3_sha3:!0,net_listening:!0,net_peerCount:!0,net_version:!0,eth_blobBaseFee:!0,eth_blockNumber:!0,eth_call:!0,eth_chainId:!0,eth_coinbase:!0,eth_estimateGas:!0,eth_feeHistory:!0,eth_gasPrice:!0,eth_getBalance:!0,eth_getBlockByHash:!0,eth_getBlockByNumber:!0,eth_getBlockTransactionCountByHash:!0,eth_getBlockTransactionCountByNumber:!0,eth_getCode:!0,eth_getFilterChanges:!0,eth_getFilterLogs:!0,eth_getLogs:!0,eth_getProof:!0,eth_getStorageAt:!0,eth_getTransactionByBlockHashAndIndex:!0,eth_getTransactionByBlockNumberAndIndex:!0,eth_getTransactionByHash:!0,eth_getTransactionCount:!0,eth_getTransactionReceipt:!0,eth_getUncleByBlockHashAndIndex:!0,eth_getUncleByBlockNumberAndIndex:!0,eth_getUncleCountByBlockHash:!0,eth_getUncleCountByBlockNumber:!0,eth_maxPriorityFeePerGas:!0,eth_newBlockFilter:!0,eth_newFilter:!0,eth_newPendingTransactionFilter:!0,eth_protocolVersion:!0,eth_sendRawTransaction:!0,eth_uninstallFilter:!0,zks_estimateFee:!0,eth_createAccessList:!0,eth_simulateV1:!0},c=e=>!!i[e];export{r as toPrivyWalletProvider};\n","import {\n  type CustomPaymasterHandler,\n  transformEIP1193Provider,\n  validChains,\n} from '@abstract-foundation/agw-client';\nimport { toPrivyWalletConnector } from '@privy-io/cross-app-connect/rainbow-kit';\nimport { type CreateConnectorFn } from '@wagmi/core';\nimport {\n  type EIP1193EventMap,\n  type EIP1193RequestFn,\n  type EIP1474Methods,\n  http,\n} from 'viem';\n\nimport { AGW_APP_ID, ICON_URL } from './constants.js';\nimport type { WalletDetailsParams } from './types/rainbowkit.js';\n\ninterface AbstractWalletConnectorOptions {\n  /** RainbowKit connector details */\n  rkDetails: WalletDetailsParams;\n  /** Optional custom paymaster handler */\n  customPaymasterHandler: CustomPaymasterHandler;\n}\n\n/**\n * Create a wagmi connector for the Abstract Global Wallet.\n *\n * Adapted from wagmi injected connector as a reference implementation:\n * https://github.com/wevm/wagmi/blob/main/packages/core/src/connectors/injected.ts#L94\n *\n * @example\n * import { createConfig, http } from \"wagmi\";\n * import { abstract } from \"wagmi/chains\";\n * import { abstractWalletConnector } from \"@abstract-foundation/agw-react/connectors\"\n *\n * export const wagmiConfig = createConfig({\n *   chains: [abstract],\n *   transports: {\n *     [abstract.id]: http(),\n *   },\n *   connectors: [abstractWalletConnector()],\n *   ssr: true,\n * });\n */\nfunction abstractWalletConnector(\n  options: Partial<AbstractWalletConnectorOptions> = {},\n): CreateConnectorFn<\n  {\n    on: <event extends keyof EIP1193EventMap>(\n      event: event,\n      listener: EIP1193EventMap[event],\n    ) => void;\n    removeListener: <event extends keyof EIP1193EventMap>(\n      event: event,\n      listener: EIP1193EventMap[event],\n    ) => void;\n    request: EIP1193RequestFn<EIP1474Methods>;\n  },\n  Record<string, unknown>,\n  Record<string, unknown>\n> {\n  const { rkDetails, customPaymasterHandler } = options;\n  return (params) => {\n    const chains = [...params.chains];\n    let defaultChain = params.chains[0];\n    const validChainIds = Object.keys(validChains)\n      .map(Number)\n      .sort(function (a, b) {\n        return a - b;\n      });\n    for (const chainId of validChainIds) {\n      const chainIndex = chains.findIndex((chain) => chain.id === chainId);\n      const hasChain = chainIndex !== -1;\n      if (hasChain) {\n        const removedChains = chains.splice(chainIndex, 1);\n        defaultChain = removedChains[0] ?? defaultChain;\n        break;\n      }\n    }\n\n    const connector = toPrivyWalletConnector({\n      iconUrl: ICON_URL,\n      id: AGW_APP_ID,\n      name: 'Abstract',\n    })({\n      ...params,\n      chains: [defaultChain, ...chains],\n    });\n\n    const getAbstractProvider = async (\n      parameters?: { chainId?: number | undefined } | undefined,\n    ) => {\n      const chainId = parameters?.chainId ?? defaultChain.id;\n      if (!validChains[chainId]) {\n        throw new Error('Unsupported chain');\n      }\n      const chain =\n        params.chains.find((c) => c.id === chainId) ?? validChains[chainId];\n\n      const provider = await connector.getProvider({\n        chainId,\n      });\n\n      const transport =\n        params.transports?.[chainId] ??\n        http(undefined, {\n          batch: true,\n        });\n\n      return transformEIP1193Provider({\n        provider,\n        chain,\n        transport,\n        isPrivyCrossApp: true,\n        customPaymasterHandler,\n      });\n    };\n\n    const abstractConnector = {\n      ...connector,\n      ...rkDetails,\n      getProvider: getAbstractProvider,\n      type: 'injected',\n      id: 'xyz.abs.privy',\n    };\n    return abstractConnector;\n  };\n}\n\nexport { abstractWalletConnector };\n","import{createConnector as t,ProviderNotFoundError as e,ChainNotConfiguredError as n}from\"@wagmi/core\";import{getAddress as i,SwitchChainError as o}from\"viem\";import{toPrivyWalletProvider as a}from\"./provider.mjs\";import\"./client.mjs\";import\"./getCrossAppProviderDetails.mjs\";import\"./request.mjs\";import\"./crypto.mjs\";import\"@noble/curves/secp256k1\";import\"@scure/base\";import\"buffer\";import\"fflate\";import\"./triggerPopup.mjs\";import\"./sendConnectionRequestToPopup.mjs\";import\"./storage.mjs\";function s(s,c){let r,h,d,m,u=null;return t((t=>({id:s.id,name:s.name,icon:s.iconUrl,type:\"privy\",...c,isWalletConnectModalConnector:!1,async setup(){let t=await this.getProvider();t&&(d||(d=this.onConnect.bind(this),t.on(\"connect\",d)),r||(r=this.onAccountsChanged.bind(this),t.on(\"accountsChanged\",r)))},async connect(t){let e=await this.getProvider();if(e&&await this.isAuthorized()){let[t,e]=await Promise.all([this.getAccounts(),this.getChainId()]);return{accounts:t,chainId:e}}if(t?.isReconnecting)return{accounts:[],chainId:1};await e.request({method:\"eth_requestAccounts\"}),d&&(e.removeListener(\"connect\",d),d=void 0),r||(r=this.onAccountsChanged.bind(this),e.on(\"accountsChanged\",r)),h||(h=this.onChainChanged.bind(this),e.on(\"chainChanged\",h)),m||(m=this.onDisconnect.bind(this),e.on(\"disconnect\",m)),t?.chainId&&await this.switchChain({chainId:t.chainId});let[n,i]=await Promise.all([this.getAccounts(),this.getChainId()]);return{accounts:n,chainId:i}},async disconnect(){let t=await this.getProvider();h&&(t.removeListener(\"chainChanged\",h),h=void 0),m&&(t.removeListener(\"disconnect\",m),m=void 0),d||(d=this.onConnect.bind(this),t.on(\"connect\",d)),await t.request({method:\"wallet_revokePermissions\",params:[{eth_accounts:{}}]}),this.onDisconnect()},async getAccounts(){let t=await this.getProvider();if(!t)throw new e;return(await t.request({method:\"eth_accounts\"})).map((t=>i(t)))},async getChainId(){let t=await this.getProvider();if(!t)throw new e;return Number(await t.request({method:\"eth_chainId\"}))},getProvider:async()=>(u||(u=a({chains:t.chains,transports:t.transports,providerAppId:s.id,apiUrl:s.apiUrl,smartWalletMode:s.smartWalletMode})),u),async isAuthorized(){try{return!!(await this.getAccounts()).length}catch(t){return!1}},async switchChain({chainId:i}){let a=await this.getProvider();if(!a)throw new e;let s=t.chains.find((t=>t.id===i));if(!s)throw new o(new n);return i===Number(await a.request({method:\"eth_chainId\"}))||(await a.request({method:\"wallet_switchEthereumChain\",params:[{chainId:`0x${i.toString(16)}`}]}),t.emitter.emit(\"change\",{chainId:i})),s},async onAccountsChanged(e){if(0!==e.length)if(t.emitter.listenerCount(\"connect\")){let t=(await this.getChainId()).toString();this.onConnect?.({chainId:t})}else t.emitter.emit(\"change\",{accounts:e.map((t=>i(t)))});else this.onDisconnect()},onChainChanged(e){let n=Number(e);t.emitter.emit(\"change\",{chainId:n})},async onConnect(e){let n=await this.getAccounts();if(0===n.length)return;let i=Number(e.chainId);t.emitter.emit(\"connect\",{accounts:n,chainId:i});let o=await this.getProvider();o&&(d&&(o.removeListener(\"connect\",d),d=void 0),r||(r=this.onAccountsChanged.bind(this),o.on(\"accountsChanged\",r)),h||(h=this.onChainChanged.bind(this),o.on(\"chainChanged\",h)),m||(m=this.onDisconnect.bind(this),o.on(\"disconnect\",m)))},async onDisconnect(){t.emitter.emit(\"disconnect\")}})))}export{s as toPrivyWalletConnector};\n","const AGW_APP_ID = 'cm04asygd041fmry9zmcyn5o5';\nconst ICON_URL = 'https://abstract-assets.abs.xyz/icons/light.png';\n\nexport { AGW_APP_ID, ICON_URL };\n","import {\n  type CustomPaymasterHandler,\n  validChains,\n} from '@abstract-foundation/agw-client';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport React, { useMemo } from 'react';\nimport { type Chain, http, type Transport } from 'viem';\nimport { createConfig, WagmiProvider } from 'wagmi';\n\nimport { abstractWalletConnector } from './abstractWalletConnector.js';\n\ninterface AbstractWalletConfig {\n  /**\n   * Determines whether to use abstract testnet\n   * @type {boolean}\n   * @default false\n   */\n  chain: Chain;\n  /**\n   * Optional transport for the client.\n   * @type {Transport}\n   * @default http()\n   */\n  transport?: Transport;\n  /**\n   * Optional query client.\n   * @type {QueryClient}\n   * @default new QueryClient()\n   */\n  queryClient?: QueryClient;\n  /**\n   * Optional custom paymaster handler.\n   * @type {CustomPaymasterHandler}\n   */\n  customPaymasterHandler?: CustomPaymasterHandler;\n}\n\n/**\n * AbstractWalletProvider is a React provider that wraps the WagmiProvider and QueryClientProvider.\n * It provides the AbstractWalletContext to its children.\n * @example\n * ```tsx\n * import { AbstractWalletProvider } from '@abstractwallet/agw-react';\n *\n * const App = () => {\n *   // optional configuration overrides\n *   const transport = http(\"https://your.abstract.node.example.com/rpc\")\n *   const queryClient = new QueryClient()\n *   return (\n *     <AbstractWalletProvider chain={abstractTestnet} transport={transport} queryClient={queryClient}>\n *       <Component {...pageProps} />\n *     </AbstractWalletProvider>\n *   );\n * };\n * ```\n * @param {AbstractWalletConfig} config - The configuration for the AbstractWalletProvider.\n */\nexport const AbstractWalletProvider = ({\n  chain,\n  transport,\n  queryClient = new QueryClient(),\n  customPaymasterHandler,\n  children,\n}: React.PropsWithChildren<AbstractWalletConfig>) => {\n  if (!validChains[chain.id]) {\n    throw new Error(`Chain ${chain.id} is not supported`);\n  }\n\n  const wagmiConfig = useMemo(() => {\n    return createConfig({\n      chains: [chain],\n      ssr: true,\n      connectors: [\n        abstractWalletConnector({\n          customPaymasterHandler,\n        }),\n      ],\n      transports: {\n        [chain.id]:\n          transport ??\n          http(undefined, {\n            batch: true,\n          }),\n      },\n      multiInjectedProviderDiscovery: false,\n    });\n  }, [chain, transport, customPaymasterHandler]);\n\n  return (\n    <WagmiProvider config={wagmiConfig}>\n      <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>\n    </WagmiProvider>\n  );\n};\n","import { focusManager } from './focusManager'\nimport { notifyManager } from './notifyManager'\nimport { fetchState } from './query'\nimport { Subscribable } from './subscribable'\nimport { pendingThenable } from './thenable'\nimport {\n  isServer,\n  isValidTimeout,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  timeUntilStale,\n} from './utils'\nimport { timeoutManager } from './timeoutManager'\nimport type { ManagedTimerId } from './timeoutManager'\nimport type { FetchOptions, Query, QueryState } from './query'\nimport type { QueryClient } from './queryClient'\nimport type { PendingThenable, Thenable } from './thenable'\nimport type {\n  DefaultError,\n  DefaultedQueryObserverOptions,\n  PlaceholderDataFunction,\n  QueryKey,\n  QueryObserverBaseResult,\n  QueryObserverOptions,\n  QueryObserverResult,\n  QueryOptions,\n  RefetchOptions,\n} from './types'\n\ntype QueryObserverListener<TData, TError> = (\n  result: QueryObserverResult<TData, TError>,\n) => void\n\ninterface ObserverFetchOptions extends FetchOptions {\n  throwOnError?: boolean\n}\n\nexport class QueryObserver<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> extends Subscribable<QueryObserverListener<TData, TError>> {\n  #client: QueryClient\n  #currentQuery: Query<TQueryFnData, TError, TQueryData, TQueryKey> = undefined!\n  #currentQueryInitialState: QueryState<TQueryData, TError> = undefined!\n  #currentResult: QueryObserverResult<TData, TError> = undefined!\n  #currentResultState?: QueryState<TQueryData, TError>\n  #currentResultOptions?: QueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >\n  #currentThenable: Thenable<TData>\n  #selectError: TError | null\n  #selectFn?: (data: TQueryData) => TData\n  #selectResult?: TData\n  // This property keeps track of the last query with defined data.\n  // It will be used to pass the previous data and query to the placeholder function between renders.\n  #lastQueryWithDefinedData?: Query<TQueryFnData, TError, TQueryData, TQueryKey>\n  #staleTimeoutId?: ManagedTimerId\n  #refetchIntervalId?: ManagedTimerId\n  #currentRefetchInterval?: number | false\n  #trackedProps = new Set<keyof QueryObserverResult>()\n\n  constructor(\n    client: QueryClient,\n    public options: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ) {\n    super()\n\n    this.#client = client\n    this.#selectError = null\n    this.#currentThenable = pendingThenable()\n\n    this.bindMethods()\n    this.setOptions(options)\n  }\n\n  protected bindMethods(): void {\n    this.refetch = this.refetch.bind(this)\n  }\n\n  protected onSubscribe(): void {\n    if (this.listeners.size === 1) {\n      this.#currentQuery.addObserver(this)\n\n      if (shouldFetchOnMount(this.#currentQuery, this.options)) {\n        this.#executeFetch()\n      } else {\n        this.updateResult()\n      }\n\n      this.#updateTimers()\n    }\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.hasListeners()) {\n      this.destroy()\n    }\n  }\n\n  shouldFetchOnReconnect(): boolean {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnReconnect,\n    )\n  }\n\n  shouldFetchOnWindowFocus(): boolean {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnWindowFocus,\n    )\n  }\n\n  destroy(): void {\n    this.listeners = new Set()\n    this.#clearStaleTimeout()\n    this.#clearRefetchInterval()\n    this.#currentQuery.removeObserver(this)\n  }\n\n  setOptions(\n    options: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): void {\n    const prevOptions = this.options\n    const prevQuery = this.#currentQuery\n\n    this.options = this.#client.defaultQueryOptions(options)\n\n    if (\n      this.options.enabled !== undefined &&\n      typeof this.options.enabled !== 'boolean' &&\n      typeof this.options.enabled !== 'function' &&\n      typeof resolveEnabled(this.options.enabled, this.#currentQuery) !==\n        'boolean'\n    ) {\n      throw new Error(\n        'Expected enabled to be a boolean or a callback that returns a boolean',\n      )\n    }\n\n    this.#updateQuery()\n    this.#currentQuery.setOptions(this.options)\n\n    if (\n      prevOptions._defaulted &&\n      !shallowEqualObjects(this.options, prevOptions)\n    ) {\n      this.#client.getQueryCache().notify({\n        type: 'observerOptionsUpdated',\n        query: this.#currentQuery,\n        observer: this,\n      })\n    }\n\n    const mounted = this.hasListeners()\n\n    // Fetch if there are subscribers\n    if (\n      mounted &&\n      shouldFetchOptionally(\n        this.#currentQuery,\n        prevQuery,\n        this.options,\n        prevOptions,\n      )\n    ) {\n      this.#executeFetch()\n    }\n\n    // Update result\n    this.updateResult()\n\n    // Update stale interval if needed\n    if (\n      mounted &&\n      (this.#currentQuery !== prevQuery ||\n        resolveEnabled(this.options.enabled, this.#currentQuery) !==\n          resolveEnabled(prevOptions.enabled, this.#currentQuery) ||\n        resolveStaleTime(this.options.staleTime, this.#currentQuery) !==\n          resolveStaleTime(prevOptions.staleTime, this.#currentQuery))\n    ) {\n      this.#updateStaleTimeout()\n    }\n\n    const nextRefetchInterval = this.#computeRefetchInterval()\n\n    // Update refetch interval if needed\n    if (\n      mounted &&\n      (this.#currentQuery !== prevQuery ||\n        resolveEnabled(this.options.enabled, this.#currentQuery) !==\n          resolveEnabled(prevOptions.enabled, this.#currentQuery) ||\n        nextRefetchInterval !== this.#currentRefetchInterval)\n    ) {\n      this.#updateRefetchInterval(nextRefetchInterval)\n    }\n  }\n\n  getOptimisticResult(\n    options: DefaultedQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): QueryObserverResult<TData, TError> {\n    const query = this.#client.getQueryCache().build(this.#client, options)\n\n    const result = this.createResult(query, options)\n\n    if (shouldAssignObserverCurrentProperties(this, result)) {\n      // this assigns the optimistic result to the current Observer\n      // because if the query function changes, useQuery will be performing\n      // an effect where it would fetch again.\n      // When the fetch finishes, we perform a deep data cloning in order\n      // to reuse objects references. This deep data clone is performed against\n      // the `observer.currentResult.data` property\n      // When QueryKey changes, we refresh the query and get new `optimistic`\n      // result, while we leave the `observer.currentResult`, so when new data\n      // arrives, it finds the old `observer.currentResult` which is related\n      // to the old QueryKey. Which means that currentResult and selectData are\n      // out of sync already.\n      // To solve this, we move the cursor of the currentResult every time\n      // an observer reads an optimistic value.\n\n      // When keeping the previous data, the result doesn't change until new\n      // data arrives.\n      this.#currentResult = result\n      this.#currentResultOptions = this.options\n      this.#currentResultState = this.#currentQuery.state\n    }\n    return result\n  }\n\n  getCurrentResult(): QueryObserverResult<TData, TError> {\n    return this.#currentResult\n  }\n\n  trackResult(\n    result: QueryObserverResult<TData, TError>,\n    onPropTracked?: (key: keyof QueryObserverResult) => void,\n  ): QueryObserverResult<TData, TError> {\n    return new Proxy(result, {\n      get: (target, key) => {\n        this.trackProp(key as keyof QueryObserverResult)\n        onPropTracked?.(key as keyof QueryObserverResult)\n        if (\n          key === 'promise' &&\n          !this.options.experimental_prefetchInRender &&\n          this.#currentThenable.status === 'pending'\n        ) {\n          this.#currentThenable.reject(\n            new Error(\n              'experimental_prefetchInRender feature flag is not enabled',\n            ),\n          )\n        }\n        return Reflect.get(target, key)\n      },\n    })\n  }\n\n  trackProp(key: keyof QueryObserverResult) {\n    this.#trackedProps.add(key)\n  }\n\n  getCurrentQuery(): Query<TQueryFnData, TError, TQueryData, TQueryKey> {\n    return this.#currentQuery\n  }\n\n  refetch({ ...options }: RefetchOptions = {}): Promise<\n    QueryObserverResult<TData, TError>\n  > {\n    return this.fetch({\n      ...options,\n    })\n  }\n\n  fetchOptimistic(\n    options: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): Promise<QueryObserverResult<TData, TError>> {\n    const defaultedOptions = this.#client.defaultQueryOptions(options)\n\n    const query = this.#client\n      .getQueryCache()\n      .build(this.#client, defaultedOptions)\n\n    return query.fetch().then(() => this.createResult(query, defaultedOptions))\n  }\n\n  protected fetch(\n    fetchOptions: ObserverFetchOptions,\n  ): Promise<QueryObserverResult<TData, TError>> {\n    return this.#executeFetch({\n      ...fetchOptions,\n      cancelRefetch: fetchOptions.cancelRefetch ?? true,\n    }).then(() => {\n      this.updateResult()\n      return this.#currentResult\n    })\n  }\n\n  #executeFetch(\n    fetchOptions?: Omit<ObserverFetchOptions, 'initialPromise'>,\n  ): Promise<TQueryData | undefined> {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.#updateQuery()\n\n    // Fetch\n    let promise: Promise<TQueryData | undefined> = this.#currentQuery.fetch(\n      this.options as QueryOptions<TQueryFnData, TError, TQueryData, TQueryKey>,\n      fetchOptions,\n    )\n\n    if (!fetchOptions?.throwOnError) {\n      promise = promise.catch(noop)\n    }\n\n    return promise\n  }\n\n  #updateStaleTimeout(): void {\n    this.#clearStaleTimeout()\n    const staleTime = resolveStaleTime(\n      this.options.staleTime,\n      this.#currentQuery,\n    )\n\n    if (isServer || this.#currentResult.isStale || !isValidTimeout(staleTime)) {\n      return\n    }\n\n    const time = timeUntilStale(this.#currentResult.dataUpdatedAt, staleTime)\n\n    // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n    const timeout = time + 1\n\n    this.#staleTimeoutId = timeoutManager.setTimeout(() => {\n      if (!this.#currentResult.isStale) {\n        this.updateResult()\n      }\n    }, timeout)\n  }\n\n  #computeRefetchInterval() {\n    return (\n      (typeof this.options.refetchInterval === 'function'\n        ? this.options.refetchInterval(this.#currentQuery)\n        : this.options.refetchInterval) ?? false\n    )\n  }\n\n  #updateRefetchInterval(nextInterval: number | false): void {\n    this.#clearRefetchInterval()\n\n    this.#currentRefetchInterval = nextInterval\n\n    if (\n      isServer ||\n      resolveEnabled(this.options.enabled, this.#currentQuery) === false ||\n      !isValidTimeout(this.#currentRefetchInterval) ||\n      this.#currentRefetchInterval === 0\n    ) {\n      return\n    }\n\n    this.#refetchIntervalId = timeoutManager.setInterval(() => {\n      if (\n        this.options.refetchIntervalInBackground ||\n        focusManager.isFocused()\n      ) {\n        this.#executeFetch()\n      }\n    }, this.#currentRefetchInterval)\n  }\n\n  #updateTimers(): void {\n    this.#updateStaleTimeout()\n    this.#updateRefetchInterval(this.#computeRefetchInterval())\n  }\n\n  #clearStaleTimeout(): void {\n    if (this.#staleTimeoutId) {\n      timeoutManager.clearTimeout(this.#staleTimeoutId)\n      this.#staleTimeoutId = undefined\n    }\n  }\n\n  #clearRefetchInterval(): void {\n    if (this.#refetchIntervalId) {\n      timeoutManager.clearInterval(this.#refetchIntervalId)\n      this.#refetchIntervalId = undefined\n    }\n  }\n\n  protected createResult(\n    query: Query<TQueryFnData, TError, TQueryData, TQueryKey>,\n    options: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): QueryObserverResult<TData, TError> {\n    const prevQuery = this.#currentQuery\n    const prevOptions = this.options\n    const prevResult = this.#currentResult as\n      | QueryObserverResult<TData, TError>\n      | undefined\n    const prevResultState = this.#currentResultState\n    const prevResultOptions = this.#currentResultOptions\n    const queryChange = query !== prevQuery\n    const queryInitialState = queryChange\n      ? query.state\n      : this.#currentQueryInitialState\n\n    const { state } = query\n    let newState = { ...state }\n    let isPlaceholderData = false\n    let data: TData | undefined\n\n    // Optimistically set result in fetching state if needed\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners()\n\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options)\n\n      const fetchOptionally =\n        mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions)\n\n      if (fetchOnMount || fetchOptionally) {\n        newState = {\n          ...newState,\n          ...fetchState(state.data, query.options),\n        }\n      }\n      if (options._optimisticResults === 'isRestoring') {\n        newState.fetchStatus = 'idle'\n      }\n    }\n\n    let { error, errorUpdatedAt, status } = newState\n\n    // Per default, use query data\n    data = newState.data as unknown as TData\n    let skipSelect = false\n\n    // use placeholderData if needed\n    if (\n      options.placeholderData !== undefined &&\n      data === undefined &&\n      status === 'pending'\n    ) {\n      let placeholderData\n\n      // Memoize placeholder data\n      if (\n        prevResult?.isPlaceholderData &&\n        options.placeholderData === prevResultOptions?.placeholderData\n      ) {\n        placeholderData = prevResult.data\n        // we have to skip select when reading this memoization\n        // because prevResult.data is already \"selected\"\n        skipSelect = true\n      } else {\n        // compute placeholderData\n        placeholderData =\n          typeof options.placeholderData === 'function'\n            ? (\n                options.placeholderData as unknown as PlaceholderDataFunction<TQueryData>\n              )(\n                this.#lastQueryWithDefinedData?.state.data,\n                this.#lastQueryWithDefinedData as any,\n              )\n            : options.placeholderData\n      }\n\n      if (placeholderData !== undefined) {\n        status = 'success'\n        data = replaceData(\n          prevResult?.data,\n          placeholderData as unknown,\n          options,\n        ) as TData\n        isPlaceholderData = true\n      }\n    }\n\n    // Select data if needed\n    // this also runs placeholderData through the select function\n    if (options.select && data !== undefined && !skipSelect) {\n      // Memoize select result\n      if (\n        prevResult &&\n        data === prevResultState?.data &&\n        options.select === this.#selectFn\n      ) {\n        data = this.#selectResult\n      } else {\n        try {\n          this.#selectFn = options.select\n          data = options.select(data as any)\n          data = replaceData(prevResult?.data, data, options)\n          this.#selectResult = data\n          this.#selectError = null\n        } catch (selectError) {\n          this.#selectError = selectError as TError\n        }\n      }\n    }\n\n    if (this.#selectError) {\n      error = this.#selectError as any\n      data = this.#selectResult\n      errorUpdatedAt = Date.now()\n      status = 'error'\n    }\n\n    const isFetching = newState.fetchStatus === 'fetching'\n    const isPending = status === 'pending'\n    const isError = status === 'error'\n\n    const isLoading = isPending && isFetching\n    const hasData = data !== undefined\n\n    const result: QueryObserverBaseResult<TData, TError> = {\n      status,\n      fetchStatus: newState.fetchStatus,\n      isPending,\n      isSuccess: status === 'success',\n      isError,\n      isInitialLoading: isLoading,\n      isLoading,\n      data,\n      dataUpdatedAt: newState.dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: newState.fetchFailureCount,\n      failureReason: newState.fetchFailureReason,\n      errorUpdateCount: newState.errorUpdateCount,\n      isFetched: newState.dataUpdateCount > 0 || newState.errorUpdateCount > 0,\n      isFetchedAfterMount:\n        newState.dataUpdateCount > queryInitialState.dataUpdateCount ||\n        newState.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isPending,\n      isLoadingError: isError && !hasData,\n      isPaused: newState.fetchStatus === 'paused',\n      isPlaceholderData,\n      isRefetchError: isError && hasData,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      promise: this.#currentThenable,\n      isEnabled: resolveEnabled(options.enabled, query) !== false,\n    }\n\n    const nextResult = result as QueryObserverResult<TData, TError>\n\n    if (this.options.experimental_prefetchInRender) {\n      const finalizeThenableIfPossible = (thenable: PendingThenable<TData>) => {\n        if (nextResult.status === 'error') {\n          thenable.reject(nextResult.error)\n        } else if (nextResult.data !== undefined) {\n          thenable.resolve(nextResult.data)\n        }\n      }\n\n      /**\n       * Create a new thenable and result promise when the results have changed\n       */\n      const recreateThenable = () => {\n        const pending =\n          (this.#currentThenable =\n          nextResult.promise =\n            pendingThenable())\n\n        finalizeThenableIfPossible(pending)\n      }\n\n      const prevThenable = this.#currentThenable\n      switch (prevThenable.status) {\n        case 'pending':\n          // Finalize the previous thenable if it was pending\n          // and we are still observing the same query\n          if (query.queryHash === prevQuery.queryHash) {\n            finalizeThenableIfPossible(prevThenable)\n          }\n          break\n        case 'fulfilled':\n          if (\n            nextResult.status === 'error' ||\n            nextResult.data !== prevThenable.value\n          ) {\n            recreateThenable()\n          }\n          break\n        case 'rejected':\n          if (\n            nextResult.status !== 'error' ||\n            nextResult.error !== prevThenable.reason\n          ) {\n            recreateThenable()\n          }\n          break\n      }\n    }\n\n    return nextResult\n  }\n\n  updateResult(): void {\n    const prevResult = this.#currentResult as\n      | QueryObserverResult<TData, TError>\n      | undefined\n\n    const nextResult = this.createResult(this.#currentQuery, this.options)\n\n    this.#currentResultState = this.#currentQuery.state\n    this.#currentResultOptions = this.options\n\n    if (this.#currentResultState.data !== undefined) {\n      this.#lastQueryWithDefinedData = this.#currentQuery\n    }\n\n    // Only notify and update result if something has changed\n    if (shallowEqualObjects(nextResult, prevResult)) {\n      return\n    }\n\n    this.#currentResult = nextResult\n\n    const shouldNotifyListeners = (): boolean => {\n      if (!prevResult) {\n        return true\n      }\n\n      const { notifyOnChangeProps } = this.options\n      const notifyOnChangePropsValue =\n        typeof notifyOnChangeProps === 'function'\n          ? notifyOnChangeProps()\n          : notifyOnChangeProps\n\n      if (\n        notifyOnChangePropsValue === 'all' ||\n        (!notifyOnChangePropsValue && !this.#trackedProps.size)\n      ) {\n        return true\n      }\n\n      const includedProps = new Set(\n        notifyOnChangePropsValue ?? this.#trackedProps,\n      )\n\n      if (this.options.throwOnError) {\n        includedProps.add('error')\n      }\n\n      return Object.keys(this.#currentResult).some((key) => {\n        const typedKey = key as keyof QueryObserverResult\n        const changed = this.#currentResult[typedKey] !== prevResult[typedKey]\n\n        return changed && includedProps.has(typedKey)\n      })\n    }\n\n    this.#notify({ listeners: shouldNotifyListeners() })\n  }\n\n  #updateQuery(): void {\n    const query = this.#client.getQueryCache().build(this.#client, this.options)\n\n    if (query === this.#currentQuery) {\n      return\n    }\n\n    const prevQuery = this.#currentQuery as\n      | Query<TQueryFnData, TError, TQueryData, TQueryKey>\n      | undefined\n    this.#currentQuery = query\n    this.#currentQueryInitialState = query.state\n\n    if (this.hasListeners()) {\n      prevQuery?.removeObserver(this)\n      query.addObserver(this)\n    }\n  }\n\n  onQueryUpdate(): void {\n    this.updateResult()\n\n    if (this.hasListeners()) {\n      this.#updateTimers()\n    }\n  }\n\n  #notify(notifyOptions: { listeners: boolean }): void {\n    notifyManager.batch(() => {\n      // First, trigger the listeners\n      if (notifyOptions.listeners) {\n        this.listeners.forEach((listener) => {\n          listener(this.#currentResult)\n        })\n      }\n\n      // Then the cache listeners\n      this.#client.getQueryCache().notify({\n        query: this.#currentQuery,\n        type: 'observerResultsUpdated',\n      })\n    })\n  }\n}\n\nfunction shouldLoadOnMount(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any>,\n): boolean {\n  return (\n    resolveEnabled(options.enabled, query) !== false &&\n    query.state.data === undefined &&\n    !(query.state.status === 'error' && options.retryOnMount === false)\n  )\n}\n\nfunction shouldFetchOnMount(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n): boolean {\n  return (\n    shouldLoadOnMount(query, options) ||\n    (query.state.data !== undefined &&\n      shouldFetchOn(query, options, options.refetchOnMount))\n  )\n}\n\nfunction shouldFetchOn(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n  field: (typeof options)['refetchOnMount'] &\n    (typeof options)['refetchOnWindowFocus'] &\n    (typeof options)['refetchOnReconnect'],\n) {\n  if (\n    resolveEnabled(options.enabled, query) !== false &&\n    resolveStaleTime(options.staleTime, query) !== 'static'\n  ) {\n    const value = typeof field === 'function' ? field(query) : field\n\n    return value === 'always' || (value !== false && isStale(query, options))\n  }\n  return false\n}\n\nfunction shouldFetchOptionally(\n  query: Query<any, any, any, any>,\n  prevQuery: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n  prevOptions: QueryObserverOptions<any, any, any, any, any>,\n): boolean {\n  return (\n    (query !== prevQuery ||\n      resolveEnabled(prevOptions.enabled, query) === false) &&\n    (!options.suspense || query.state.status !== 'error') &&\n    isStale(query, options)\n  )\n}\n\nfunction isStale(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n): boolean {\n  return (\n    resolveEnabled(options.enabled, query) !== false &&\n    query.isStaleByTime(resolveStaleTime(options.staleTime, query))\n  )\n}\n\n// this function would decide if we will update the observer's 'current'\n// properties after an optimistic reading via getOptimisticResult\nfunction shouldAssignObserverCurrentProperties<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  observer: QueryObserver<TQueryFnData, TError, TData, TQueryData, TQueryKey>,\n  optimisticResult: QueryObserverResult<TData, TError>,\n) {\n  // if the newly created result isn't what the observer is holding as current,\n  // then we'll need to update the properties as well\n  if (!shallowEqualObjects(observer.getCurrentResult(), optimisticResult)) {\n    return true\n  }\n\n  // basically, just keep previous properties if nothing changed\n  return false\n}\n","function _objectDestructuringEmpty(t) {\n  if (null == t) throw new TypeError(\"Cannot destructure \" + t);\n}\nexport { _objectDestructuringEmpty as default };","'use client'\nimport * as React from 'react'\n\n// CONTEXT\nexport type QueryErrorResetFunction = () => void\nexport type QueryErrorIsResetFunction = () => boolean\nexport type QueryErrorClearResetFunction = () => void\n\nexport interface QueryErrorResetBoundaryValue {\n  clearReset: QueryErrorClearResetFunction\n  isReset: QueryErrorIsResetFunction\n  reset: QueryErrorResetFunction\n}\n\nfunction createValue(): QueryErrorResetBoundaryValue {\n  let isReset = false\n  return {\n    clearReset: () => {\n      isReset = false\n    },\n    reset: () => {\n      isReset = true\n    },\n    isReset: () => {\n      return isReset\n    },\n  }\n}\n\nconst QueryErrorResetBoundaryContext = React.createContext(createValue())\n\n// HOOK\n\nexport const useQueryErrorResetBoundary = () =>\n  React.useContext(QueryErrorResetBoundaryContext)\n\n// COMPONENT\n\nexport type QueryErrorResetBoundaryFunction = (\n  value: QueryErrorResetBoundaryValue,\n) => React.ReactNode\n\nexport interface QueryErrorResetBoundaryProps {\n  children: QueryErrorResetBoundaryFunction | React.ReactNode\n}\n\nexport const QueryErrorResetBoundary = ({\n  children,\n}: QueryErrorResetBoundaryProps) => {\n  const [value] = React.useState(() => createValue())\n  return (\n    <QueryErrorResetBoundaryContext.Provider value={value}>\n      {typeof children === 'function' ? children(value) : children}\n    </QueryErrorResetBoundaryContext.Provider>\n  )\n}\n","'use client'\nimport * as React from 'react'\n\nconst IsRestoringContext = React.createContext(false)\n\nexport const useIsRestoring = () => React.useContext(IsRestoringContext)\nexport const IsRestoringProvider = IsRestoringContext.Provider\n","import type {\n  DefaultError,\n  DefaultedQueryObserverOptions,\n  Query,\n  QueryKey,\n  QueryObserver,\n  QueryObserverResult,\n} from '@tanstack/query-core'\nimport type { QueryErrorResetBoundaryValue } from './QueryErrorResetBoundary'\n\nexport const defaultThrowOnError = <\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  _error: TError,\n  query: Query<TQueryFnData, TError, TData, TQueryKey>,\n) => query.state.data === undefined\n\nexport const ensureSuspenseTimers = (\n  defaultedOptions: DefaultedQueryObserverOptions<any, any, any, any, any>,\n) => {\n  if (defaultedOptions.suspense) {\n    // Handle staleTime to ensure minimum 1000ms in Suspense mode\n    // This prevents unnecessary refetching when components remount after suspending\n    const MIN_SUSPENSE_TIME_MS = 1000\n\n    const clamp = (value: number | 'static' | undefined) =>\n      value === 'static'\n        ? value\n        : Math.max(value ?? MIN_SUSPENSE_TIME_MS, MIN_SUSPENSE_TIME_MS)\n\n    const originalStaleTime = defaultedOptions.staleTime\n    defaultedOptions.staleTime =\n      typeof originalStaleTime === 'function'\n        ? (...args) => clamp(originalStaleTime(...args))\n        : clamp(originalStaleTime)\n\n    if (typeof defaultedOptions.gcTime === 'number') {\n      defaultedOptions.gcTime = Math.max(\n        defaultedOptions.gcTime,\n        MIN_SUSPENSE_TIME_MS,\n      )\n    }\n  }\n}\n\nexport const willFetch = (\n  result: QueryObserverResult<any, any>,\n  isRestoring: boolean,\n) => result.isLoading && result.isFetching && !isRestoring\n\nexport const shouldSuspend = (\n  defaultedOptions:\n    | DefaultedQueryObserverOptions<any, any, any, any, any>\n    | undefined,\n  result: QueryObserverResult<any, any>,\n) => defaultedOptions?.suspense && result.isPending\n\nexport const fetchOptimistic = <\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryData,\n  TQueryKey extends QueryKey,\n>(\n  defaultedOptions: DefaultedQueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >,\n  observer: QueryObserver<TQueryFnData, TError, TData, TQueryData, TQueryKey>,\n  errorResetBoundary: QueryErrorResetBoundaryValue,\n) =>\n  observer.fetchOptimistic(defaultedOptions).catch(() => {\n    errorResetBoundary.clearReset()\n  })\n","'use client'\nimport * as React from 'react'\n\nimport { isServer, noop, notifyManager } from '@tanstack/query-core'\nimport { useQueryClient } from './QueryClientProvider'\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary'\nimport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary,\n} from './errorBoundaryUtils'\nimport { useIsRestoring } from './IsRestoringProvider'\nimport {\n  ensureSuspenseTimers,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch,\n} from './suspense'\nimport type {\n  QueryClient,\n  QueryKey,\n  QueryObserver,\n  QueryObserverResult,\n} from '@tanstack/query-core'\nimport type { UseBaseQueryOptions } from './types'\n\nexport function useBaseQuery<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryData,\n  TQueryKey extends QueryKey,\n>(\n  options: UseBaseQueryOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >,\n  Observer: typeof QueryObserver,\n  queryClient?: QueryClient,\n): QueryObserverResult<TData, TError> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof options !== 'object' || Array.isArray(options)) {\n      throw new Error(\n        'Bad argument type. Starting with v5, only the \"Object\" form is allowed when calling query related functions. Please use the error stack to find the culprit call. More info here: https://tanstack.com/query/latest/docs/react/guides/migrating-to-v5#supports-a-single-signature-one-object',\n      )\n    }\n  }\n\n  const isRestoring = useIsRestoring()\n  const errorResetBoundary = useQueryErrorResetBoundary()\n  const client = useQueryClient(queryClient)\n  const defaultedOptions = client.defaultQueryOptions(options)\n\n  ;(client.getDefaultOptions().queries as any)?._experimental_beforeQuery?.(\n    defaultedOptions,\n  )\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!defaultedOptions.queryFn) {\n      console.error(\n        `[${defaultedOptions.queryHash}]: No queryFn was passed as an option, and no default queryFn was found. The queryFn parameter is only optional when using a default queryFn. More info here: https://tanstack.com/query/latest/docs/framework/react/guides/default-query-function`,\n      )\n    }\n  }\n\n  // Make sure results are optimistically set in fetching state before subscribing or updating options\n  defaultedOptions._optimisticResults = isRestoring\n    ? 'isRestoring'\n    : 'optimistic'\n\n  ensureSuspenseTimers(defaultedOptions)\n  ensurePreventErrorBoundaryRetry(defaultedOptions, errorResetBoundary)\n\n  useClearResetErrorBoundary(errorResetBoundary)\n\n  // this needs to be invoked before creating the Observer because that can create a cache entry\n  const isNewCacheEntry = !client\n    .getQueryCache()\n    .get(defaultedOptions.queryHash)\n\n  const [observer] = React.useState(\n    () =>\n      new Observer<TQueryFnData, TError, TData, TQueryData, TQueryKey>(\n        client,\n        defaultedOptions,\n      ),\n  )\n\n  // note: this must be called before useSyncExternalStore\n  const result = observer.getOptimisticResult(defaultedOptions)\n\n  const shouldSubscribe = !isRestoring && options.subscribed !== false\n  React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => {\n        const unsubscribe = shouldSubscribe\n          ? observer.subscribe(notifyManager.batchCalls(onStoreChange))\n          : noop\n\n        // Update result to make sure we did not miss any query updates\n        // between creating the observer and subscribing to it.\n        observer.updateResult()\n\n        return unsubscribe\n      },\n      [observer, shouldSubscribe],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  React.useEffect(() => {\n    observer.setOptions(defaultedOptions)\n  }, [defaultedOptions, observer])\n\n  // Handle suspense\n  if (shouldSuspend(defaultedOptions, result)) {\n    throw fetchOptimistic(defaultedOptions, observer, errorResetBoundary)\n  }\n\n  // Handle error boundary\n  if (\n    getHasError({\n      result,\n      errorResetBoundary,\n      throwOnError: defaultedOptions.throwOnError,\n      query: client\n        .getQueryCache()\n        .get<\n          TQueryFnData,\n          TError,\n          TQueryData,\n          TQueryKey\n        >(defaultedOptions.queryHash),\n      suspense: defaultedOptions.suspense,\n    })\n  ) {\n    throw result.error\n  }\n\n  ;(client.getDefaultOptions().queries as any)?._experimental_afterQuery?.(\n    defaultedOptions,\n    result,\n  )\n\n  if (\n    defaultedOptions.experimental_prefetchInRender &&\n    !isServer &&\n    willFetch(result, isRestoring)\n  ) {\n    const promise = isNewCacheEntry\n      ? // Fetch immediately on render in order to ensure `.promise` is resolved even if the component is unmounted\n        fetchOptimistic(defaultedOptions, observer, errorResetBoundary)\n      : // subscribe to the \"cache promise\" so that we can finalize the currentThenable once data comes in\n        client.getQueryCache().get(defaultedOptions.queryHash)?.promise\n\n    promise?.catch(noop).finally(() => {\n      // `.updateResult()` will trigger `.#currentThenable` to finalize\n      observer.updateResult()\n    })\n  }\n\n  // Handle result property usage tracking\n  return !defaultedOptions.notifyOnChangeProps\n    ? observer.trackResult(result)\n    : result\n}\n","'use client'\nimport * as React from 'react'\nimport { shouldThrowError } from '@tanstack/query-core'\nimport type {\n  DefaultedQueryObserverOptions,\n  Query,\n  QueryKey,\n  QueryObserverResult,\n  ThrowOnError,\n} from '@tanstack/query-core'\nimport type { QueryErrorResetBoundaryValue } from './QueryErrorResetBoundary'\n\nexport const ensurePreventErrorBoundaryRetry = <\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryData,\n  TQueryKey extends QueryKey,\n>(\n  options: DefaultedQueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >,\n  errorResetBoundary: QueryErrorResetBoundaryValue,\n) => {\n  if (\n    options.suspense ||\n    options.throwOnError ||\n    options.experimental_prefetchInRender\n  ) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      options.retryOnMount = false\n    }\n  }\n}\n\nexport const useClearResetErrorBoundary = (\n  errorResetBoundary: QueryErrorResetBoundaryValue,\n) => {\n  React.useEffect(() => {\n    errorResetBoundary.clearReset()\n  }, [errorResetBoundary])\n}\n\nexport const getHasError = <\n  TData,\n  TError,\n  TQueryFnData,\n  TQueryData,\n  TQueryKey extends QueryKey,\n>({\n  result,\n  errorResetBoundary,\n  throwOnError,\n  query,\n  suspense,\n}: {\n  result: QueryObserverResult<TData, TError>\n  errorResetBoundary: QueryErrorResetBoundaryValue\n  throwOnError: ThrowOnError<TQueryFnData, TError, TQueryData, TQueryKey>\n  query: Query<TQueryFnData, TError, TQueryData, TQueryKey> | undefined\n  suspense: boolean | undefined\n}) => {\n  return (\n    result.isError &&\n    !errorResetBoundary.isReset() &&\n    !result.isFetching &&\n    query &&\n    ((suspense && result.data === undefined) ||\n      shouldThrowError(throwOnError, [result.error, query]))\n  )\n}\n","'use client'\nimport { QueryObserver } from '@tanstack/query-core'\nimport { useBaseQuery } from './useBaseQuery'\nimport type {\n  DefaultError,\n  NoInfer,\n  QueryClient,\n  QueryKey,\n} from '@tanstack/query-core'\nimport type {\n  DefinedUseQueryResult,\n  UseQueryOptions,\n  UseQueryResult,\n} from './types'\nimport type {\n  DefinedInitialDataOptions,\n  UndefinedInitialDataOptions,\n} from './queryOptions'\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: DefinedInitialDataOptions<TQueryFnData, TError, TData, TQueryKey>,\n  queryClient?: QueryClient,\n): DefinedUseQueryResult<NoInfer<TData>, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: UndefinedInitialDataOptions<TQueryFnData, TError, TData, TQueryKey>,\n  queryClient?: QueryClient,\n): UseQueryResult<NoInfer<TData>, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  queryClient?: QueryClient,\n): UseQueryResult<NoInfer<TData>, TError>\n\nexport function useQuery(options: UseQueryOptions, queryClient?: QueryClient) {\n  return useBaseQuery(options, QueryObserver, queryClient)\n}\n","/** Forked from https://github.com/epoberezkin/fast-deep-equal */\n\nexport function deepEqual(a: any, b: any) {\n  if (a === b) return true\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    if (a.constructor !== b.constructor) return false\n\n    let length: number\n    let i: number\n\n    if (Array.isArray(a) && Array.isArray(b)) {\n      length = a.length\n      if (length !== b.length) return false\n      for (i = length; i-- !== 0; ) if (!deepEqual(a[i], b[i])) return false\n      return true\n    }\n\n    if (\n      typeof a.valueOf === 'function' &&\n      a.valueOf !== Object.prototype.valueOf\n    )\n      return a.valueOf() === b.valueOf()\n    if (\n      typeof a.toString === 'function' &&\n      a.toString !== Object.prototype.toString\n    )\n      return a.toString() === b.toString()\n\n    const keys = Object.keys(a)\n    length = keys.length\n    if (length !== Object.keys(b).length) return false\n\n    for (i = length; i-- !== 0; ) if (!Object.hasOwn(b, keys[i]!)) return false\n\n    for (i = length; i-- !== 0; ) {\n      const key = keys[i]\n\n      if (key && !deepEqual(a[key], b[key])) return false\n    }\n\n    return true\n  }\n\n  // true if both NaN, false otherwise\n  // biome-ignore lint/suspicious/noSelfCompare: using\n  return a !== a && b !== b\n}\n","import type { Chain } from 'viem'\nimport type { Config } from '../createConfig.js'\nimport { deepEqual } from '../utils/deepEqual.js'\n\nexport type GetChainsReturnType<config extends Config = Config> = readonly [\n  ...config['chains'],\n  ...Chain[],\n]\n\nlet previousChains: readonly Chain[] = []\n\n/** https://wagmi.sh/core/api/actions/getChains */\nexport function getChains<config extends Config>(\n  config: config,\n): GetChainsReturnType<config> {\n  const chains = config.chains\n  if (deepEqual(previousChains, chains))\n    return previousChains as GetChainsReturnType<config>\n  previousChains = chains\n  return chains as unknown as GetChainsReturnType<config>\n}\n","import { BaseError as CoreError } from '@wagmi/core'\n\nimport { getVersion } from '../utils/getVersion.js'\n\nexport type BaseErrorType = BaseError & { name: 'WagmiError' }\nexport class BaseError extends CoreError {\n  override name = 'WagmiError'\n  override get docsBaseUrl() {\n    return 'https://wagmi.sh/react'\n  }\n  override get version() {\n    return getVersion()\n  }\n}\n","import { version } from '../version.js'\n\nexport const getVersion = () => `wagmi@${version}`\n","export const version = '2.16.9'\n","import { BaseError } from './base.js'\n\nexport type WagmiProviderNotFoundErrorType = WagmiProviderNotFoundError & {\n  name: 'WagmiProviderNotFoundError'\n}\nexport class WagmiProviderNotFoundError extends BaseError {\n  override name = 'WagmiProviderNotFoundError'\n  constructor() {\n    super('`useConfig` must be used within `WagmiProvider`.', {\n      docsPath: '/api/WagmiProvider',\n    })\n  }\n}\n","'use client'\n\nimport type { Config, ResolvedRegister } from '@wagmi/core'\nimport { useContext } from 'react'\n\nimport { WagmiContext } from '../context.js'\nimport { WagmiProviderNotFoundError } from '../errors/context.js'\nimport type { ConfigParameter } from '../types/properties.js'\n\nexport type UseConfigParameters<config extends Config = Config> =\n  ConfigParameter<config>\n\nexport type UseConfigReturnType<config extends Config = Config> = config\n\n/** https://wagmi.sh/react/api/hooks/useConfig */\nexport function useConfig<config extends Config = ResolvedRegister['config']>(\n  parameters: UseConfigParameters<config> = {},\n): UseConfigReturnType<config> {\n  // biome-ignore lint/correctness/useHookAtTopLevel: false alarm\n  const config = parameters.config ?? useContext(WagmiContext)\n  if (!config) throw new WagmiProviderNotFoundError()\n  return config as UseConfigReturnType<config>\n}\n","import { type Account, type WalletClient, walletActions } from 'viem'\n\nimport type { Config } from '../createConfig.js'\nimport type { BaseErrorType, ErrorType } from '../errors/base.js'\nimport type { Compute } from '../types/utils.js'\nimport {\n  type GetConnectorClientErrorType,\n  type GetConnectorClientParameters,\n  getConnectorClient,\n} from './getConnectorClient.js'\n\nexport type GetWalletClientParameters<\n  config extends Config = Config,\n  chainId extends\n    config['chains'][number]['id'] = config['chains'][number]['id'],\n> = GetConnectorClientParameters<Config, chainId>\n\nexport type GetWalletClientReturnType<\n  config extends Config = Config,\n  chainId extends\n    config['chains'][number]['id'] = config['chains'][number]['id'],\n> = Compute<\n  WalletClient<\n    config['_internal']['transports'][chainId],\n    Extract<config['chains'][number], { id: chainId }>,\n    Account\n  >\n>\n\nexport type GetWalletClientErrorType =\n  // getConnectorClient()\n  | GetConnectorClientErrorType\n  // base\n  | BaseErrorType\n  | ErrorType\n\nexport async function getWalletClient<\n  config extends Config,\n  chainId extends config['chains'][number]['id'],\n>(\n  config: config,\n  parameters: GetWalletClientParameters<config, chainId> = {},\n): Promise<GetWalletClientReturnType<config, chainId>> {\n  const client = await getConnectorClient(config, parameters)\n  // @ts-ignore\n  return client.extend(walletActions) as unknown as GetWalletClientReturnType<\n    config,\n    chainId\n  >\n}\n","import {\n  type Account,\n  type Address,\n  type BaseErrorType,\n  type Client,\n  createClient,\n  custom,\n} from 'viem'\nimport { getAddress, parseAccount } from 'viem/utils'\n\nimport type { Config, Connection } from '../createConfig.js'\nimport type { ErrorType } from '../errors/base.js'\nimport {\n  ConnectorAccountNotFoundError,\n  type ConnectorAccountNotFoundErrorType,\n  ConnectorChainMismatchError,\n  type ConnectorChainMismatchErrorType,\n  ConnectorNotConnectedError,\n  type ConnectorNotConnectedErrorType,\n  ConnectorUnavailableReconnectingError,\n  type ConnectorUnavailableReconnectingErrorType,\n} from '../errors/config.js'\nimport type {\n  ChainIdParameter,\n  ConnectorParameter,\n} from '../types/properties.js'\nimport type { Compute } from '../types/utils.js'\n\nexport type GetConnectorClientParameters<\n  config extends Config = Config,\n  chainId extends\n    config['chains'][number]['id'] = config['chains'][number]['id'],\n> = Compute<\n  ChainIdParameter<config, chainId> &\n    ConnectorParameter & {\n      /**\n       * Account to use for the client.\n       *\n       * - `Account | Address`: An Account MUST exist on the connector.\n       * - `null`: Account MAY NOT exist on the connector. This is useful for\n       *   actions that can infer the account from the connector (e.g. sending a\n       *   call without a connected account – the user will be prompted to select\n       *   an account within the wallet).\n       */\n      account?: Address | Account | null | undefined\n    }\n>\n\nexport type GetConnectorClientReturnType<\n  config extends Config = Config,\n  chainId extends\n    config['chains'][number]['id'] = config['chains'][number]['id'],\n> = Compute<\n  Client<\n    config['_internal']['transports'][chainId],\n    Extract<config['chains'][number], { id: chainId }>,\n    Account\n  >\n>\n\nexport type GetConnectorClientErrorType =\n  | ConnectorAccountNotFoundErrorType\n  | ConnectorChainMismatchErrorType\n  | ConnectorNotConnectedErrorType\n  | ConnectorUnavailableReconnectingErrorType\n  // base\n  | BaseErrorType\n  | ErrorType\n\n/** https://wagmi.sh/core/api/actions/getConnectorClient */\nexport async function getConnectorClient<\n  config extends Config,\n  chainId extends config['chains'][number]['id'],\n>(\n  config: config,\n  parameters: GetConnectorClientParameters<config, chainId> = {},\n): Promise<GetConnectorClientReturnType<config, chainId>> {\n  // Get connection\n  let connection: Connection | undefined\n  if (parameters.connector) {\n    const { connector } = parameters\n    if (\n      config.state.status === 'reconnecting' &&\n      !connector.getAccounts &&\n      !connector.getChainId\n    )\n      throw new ConnectorUnavailableReconnectingError({ connector })\n\n    const [accounts, chainId] = await Promise.all([\n      connector.getAccounts().catch((e) => {\n        if (parameters.account === null) return []\n        throw e\n      }),\n      connector.getChainId(),\n    ])\n    connection = {\n      accounts: accounts as readonly [Address, ...Address[]],\n      chainId,\n      connector,\n    }\n  } else connection = config.state.connections.get(config.state.current!)\n  if (!connection) throw new ConnectorNotConnectedError()\n\n  const chainId = parameters.chainId ?? connection.chainId\n\n  // Check connector using same chainId as connection\n  const connectorChainId = await connection.connector.getChainId()\n  if (connectorChainId !== chainId)\n    throw new ConnectorChainMismatchError({\n      connectionChainId: chainId,\n      connectorChainId,\n    })\n\n  // If connector has custom `getClient` implementation\n  type Return = GetConnectorClientReturnType<config, chainId>\n  const connector = connection.connector\n  if (connector.getClient)\n    return connector.getClient({ chainId }) as unknown as Return\n\n  // Default using `custom` transport\n  const account = parseAccount(parameters.account ?? connection.accounts[0]!)\n  if (account) account.address = getAddress(account.address) // TODO: Checksum address as part of `parseAccount`?\n\n  // If account was provided, check that it exists on the connector\n  if (\n    parameters.account &&\n    !connection.accounts.some(\n      (x) => x.toLowerCase() === account.address.toLowerCase(),\n    )\n  )\n    throw new ConnectorAccountNotFoundError({\n      address: account.address,\n      connector,\n    })\n\n  const chain = config.chains.find((chain) => chain.id === chainId)\n  const provider = (await connection.connector.getProvider({ chainId })) as {\n    request(...args: any): Promise<any>\n  }\n\n  return createClient({\n    account,\n    chain,\n    name: 'Connector Client',\n    transport: (opts) => custom(provider)({ ...opts, retryCount: 0 }),\n  }) as Return\n}\n","import { type QueryKey, replaceEqualDeep } from '@tanstack/query-core'\n\nexport function structuralSharing<data>(\n  oldData: data | undefined,\n  newData: data,\n): data {\n  return replaceEqualDeep(oldData, newData)\n}\n\nexport function hashFn(queryKey: QueryKey): string {\n  return JSON.stringify(queryKey, (_, value) => {\n    if (isPlainObject(value))\n      return Object.keys(value)\n        .sort()\n        .reduce((result, key) => {\n          result[key] = value[key]\n          return result\n        }, {} as any)\n    if (typeof value === 'bigint') return value.toString()\n    return value\n  })\n}\n\n// biome-ignore lint/complexity/noBannedTypes: using\nfunction isPlainObject(value: any): value is Object {\n  if (!hasObjectPrototype(value)) {\n    return false\n  }\n\n  // If has modified constructor\n  const ctor = value.constructor\n  if (typeof ctor === 'undefined') return true\n\n  // If has modified prototype\n  const prot = ctor.prototype\n  if (!hasObjectPrototype(prot)) return false\n\n  // If constructor does not have an Object-specific method\n  // biome-ignore lint/suspicious/noPrototypeBuiltins: using\n  if (!prot.hasOwnProperty('isPrototypeOf')) return false\n\n  // Most likely a plain Object\n  return true\n}\n\nfunction hasObjectPrototype(o: any): boolean {\n  return Object.prototype.toString.call(o) === '[object Object]'\n}\n\nexport function filterQueryOptions<type extends Record<string, unknown>>(\n  options: type,\n): type {\n  // destructuring is super fast\n  // biome-ignore format: no formatting\n  const {\n    // import('@tanstack/query-core').QueryOptions\n    // biome-ignore lint/correctness/noUnusedVariables: tossing\n    _defaulted, behavior, gcTime, initialData, initialDataUpdatedAt, maxPages, meta, networkMode, queryFn, queryHash, queryKey, queryKeyHashFn, retry, retryDelay, structuralSharing,\n\n    // import('@tanstack/query-core').InfiniteQueryObserverOptions\n    // biome-ignore lint/correctness/noUnusedVariables: tossing\n    getPreviousPageParam, getNextPageParam, initialPageParam,\n\n    // import('@tanstack/react-query').UseQueryOptions\n    // biome-ignore lint/correctness/noUnusedVariables: tossing\n    _optimisticResults, enabled, notifyOnChangeProps, placeholderData, refetchInterval, refetchIntervalInBackground, refetchOnMount, refetchOnReconnect, refetchOnWindowFocus, retryOnMount, select, staleTime, suspense, throwOnError,\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // wagmi\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // biome-ignore lint/correctness/noUnusedVariables: tossing\n    config, connector, query,\n    ...rest\n  } = options\n\n  return rest as type\n}\n","import type { QueryOptions } from '@tanstack/query-core'\n\nimport {\n  type GetWalletClientErrorType,\n  type GetWalletClientParameters,\n  type GetWalletClientReturnType,\n  getWalletClient,\n} from '../actions/getWalletClient.js'\nimport type { Config } from '../createConfig.js'\nimport type { ScopeKeyParameter } from '../types/properties.js'\nimport type { Compute, ExactPartial } from '../types/utils.js'\nimport { filterQueryOptions } from './utils.js'\n\nexport type GetWalletClientOptions<\n  config extends Config,\n  chainId extends config['chains'][number]['id'],\n> = Compute<\n  ExactPartial<GetWalletClientParameters<config, chainId>> & ScopeKeyParameter\n>\n\nexport function getWalletClientQueryOptions<\n  config extends Config,\n  chainId extends config['chains'][number]['id'],\n>(config: config, options: GetWalletClientOptions<config, chainId> = {}) {\n  return {\n    gcTime: 0,\n    async queryFn({ queryKey }) {\n      const { connector } = options\n      const { connectorUid: _, scopeKey: _s, ...parameters } = queryKey[1]\n      return getWalletClient(config, { ...parameters, connector })\n    },\n    queryKey: getWalletClientQueryKey(options),\n  } as const satisfies QueryOptions<\n    GetWalletClientQueryFnData<config, chainId>,\n    GetWalletClientErrorType,\n    GetWalletClientData<config, chainId>,\n    GetWalletClientQueryKey<config, chainId>\n  >\n}\n\nexport type GetWalletClientQueryFnData<\n  config extends Config,\n  chainId extends config['chains'][number]['id'],\n> = GetWalletClientReturnType<config, chainId>\n\nexport type GetWalletClientData<\n  config extends Config,\n  chainId extends config['chains'][number]['id'],\n> = GetWalletClientQueryFnData<config, chainId>\n\nexport function getWalletClientQueryKey<\n  config extends Config,\n  chainId extends config['chains'][number]['id'],\n>(options: GetWalletClientOptions<config, chainId> = {}) {\n  const { connector, ...parameters } = options\n  return [\n    'walletClient',\n    { ...filterQueryOptions(parameters), connectorUid: connector?.uid },\n  ] as const\n}\n\nexport type GetWalletClientQueryKey<\n  config extends Config,\n  chainId extends config['chains'][number]['id'],\n> = ReturnType<typeof getWalletClientQueryKey<config, chainId>>\n","import type { Address, Chain } from 'viem'\n\nimport type { Config, Connector } from '../createConfig.js'\n\nexport type GetAccountReturnType<\n  config extends Config = Config,\n  ///\n  chain = Config extends config ? Chain : config['chains'][number],\n> =\n  | {\n      address: Address\n      addresses: readonly [Address, ...Address[]]\n      chain: chain | undefined\n      chainId: number\n      connector: Connector\n      isConnected: true\n      isConnecting: false\n      isDisconnected: false\n      isReconnecting: false\n      status: 'connected'\n    }\n  | {\n      address: Address | undefined\n      addresses: readonly Address[] | undefined\n      chain: chain | undefined\n      chainId: number | undefined\n      connector: Connector | undefined\n      isConnected: boolean\n      isConnecting: false\n      isDisconnected: false\n      isReconnecting: true\n      status: 'reconnecting'\n    }\n  | {\n      address: Address | undefined\n      addresses: readonly Address[] | undefined\n      chain: chain | undefined\n      chainId: number | undefined\n      connector: Connector | undefined\n      isConnected: false\n      isReconnecting: false\n      isConnecting: true\n      isDisconnected: false\n      status: 'connecting'\n    }\n  | {\n      address: undefined\n      addresses: undefined\n      chain: undefined\n      chainId: undefined\n      connector: undefined\n      isConnected: false\n      isReconnecting: false\n      isConnecting: false\n      isDisconnected: true\n      status: 'disconnected'\n    }\n\n/** https://wagmi.sh/core/api/actions/getAccount */\nexport function getAccount<config extends Config>(\n  config: config,\n): GetAccountReturnType<config> {\n  const uid = config.state.current!\n  const connection = config.state.connections.get(uid)\n  const addresses = connection?.accounts\n  const address = addresses?.[0]\n  const chain = config.chains.find(\n    (chain) => chain.id === connection?.chainId,\n  ) as GetAccountReturnType<config>['chain']\n  const status = config.state.status\n\n  switch (status) {\n    case 'connected':\n      return {\n        address: address!,\n        addresses: addresses!,\n        chain,\n        chainId: connection?.chainId!,\n        connector: connection?.connector!,\n        isConnected: true,\n        isConnecting: false,\n        isDisconnected: false,\n        isReconnecting: false,\n        status,\n      }\n    case 'reconnecting':\n      return {\n        address,\n        addresses,\n        chain,\n        chainId: connection?.chainId,\n        connector: connection?.connector,\n        isConnected: !!address,\n        isConnecting: false,\n        isDisconnected: false,\n        isReconnecting: true,\n        status,\n      }\n    case 'connecting':\n      return {\n        address,\n        addresses,\n        chain,\n        chainId: connection?.chainId,\n        connector: connection?.connector,\n        isConnected: false,\n        isConnecting: true,\n        isDisconnected: false,\n        isReconnecting: false,\n        status,\n      }\n    case 'disconnected':\n      return {\n        address: undefined,\n        addresses: undefined,\n        chain: undefined,\n        chainId: undefined,\n        connector: undefined,\n        isConnected: false,\n        isConnecting: false,\n        isDisconnected: true,\n        isReconnecting: false,\n        status,\n      }\n  }\n}\n","'use client'\n\nimport { deepEqual } from '@wagmi/core/internal'\nimport { useMemo, useRef } from 'react'\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector.js'\n\nconst isPlainObject = (obj: unknown) =>\n  typeof obj === 'object' && !Array.isArray(obj)\n\nexport function useSyncExternalStoreWithTracked<\n  snapshot extends selection,\n  selection = snapshot,\n>(\n  subscribe: (onStoreChange: () => void) => () => void,\n  getSnapshot: () => snapshot,\n  getServerSnapshot: undefined | null | (() => snapshot) = getSnapshot,\n  isEqual: (a: selection, b: selection) => boolean = deepEqual,\n) {\n  const trackedKeys = useRef<string[]>([])\n  const result = useSyncExternalStoreWithSelector(\n    subscribe,\n    getSnapshot,\n    getServerSnapshot,\n    (x) => x,\n    (a, b) => {\n      if (isPlainObject(a) && isPlainObject(b) && trackedKeys.current.length) {\n        for (const key of trackedKeys.current) {\n          const equal = isEqual(\n            (a as { [_a: string]: any })[key],\n            (b as { [_b: string]: any })[key],\n          )\n          if (!equal) return false\n        }\n        return true\n      }\n      return isEqual(a, b)\n    },\n  )\n\n  return useMemo(() => {\n    if (isPlainObject(result)) {\n      const trackedResult = { ...result }\n      let properties = {}\n      for (const [key, value] of Object.entries(\n        trackedResult as { [key: string]: any },\n      )) {\n        properties = {\n          ...properties,\n          [key]: {\n            configurable: false,\n            enumerable: true,\n            get: () => {\n              if (!trackedKeys.current.includes(key)) {\n                trackedKeys.current.push(key)\n              }\n              return value\n            },\n          },\n        }\n      }\n      Object.defineProperties(trackedResult, properties)\n      return trackedResult\n    }\n\n    return result\n  }, [result])\n}\n","'use client'\n\nimport {\n  type Config,\n  type GetAccountReturnType,\n  getAccount,\n  type ResolvedRegister,\n  watchAccount,\n} from '@wagmi/core'\n\nimport type { ConfigParameter } from '../types/properties.js'\nimport { useConfig } from './useConfig.js'\nimport { useSyncExternalStoreWithTracked } from './useSyncExternalStoreWithTracked.js'\n\nexport type UseAccountParameters<config extends Config = Config> =\n  ConfigParameter<config>\n\nexport type UseAccountReturnType<config extends Config = Config> =\n  GetAccountReturnType<config>\n\n/** https://wagmi.sh/react/api/hooks/useAccount */\nexport function useAccount<config extends Config = ResolvedRegister['config']>(\n  parameters: UseAccountParameters<config> = {},\n): UseAccountReturnType<config> {\n  const config = useConfig(parameters)\n\n  return useSyncExternalStoreWithTracked(\n    (onChange) => watchAccount(config, { onChange }),\n    () => getAccount(config),\n  )\n}\n","import type { Config } from '../createConfig.js'\nimport { deepEqual } from '../utils/deepEqual.js'\nimport { type GetAccountReturnType, getAccount } from './getAccount.js'\n\nexport type WatchAccountParameters<config extends Config = Config> = {\n  onChange(\n    account: GetAccountReturnType<config>,\n    prevAccount: GetAccountReturnType<config>,\n  ): void\n}\n\nexport type WatchAccountReturnType = () => void\n\n/** https://wagmi.sh/core/api/actions/watchAccount */\nexport function watchAccount<config extends Config>(\n  config: config,\n  parameters: WatchAccountParameters<config>,\n): WatchAccountReturnType {\n  const { onChange } = parameters\n\n  return config.subscribe(() => getAccount(config), onChange, {\n    equalityFn(a, b) {\n      const { connector: aConnector, ...aRest } = a\n      const { connector: bConnector, ...bRest } = b\n      return (\n        deepEqual(aRest, bRest) &&\n        // check connector separately\n        aConnector?.id === bConnector?.id &&\n        aConnector?.uid === bConnector?.uid\n      )\n    },\n  })\n}\n","import type { Config } from '../createConfig.js'\n\nexport type GetChainIdReturnType<config extends Config = Config> =\n  config['chains'][number]['id']\n\n/** https://wagmi.sh/core/api/actions/getChainId */\nexport function getChainId<config extends Config>(\n  config: config,\n): GetChainIdReturnType<config> {\n  return config.state.chainId\n}\n","'use client'\n\n// Almost identical implementation to `useConnectorClient` (except for return type)\n// Should update both in tandem\n\nimport { useQueryClient } from '@tanstack/react-query'\nimport type {\n  Config,\n  GetWalletClientErrorType,\n  ResolvedRegister,\n} from '@wagmi/core'\nimport type { Compute, Omit } from '@wagmi/core/internal'\nimport {\n  type GetWalletClientData,\n  type GetWalletClientOptions,\n  type GetWalletClientQueryFnData,\n  type GetWalletClientQueryKey,\n  getWalletClientQueryOptions,\n} from '@wagmi/core/query'\nimport { useEffect, useRef } from 'react'\n\nimport type { ConfigParameter } from '../types/properties.js'\nimport {\n  type UseQueryParameters,\n  type UseQueryReturnType,\n  useQuery,\n} from '../utils/query.js'\nimport { useAccount } from './useAccount.js'\nimport { useChainId } from './useChainId.js'\nimport { useConfig } from './useConfig.js'\n\nexport type UseWalletClientParameters<\n  config extends Config = Config,\n  chainId extends\n    config['chains'][number]['id'] = config['chains'][number]['id'],\n  selectData = GetWalletClientData<config, chainId>,\n> = Compute<\n  GetWalletClientOptions<config, chainId> &\n    ConfigParameter<config> & {\n      query?:\n        | Compute<\n            Omit<\n              UseQueryParameters<\n                GetWalletClientQueryFnData<config, chainId>,\n                GetWalletClientErrorType,\n                selectData,\n                GetWalletClientQueryKey<config, chainId>\n              >,\n              'gcTime' | 'staleTime'\n            >\n          >\n        | undefined\n    }\n>\n\nexport type UseWalletClientReturnType<\n  config extends Config = Config,\n  chainId extends\n    config['chains'][number]['id'] = config['chains'][number]['id'],\n  selectData = GetWalletClientData<config, chainId>,\n> = UseQueryReturnType<selectData, GetWalletClientErrorType>\n\n/** https://wagmi.sh/react/api/hooks/useWalletClient */\nexport function useWalletClient<\n  config extends Config = ResolvedRegister['config'],\n  chainId extends\n    config['chains'][number]['id'] = config['chains'][number]['id'],\n  selectData = GetWalletClientData<config, chainId>,\n>(\n  parameters: UseWalletClientParameters<config, chainId, selectData> = {},\n): UseWalletClientReturnType<config, chainId, selectData> {\n  const { query = {}, ...rest } = parameters\n\n  const config = useConfig(rest)\n  const queryClient = useQueryClient()\n  const { address, connector, status } = useAccount({ config })\n  const chainId = useChainId({ config })\n  const activeConnector = parameters.connector ?? connector\n\n  const { queryKey, ...options } = getWalletClientQueryOptions<config, chainId>(\n    config,\n    {\n      ...parameters,\n      chainId: parameters.chainId ?? chainId,\n      connector: parameters.connector ?? connector,\n    },\n  )\n  const enabled = Boolean(\n    (status === 'connected' ||\n      (status === 'reconnecting' && activeConnector?.getProvider)) &&\n      (query.enabled ?? true),\n  )\n\n  const addressRef = useRef(address)\n  // biome-ignore lint/correctness/useExhaustiveDependencies: `queryKey` not required\n  useEffect(() => {\n    const previousAddress = addressRef.current\n    if (!address && previousAddress) {\n      // remove when account is disconnected\n      queryClient.removeQueries({ queryKey })\n      addressRef.current = undefined\n    } else if (address !== previousAddress) {\n      // invalidate when address changes\n      queryClient.invalidateQueries({ queryKey })\n      addressRef.current = address\n    }\n  }, [address, queryClient])\n\n  return useQuery({\n    ...query,\n    ...options,\n    queryKey,\n    enabled,\n    staleTime: Number.POSITIVE_INFINITY,\n  } as any) as UseWalletClientReturnType<config, chainId, selectData>\n}\n","'use client'\n\nimport {\n  type Config,\n  type GetChainIdReturnType,\n  getChainId,\n  type ResolvedRegister,\n  watchChainId,\n} from '@wagmi/core'\nimport { useSyncExternalStore } from 'react'\n\nimport type { ConfigParameter } from '../types/properties.js'\nimport { useConfig } from './useConfig.js'\n\nexport type UseChainIdParameters<config extends Config = Config> =\n  ConfigParameter<config>\n\nexport type UseChainIdReturnType<config extends Config = Config> =\n  GetChainIdReturnType<config>\n\n/** https://wagmi.sh/react/api/hooks/useChainId */\nexport function useChainId<config extends Config = ResolvedRegister['config']>(\n  parameters: UseChainIdParameters<config> = {},\n): UseChainIdReturnType<config> {\n  const config = useConfig(parameters)\n\n  return useSyncExternalStore(\n    (onChange) => watchChainId(config, { onChange }),\n    () => getChainId(config),\n    () => getChainId(config),\n  )\n}\n","import type { Config } from '../createConfig.js'\nimport type { GetChainIdReturnType } from './getChainId.js'\n\nexport type WatchChainIdParameters<config extends Config = Config> = {\n  onChange(\n    chainId: GetChainIdReturnType<config>,\n    prevChainId: GetChainIdReturnType<config>,\n  ): void\n}\n\nexport type WatchChainIdReturnType = () => void\n\n/** https://wagmi.sh/core/api/actions/watchChainId */\nexport function watchChainId<config extends Config>(\n  config: config,\n  parameters: WatchChainIdParameters<config>,\n): WatchChainIdReturnType {\n  const { onChange } = parameters\n  return config.subscribe((state) => state.chainId, onChange)\n}\n","import {\n  type DefaultError,\n  type QueryKey,\n  useInfiniteQuery as tanstack_useInfiniteQuery,\n  useQuery as tanstack_useQuery,\n  type UseInfiniteQueryOptions,\n  type UseInfiniteQueryResult,\n  type UseMutationOptions,\n  type UseMutationResult,\n  type UseQueryOptions,\n  type UseQueryResult,\n  useMutation,\n} from '@tanstack/react-query'\nimport type {\n  Compute,\n  ExactPartial,\n  Omit,\n  UnionStrictOmit,\n} from '@wagmi/core/internal'\nimport { hashFn } from '@wagmi/core/query'\n\nexport type UseMutationParameters<\n  data = unknown,\n  error = Error,\n  variables = void,\n  context = unknown,\n> = Compute<\n  Omit<\n    UseMutationOptions<data, error, Compute<variables>, context>,\n    'mutationFn' | 'mutationKey' | 'throwOnError'\n  >\n>\n\nexport type UseMutationReturnType<\n  data = unknown,\n  error = Error,\n  variables = void,\n  context = unknown,\n> = Compute<\n  UnionStrictOmit<\n    UseMutationResult<data, error, variables, context>,\n    'mutate' | 'mutateAsync'\n  >\n>\n\nexport { useMutation }\n\n////////////////////////////////////////////////////////////////////////////////\n\nexport type UseQueryParameters<\n  queryFnData = unknown,\n  error = DefaultError,\n  data = queryFnData,\n  queryKey extends QueryKey = QueryKey,\n> = Compute<\n  ExactPartial<\n    Omit<UseQueryOptions<queryFnData, error, data, queryKey>, 'initialData'>\n  > & {\n    // Fix `initialData` type\n    initialData?:\n      | UseQueryOptions<queryFnData, error, data, queryKey>['initialData']\n      | undefined\n  }\n>\n\nexport type UseQueryReturnType<data = unknown, error = DefaultError> = Compute<\n  UseQueryResult<data, error> & {\n    queryKey: QueryKey\n  }\n>\n\n// Adding some basic customization.\n// Ideally we don't have this function, but `import('@tanstack/react-query').useQuery` currently has some quirks where it is super hard to\n// pass down the inferred `initialData` type because of it's discriminated overload in the on `useQuery`.\nexport function useQuery<queryFnData, error, data, queryKey extends QueryKey>(\n  parameters: UseQueryParameters<queryFnData, error, data, queryKey> & {\n    queryKey: QueryKey\n  },\n): UseQueryReturnType<data, error> {\n  const result = tanstack_useQuery({\n    ...(parameters as any),\n    queryKeyHashFn: hashFn, // for bigint support\n  }) as UseQueryReturnType<data, error>\n  result.queryKey = parameters.queryKey\n  return result\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nexport type UseInfiniteQueryParameters<\n  queryFnData = unknown,\n  error = DefaultError,\n  data = queryFnData,\n  queryData = queryFnData,\n  queryKey extends QueryKey = QueryKey,\n  pageParam = unknown,\n> = Compute<\n  Omit<\n    UseInfiniteQueryOptions<\n      queryFnData,\n      error,\n      data,\n      queryData,\n      queryKey,\n      pageParam\n    >,\n    'initialData'\n  > & {\n    // Fix `initialData` type\n    initialData?:\n      | UseInfiniteQueryOptions<\n          queryFnData,\n          error,\n          data,\n          queryKey\n        >['initialData']\n      | undefined\n  }\n>\n\nexport type UseInfiniteQueryReturnType<\n  data = unknown,\n  error = DefaultError,\n> = UseInfiniteQueryResult<data, error> & {\n  queryKey: QueryKey\n}\n\n// Adding some basic customization.\nexport function useInfiniteQuery<\n  queryFnData,\n  error,\n  data,\n  queryKey extends QueryKey,\n>(\n  parameters: UseInfiniteQueryParameters<queryFnData, error, data, queryKey> & {\n    queryKey: QueryKey\n  },\n): UseInfiniteQueryReturnType<data, error> {\n  const result = tanstack_useInfiniteQuery({\n    ...(parameters as any),\n    queryKeyHashFn: hashFn, // for bigint support\n  }) as UseInfiniteQueryReturnType<data, error>\n  result.queryKey = parameters.queryKey\n  return result\n}\n","import {\n  type Config,\n  type ResolvedRegister,\n  useWalletClient,\n  type UseWalletClientParameters,\n  type UseWalletClientReturnType,\n} from 'wagmi';\nimport type { GetWalletClientData } from 'wagmi/query';\n\nimport { useGlobalWalletSignerAccount } from './useGlobalWalletSignerAccount.js';\n\n/**\n * React hook to get a wallet client instance of the approved signer of the connected Abstract Global Wallet.\n *\n * This hook returns a wallet client instance that can perform actions from the underlying EOA\n * (externally owned account) approved to sign transactions for the Abstract Global Wallet smart contract.\n *\n * Important: This hook is different from `useAbstractClient`, which performs actions from the\n * Abstract Global Wallet smart contract itself. This hook accesses the underlying EOA signer.\n *\n * Under the hood, it uses wagmi's `useWalletClient` hook, setting the account to the EOA\n * retrieved from `useGlobalWalletSignerAccount`.\n *\n * @param parameters - Optional parameters to pass to the underlying wagmi useWalletClient hook\n * @returns A query result containing the wallet client when successfully created\n *\n * @example\n * ```tsx\n * import { useGlobalWalletSignerClient } from \"@abstract-foundation/agw-react\";\n *\n * function SignerComponent() {\n *   const { data: client, isLoading, error } = useGlobalWalletSignerClient();\n *\n *   // Send a transaction directly from the EOA signer\n *   const handleSendTransaction = async () => {\n *     if (!client) return;\n *\n *     try {\n *       const hash = await client.sendTransaction({\n *         to: '0x8e729E23CDc8bC21c37a73DA4bA9ebdddA3C8B6d',\n *         data: '0x69',\n *         value: BigInt(0)\n *       });\n *       console.log('Transaction sent:', hash);\n *     } catch (err) {\n *       console.error('Transaction failed:', err);\n *     }\n *   };\n *\n *   if (isLoading) return <div>Loading signer...</div>;\n *   if (error) return <div>Error: {error.message}</div>;\n *   if (!client) return <div>No signer available</div>;\n *\n *   return (\n *     <div>\n *       <button onClick={handleSendTransaction}>Send Transaction</button>\n *     </div>\n *   );\n * }\n * ```\n *\n * Read more: [Abstract docs: useGlobalWalletSignerClient](https://docs.abs.xyz/abstract-global-wallet/agw-react/hooks/useGlobalWalletSignerClient)\n *\n * @see {@link useWalletClient} - The underlying wagmi hook\n * @see {@link useGlobalWalletSignerAccount} - Hook to get the approved signer account\n * @see {@link useAbstractClient} - Hook to get a client for the Abstract Global Wallet smart contract\n */\nexport function useGlobalWalletSignerClient<\n  config extends Config = ResolvedRegister['config'],\n  chainId extends\n    config['chains'][number]['id'] = config['chains'][number]['id'],\n  selectData = GetWalletClientData<config, chainId>,\n>(\n  parameters: UseWalletClientParameters<config, chainId, selectData> = {},\n): UseWalletClientReturnType<config, chainId, selectData> {\n  const { address } = useGlobalWalletSignerAccount();\n\n  const walletClient = useWalletClient({\n    ...parameters,\n    account: address,\n  });\n\n  return walletClient;\n}\n","import {\n  type Config,\n  type ResolvedRegister,\n  useAccount,\n  type UseAccountParameters,\n  type UseAccountReturnType,\n} from 'wagmi';\n\n/**\n * React hook to get the approved signer of the connected Abstract Global Wallet.\n *\n * This hook retrieves the account (EOA) that is approved to sign transactions\n * for the Abstract Global Wallet smart contract. It's useful when you need to access\n * the underlying EOA that signs transactions for the Abstract wallet, i.e. the Privy signer.\n *\n * Under the hood, this hook uses wagmi's `useAccount` and extracts the second address\n * (index 1) from the addresses array, which corresponds to the approved signer account.\n *\n * Note: If you need to get the address of the AGW smart contract itself (not the underlying approved signer),\n * you should use the standard `useAccount` hook from wagmi instead.\n *\n * @param parameters - Parameters to pass to the underlying wagmi useAccount hook\n * @returns Standard wagmi account object with the address set to the approved signer address\n *\n * @example\n * ```tsx\n * import { useGlobalWalletSignerAccount } from \"@abstract-foundation/agw-react\";\n *\n * export default function App() {\n *   const { address, status, isConnected } = useGlobalWalletSignerAccount();\n *\n *   if (status === \"disconnected\") {\n *     return <div>Disconnected</div>;\n *   }\n *\n *   if (status === \"connecting\" || status === \"reconnecting\") {\n *     return <div>Connecting...</div>;\n *   }\n *\n *   return (\n *     <div>\n *       <p>Connected Signer EOA: {address}</p>\n *       <p>Connection Status: {status}</p>\n *     </div>\n *   );\n * }\n * ```\n *\n * Read more: [Abstract docs: useGlobalWalletSignerAccount](https://docs.abs.xyz/abstract-global-wallet/agw-react/hooks/useGlobalWalletSignerAccount)\n *\n * @see {@link useAccount} - The underlying wagmi hook\n */\nexport function useGlobalWalletSignerAccount<\n  config extends Config = ResolvedRegister['config'],\n>(parameters: UseAccountParameters<config> = {}): UseAccountReturnType<config> {\n  const account = useAccount(parameters);\n\n  if (!account.addresses?.[1]) {\n    return {\n      address: undefined,\n      addresses: undefined,\n      chain: undefined,\n      chainId: undefined,\n      connector: undefined,\n      isConnected: false,\n      isReconnecting: false,\n      isConnecting: false,\n      isDisconnected: true,\n      status: 'disconnected',\n    };\n  }\n\n  return {\n    ...account,\n    address: account.addresses[1],\n  };\n}\n","import {\n  createAbstractClient,\n  type CustomPaymasterHandler,\n} from '@abstract-foundation/agw-client';\nimport { useQuery } from '@tanstack/react-query';\nimport { custom, useChains, useConfig } from 'wagmi';\n\nimport { useGlobalWalletSignerClient } from './useGlobalWalletSignerClient.js';\n\nexport interface UseAbstractClientOptions {\n  customPaymasterHandler: CustomPaymasterHandler;\n}\n\n/**\n * React hook that provides access to the Abstract Global Wallet client\n * used by the `AbstractWalletProvider` component.\n *\n * Use this client to perform operations such as sending transactions, deploying contracts,\n * and interacting with smart contracts from the connected Abstract Global Wallet.\n *\n * @param options - Optional client configuration\n * @param options.customPaymasterHandler - Optional paymaster handler for custom gas sponsorship logic\n * @returns Query result containing the Abstract client when successfully created\n *\n * @example\n * ```tsx\n * import { useAbstractClient } from \"@abstract-foundation/agw-react\";\n *\n * function SendTransactionComponent() {\n *   const { data: client, isLoading } = useAbstractClient();\n *\n *   const handleSendTransaction = async () => {\n *     if (!client) return;\n *\n *     const hash = await client.sendTransaction({\n *       to: '0x8e729E23CDc8bC21c37a73DA4bA9ebdddA3C8B6d',\n *       data: '0x69',\n *     });\n *     console.log('Transaction sent:', hash);\n *   };\n *\n *   return (\n *     <button onClick={handleSendTransaction} disabled={isLoading || !client}>\n *       Send Transaction\n *     </button>\n *   );\n * }\n * ```\n *\n * Read more: [Abstract docs: useAbstractClient](https://docs.abs.xyz/abstract-global-wallet/agw-react/hooks/useAbstractClient)\n *\n * @see {@link createAbstractClient} - The underlying client creation function\n */\nexport const useAbstractClient = ({\n  customPaymasterHandler,\n}: Partial<UseAbstractClientOptions> = {}) => {\n  const { data: signer, status, error } = useGlobalWalletSignerClient();\n  const [chain] = useChains();\n  const config = useConfig();\n\n  return useQuery({\n    gcTime: 0,\n    queryKey: ['abstractClient'],\n    queryFn: async () => {\n      if (error) {\n        throw error;\n      }\n      if (!signer) {\n        throw new Error('No signer found');\n      }\n\n      const client = createAbstractClient({\n        signer: signer.account,\n        chain,\n        transport: custom(signer.transport),\n        isPrivyCrossApp: true,\n        publicTransport: config?._internal.transports[chain.id],\n        customPaymasterHandler,\n      });\n\n      return client;\n    },\n    enabled: status !== 'pending',\n  });\n};\n","'use client'\n\nimport {\n  type Config,\n  type GetChainsReturnType,\n  getChains,\n  type ResolvedRegister,\n} from '@wagmi/core'\nimport { watchChains } from '@wagmi/core/internal'\nimport { useSyncExternalStore } from 'react'\n\nimport type { ConfigParameter } from '../types/properties.js'\nimport { useConfig } from './useConfig.js'\n\nexport type UseChainsParameters<config extends Config = Config> =\n  ConfigParameter<config>\n\nexport type UseChainsReturnType<config extends Config = Config> =\n  GetChainsReturnType<config>\n\n/** https://wagmi.sh/react/api/hooks/useChains */\nexport function useChains<config extends Config = ResolvedRegister['config']>(\n  parameters: UseChainsParameters<config> = {},\n): UseChainsReturnType<config> {\n  const config = useConfig(parameters)\n\n  return useSyncExternalStore(\n    (onChange) => watchChains(config, { onChange }),\n    () => getChains(config),\n    () => getChains(config),\n  )\n}\n","import type { Config } from '../createConfig.js'\nimport type { GetChainsReturnType } from './getChains.js'\n\nexport type WatchChainsParameters<config extends Config = Config> = {\n  onChange(\n    chains: GetChainsReturnType<config>,\n    prevChains: GetChainsReturnType<config>,\n  ): void\n}\n\nexport type WatchChainsReturnType = () => void\n\n/**\n * @internal\n * We don't expose this because as far as consumers know, you can't chainge (lol) `config.chains` at runtime.\n * Setting `config.chains` via `config._internal.chains.setState(...)` is an extremely advanced use case that's not worth documenting or supporting in the public API at this time.\n */\nexport function watchChains<config extends Config>(\n  config: config,\n  parameters: WatchChainsParameters<config>,\n): WatchChainsReturnType {\n  const { onChange } = parameters\n  return config._internal.chains.subscribe((chains, prevChains) => {\n    onChange(\n      chains as unknown as GetChainsReturnType<config>,\n      prevChains as unknown as GetChainsReturnType<config>,\n    )\n  })\n}\n","import { getDefaultState } from './mutation'\nimport { notifyManager } from './notifyManager'\nimport { Subscribable } from './subscribable'\nimport { hashKey, shallowEqualObjects } from './utils'\nimport type { QueryClient } from './queryClient'\nimport type {\n  DefaultError,\n  MutateOptions,\n  MutationObserverOptions,\n  MutationObserverResult,\n} from './types'\nimport type { Action, Mutation } from './mutation'\n\n// TYPES\n\ntype MutationObserverListener<TData, TError, TVariables, TContext> = (\n  result: MutationObserverResult<TData, TError, TVariables, TContext>,\n) => void\n\n// CLASS\n\nexport class MutationObserver<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = void,\n  TContext = unknown,\n> extends Subscribable<\n  MutationObserverListener<TData, TError, TVariables, TContext>\n> {\n  options!: MutationObserverOptions<TData, TError, TVariables, TContext>\n\n  #client: QueryClient\n  #currentResult: MutationObserverResult<TData, TError, TVariables, TContext> =\n    undefined!\n  #currentMutation?: Mutation<TData, TError, TVariables, TContext>\n  #mutateOptions?: MutateOptions<TData, TError, TVariables, TContext>\n\n  constructor(\n    client: QueryClient,\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    super()\n\n    this.#client = client\n    this.setOptions(options)\n    this.bindMethods()\n    this.#updateResult()\n  }\n\n  protected bindMethods(): void {\n    this.mutate = this.mutate.bind(this)\n    this.reset = this.reset.bind(this)\n  }\n\n  setOptions(\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    const prevOptions = this.options as\n      | MutationObserverOptions<TData, TError, TVariables, TContext>\n      | undefined\n    this.options = this.#client.defaultMutationOptions(options)\n    if (!shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getMutationCache().notify({\n        type: 'observerOptionsUpdated',\n        mutation: this.#currentMutation,\n        observer: this,\n      })\n    }\n\n    if (\n      prevOptions?.mutationKey &&\n      this.options.mutationKey &&\n      hashKey(prevOptions.mutationKey) !== hashKey(this.options.mutationKey)\n    ) {\n      this.reset()\n    } else if (this.#currentMutation?.state.status === 'pending') {\n      this.#currentMutation.setOptions(this.options)\n    }\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.hasListeners()) {\n      this.#currentMutation?.removeObserver(this)\n    }\n  }\n\n  onMutationUpdate(action: Action<TData, TError, TVariables, TContext>): void {\n    this.#updateResult()\n\n    this.#notify(action)\n  }\n\n  getCurrentResult(): MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  > {\n    return this.#currentResult\n  }\n\n  reset(): void {\n    // reset needs to remove the observer from the mutation because there is no way to \"get it back\"\n    // another mutate call will yield a new mutation!\n    this.#currentMutation?.removeObserver(this)\n    this.#currentMutation = undefined\n    this.#updateResult()\n    this.#notify()\n  }\n\n  mutate(\n    variables: TVariables,\n    options?: MutateOptions<TData, TError, TVariables, TContext>,\n  ): Promise<TData> {\n    this.#mutateOptions = options\n\n    this.#currentMutation?.removeObserver(this)\n\n    this.#currentMutation = this.#client\n      .getMutationCache()\n      .build(this.#client, this.options)\n\n    this.#currentMutation.addObserver(this)\n\n    return this.#currentMutation.execute(variables)\n  }\n\n  #updateResult(): void {\n    const state =\n      this.#currentMutation?.state ??\n      getDefaultState<TData, TError, TVariables, TContext>()\n\n    this.#currentResult = {\n      ...state,\n      isPending: state.status === 'pending',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset,\n    } as MutationObserverResult<TData, TError, TVariables, TContext>\n  }\n\n  #notify(action?: Action<TData, TError, TVariables, TContext>): void {\n    notifyManager.batch(() => {\n      // First trigger the mutate callbacks\n      if (this.#mutateOptions && this.hasListeners()) {\n        const variables = this.#currentResult.variables!\n        const context = this.#currentResult.context\n\n        if (action?.type === 'success') {\n          this.#mutateOptions.onSuccess?.(action.data, variables, context!)\n          this.#mutateOptions.onSettled?.(action.data, null, variables, context)\n        } else if (action?.type === 'error') {\n          this.#mutateOptions.onError?.(action.error, variables, context)\n          this.#mutateOptions.onSettled?.(\n            undefined,\n            action.error,\n            variables,\n            context,\n          )\n        }\n      }\n\n      // Then trigger the listeners\n      this.listeners.forEach((listener) => {\n        listener(this.#currentResult)\n      })\n    })\n  }\n}\n","'use client'\nimport * as React from 'react'\nimport {\n  MutationObserver,\n  noop,\n  notifyManager,\n  shouldThrowError,\n} from '@tanstack/query-core'\nimport { useQueryClient } from './QueryClientProvider'\nimport type {\n  UseMutateFunction,\n  UseMutationOptions,\n  UseMutationResult,\n} from './types'\nimport type { DefaultError, QueryClient } from '@tanstack/query-core'\n\n// HOOK\n\nexport function useMutation<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = void,\n  TContext = unknown,\n>(\n  options: UseMutationOptions<TData, TError, TVariables, TContext>,\n  queryClient?: QueryClient,\n): UseMutationResult<TData, TError, TVariables, TContext> {\n  const client = useQueryClient(queryClient)\n\n  const [observer] = React.useState(\n    () =>\n      new MutationObserver<TData, TError, TVariables, TContext>(\n        client,\n        options,\n      ),\n  )\n\n  React.useEffect(() => {\n    observer.setOptions(options)\n  }, [observer, options])\n\n  const result = React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  const mutate = React.useCallback<\n    UseMutateFunction<TData, TError, TVariables, TContext>\n  >(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop)\n    },\n    [observer],\n  )\n\n  if (\n    result.error &&\n    shouldThrowError(observer.options.throwOnError, [result.error])\n  ) {\n    throw result.error\n  }\n\n  return { ...result, mutate, mutateAsync: result.mutate }\n}\n","import type { MutateOptions, MutationOptions } from '@tanstack/query-core'\n\nimport {\n  type ConnectErrorType,\n  type ConnectParameters,\n  type ConnectReturnType,\n  connect,\n} from '../actions/connect.js'\nimport type { CreateConnectorFn } from '../connectors/createConnector.js'\nimport type { Config, Connector } from '../createConfig.js'\nimport type { Compute } from '../types/utils.js'\n\nexport function connectMutationOptions<config extends Config>(config: config) {\n  return {\n    mutationFn(variables) {\n      return connect(config, variables)\n    },\n    mutationKey: ['connect'],\n  } as const satisfies MutationOptions<\n    ConnectData<config>,\n    ConnectErrorType,\n    ConnectVariables<config, Connector | CreateConnectorFn>\n  >\n}\n\nexport type ConnectData<config extends Config> = ConnectReturnType<config>\n\nexport type ConnectVariables<\n  config extends Config,\n  connector extends Connector | CreateConnectorFn,\n> = ConnectParameters<config, connector>\n\nexport type ConnectMutate<config extends Config, context = unknown> = <\n  connector extends\n    | config['connectors'][number]\n    | Connector\n    | CreateConnectorFn,\n>(\n  variables: ConnectVariables<config, connector>,\n  options?:\n    | Compute<\n        MutateOptions<\n          ConnectData<config>,\n          ConnectErrorType,\n          Compute<ConnectVariables<config, connector>>,\n          context\n        >\n      >\n    | undefined,\n) => void\n\nexport type ConnectMutateAsync<config extends Config, context = unknown> = <\n  connector extends\n    | config['connectors'][number]\n    | Connector\n    | CreateConnectorFn,\n>(\n  variables: ConnectVariables<config, connector>,\n  options?:\n    | Compute<\n        MutateOptions<\n          ConnectData<config>,\n          ConnectErrorType,\n          Compute<ConnectVariables<config, connector>>,\n          context\n        >\n      >\n    | undefined,\n) => Promise<ConnectData<config>>\n","import type {\n  Address,\n  ResourceUnavailableRpcErrorType,\n  UserRejectedRequestErrorType,\n} from 'viem'\n\nimport type { CreateConnectorFn } from '../connectors/createConnector.js'\nimport type { Config, Connector } from '../createConfig.js'\nimport type { BaseErrorType, ErrorType } from '../errors/base.js'\nimport {\n  ConnectorAlreadyConnectedError,\n  type ConnectorAlreadyConnectedErrorType,\n} from '../errors/config.js'\nimport type { ChainIdParameter } from '../types/properties.js'\nimport type { Compute } from '../types/utils.js'\n\nexport type ConnectParameters<\n  config extends Config = Config,\n  connector extends Connector | CreateConnectorFn =\n    | Connector\n    | CreateConnectorFn,\n  ///\n  parameters extends unknown | undefined =\n    | (connector extends CreateConnectorFn\n        ? Omit<\n            NonNullable<Parameters<ReturnType<connector>['connect']>[0]>,\n            'isReconnecting'\n          >\n        : never)\n    | (connector extends Connector\n        ? Omit<\n            NonNullable<Parameters<connector['connect']>[0]>,\n            'isReconnecting'\n          >\n        : never),\n> = Compute<\n  ChainIdParameter<config> & {\n    connector: connector | CreateConnectorFn\n  }\n> &\n  parameters\n\nexport type ConnectReturnType<config extends Config = Config> = {\n  accounts: readonly [Address, ...Address[]]\n  chainId:\n    | config['chains'][number]['id']\n    | (number extends config['chains'][number]['id'] ? number : number & {})\n}\n\nexport type ConnectErrorType =\n  | ConnectorAlreadyConnectedErrorType\n  // connector.connect()\n  | UserRejectedRequestErrorType\n  | ResourceUnavailableRpcErrorType\n  // base\n  | BaseErrorType\n  | ErrorType\n\n/** https://wagmi.sh/core/api/actions/connect */\nexport async function connect<\n  config extends Config,\n  connector extends Connector | CreateConnectorFn,\n>(\n  config: config,\n  parameters: ConnectParameters<config, connector>,\n): Promise<ConnectReturnType<config>> {\n  // \"Register\" connector if not already created\n  let connector: Connector\n  if (typeof parameters.connector === 'function') {\n    connector = config._internal.connectors.setup(parameters.connector)\n  } else connector = parameters.connector\n\n  // Check if connector is already connected\n  if (connector.uid === config.state.current)\n    throw new ConnectorAlreadyConnectedError()\n\n  try {\n    config.setState((x) => ({ ...x, status: 'connecting' }))\n    connector.emitter.emit('message', { type: 'connecting' })\n\n    const { connector: _, ...rest } = parameters\n    const data = await connector.connect(rest)\n    const accounts = data.accounts as readonly [Address, ...Address[]]\n\n    connector.emitter.off('connect', config._internal.events.connect)\n    connector.emitter.on('change', config._internal.events.change)\n    connector.emitter.on('disconnect', config._internal.events.disconnect)\n\n    await config.storage?.setItem('recentConnectorId', connector.id)\n    config.setState((x) => ({\n      ...x,\n      connections: new Map(x.connections).set(connector.uid, {\n        accounts,\n        chainId: data.chainId,\n        connector: connector,\n      }),\n      current: connector.uid,\n      status: 'connected',\n    }))\n\n    return { accounts, chainId: data.chainId }\n  } catch (error) {\n    config.setState((x) => ({\n      ...x,\n      // Keep existing connector connected in case of error\n      status: x.current ? 'connected' : 'disconnected',\n    }))\n    throw error\n  }\n}\n","import type { Config, Connector } from '../createConfig.js'\n\nexport type GetConnectorsReturnType<config extends Config = Config> =\n  config['connectors']\n\nlet previousConnectors: readonly Connector[] = []\n\n/** https://wagmi.sh/core/api/actions/getConnectors */\nexport function getConnectors<config extends Config>(\n  config: config,\n): GetConnectorsReturnType<config> {\n  const connectors = config.connectors\n  if (previousConnectors.map((c) => c.uid) === connectors.map((c) => c.uid))\n    return previousConnectors\n  previousConnectors = connectors\n  return connectors\n}\n","'use client'\n\nimport {\n  type Config,\n  type GetConnectorsReturnType,\n  getConnectors,\n  type ResolvedRegister,\n  watchConnectors,\n} from '@wagmi/core'\nimport { useSyncExternalStore } from 'react'\n\nimport type { ConfigParameter } from '../types/properties.js'\nimport { useConfig } from './useConfig.js'\n\nexport type UseConnectorsParameters<config extends Config = Config> =\n  ConfigParameter<config>\n\nexport type UseConnectorsReturnType<config extends Config = Config> =\n  GetConnectorsReturnType<config>\n\n/** https://wagmi.sh/react/api/hooks/useConnectors */\nexport function useConnectors<\n  config extends Config = ResolvedRegister['config'],\n>(\n  parameters: UseConnectorsParameters<config> = {},\n): UseConnectorsReturnType<config> {\n  const config = useConfig(parameters)\n\n  return useSyncExternalStore(\n    (onChange) => watchConnectors(config, { onChange }),\n    () => getConnectors(config),\n    () => getConnectors(config),\n  )\n}\n","import type { Config } from '../createConfig.js'\nimport type { GetConnectorsReturnType } from './getConnectors.js'\n\nexport type WatchConnectorsParameters<config extends Config = Config> = {\n  onChange(\n    connections: GetConnectorsReturnType<config>,\n    prevConnectors: GetConnectorsReturnType<config>,\n  ): void\n}\n\nexport type WatchConnectorsReturnType = () => void\n\n/** https://wagmi.sh/core/api/actions/watchConnectors */\nexport function watchConnectors<config extends Config>(\n  config: config,\n  parameters: WatchConnectorsParameters<config>,\n): WatchConnectorsReturnType {\n  const { onChange } = parameters\n  return config._internal.connectors.subscribe((connectors, prevConnectors) => {\n    onChange(Object.values(connectors), prevConnectors)\n  })\n}\n","'use client'\n\nimport { useMutation } from '@tanstack/react-query'\nimport type { Config, ConnectErrorType, ResolvedRegister } from '@wagmi/core'\nimport type { Compute } from '@wagmi/core/internal'\nimport {\n  type ConnectData,\n  type ConnectMutate,\n  type ConnectMutateAsync,\n  type ConnectVariables,\n  connectMutationOptions,\n} from '@wagmi/core/query'\nimport { useEffect } from 'react'\n\nimport type { ConfigParameter } from '../types/properties.js'\nimport type {\n  UseMutationParameters,\n  UseMutationReturnType,\n} from '../utils/query.js'\nimport { useConfig } from './useConfig.js'\nimport { type UseConnectorsReturnType, useConnectors } from './useConnectors.js'\n\nexport type UseConnectParameters<\n  config extends Config = Config,\n  context = unknown,\n> = Compute<\n  ConfigParameter<config> & {\n    mutation?:\n      | UseMutationParameters<\n          ConnectData<config>,\n          ConnectErrorType,\n          ConnectVariables<config, config['connectors'][number]>,\n          context\n        >\n      | undefined\n  }\n>\n\nexport type UseConnectReturnType<\n  config extends Config = Config,\n  context = unknown,\n> = Compute<\n  UseMutationReturnType<\n    ConnectData<config>,\n    ConnectErrorType,\n    ConnectVariables<config, config['connectors'][number]>,\n    context\n  > & {\n    connect: ConnectMutate<config, context>\n    connectAsync: ConnectMutateAsync<config, context>\n    connectors: Compute<UseConnectorsReturnType> | config['connectors']\n  }\n>\n\n/** https://wagmi.sh/react/api/hooks/useConnect */\nexport function useConnect<\n  config extends Config = ResolvedRegister['config'],\n  context = unknown,\n>(\n  parameters: UseConnectParameters<config, context> = {},\n): UseConnectReturnType<config, context> {\n  const { mutation } = parameters\n\n  const config = useConfig(parameters)\n\n  const mutationOptions = connectMutationOptions(config)\n  const { mutate, mutateAsync, ...result } = useMutation({\n    ...mutation,\n    ...mutationOptions,\n  })\n\n  // Reset mutation back to an idle state when the connector disconnects.\n  useEffect(() => {\n    return config.subscribe(\n      ({ status }) => status,\n      (status, previousStatus) => {\n        if (previousStatus === 'connected' && status === 'disconnected')\n          result.reset()\n      },\n    )\n  }, [config, result.reset])\n\n  type Return = UseConnectReturnType<config, context>\n  return {\n    ...(result as Return),\n    connect: mutate as Return['connect'],\n    connectAsync: mutateAsync as Return['connectAsync'],\n    connectors: useConnectors({ config }),\n  }\n}\n","import type { MutationOptions } from '@tanstack/query-core'\n\nimport {\n  type DisconnectErrorType,\n  type DisconnectParameters,\n  type DisconnectReturnType,\n  disconnect,\n} from '../actions/disconnect.js'\nimport type { Config } from '../createConfig.js'\nimport type { Mutate, MutateAsync } from './types.js'\n\nexport function disconnectMutationOptions<config extends Config>(\n  config: config,\n) {\n  return {\n    mutationFn(variables) {\n      return disconnect(config, variables)\n    },\n    mutationKey: ['disconnect'],\n  } as const satisfies MutationOptions<\n    DisconnectData,\n    DisconnectErrorType,\n    DisconnectVariables\n  >\n}\n\nexport type DisconnectData = DisconnectReturnType\n\nexport type DisconnectVariables = DisconnectParameters | undefined\n\nexport type DisconnectMutate<context = unknown> = Mutate<\n  DisconnectData,\n  DisconnectErrorType,\n  DisconnectVariables,\n  context\n>\n\nexport type DisconnectMutateAsync<context = unknown> = MutateAsync<\n  DisconnectData,\n  DisconnectErrorType,\n  DisconnectVariables,\n  context\n>\n","import type { Config, Connection, Connector } from '../createConfig.js'\nimport type { BaseErrorType, ErrorType } from '../errors/base.js'\nimport type {\n  ConnectorNotConnectedErrorType,\n  ConnectorNotFoundErrorType,\n} from '../errors/config.js'\nimport type { ConnectorParameter } from '../types/properties.js'\n\nexport type DisconnectParameters = ConnectorParameter\n\nexport type DisconnectReturnType = void\n\nexport type DisconnectErrorType =\n  | ConnectorNotFoundErrorType\n  | ConnectorNotConnectedErrorType\n  // base\n  | BaseErrorType\n  | ErrorType\n\n/** https://wagmi.sh/core/api/actions/disconnect */\nexport async function disconnect(\n  config: Config,\n  parameters: DisconnectParameters = {},\n): Promise<DisconnectReturnType> {\n  let connector: Connector | undefined\n  if (parameters.connector) connector = parameters.connector\n  else {\n    const { connections, current } = config.state\n    const connection = connections.get(current!)\n    connector = connection?.connector\n  }\n\n  const connections = config.state.connections\n\n  if (connector) {\n    await connector.disconnect()\n    connector.emitter.off('change', config._internal.events.change)\n    connector.emitter.off('disconnect', config._internal.events.disconnect)\n    connector.emitter.on('connect', config._internal.events.connect)\n\n    connections.delete(connector.uid)\n  }\n\n  config.setState((x) => {\n    // if no connections exist, move to disconnected state\n    if (connections.size === 0)\n      return {\n        ...x,\n        connections: new Map(),\n        current: null,\n        status: 'disconnected',\n      }\n\n    // switch over to another connection\n    const nextConnection = connections.values().next().value as Connection\n    return {\n      ...x,\n      connections: new Map(connections),\n      current: nextConnection.connector.uid,\n    }\n  })\n\n  // Set recent connector if exists\n  {\n    const current = config.state.current\n    if (!current) return\n    const connector = config.state.connections.get(current)?.connector\n    if (!connector) return\n    await config.storage?.setItem('recentConnectorId', connector.id)\n  }\n}\n","import type { Config, Connection } from '../createConfig.js'\nimport type { Compute } from '../types/utils.js'\nimport { deepEqual } from '../utils/deepEqual.js'\n\nexport type GetConnectionsReturnType = Compute<Connection>[]\n\nlet previousConnections: Connection[] = []\n\n/** https://wagmi.sh/core/api/actions/getConnections */\nexport function getConnections(config: Config): GetConnectionsReturnType {\n  const connections = [...config.state.connections.values()]\n  if (config.state.status === 'reconnecting') return previousConnections\n  if (deepEqual(previousConnections, connections)) return previousConnections\n  previousConnections = connections\n  return connections\n}\n","'use client'\n\nimport {\n  type GetConnectionsReturnType,\n  getConnections,\n  watchConnections,\n} from '@wagmi/core'\nimport { useSyncExternalStore } from 'react'\n\nimport type { ConfigParameter } from '../types/properties.js'\nimport { useConfig } from './useConfig.js'\n\nexport type UseConnectionsParameters = ConfigParameter\n\nexport type UseConnectionsReturnType = GetConnectionsReturnType\n\n/** https://wagmi.sh/react/api/hooks/useConnections */\nexport function useConnections(\n  parameters: UseConnectionsParameters = {},\n): UseConnectionsReturnType {\n  const config = useConfig(parameters)\n\n  return useSyncExternalStore(\n    (onChange) => watchConnections(config, { onChange }),\n    () => getConnections(config),\n    () => getConnections(config),\n  )\n}\n","import type { Config } from '../createConfig.js'\nimport { deepEqual } from '../utils/deepEqual.js'\nimport {\n  type GetConnectionsReturnType,\n  getConnections,\n} from './getConnections.js'\n\nexport type WatchConnectionsParameters = {\n  onChange(\n    connections: GetConnectionsReturnType,\n    prevConnections: GetConnectionsReturnType,\n  ): void\n}\n\nexport type WatchConnectionsReturnType = () => void\n\n/** https://wagmi.sh/core/api/actions/watchConnections */\nexport function watchConnections(\n  config: Config,\n  parameters: WatchConnectionsParameters,\n): WatchConnectionsReturnType {\n  const { onChange } = parameters\n  return config.subscribe(() => getConnections(config), onChange, {\n    equalityFn: deepEqual,\n  })\n}\n","'use client'\n\nimport { useMutation } from '@tanstack/react-query'\nimport type { Connector, DisconnectErrorType } from '@wagmi/core'\nimport type { Compute } from '@wagmi/core/internal'\nimport {\n  type DisconnectData,\n  type DisconnectMutate,\n  type DisconnectMutateAsync,\n  type DisconnectVariables,\n  disconnectMutationOptions,\n} from '@wagmi/core/query'\n\nimport type { ConfigParameter } from '../types/properties.js'\nimport type {\n  UseMutationParameters,\n  UseMutationReturnType,\n} from '../utils/query.js'\nimport { useConfig } from './useConfig.js'\nimport { useConnections } from './useConnections.js'\n\nexport type UseDisconnectParameters<context = unknown> = Compute<\n  ConfigParameter & {\n    mutation?:\n      | UseMutationParameters<\n          DisconnectData,\n          DisconnectErrorType,\n          DisconnectVariables,\n          context\n        >\n      | undefined\n  }\n>\n\nexport type UseDisconnectReturnType<context = unknown> = Compute<\n  UseMutationReturnType<\n    DisconnectData,\n    DisconnectErrorType,\n    DisconnectVariables,\n    context\n  > & {\n    connectors: readonly Connector[]\n    disconnect: DisconnectMutate<context>\n    disconnectAsync: DisconnectMutateAsync<context>\n  }\n>\n\n/** https://wagmi.sh/react/api/hooks/useDisconnect */\nexport function useDisconnect<context = unknown>(\n  parameters: UseDisconnectParameters<context> = {},\n): UseDisconnectReturnType<context> {\n  const { mutation } = parameters\n\n  const config = useConfig(parameters)\n\n  const mutationOptions = disconnectMutationOptions(config)\n  const { mutate, mutateAsync, ...result } = useMutation({\n    ...mutation,\n    ...mutationOptions,\n  })\n\n  return {\n    ...result,\n    connectors: useConnections({ config }).map(\n      (connection) => connection.connector,\n    ),\n    disconnect: mutate,\n    disconnectAsync: mutateAsync,\n  }\n}\n","import { useCallback } from 'react';\nimport { useConnect, useDisconnect } from 'wagmi';\n\ninterface AbstractLogin {\n  login: () => void;\n  logout: () => void;\n}\n\n/**\n * React hook for signing in and signing out users with Abstract Global Wallet.\n *\n * This hook provides utility functions to prompt users to sign up or sign into your\n * application using Abstract Global Wallet, and to sign out once connected.\n *\n * Under the hood, it uses the following wagmi hooks:\n * - `login`: Uses wagmi's `useConnect` hook to connect to the Abstract connector\n * - `logout`: Uses wagmi's `useDisconnect` hook to disconnect the user\n *\n * @returns An object containing login and logout functions\n * @returns {function} login - Opens the signup/login modal for Abstract Global Wallet\n * @returns {function} logout - Disconnects the user's wallet from the application\n *\n * @example\n * ```tsx\n * import { useLoginWithAbstract } from \"@abstract-foundation/agw-react\";\n * import { useAccount } from \"wagmi\";\n *\n * export default function LoginComponent() {\n *   const { login, logout } = useLoginWithAbstract();\n *   const { isConnected } = useAccount();\n *\n *   return (\n *     <div>\n *       {isConnected ? (\n *         <button onClick={logout}>\n *           Disconnect Abstract Wallet\n *         </button>\n *       ) : (\n *         <button onClick={login}>\n *           Login with Abstract\n *         </button>\n *       )}\n *     </div>\n *   );\n * }\n * ```\n *\n * If the user doesn't have an Abstract Global Wallet, they will be prompted to create one.\n * If they already have a wallet, they'll be prompted to use it to sign in.\n *\n * Read more: [Abstract docs: useLoginWithAbstract](https://docs.abs.xyz/abstract-global-wallet/agw-react/hooks/useLoginWithAbstract)\n *\n * @see {@link useConnect} - The underlying wagmi connect hook\n * @see {@link useDisconnect} - The underlying wagmi disconnect hook\n */\nexport const useLoginWithAbstract = (): AbstractLogin => {\n  const { connect, connectors } = useConnect();\n  const { disconnect } = useDisconnect();\n\n  const login = useCallback(() => {\n    const connector = connectors.find((c) => c.id === 'xyz.abs.privy');\n    if (!connector) {\n      throw new Error('Abstract connector not found');\n    }\n    connect({ connector });\n  }, [connect, connectors]);\n\n  const logout = useCallback(() => {\n    disconnect();\n  }, [disconnect]);\n\n  return {\n    login,\n    logout,\n  };\n};\n","import { BaseError } from './base.js'\n\nexport type InvalidDecimalNumberErrorType = InvalidDecimalNumberError & {\n  name: 'InvalidDecimalNumberError'\n}\nexport class InvalidDecimalNumberError extends BaseError {\n  constructor({ value }: { value: string }) {\n    super(`Number \\`${value}\\` is not a valid decimal number.`, {\n      name: 'InvalidDecimalNumberError',\n    })\n  }\n}\n","import { etherUnits } from '../../constants/unit.js'\nimport type { ErrorType } from '../../errors/utils.js'\n\nimport { type ParseUnitsErrorType, parseUnits } from './parseUnits.js'\n\nexport type ParseEtherErrorType = ParseUnitsErrorType | ErrorType\n\n/**\n * Converts a string representation of ether to numerical wei.\n *\n * - Docs: https://viem.sh/docs/utilities/parseEther\n *\n * @example\n * import { parseEther } from 'viem'\n *\n * parseEther('420')\n * // 420000000000000000000n\n */\nexport function parseEther(ether: string, unit: 'wei' | 'gwei' = 'wei') {\n  return parseUnits(ether, etherUnits[unit])\n}\n","import { InvalidDecimalNumberError } from '../../errors/unit.js'\nimport type { ErrorType } from '../../errors/utils.js'\n\nexport type ParseUnitsErrorType = ErrorType\n\n/**\n * Multiplies a string representation of a number by a given exponent of base 10 (10exponent).\n *\n * - Docs: https://viem.sh/docs/utilities/parseUnits\n *\n * @example\n * import { parseUnits } from 'viem'\n *\n * parseUnits('420', 9)\n * // 420000000000n\n */\nexport function parseUnits(value: string, decimals: number) {\n  if (!/^(-?)([0-9]*)\\.?([0-9]*)$/.test(value))\n    throw new InvalidDecimalNumberError({ value })\n\n  let [integer, fraction = '0'] = value.split('.')\n\n  const negative = integer.startsWith('-')\n  if (negative) integer = integer.slice(1)\n\n  // trim trailing zeros.\n  fraction = fraction.replace(/(0+)$/, '')\n\n  // round off if the fraction is larger than the number of decimals.\n  if (decimals === 0) {\n    if (Math.round(Number(`.${fraction}`)) === 1)\n      integer = `${BigInt(integer) + 1n}`\n    fraction = ''\n  } else if (fraction.length > decimals) {\n    const [left, unit, right] = [\n      fraction.slice(0, decimals - 1),\n      fraction.slice(decimals - 1, decimals),\n      fraction.slice(decimals),\n    ]\n\n    const rounded = Math.round(Number(`${unit}.${right}`))\n    if (rounded > 9)\n      fraction = `${BigInt(left) + BigInt(1)}0`.padStart(left.length + 1, '0')\n    else fraction = `${left}${rounded}`\n\n    if (fraction.length > decimals) {\n      fraction = fraction.slice(1)\n      integer = `${BigInt(integer) + 1n}`\n    }\n\n    fraction = fraction.slice(0, decimals)\n  } else {\n    fraction = fraction.padEnd(decimals, '0')\n  }\n\n  return BigInt(`${negative ? '-' : ''}${integer}${fraction}`)\n}\n","import React, { useState, useEffect } from \"react\";\nimport { parseEther, formatEther, decodeEventLog } from \"viem\";\nimport \"./Coinflip.css\";\n\nconst COINFLIP_ADDRESS = \"0xcb300ef13a41E27a29674278b4C4D68A506aFf8D\";\nconst COINFLIP_ABI = [\n  {\n    \"inputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      { \"indexed\": true, \"internalType\": \"address\", \"name\": \"player\", \"type\": \"address\" },\n      { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"choice\", \"type\": \"bool\" },\n      { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"result\", \"type\": \"bool\" },\n      { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" },\n      { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"won\", \"type\": \"bool\" }\n    ],\n    \"name\": \"FlipResult\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"getBalance\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [{ \"internalType\": \"bool\", \"name\": \"_choice\", \"type\": \"bool\" }],\n    \"name\": \"flip\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  }\n];\n\nconst Coinflip = ({ client, address }) => {\n  const [choice, setChoice] = useState(null);\n  const [amount, setAmount] = useState(\"0.0001\");\n  const [isFlipping, setIsFlipping] = useState(false);\n  const [lastResult, setLastResult] = useState(null);\n  const [contractBalance, setContractBalance] = useState(\"0\");\n\n  useEffect(() => {\n    if (client) {\n      fetchContractBalance();\n    }\n  }, [client]);\n\n  const fetchContractBalance = async () => {\n    try {\n      const balance = await client.readContract({\n        address: COINFLIP_ADDRESS,\n        abi: COINFLIP_ABI,\n        functionName: \"getBalance\"\n      });\n      setContractBalance(formatEther(balance));\n    } catch (error) {\n      console.error(\"Error fetching contract balance:\", error);\n      setContractBalance(\"0\");\n    }\n  };\n\n  const handleFlip = async () => {\n    if (!client || choice === null) return;\n\n    try {\n      setIsFlipping(true);\n      setLastResult(null);\n\n      const amountWei = parseEther(amount);\n\n      console.log(\"Sending flip transaction...\");\n      const tx = await client.writeContract({\n        address: COINFLIP_ADDRESS,\n        abi: COINFLIP_ABI,\n        functionName: \"flip\",\n        args: [choice],\n        value: amountWei\n      });\n\n      console.log(\"Transaction sent:\", tx);\n\n      // Wait a bit for the transaction to be processed\n      await new Promise(resolve => setTimeout(resolve, 3000));\n\n      // Get the transaction receipt using the correct AGW method\n      let receipt = null;\n      let attempts = 0;\n      const maxAttempts = 10;\n\n      while (!receipt && attempts < maxAttempts) {\n        try {\n          receipt = await client.getTransactionReceipt({ hash: tx });\n          console.log(\"Got receipt via getTransactionReceipt:\", receipt);\n        } catch (e1) {\n          console.log(\"getTransactionReceipt failed, trying alternative...\");\n\n          try {\n            const txDetails = await client.getTransaction({ hash: tx });\n            console.log(\"Transaction details:\", txDetails);\n\n            if (txDetails && txDetails.blockNumber) {\n              receipt = await client.getTransactionReceipt({ hash: tx });\n              console.log(\"Got receipt after checking transaction:\", receipt);\n            }\n          } catch (e2) {\n            console.log(\"Alternative method also failed:\", e2);\n          }\n        }\n\n        if (!receipt) {\n          await new Promise(resolve => setTimeout(resolve, 2000));\n          attempts++;\n        }\n      }\n\n      if (receipt && receipt.logs) {\n        console.log(\"Processing receipt logs:\", receipt.logs);\n\n        for (const log of receipt.logs) {\n          try {\n            console.log(\"Processing log:\", log);\n\n            const decoded = decodeEventLog({\n              abi: COINFLIP_ABI,\n              data: log.data,\n              topics: log.topics\n            });\n\n            console.log(\"Decoded event:\", decoded);\n\n            if (decoded.eventName === \"FlipResult\") {\n              console.log(\"Found FlipResult event:\", decoded.args);\n\n              if (decoded.args.player && decoded.args.player.toLowerCase() === address.toLowerCase()) {\n                const result = {\n                  choice: decoded.args.choice ? \"Heads\" : \"Tails\",\n                  result: decoded.args.result ? \"Heads\" : \"Tails\",\n                  won: decoded.args.won,\n                  amount: formatEther(decoded.args.amount)\n                };\n\n                console.log(\"Setting result:\", result);\n                setLastResult(result);\n                break;\n              }\n            }\n          } catch (e) {\n            console.log(\"Error decoding log:\", e);\n            continue;\n          }\n        }\n      } else {\n        console.log(\"No receipt or logs found, transaction may still be pending or failed to retrieve.\");\n        setLastResult({\n          choice: choice ? \"Heads\" : \"Tails\",\n          result: \"Processing...\",\n          won: null,\n          amount: amount\n        });\n      }\n\n      setIsFlipping(false);\n      fetchContractBalance();\n\n    } catch (error) {\n      console.error(\"Error flipping coin:\", error);\n      setIsFlipping(false);\n    }\n  };\n\n  return (\n    <div className=\"coinflip-container\">\n      <div className=\"coinflip-card\">\n        <h2 className=\"coinflip-title\"> Penguin Fishing Club Coinflip </h2>\n\n        <div className=\"contract-info\">\n          <p>Contract Balance: {contractBalance} ETH</p>\n        </div>\n\n        <div className=\"amount-section\">\n          <label htmlFor=\"amount\">Bet Amount (ETH):</label>\n          <input\n            id=\"amount\"\n            type=\"number\"\n            step=\"0.0001\"\n            min=\"0.0001\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n            className=\"amount-input\"\n            disabled={isFlipping}\n          />\n        </div>\n\n        <div className=\"choice-section\">\n          <h3>Choose your side:</h3>\n          <div className=\"choice-buttons\">\n            <button\n              className={`choice-btn ${choice === true ? \"selected\" : \"\"}`}\n              onClick={() => setChoice(true)}\n              disabled={isFlipping}\n            >\n              HEADS\n            </button>\n            <button\n              className={`choice-btn ${choice === false ? \"selected\" : \"\"}`}\n              onClick={() => setChoice(false)}\n              disabled={isFlipping}\n            >\n              TAILS\n            </button>\n          </div>\n        </div>\n\n        <button\n          className=\"flip-button\"\n          onClick={handleFlip}\n          disabled={isFlipping || choice === null}\n        >\n          {isFlipping ? \" FLIPPING...\" : \" FLIP COIN\"}\n        </button>\n\n        {lastResult && (\n          <div className={`result ${lastResult.won === true ? \"win\" : lastResult.won === false ? \"lose\" : \"pending\"}`}>\n            {lastResult.won === true ? (\n              <>\n                <div className=\"stars-animation\">\n                  <div className=\"star\"></div>\n                  <div className=\"star\"></div>\n                  <div className=\"star\"></div>\n                  <div className=\"star\"></div>\n                  <div className=\"star\"></div>\n                </div>\n                <h3> YOU WON! </h3>\n              </>\n            ) : lastResult.won === false ? (\n              <>\n                <div className=\"sad-face\"></div>\n                <h3>You Lost</h3>\n              </>\n            ) : (\n              <>\n                <div className=\"processing\"></div>\n                <h3>Processing Transaction...</h3>\n              </>\n            )}\n            <p>Your choice: {lastResult.choice}</p>\n            <p>Result: {lastResult.result}</p>\n            <p>Amount: {lastResult.amount} ETH</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Coinflip;\r\n","import React, { useState } from \"react\";\nimport { useLoginWithAbstract, useAbstractClient } from \"@abstract-foundation/agw-react\";\nimport { useAccount } from \"wagmi\";\nimport Coinflip from \"./Coinflip\";\nimport \"./WalletConnect.css\";\n\nconst WalletConnect = () => {\n  const { login } = useLoginWithAbstract();\n  const { data: client } = useAbstractClient();\n  const { address, isConnected } = useAccount();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSigned, setIsSigned] = useState(false);\n\n  const handleConnect = async () => {\n    try {\n      setIsLoading(true);\n      await login();\n    } catch (error) {\n      console.error(\"Failed to connect wallet:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSignMessage = async () => {\n    if (!client) return;\n\n    try {\n      setIsLoading(true);\n      const message = \"Welcome to Penguin Fishing Club coinflip\";\n      \n      // Sign the message using Abstract Global Wallet\n      const signature = await client.signMessage({\n        message: message,\n      });\n      \n      setIsSigned(true);\n      console.log(\"Message signed:\", signature);\n      console.log(\"Message:\", message);\n    } catch (error) {\n      console.error(\"Failed to sign message:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleGoBack = () => {\n    window.location.href = \"https://penguin-fishing-club.vercel.app/game\";\n  };\n\n  return (\n    <div className=\"wallet-container\">\n      {/* Back button */}\n      <button \n        onClick={handleGoBack}\n        className=\"back-button\"\n        title=\"Back to Penguin Fishing Club\"\n      >\n      </button>\n\n      {/* Wallet display after signing */}\n      {isSigned && address && (\n        <div className=\"wallet-display\">\n          <div className=\"wallet-address\">\n            {address.slice(0, 6)}...{address.slice(-4)}\n          </div>\n        </div>\n      )}\n\n      {/* Show coinflip after signing */}\n      {isSigned && client && address ? (\n        <Coinflip client={client} address={address} />\n      ) : isConnected && !isSigned ? (\n        <div className=\"wallet-connected\">\n          <button \n            onClick={handleSignMessage}\n            disabled={isLoading}\n            className=\"sign-button\"\n          >\n            {isLoading ? \"SIGNING...\" : \"SIGN\"}\n          </button>\n        </div>\n      ) : !isConnected ? (\n        <div className=\"wallet-connect\">\n          <button \n            onClick={handleConnect}\n            disabled={isLoading}\n            className=\"connect-button\"\n          >\n            {isLoading ? \"Connecting...\" : \"Connect with Abstract Global Wallet\"}\n          </button>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default WalletConnect;\r\n","import React from \"react\";\nimport { AbstractWalletProvider } from \"@abstract-foundation/agw-react\";\nimport { abstract } from \"viem/chains\";\nimport WalletConnect from \"./components/WalletConnect\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <AbstractWalletProvider chain={abstract}>\n      <div className=\"App\">\n        <WalletConnect />\n      </div>\n    </AbstractWalletProvider>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\r\n"],"names":["toPropertyKey","t","i","r","e","Symbol","toPrimitive","call","TypeError","String","Number","_defineProperty","Object","defineProperty","value","enumerable","configurable","writable","ownKeys","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","toEventSelector","toSignatureHash","formatUnits","decimals","display","toString","negative","startsWith","slice","padStart","integer","fraction","replace","concat","_0n","BigInt","_1n","_2n","_7n","_256n","_0x71n","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","round","R","x","y","j","IOTAS","split","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","h","l","s","rotlBH","rotlSH","rotlL","rotlBL","rotlSL","Keccak","Hash","constructor","blockLen","suffix","outputLen","enableXOF","undefined","rounds","super","pos","posOut","finished","destroyed","this","anumber","Error","state","Uint8Array","state32","u32","clone","_cloneInto","keccak","swap32IfBE","B","Uint32Array","idx1","idx0","B0","B1","Th","Tl","curH","curL","shift","PI","clean","keccakP","update","data","aexists","toBytes","abytes","len","take","Math","min","finish","writeInto","out","bufferOut","set","subarray","xofInto","xof","bytes","digestInto","aoutput","destroy","digest","to","gen","createHasher","keccak_256","toRpc","withdrawal","address","amount","Hex","index","validatorIndex","blockOverrides","_objectSpread","baseFeePerGas","blobBaseFee","feeRecipient","gasLimit","number","prevRandao","time","withdrawals","map","Withdrawal","module","exports","docsPath","encodeErrorResult","parameters","abi","errorName","args","abiItem","item","getAbiItem","name","AbiErrorNotFoundError","type","definition","formatAbiItem","signature","toFunctionSelector","inputs","AbiErrorInputsNotFoundError","encodeAbiParameters","concatHex","localBatchGatewayUrl","async","localBatchGatewayRequest","ccipRequest","queries","decodeFunctionData","batchGatewayAbi","failures","responses","Promise","all","query","urls","includes","err","error","status","shortMessage","solidityError","message","functionName","result","AbiFunctionNotFoundError","outputs","AbiFunctionOutputsNotFoundError","values","Array","isArray","InvalidArrayError","encodeFunctionResult","staticCursor","dataView","DataView","ArrayBuffer","position","positionReadCount","Map","recursiveReadCount","recursiveReadLimit","POSITIVE_INFINITY","assertReadLimit","RecursiveReadLimitExceededError","count","limit","assertPosition","PositionOutOfBoundsError","decrementPosition","offset","NegativeOffsetError","getReadCount","get","incrementPosition","inspectByte","position_","inspectBytes","inspectUint8","inspectUint16","getUint16","inspectUint24","getUint8","inspectUint32","getUint32","pushByte","byte","pushBytes","pushUint8","pushUint16","setUint16","pushUint24","setUint8","pushUint32","setUint32","readByte","_touch","readBytes","size","readUint8","readUint16","readUint24","readUint32","remaining","setPosition","oldPosition","createCursor","cursor","create","buffer","byteOffset","byteLength","tupleRegex","_wrapRegExp","array","formatAbiParameter","abiParameter","test","_result$array","components","execTyped","indexed","formatAbiParameters","abiParameters","params","f","require","k","for","m","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","defaultProps","$$typeof","props","_owner","current","Fragment","jsx","jsxs","crypto","globalThis","isSafeInteger","isView","_len","lengths","_key","ahash","instance","checkFinished","arr","floor","_len2","arrays","_key2","fill","createView","rotr","word","isLE","byteSwap","u","utf8ToBytes","str","TextEncoder","encode","concatBytes","sum","res","pad","hashCons","hashC","msg","tmp","randomBytes","bytesLength","getRandomValues","from","getContractAddress","getUrl","url","formatEther","wei","unit","etherUnits","U32_MASK64","_32n","fromBig","lst","le","Ah","Al","shrSH","_l","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","add","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5L","El","add5H","Eh","decodeFunctionResult","decodeAbiParameters","AbiEncodingLengthMismatchError","expectedLength","givenLength","preparedParams","_ref","prepareParam","param","prepareParams","encodeParams","_ref2","arrayComponents","getArrayComponents","_ref3","dynamic","AbiEncodingArrayLengthMismatchError","dynamicChild","preparedParam","numberToHex","encoded","_ref4","encodeArray","_ref7","param_","_ref8","encodeTuple","isAddress","InvalidAddressError","padHex","toLowerCase","encodeAddress","BaseError","boolToHex","encodeBool","_integerRegex$exec","signed","integerRegex","exec","_ref6","max","IntegerOutOfRangeError","encodeNumber","_ref5","paramSize","bytesSize","value_","dir","ceil","parseInt","AbiEncodingBytesSizeMismatchError","expectedSize","encodeBytes","hexValue","stringToHex","partsLength","parts","encodeString","InvalidAbiEncodingTypeError","staticSize","staticParams","dynamicParams","dynamicSize","matches","match","InvalidAbiItemError","details","JSON","stringify","UnknownTypeError","metaMessages","UnknownSolidityTypeError","isHex","strict","AccountStateConflictError","StateAssignmentConflictError","prettyStateMapping","stateMapping","reduce","pretty","slot","prettyStateOverride","stateOverride","_objectWithoutProperties","_excluded","val","nonce","balance","code","stateDiff","version","errorConfig","getDocsUrl","docsBaseUrl","docsSlug","_errorConfig$getDocsU","_errorConfig","_args$name","cause","_args$cause","docsUrl","join","walk","fn","encodeDeployData","bytecode","description","find","AbiConstructorNotFoundError","AbiConstructorParamsNotFoundError","bytesRegex","getChainContractAddress","_chain$contracts","blockNumber","chain","contract","contracts","ChainDoesNotSupportContract","blockCreated","extract","format","extract_","formatted","isSelector","abiItems","matchedAbiItem","every","arg","isArgOfType","ambiguousTypes","getAmbiguousTypes","AbiItemAmbiguityError","argType","abiParameterType","component","sourceParameters","targetParameters","parameterIndex","sourceParameter","targetParameter","types","_typeof","iterator","React","objectIs","is","useState","useEffect","useLayoutEffect","useDebugValue","checkIfSnapshotChanged","inst","latestGetSnapshot","getSnapshot","nextValue","shim","window","document","createElement","subscribe","_useState","forceUpdate","useSyncExternalStore","ExecutionRevertedError","_message$replace","reason","FeeCapTooHighError","maxFeePerGas","formatGwei","FeeCapTooLowError","NonceTooHighError","NonceTooLowError","NonceMaxValueError","InsufficientFundsError","IntrinsicGasTooHighError","gas","IntrinsicGasTooLowError","TransactionTypeNotSupportedError","TipAboveFeeCapError","maxPriorityFeePerGas","UnknownNodeError","HttpRequestError","body","headers","Boolean","RpcRequestError","TimeoutError","_abiItem$outputs","stateMutability","acc","aa","ca","encodeURIComponent","da","Set","ea","fa","ha","ia","ja","ka","la","ma","v","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","z","ra","sa","toUpperCase","ta","pa","isNaN","qa","oa","removeAttribute","setAttribute","setAttributeNS","xlinkHref","ua","va","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","Ka","La","A","assign","Ma","stack","trim","Na","Oa","prepareStackTrace","Reflect","construct","displayName","Pa","tag","render","Qa","_context","_payload","_init","Ra","Sa","Ta","nodeName","Va","_valueTracker","getValue","setValue","stopTracking","Ua","Wa","checked","Xa","activeElement","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","ab","bb","cb","db","ownerDocument","eb","fb","options","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","children","hb","ib","jb","textContent","kb","lb","mb","nb","namespaceURI","innerHTML","valueOf","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","ob","lastChild","nodeType","nodeValue","pb","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qb","rb","sb","style","indexOf","setProperty","charAt","substring","tb","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","source","track","wbr","ub","vb","wb","xb","target","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","addEventListener","removeEventListener","Nb","onError","Ob","Pb","Qb","Rb","Sb","Tb","Vb","alternate","return","flags","Wb","memoizedState","dehydrated","Xb","Zb","child","sibling","Yb","$b","ac","unstable_scheduleCallback","bc","unstable_cancelCallback","cc","unstable_shouldYield","dc","unstable_requestPaint","unstable_now","ec","unstable_getCurrentPriorityLevel","fc","unstable_ImmediatePriority","gc","unstable_UserBlockingPriority","hc","unstable_NormalPriority","ic","unstable_LowPriority","jc","unstable_IdlePriority","kc","lc","oc","clz32","pc","qc","log","LN2","rc","sc","tc","uc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","vc","xc","yc","zc","Ac","eventTimes","Cc","C","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Pc","Qc","Rc","Sc","delete","pointerId","Tc","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Vc","Wc","priority","isDehydrated","containerInfo","Xc","Yc","dispatchEvent","Zc","$c","ad","bd","cd","ReactCurrentBatchConfig","dd","ed","transition","fd","gd","hd","id","Uc","stopPropagation","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","Date","now","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","fromCharCode","location","repeat","locale","which","Rd","Td","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","color","date","datetime","email","month","password","range","search","tel","text","week","me","ne","oe","event","listeners","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","node","nextSibling","Le","contains","compareDocumentPosition","Me","HTMLIFrameElement","contentWindow","href","Ne","contentEditable","Oe","focusedElem","selectionRange","documentElement","start","end","selectionStart","selectionEnd","defaultView","getSelection","extend","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","element","left","scrollLeft","top","scrollTop","focus","Pe","Qe","Re","Se","Te","Ue","Ve","We","animationend","animationiteration","animationstart","transitionend","Xe","Ye","Ze","animation","$e","af","bf","cf","df","ef","ff","gf","hf","lf","mf","nf","Ub","listener","D","of","has","pf","qf","rf","random","sf","bind","capture","passive","J","w","F","tf","uf","parentWindow","vf","wf","na","xa","$a","ba","je","char","ke","unshift","xf","yf","zf","Af","Bf","Cf","Df","Ef","__html","Ff","setTimeout","Gf","clearTimeout","Hf","Jf","queueMicrotask","resolve","then","catch","If","Kf","Lf","Mf","previousSibling","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","E","G","Vf","H","Wf","Xf","Yf","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Zf","childContextTypes","$f","ag","bg","getChildContext","cg","__reactInternalMemoizedMergedChildContext","dg","eg","fg","gg","hg","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","xg","yg","I","zg","Ag","Bg","elementType","deletions","Cg","pendingProps","overflow","treeContext","retryLane","Dg","mode","Eg","Fg","Gg","memoizedProps","Hg","Ig","Jg","Kg","Lg","_stringRef","refs","Mg","Ng","Og","Pg","Qg","Rg","implementation","Sg","Tg","next","done","Ug","Vg","Wg","Xg","Yg","Zg","$g","ah","_currentValue","bh","childLanes","ch","dependencies","firstContext","lanes","dh","eh","context","memoizedValue","fh","gh","hh","interleaved","ih","jh","kh","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","lh","mh","eventTime","lane","payload","callback","nh","K","oh","ph","qh","rh","sh","th","uh","vh","wh","xh","yh","tagName","zh","L","revealOrder","_workInProgressVersionPrimary","Fh","ReactCurrentDispatcher","Gh","Hh","M","N","O","Ih","Jh","Kh","Lh","P","Mh","Nh","Oh","Ph","Qh","Rh","Sh","baseQueue","queue","Uh","Vh","Wh","lastRenderedReducer","action","hasEagerState","eagerState","lastRenderedState","dispatch","Xh","Yh","Zh","$h","ai","bi","ci","Q","di","lastEffect","stores","ei","fi","gi","hi","ii","deps","ji","ki","li","mi","ni","oi","pi","qi","ri","si","ti","ui","vi","wi","xi","yi","zi","Ai","Bi","readContext","useCallback","useContext","useImperativeHandle","useInsertionEffect","useMemo","useReducer","useRef","useDeferredValue","useTransition","useMutableSource","useId","unstable_isNewReconciler","identifierPrefix","Ci","Di","Ei","isMounted","_reactInternals","enqueueSetState","enqueueReplaceState","enqueueForceUpdate","Fi","shouldComponentUpdate","isPureReactComponent","Gi","contextType","updater","Hi","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Ii","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Ji","Ki","Li","console","Mi","WeakMap","Ni","Oi","Pi","Qi","getDerivedStateFromError","componentDidCatch","Ri","componentStack","Si","pingCache","Ti","Ui","Vi","Wi","Xi","Yi","Zi","$i","aj","compare","bj","cj","dj","baseLanes","cachePool","transitions","ej","fj","gj","hj","ij","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","jj","kj","pendingContext","lj","zj","Aj","Bj","Cj","mj","nj","oj","fallback","pj","qj","sj","dataset","dgst","tj","uj","_reactRetry","rj","subtreeFlags","vj","wj","isBackwards","rendering","renderingStartTime","last","tail","tailMode","xj","Dj","S","Ej","Fj","wasMultiple","multiple","suppressHydrationWarning","onClick","onclick","createElementNS","autoFocus","createTextNode","T","Gj","Hj","Ij","Jj","U","Kj","WeakSet","V","Lj","W","Mj","Nj","Pj","Qj","Rj","Sj","Tj","Uj","Vj","insertBefore","_reactRootContainer","Wj","X","Xj","Yj","Zj","onCommitFiberUnmount","componentWillUnmount","ak","bk","ck","dk","ek","isHidden","fk","gk","hk","ik","jk","kk","__reactInternalSnapshotBeforeUpdate","src","Vk","lk","mk","nk","ok","Y","Z","pk","qk","rk","sk","tk","Infinity","uk","vk","wk","xk","yk","zk","Ak","Bk","Ck","Dk","callbackNode","expirationTimes","expiredLanes","wc","callbackPriority","ig","Ek","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","Ok","finishedWork","finishedLanes","Pk","timeoutHandle","Qk","Rk","Sk","Tk","Uk","mutableReadLanes","Bc","Oj","onCommitFiberRoot","mc","onRecoverableError","Wk","onPostCommitFiberRoot","Xk","Yk","$k","isReactComponent","pendingChildren","al","mutableSourceEagerHydrationData","bl","cache","pendingSuspenseBoundaries","dl","el","fl","gl","hl","il","yj","Zk","kl","reportError","ll","_internalRoot","ml","nl","ol","pl","rl","ql","unmount","unstable_scheduleHydration","splice","querySelectorAll","form","sl","usingClientEntryPoint","Events","tl","findFiberByHostInstance","bundleType","rendererPackageName","ul","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","vl","isDisabled","supportsFiber","inject","createPortal","cl","createRoot","unstable_strictMode","findDOMNode","flushSync","hydrate","hydrateRoot","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","multicall3Abi","internalType","universalResolverErrors","universalResolverResolveAbi","universalResolverReverseAbi","textResolverAbi","addressResolverAbi","erc1271Abi","erc6492SignatureValidatorAbi","CircularReferenceError","parseStructs","signatures","shallowStructs","signaturesLength","isStructSignature","execStructSignature","InvalidSignatureError","properties","propertiesLength","trimmed","parseAbiParameter","InvalidStructSignatureError","resolvedStructs","entries","entriesLength","resolveStructs","typeWithoutTupleRegex","structs","ancestors","isTupleRegex","InvalidAbiTypeParameterError","_structs$type","isSolidityType","assertSize","hex","size_","givenSize","maxSize","assertStartOffset","assertEndOffset","hex_","targetSize","assertRequest","account","account_","gasPrice","parseAccount","FeeConflictError","maxUint256","prettyPrint","maxLength","padEnd","InvalidLegacyVError","InvalidSerializableTransactionError","transaction","InvalidStorageKeySizeError","_ref9","storageKey","TransactionExecutionError","_ref0","_chain$nativeCurrency","prettyArgs","nativeCurrency","symbol","TransactionNotFoundError","_ref1","blockHash","blockTag","hash","identifier","TransactionReceiptNotFoundError","_ref10","WaitForTransactionReceiptTimeoutError","_ref11","checksumAddressCache","LruMap","checksumAddress","address_","chainId","hexAddress","keccak256","stringToBytes","getAddress","HMAC","iHash","oHash","buf","getPrototypeOf","hmac","isBytes","abool","title","numberToHexUnpadded","num","hexToNumber","hasHexBuiltin","toHex","fromHex","hexes","_","bytesToHex","asciis","asciiToBase16","hexToBytes","n1","charCodeAt","n2","bytesToNumberBE","bytesToNumberLE","reverse","numberToBytesBE","numberToBytesLE","ensureBytes","isPosBig","inRange","aInRange","bitMask","u8n","u8fr","validatorFns","bigint","function","boolean","string","stringOrUint8Array","field","object","Fp","isValid","validateObject","validators","optValidators","checkField","fieldName","isOptional","checkVal","memoized","computed","_3n","_4n","_5n","_8n","mod","pow2","power","modulo","invert","sqrt3mod4","p1div4","ORDER","root","pow","eql","sqr","sqrt5mod8","p5div8","mul","nv","sub","ONE","FpSqrt","_Fp","Field","FpLegendre","Q1div2","is0","ZERO","t_tmp","exponent","tonelliShanks","FIELD_FIELDS","FpPow","FpInvertBatch","nums","passZero","inverted","multipliedAcc","invertedAcc","inv","reduceRight","p1mod2","powered","yes","zero","no","neg","nLength","nBitLength","_nBitLength","nByteLength","bitLen","redef","BITS","BYTES","sqrtP","freeze","MASK","isOdd","lhs","rhs","div","sqrN","addN","subN","mulN","sqrt","fromBytes","invertBatch","cmov","getFieldBytesLength","fieldOrder","bitLength","getMinHashLength","constTimeNegate","condition","negate","validateW","bits","calcWOpts","scalarBits","maxNumber","windows","windowSize","mask","shiftBy","calcOffsets","wOpts","wbits","nextN","offsetStart","abs","isZero","isNeg","isNegF","offsetF","validateMSMPoints","points","validateMSMScalars","scalars","pointPrecomputes","pointWindowSizes","getW","pippenger","fieldN","plength","slength","buckets","scalar","resI","sumI","double","validateBasic","curve","Gx","Gy","validateSigVerOpts","opts","lowS","prehash","DERErr","DER","Err","_tlv","dataLen","lenLen","decode","first","lengthBytes","_int","toSig","int","tlv","seqBytes","seqLeftBytes","rBytes","rLeftBytes","sBytes","sLeftBytes","hexFromSig","sig","seq","numToSizedHex","weierstrassPoints","CURVE","allowInfinityPoint","allowedPrivateKeyLengths","clearCofactor","isTorsionFree","wrapPrivateKey","endo","beta","splitScalar","validatePointOpts","Fn","_c","point","_isCompressed","toAffine","weierstrassEquation","x2","x3","isValidXY","right","_4a3","_27b2","normPrivateKeyToScalar","aprjpoint","other","Point","toAffineMemo","iz","px","py","pz","ax","ay","zz","assertValidMemo","fromAffine","normalizeZ","toInv","assertValidity","fromPrivateKey","privateKey","BASE","multiply","msm","_setWindowSize","wnaf","setWindowSize","hasEvenY","equals","X1","Y1","Z1","X2","Y2","Z2","U1","U2","b3","X3","Y3","Z3","t0","t1","t2","t3","t4","t5","subtract","wNAF","wNAFCached","multiplyUnsafe","hasPrecomputes","wNAFCachedUnsafe","k1neg","k1","k2neg","k2","k1p","k2p","fake","f1p","f2p","multiplyAndAddUnsafe","cofactor","toRawBytes","isCompressed","elm","unsafeLadder","precomputeWindow","precomputes","wo","wNAFUnsafe","getPrecomputes","transform","comp","prev","ProjectivePoint","isWithinCurveOrder","weierstrass","curveDef","bits2int","bits2int_modN","validateOpts","CURVE_ORDER","compressedLen","uncompressedLen","modN","invN","cat","head","y2","sqrtError","isBiggerThanHalfOrder","slcNum","Signature","recovery","fromCompact","fromDER","addRecoveryBit","recoverPublicKey","msgHash","rec","radj","prefix","ir","u1","u2","hasHighS","normalizeS","toDERRawBytes","toDERHex","toCompactRawBytes","toCompactHex","utils","isValidPrivateKey","randomPrivateKey","fieldLen","minLen","reduced","mapHashToField","precompute","isProbPub","fpl","compLen","uncompLen","delta","ORDER_MASK","int2octets","prepSig","defaultSigOpts","some","extraEntropy","ent","h1int","seedArgs","seed","k2sig","kBytes","normS","defaultVerOpts","getPublicKey","getSharedSecret","privateA","publicB","sign","privKey","drbg","hashLen","qByteLen","hmacFn","reset","reseed","genUntil","pred","createHmacDrbg","verify","publicKey","_Point$BASE$multiplyA","isObj","_sig","derError","secp256k1P","secp256k1N","divNearest","sqrtMod","_6n","_11n","_22n","_23n","_44n","_88n","b2","b6","b9","b11","b22","b44","b88","b176","b220","b223","Fpk1","secp256k1","defHash","msgs","getHash","createCurve","a1","b1","a2","POW_2_128","c1","c2","sha256","InvalidBytesBooleanError","InvalidHexBooleanError","InvalidHexValueError","SizeOverflowError","replacer","space","UnknownSignatureError","_setPrototypeOf","setPrototypeOf","__proto__","BabelRegExp","RegExp","buildGroups","groups","indices","toSignature","def","active","level","valid","normalizeSignature","InvalidAbiParametersError","InvalidParameterError","SolidityProtectedKeywordError","InvalidModifierError","modifier","InvalidFunctionModifierError","serializeStateMapping","InvalidBytesLengthError","serializeAccountStateOverride","rpcAccountStateOverride","serializeStateOverride","rpcStateOverride","accountState","propertyIsEnumerable","addressRegex","isAddressCache","cacheKey","_v","maxValue","MAX_SAFE_INTEGER","minValue","encoder","setState","escape","_status","_result","default","Children","toArray","only","Component","Profiler","PureComponent","StrictMode","Suspense","act","cloneElement","createContext","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","createFactory","createRef","forwardRef","isValidElement","lazy","memo","startTransition","unstable_act","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","Arr","_byteLength","curByte","revLookup","fromByteArray","uint8","extraBytes","maxChunkLength","len2","encodeChunk","lookup","tripletToBase64","output","gweiUnits","SliceOffsetOutOfBoundsError","SizeExceedsPaddingSizeError","Chi","Maj","HashMD","padOffset","process","roundClean","setBigUint64","_u32_max","wl","oview","outLen","SHA256_IV","SHA256_K","SHA256_W","SHA256","W15","W2","s0","s1","T1","T2","decodeErrorResult","AbiDecodingZeroDataError","solidityPanic","AbiErrorSignatureNotFoundError","parseAbi","parseSignature","aggregate3Signature","client","_client$batch","_client$experimental_","authorizationList","batch","multicall","experimental_blockTag","accessList","blobs","data_","factory","factoryData","maxFeePerBlobGas","rest","deploylessCallViaBytecode","deploylessCallViaFactory","deploylessCall","toDeploylessCallViaBytecodeData","deploylessCallViaFactoryBytecode","toDeploylessCallViaFactoryData","_client$chain","block","rpcBlockOverrides","BlockOverrides","chainFormat","formatters","transactionRequest","request","formatTransactionRequest","request_","_excluded2","shouldPerformMulticall","_client$batch2","_client$experimental_2","batchSize","deployless","wait","multicallAddress","ClientChainNotConfiguredError","blockNumberHex","schedule","createBatchScheduler","uid","shouldSplitBatch","calls","requests","allowFailure","callData","calldata","encodeFunctionData","method","multicall3Bytecode","returnData","success","RawContractError","scheduleMulticall","response","_error$data","getRevertErrorData","offchainLookup","offchainLookupSignature","ccipRead","CounterfactualDeploymentFailedError","getCallError","deploylessCallViaBytecodeBytecode","_options$cause","docs","to_","InvalidParenthesisError","depth","parameterCache","isFunctionSignature","_match$stateMutabilit","execFunctionSignature","inputParams","splitParameters","inputLength","modifiers","functionModifiers","returns","outputParams","outputLength","parseFunctionSignature","isEventSignature","execEventSignature","eventModifiers","parseEventSignature","isErrorSignature","execErrorSignature","parseErrorSignature","isConstructorSignature","_match$stateMutabilit2","execConstructorSignature","parseConstructorSignature","isFallbackSignature","_match$stateMutabilit3","execFallbackSignature","parseFallbackSignature","isReceiveSignature","abiParameterWithoutTupleRegex","abiParameterWithTupleRegex","dynamicIntegerRegex","_options$structs","_match$array","parameterCacheKey","structKey","struct","propertyKey","property","getParameterCacheKey","isTuple","protectedKeywordsRegex","isSolidityKeyword","components_","_options$modifiers","_options$modifiers$ha","isValidDataLocation","sliceHex","sliceBytes","ChainMismatchError","currentChainId","ChainNotFoundError","InvalidChainIdError","getNodeError","CallExecutionError","erc6492SignatureValidatorByteCode","base64","ieee754","customInspectSymbol","Buffer","K_MAX_LENGTH","createBuffer","RangeError","encodingOrOffset","allocUnsafe","encoding","isEncoding","actual","write","fromString","arrayView","isInstance","copy","fromArrayBuffer","fromArrayLike","fromArrayView","SharedArrayBuffer","obj","isBuffer","numberIsNaN","fromObject","mustMatch","loweredCase","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","hexWrite","strLen","parsed","substr","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","base64Write","ucs2Write","units","lo","utf16leToBytes","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","poolSize","alloc","allocUnsafeSlow","_isBuffer","list","swap16","swap32","swap64","toLocaleString","inspect","thisStart","thisEnd","thisCopy","targetCopy","isFinite","toJSON","_arr","ret","hexSliceLookupTable","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","readUintLE","readUIntLE","readUintBE","readUIntBE","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","boundsError","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","sym","getMessage","Base","addNumericalSeparator","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","received","isInteger","INVALID_BASE64_RE","leadSurrogate","base64clean","dst","alphabet","table","i16","BufferBigIntNotDefined","AbiDecodingDataSizeTooSmallError","consumed","consumed_","decodeParameter","staticPosition","bytesToNumber","sizeOfOffset","startOfData","sizeOfLength","hasDynamicChild","decodeArray","hasUnnamedChild","decodeTuple","decodeAddress","bytesToBool","decodeBool","decodeBytes","bytesToBigInt","decodeNumber","bytesToString","decodeString","InvalidAbiDecodingTypeError","_param$components","endsWith","schedulerCache","sort","scheduler","getScheduler","flush","reject","setScheduler","promise","withResolvers","bigIntSuffix","executionRevertedError","nodeMessage","rpcTransactionType","legacy","eip2930","eip1559","eip4844","eip7702","rpcRequest","authorization","yParity","blobVersionedHashes","defineTransactionRequest","defineFormatter","isAddressEqual","firstKey","errorSignatureRegex","eventSignatureRegex","functionSignatureRegex","scope","structSignatureRegex","constructorSignatureRegex","fallbackSignatureRegex","receiveSignatureRegex","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","hexToBigInt","bytes_","TextDecoder","numberToBytes","boolToBytes","charCodeMap","nine","charCodeToBase16","hexString","nibbleLeft","nibbleRight","hexOrBytes","paddedBytes","padBytes","exclude","overrides","pop","sortIndex","performance","setImmediate","startTime","expirationTime","priorityLevel","navigator","scheduling","isInputPending","MessageChannel","port2","port1","onmessage","postMessage","unstable_Profiling","unstable_continueExecution","unstable_forceFrameRate","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_runWithPriority","delay","unstable_wrapCallback","EE","once","addListener","emitter","evt","_events","_eventsCount","clearEvent","EventEmitter","eventNames","events","names","handlers","listenerCount","emit","a3","a4","a5","removeListener","on","removeAllListeners","off","prefixed","_parameters$functionN","prepareEncodeFunctionData","formatAbiItemWithArgs","includeFunctionName","includeName","ContractFunctionExecutionError","_functionName$length","contractAddress","sender","formattedArgs","functionWithParams","ContractFunctionRevertedError","decodedData","errorArgs","firstArg","panicReasons","_errorName$length","errorWithParams","raw","ContractFunctionZeroDataError","checkDCE","toOrOpts","hexToString","hexToBool","formatAbiParams","AbiEventSignatureEmptyTopicsError","AbiEventSignatureNotFoundError","AbiEventNotFoundError","eventName","AbiFunctionSignatureNotFoundError","BytesSizeMismatchError","_ref12","DecodeLogDataMismatch","_ref13","DecodeLogTopicsMismatch","_ref14","_ref15","_ref16","InvalidDefinitionTypeError","regex","sliceLength","resolve_","reject_","fromBoolean","internal","padLeft","padRight","fromNumber","stringValue","toBigInt","max_unsigned","toNumber","validate","InvalidHexTypeError","assert","_unused","Errors","Json","formatAbiParam","maxUint16","gwei","ether","useSyncExternalStoreWithSelector","getServerSnapshot","selector","isEqual","instRef","hasValue","memoizedSelector","nextSnapshot","hasMemo","memoizedSnapshot","currentSelection","memoizedSelection","nextSelection","maybeGetServerSnapshot","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","chunkId","promises","miniCssF","prop","inProgress","dataWebpackPrefix","script","needAttach","scripts","getElementsByTagName","getAttribute","charset","timeout","nc","onScriptComplete","onerror","onload","doneFns","installedChunks","installedChunkData","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","chunkLoadingGlobal","self","UrlRequiredError","withTimeout","errorInstance","signal","timeoutId","controller","AbortController","abort","createIdStore","idCache","RpcError","ProviderRpcError","ParseRpcError","InvalidRequestRpcError","MethodNotFoundRpcError","InvalidParamsRpcError","InternalRpcError","InvalidInputRpcError","ResourceNotFoundRpcError","ResourceUnavailableRpcError","TransactionRejectedRpcError","MethodNotSupportedRpcError","LimitExceededRpcError","JsonRpcVersionUnsupportedError","UserRejectedRequestError","UnauthorizedProviderError","UnsupportedProviderMethodError","ProviderDisconnectedError","ChainDisconnectedError","SwitchChainError","UnsupportedNonOptionalCapabilityError","UnsupportedChainIdError","DuplicateIdError","UnknownBundleIdError","BundleTooLargeError","AtomicReadyWalletRejectedUpgradeError","AtomicityNotSupportedError","UnknownRpcError","promiseCache","withRetry","delay_","retryCount","shouldRetry","attemptRetry","retry","buildRequest","_methods$exclude","overrideOptions","dedupe","methods","retryDelay","include","enabled","finally","withDedupe","err_","_error$headers","retryAfter","createTransport","config","uid_","http","fetchFn","fetchOptions","onFetchRequest","onFetchResponse","_config$retryCount","retryCount_","timeout_","url_","rpcUrls","rpcClient","_options$fetchFn","_options$timeout","_options$fetchOptions","_params$fetchOptions","fetch","onRequest","onResponse","signal_","_response$headers$get","_body$id2","_await$onRequest","_args$url","init","_body$id","jsonrpc","Request","json","parse","statusText","getHttpRpcClient","createClient","_parameters$experimen","_chain$blockTime","_parameters$pollingIn","_parameters$cacheTime","experimental_preconfirmationTime","blockTime","defaultPollingInterval","pollingInterval","cacheTime","transport","extendFn","extended","combined","isNullUniversalResolverError","_cause$data","_cause$data2","_cause$data3","_cause$data4","_cause$data5","_cause$data6","encodedLabelToLabelhash","label","namehash","labels","hashFromEncodedLabel","hashed","encodeLabelhash","labelhash","packetToBytes","packet","getAction","actionFn","action_implicit","action_explicit","EXECUTION_REVERTED_ERROR_CODE","getContractError","readContract","EnsAvatarInvalidMetadataError","EnsAvatarInvalidNftUriError","EnsAvatarUriResolutionError","uri","EnsAvatarUnsupportedNamespaceError","namespace","networkRegex","protocol","subpath","subtarget","ipfsHashRegex","base64Regex","dataURIRegex","getGateway","custom","defaultGateway","resolveAvatarUri","gatewayUrls","isEncoded","isOnChain","ipfsGateway","ipfs","arweaveGateway","arweave","networkRegexMatch","isIPNS","isIPFS","replacedUri","parsedUri","btoa","getJsonImage","image","image_url","image_data","parseAvatarUri","resolvedURI","isImage","contentType","hasOwn","Image","isImageUri","parseAvatarRecord","record","nft","uri_","reference","asset_namespace","tokenID","eip_namespace","chainID","erc_namespace","parseNftUri","nftUri","getNftTokenUri","resolvedNftUri","encodedJson","atob","uriTokenId","getMetadataAvatarUri","parseNftAvatarUri","getEnsText","universalResolverAddress","tlds","ensTlds","tld","readContractParameters","readContractAction","createAccessList","gasUsed","createFilterRequestScope","_client$transport$onR","_client$transport","requestMap","method_","FilterTypeNotSupportedError","encodeEventTopics","topics","_abiItem$inputs","_indexedInputs$map","indexedInputs","args_","_indexedInputs$map2","encodeArg","createContractEventFilter","fromBlock","toBlock","getRequest","createEventFilter","events_","flatMap","createPendingTransactionFilter","toRecoveryBit","yParityOrV","recoverAddress","publicKeyToAddress","hashHex","signature_","recoveryBit","signatureHex","toRlp","encodable","getEncodable","bodyLength","sizeOfBodyLength","getSizeOfLength","getEncodableList","bytesOrHex","sizeOfBytesLength","getEncodableBytes","hashAuthorization","_parameters$contractA","recoverAuthorizationAddress","EstimateGasExecutionError","BaseFeeScalarError","Eip1559FeesNotSupportedError","MaxFeePerGasTooLowError","BlockNotFoundError","transactionType","formatTransaction","transaction_","transactionIndex","typeHex","defineTransaction","formatBlock","_block$transactions","transactions","blobGasUsed","difficulty","excessBlobGas","logsBloom","timestamp","totalDifficulty","defineBlock","getBlock","includeTransactions","includeTransactions_","getGasPrice","internal_estimateMaxPriorityFeePerGas","block_","_chain$fees$maxPriori","_chain$fees","_chain$fees2","fees","defaultPriorityFee","maxPriorityFeePerGas_","maxPriorityFeePerGasHex","internal_estimateFeesPerGas","_baseFeeMultiplier$to","_baseFeeMultiplier$to2","_chain$fees3","_request$gasPrice","baseFeeMultiplier","_chain$fees$baseFeeMu","denominator","estimateFeesPerGas","_request$maxFeePerGas","getTransactionCount","blobsToCommitments","_parameters$to","kzg","commitments","blob","blobToKzgCommitment","blobsToProofs","proofs","commitment","computeBlobKzgProof","sha256n","noble_sha256","commitmentToVersionedHash","versionedHash","commitmentsToVersionedHashes","hashes","fieldElementsPerBlob","bytesPerBlob","bytesPerFieldElement","maxBytesPerTransaction","BlobSizeTooLargeError","EmptyBlobError","InvalidVersionedHashSizeError","InvalidVersionedHashVersionError","toBlobSidecars","_parameters$blobs","_parameters$commitmen","_parameters$proofs","toBlobs","sidecars","proof","getTransactionType","getChainId","chainIdHex","defaultParameters","eip1559NetworkCache","prepareTransactionRequest","nonceManager","getBlock_","chainId_","getChainId_","consume","versionedHashes","isEip1559Network","gasPrice_","estimateGas","getBalance","_await$prepareTransac","estimateGas_rpc","estimate","estimates","curr","getEstimateGasError","responseCache","withCache","buildCache","clear","getCache","created","getTime","getBlockNumber","getCode","decodeEventLog","strict_","argTopics","isUnnamed","argIndex","topic","decodeTopic","nonIndexedInputs","_args$i","parseEventLogs","logs","matchArgs","includesArgs","_err$abiItem$inputs","formatLog","logIndex","transactionHash","getLogs","formattedLogs","getContractEvents","Eip712DomainNotFoundError","getFeeHistory","blockCount","rewardPercentiles","feeHistory","_feeHistory$reward","gasUsedRatio","oldestBlock","reward","formatFeeHistory","getFilterChanges","_client","getProof","blockTag_","storageKeys","storageProof","formatProof","getTransaction","receiptStatuses","formatTransactionReceipt","transactionReceipt","receipt","cumulativeGasUsed","effectiveGasPrice","blobGasPrice","defineTransactionReceipt","getTransactionReceipt","simulateBlocks","blocks","returnFullTransactions","traceTransfers","validation","blockStateCalls","call_","_call$from","dataSuffix","stateOverrides","_call$error$data","_call$error","_call$logs","_call$error2","parseAbiItem","Bytes","decoder","fromArray","internal_hex","toBoolean","trimLeft","as","noble_keccak256","caches","checksum","InvalidInputError","InvalidChecksumError","Caches","characters","Address","prepare","abitype","getSignatureHash","getSelector","getSignature","AmbiguityError","NotFoundError","parseAbiParameters","parseAbiParameter_","arrayRegex","wrap","AbiParameters","prepareParameter","parameter","parameter_","preparedParameters","encodeBoolean","parametersize","staticParameters","dynamicParameters","Cursor","ZeroDataError","DataSizeTooSmallError","_param$name","LengthMismatchError","encodePacked","intMatch","Solidity","_type","baseType","bytesMatch","arrayMatch","childType","InvalidTypeError","ArrayLengthMismatchError","encodeData","abiFunction","overloads","fromAbi","AbiItem","matched","zeroAddress","simulateCalls","_block_calls$slice","_block_ethPre$calls","_block_assetsPre$call","_block_ethPost$calls","_block_assetsPost$cal","_block_decimals$calls","_block_symbols$calls","_block_tokenURI$calls","traceAssetChanges","getBalanceData","abiConstructor","_abiConstructor$input","AbiConstructor","AbiFunction","assetAddresses","flat","block_results","block_ethPre","block_assetsPre","block_ethPost","block_assetsPost","block_decimals","block_tokenURI","block_symbols","block_calls","results","balancesPre","balancesPost","symbols","tokenURI","changes","balancePost","balancePre","decimals_","symbol_","tokenURI_","token","change","pre","post","diff","assetChanges","uninstallFilter","magicBytes","wrapped","InvalidWrappedSignatureError","recovered","MissingPropertiesError","InvalidRError","InvalidSError","InvalidYParityError","InvalidSerializedSizeError","vToYParity","fromRpc","fromLegacy","InvalidVError","suffixParameters","unwrap","suffixLength","auth","Authorization","delegation","verifyHash","_parameters$universal","_parameters$multicall","_client$chain2","erc6492VerifierAddress","verifierAddress","universalSignatureVerifierAddress","erc6492Verifier","multicall3","yParity_","serializeSignature","SignatureErc8010","_results","authorization_ox","initData","VerificationError","verifyErc1271","verifyAuthorization","verifyErc8010","wrappedSignature","SignatureErc6492","verifyErc6492","hashMessage","message_","toPrefixedMessage","InvalidDomainError","domain","InvalidPrimaryTypeError","primaryType","InvalidStructTypeError","validateTypedData","validateData","integerMatch","validateReference","EIP712Domain","getTypesForEIP712Domain","verifyingContract","salt","hashTypedData","hashStruct","hashDomain","encodedTypes","encodedValues","hashType","encodeField","encodedHashType","unsortedDeps","findTypeDependencies","encodeType","primaryType_","prepend","parsedType","typeValuePairs","listenersCache","cleanupCache","callbackCount","observe","observerId","callbacks","callbackId","getListeners","unwatch","cleanup","unsubscribe","fns","_listener$fns$key","_listener$fns","poll","emitOnBegin","initialWaitTime","interval","_await$initialWaitTim","unpoll","initialWait","watch","watchBlockNumber","emitMissed","onBlockNumber","poll_","prevBlockNumber","transports","_emit$onError","unsubscribe_","onData","_data$result","_emit$onError2","prefixRegex","scheme","statement","suffixRegex","issuedAt","notBefore","requestId","verifySiweMessage","callRequest","_message$match$groups","_message$match","_message$match$groups2","_message$match2","_message$split$","resources","parseSiweMessage","validateSiweMessage","sendRawTransaction","serializedTransaction","publicActions","createBlockFilter","estimateContractGas","getBlobBaseFee","baseFee","getBlockTransactionCount","getBytecode","getEip712Domain","fields","extensions","getEnsAddress","coinType","functionData","getEnsAvatar","assetGatewayUrls","getEnsName","getEnsResolver","resolverAddress","getFilterLogs","_filter$strict","estimateMaxPriorityFeePerGas","getStorageAt","getTransactionConfirmations","transactionBlockNumber","_parameters$batchSize","_parameters$deployles","chunkedCalls","currentChunk","currentChunkSize","aggregate3Results","allSettled","aggregate3Result","simulate","simulateContract","minimizedAbi","verifyMessage","verifyTypedData","waitForTransactionReceipt","checkReplacement","confirmations","onReplaced","replacedTransaction","_unobserve","_unwatch","retrying","timer","_unwatch2","_unobserve2","_unobserve3","blockNumber_","_unwatch3","_unobserve4","replacementTransaction","_emit$onReplaced","watchBlocks","onBlock","enablePolling","prevBlock","_prevBlock","_prevBlock3","_prevBlock2","subscribeBlocks","emitFetched","watchContractEvent","onLogs","pollContractEvent","previousBlockNumber","initialized","subscribeContractEvent","watchEvent","subscribeEvent","watchPendingTransactions","onTransactions","subscribePendingTransactions","createPublicClient","AccountNotFoundError","AccountTypeNotSupportedError","assertCurrentChain","getTransactionError","supportsWalletNamespace","sendTransaction","isWalletNamespaceSupported","walletNamespaceError","_chain$serializers","serializer","serializers","signTransaction","fallbackMagicIdentifier","fallbackTransactionErrorMagicIdentifier","getCallsStatus","_receipts$map","_await$getStatus","receipts","atomic","getStatus","statusCode","prepareAuthorization","_client$chain$id","executor","signTypedData","typedData","domain_","normalizeData","serializeTypedData","BundleFailedError","WaitForCallsStatusTimeoutError","writeContract","walletActions","addChain","blockExplorers","chainName","blockExplorerUrls","deployContract","walletClient","getAddresses","_client$account","getCapabilities","capabilities_raw","capabilities","capabilities_","getPermissions","requestAddresses","requestPermissions","permissions","sendCalls","experimental_fallback","experimental_fallbackDelay","forceAtomic","atomicRequired","capability","optional","showCallsStatus","signAuthorization","signMessage","_formatters$transacti","switchChain","waitForCallsStatus","throwOnFailure","unobserve","watchAsset","createWalletClient","toAccount","defineChain","gasPerPubdataDefault","maxBytecodeSize","_args$transactions","l1BatchNumber","l1BatchTimestamp","l1BatchTxIndex","transactionLogIndex","logType","l2ToL1Logs","l2ToL1Log","shardId","isService","gasPerPubdata","paymaster","paymasterInput","factoryDeps","customSignature","eip712Meta","paymasterParams","dep","assertTransactionEIP1559","serializeAccessList","serializedAccessList","serializeTransaction","toYParitySignatureArray","serializeTransactionEIP1559","assertTransactionEIP2930","serializeTransactionEIP2930","assertTransactionEIP4844","serializeTransactionEIP4844","assertTransactionEIP7702","serializedAuthorizationList","serializeAuthorizationList","serializeTransactionEIP7702","assertTransactionLegacy","serializeTransactionLegacy","InvalidEip712TransactionError","isEIP712Transaction","assertEip712Transaction","serializeTransactionEIP712","serializeTransaction_","BytecodeLengthExceedsMaxSizeError","BytecodeLengthInWordsMustBeOddError","givenLengthInWords","BytecodeLengthMustBeDivisibleBy32Error","hashBytecode","bytecodeBytes","hashStr","bytecodeLengthInWords","bytecodeLength","bytecodeLengthPadded","codeHashVersion","chainConfig","_factoryDeps$map","txType","gasPerPubdataByteLimit","transactionToMessage","Transaction","abstractTestnet","native","testnet","abstract","webSocket","zksync","network","apiUrl","zksyncSepoliaTestnet","blockExplorerApi","anonymous","SMART_ACCOUNT_FACTORY_ADDRESS","EOA_VALIDATOR_ADDRESS","SESSION_KEY_VALIDATOR_ADDRESS","INSUFFICIENT_BALANCE_SELECTOR","CANONICAL_EXCLUSIVE_DELEGATE_RESOLVER_ADDRESS","AGW_LINK_DELEGATION_RIGHTS","SESSION_KEY_POLICY_REGISTRY_ADDRESS","VALID_CHAINS","getSmartAccountAddressFromInitialSigner","initialSigner","publicClient","addressBytes","AccountFactoryAbi","isSmartAccountDeployed","getInitializerCalldata","initialOwnerAddress","validatorAddress","initialCall","transformHexValues","isEip712TypedData","_typedData$domain","_typedData$domain2","transformEip712TypedData","_typedData$domain3","SessionKeyValidatorAbi","LimitType","Unlimited","Lifetime","ConstraintCondition","SessionStatus","getSessionSpec","encodeSession","sessionConfig","encodeSessionWithPeriodIds","periods","getPeriodIdsForTransaction","getId","limitType","Allowance","period","isContractCall","policy","callPolicies","transferPolicies","feeLimit","valueLimit","constraints","constraint","getSessionHash","createSession","session","hasModule","validationHooks","AGWAccountAbi","hasSessionModule","hook","encodedSession","zeroHash","contractDeployerAbi","getDeploymentDetails","deploymentType","bytecodeHash","contractDeploymentArgs","argsContractDeployer","create2","createAccount","create2Account","InsufficientBalanceError","replaceBigInts","fromEntries","signPrivyTransaction","_chain","_account","ExclusiveDelegateResolverAbi","provider","defaultRetryCount","toSessionClient","signer","paymasterHandler","parsedAccount","baseClient","signerWalletClient","sessionClient","signerClient","sendTransactionForSession","customPaymasterHandler","writeContractForSession","isDeployed","signTransactionForSession","_transactionRequest$d","_transactionRequest$d2","validationHookData","signEip712TransactionInternal","signTypedDataForSession","getSessionStatus","sessionWalletActions","createSessionClient","_request$value","isSponsored","parameterNames","_args$value","_args$data","initializerCallData","deploymentCalldata","initiatorAccount","asyncOperations","userBalance","gasCost","isInitialTransaction","SessionKeyPolicyRegistryAbi","restrictedSelectors","SessionKeyPolicyStatus","getSessionFromTransaction","_transaction$data2","_transaction$data3","sessionSpec","moduleAndData","sessionData","validator","isPrivyCrossApp","_chain$custom","smartAccount","useSignerAddress","fromAccount","assertEip712Request","_transaction$data","sessions","batchCall","checks","callPolicy","destinationConstraints","Equal","refValue","check","transferPolicy","Allowed","assertSessionKeyPolicies","transactionWithPaymaster","_transaction$gas","_transaction$gasPrice","_transaction$gasPerPu","_transaction$maxFeePe","_transaction$maxPrior","_transaction$nonce","_transaction$to","_transaction$value","paymasterResult","getTransactionWithPaymasterData","eip712Domain","rawSignature","hookData","_validationHookData$h","sendTransactionInternal","paymasterData","requestAsAny","_parameters$chain$id","_parameters$chain","updatedParameters","signedTx","_parameters$chain2","getLinkedAccounts","agwAddress","checksummedAddress","linkedAccounts","isLinkedAccount","clientAccount","agw","getLinkedAgw","sessionHashOrConfig","sessionHash","getBatchTransactionObject","batchCalls","tx","_tx$value","_tx$data","batchCallData","totalValue","getAgwTypedSignature","messageHash","AGWMessage","signedHash","serializeErc6492Signature","fromRlpCursor","readLength","readList","transformedTypedData","signedTransaction","signatureParts","fromRlp","sendPrivySignTypedData","globalWalletActions","revokeSessions","sessionHashes","prepareAbstractTransactionRequest","sendTransactionBatch","batchTransaction","sendPrivySignMessage","signTransactionBatch","createAbstractClient","publicTransport","CallStatus","agwCapabilitiesV2","atomicBatch","supported","getReceiptStatus","Pending","Confirmed","Reverted","getAgwAddressFromInitialSigner","getAgwSigner","accounts","getAgwClient","overrideTransport","wallet","_checkPrivateRedeclaration","_classPrivateFieldInitSpec","_assertClassBrand","_classPrivateFieldSet2","defaultTimeoutProvider","setInterval","clearInterval","intervalId","timeoutManager","_provider","_providerCalled","setTimeoutProvider","_classPrivateFieldSet","_classPrivateFieldGet","isServer","noop","isValidTimeout","timeUntilStale","updatedAt","staleTime","resolveStaleTime","resolveEnabled","matchQuery","filters","exact","fetchStatus","predicate","queryKey","stale","queryHash","hashQueryKeyByOptions","partialMatchKey","isActive","isStale","matchMutation","mutation","mutationKey","hashKey","queryKeyHashFn","isPlainObject","replaceEqualDeep","isPlainArray","aSize","bItems","bSize","equalItems","aItem","bItem","shallowEqualObjects","hasObjectPrototype","ctor","prot","replaceData","prevData","structuralSharing","addToEnd","items","newItems","addToStart","skipToken","ensureQueryFn","queryFn","initialPromise","shouldThrowError","throwOnError","_classPrivateMethodInitSpec","defaultScheduler","notifyManager","notifyFn","batchNotifyFn","scheduleFn","originalQueue","setNotifyFunction","setBatchNotifyFunction","createNotifyManager","Subscribable","onSubscribe","onUnsubscribe","hasListeners","focusManager","_focused","_cleanup","_setup","onFocus","setEventListener","_classPrivateFieldGet2","setup","_classPrivateFieldGet3","focused","setFocused","isFocused","_globalThis$document","visibilityState","onlineManager","_online","onOnline","onlineListener","offlineListener","setOnline","online","isOnline","pendingThenable","thenable","_resolve","_reject","finalize","defaultRetryDelay","failureCount","canFetch","networkMode","CancelledError","revert","silent","createRetryer","continueFn","isRetryCancelled","isResolved","canContinue","canRun","canStart","_continueFn","_continueFn2","pause","continueResolve","_config$onPause","onPause","_config$onContinue","onContinue","run","promiseOrValue","_config$retry","_config$retryDelay","_config$onFail","onFail","cancel","cancelOptions","_config$onCancel","onCancel","continue","_continueFn3","cancelRetry","continueRetry","Removable","_gcTimeout","clearGcTimeout","scheduleGc","gcTime","optionalRemove","updateGcTime","newGcTime","Query","_initialState","_revertState","_cache","_retryer","_defaultOptions","_abortSignalConsumed","_Class_brand","_config$state","defaultOptions","setOptions","observers","getQueryCache","getDefaultState","defaultState","setData","dataUpdatedAt","manual","remove","newData","_dispatch","setStateOptions","_classPrivateFieldGet4","observer","getObserversCount","dataUpdateCount","errorUpdateCount","isStatic","getCurrentResult","isInvalidated","isStaleByTime","_classPrivateFieldGet5","shouldFetchOnWindowFocus","refetch","cancelRefetch","_classPrivateFieldGet6","shouldFetchOnReconnect","addObserver","notify","removeObserver","invalidate","_classPrivateFieldGet7","_this$options$behavio","_context$fetchOptions","abortController","addSignalProperty","queryFnContext","createQueryFnContext","queryFnContext2","persister","createFetchContext","context2","_context$fetchOptions2","behavior","onFetch","fetchMeta","_classPrivateFieldGet8","_classPrivateFieldGet9","_classPrivateFieldGet0","_classPrivateFieldGet1","onSuccess","onSettled","_classPrivateFieldGet10","_classPrivateFieldGet11","_classPrivateFieldGet12","_classPrivateFieldGet13","_action$meta","_action$dataUpdatedAt","fetchFailureCount","fetchFailureReason","fetchState","newState","errorUpdatedAt","reducer","onQueryUpdate","initialData","hasData","initialDataUpdatedAt","QueryCache","_queries","build","_options$queryHash","defaultQueryOptions","getQueryDefaults","queryInMap","getAll","defaultedFilters","findAll","Mutation","_observers","_mutationCache","mutationId","mutationCache","failureReason","isPaused","variables","submittedAt","execute","_this$options$retry","mutationFn","restored","_this$options$onSucce","_this$options2","_this$options$onSettl","_this$options3","_this$options$onMutat","_this$options","onMutate","_this$options$onError","_this$options4","_this$options$onSettl2","_this$options5","runNext","onMutationUpdate","MutationCache","_mutations","_scopes","_mutationId","_this$mutationId","defaultMutationOptions","scopeFor","scopedMutations","mutationsWithSameScope","firstPendingMutation","_foundMutation$contin","foundMutation","resumePausedMutations","pausedMutations","_mutation$options$sco","infiniteQueryBehavior","pages","_context$state$data","_context$state$data2","direction","fetchMore","oldPages","oldPageParams","pageParams","currentPage","cancelled","fetchPage","previous","pageParam","aborted","page","maxPages","addTo","oldData","getPreviousPageParam","getNextPageParam","remainingPages","_oldPageParams$","initialPageParam","_context$options$pers","_context$options","lastIndex","_options$getPreviousP","QueryClient","_queryCache","_queryDefaults","_mutationDefaults","_mountCount","_unsubscribeFocus","_unsubscribeOnline","queryCache","mount","_this$mountCount","_this$mountCount3","isFetching","isMutating","getQueryData","ensureQueryData","defaultedOptions","cachedData","fetchQuery","revalidateIfStale","prefetchQuery","getQueriesData","setQueryData","functionalUpdate","setQueriesData","getQueryState","removeQueries","resetQueries","refetchQueries","cancelQueries","defaultedCancelOptions","invalidateQueries","_filters$refetchType","refetchType","_options$cancelRefetc","fetchInfiniteQuery","prefetchInfiniteQuery","ensureInfiniteQueryData","getMutationCache","getDefaultOptions","setDefaultOptions","setQueryDefaults","defaults","queryDefault","setMutationDefaults","getMutationDefaults","_defaulted","refetchOnReconnect","suspense","mutations","QueryClientContext","useQueryClient","queryClient","QueryClientProvider","createStore","providerDetails","handler","CustomEvent","requestProviders","providerDetail","info","uuid","added","_listeners","removed","findProvider","rdns","getProviders","emitImmediately","subscribeWithSelector","api","origSubscribe","optListener","equalityFn","currentSlice","getState","nextSlice","previousSlice","fireImmediately","createJSONStorage","getStorage","storage","persistStorage","getItem","_a","str2","reviver","setItem","newValue","removeItem","toThenable","onFulfilled","_onRejected","_onFulfilled","onRejected","persistImpl","baseOptions","localStorage","partialize","merge","persistedState","currentState","hasHydrated","hydrationListeners","finishHydrationListeners","warn","savedSetState","configResult","stateFromStorage","getInitialState","_b","_a2","postRehydrationCallback","onRehydrateStorage","deserializedStorageValue","migrate","migrationResult","migrated","migratedState","newOptions","clearStorage","getOptions","rehydrate","onHydrate","onFinishHydration","skipHydration","createStoreImpl","createState","partial","nextState","previousState","initialState","__classPrivateFieldGet","_BaseError_instances","_BaseError_walk","ChainNotConfiguredError","ConnectorAlreadyConnectedError","ConnectorNotConnectedError","ConnectorAccountNotFoundError","connector","ConnectorChainMismatchError","connectionChainId","connectorChainId","ConnectorUnavailableReconnectingError","ProviderNotFoundError","injected","shimDisconnect","unstable_shimAsyncInject","getTarget","_targetMap$target","targetMap","ethereum","accountsChanged","chainChanged","connect","disconnect","icon","supportsSimulation","getProvider","onConnect","onAccountsChanged","isReconnecting","getAccounts","_permissions$","eth_accounts","caveats","_accounts","_config$storage","_config$storage2","onChainChanged","onDisconnect","_chain$id","_config$storage4","_config$storage3","hexChainId","isAuthorized","_config$storage5","_config$storage6","handleEthereum","race","_unused2","addEthereumChainParameter","chains","originalError","_chain$blockExplorers","_addEthereumChainPara","_chain$rpcUrls$defaul","_chain$rpcUrls$defaul2","_addEthereumChainPara2","_addEthereumChainPara3","blockExplorer","addEthereumChain","iconUrls","_config$storage7","connectInfo","coinbaseWallet","coinbaseWalletExtension","metaMask","isMetaMask","isBraveWallet","_state","flag","phantom","_window$phantom","_window$phantom2","select","isProvider","providers","Emitter","_emitter","deserialize","_value","_value2","_reviver","__type","getReferenceKey","cutoff","getCutoff","serialize","indent","circularReplacer","hasReplacer","hasCircularReplacer","thisCutoff","valueCutoff","createReplacer","_replacer","createStorage","deserialize_","serialize_","noopStorage","_deserialize","unwrapped","getDefaultStorage","createConfig","_version$split$","multiInjectedProviderDiscovery","syncConnectedChain","ssr","mipd","createMipd","connectors","collection","rdnsSet","connectorFns","_rest$connectors","rdnsValues","providerDetailToConnector","connectorFn","_connector$setup","createEmitter","clients","connections","currentVersion","store","validatePersistedChainId","connection","defaultChainId","_data$accounts","_data$chainId","nextConnection","_connections$get","isChainConfigured","connectorIdSet","connectorRdnsSet","newConnectors","getClient","_config$chainId","_properties$batch","chainIds","hasChainSpecificValue","isCorrupt","_internal","revalidate","nextChains","reconnectOnMount","onMount","_config$_internal$mip","_config$_internal$mip2","mipdConnectors","_parameters$connector","connector_","recentConnectorId","scores","sorted","_scores$a$id","_scores$b$id","connected","reconnect","Hydrate","WagmiContext","WagmiProvider","assertNumber","digits","letter","separator","padding","chr","normalize","gcd","radix2carry","convertRadix2","carry","radix2","revPadding","u8","u16","Uint16Array","i32","Int32Array","fleb","fdeb","clim","freb","revfl","revfd","rev","hMap","co","rvb","sv","r_1","flt","fdt","flm","flrm","fdm","fdrm","bits16","shft","slc","ind","nt","captureStackTrace","inflt","dat","st","dict","noBuf","resize","noSt","cbuf","nbuf","final","bt","lm","dm","lbt","dbt","tbts","hLit","hcLen","ldt","clt","clb","clbmsk","clm","lt","dt","lms","dms","lpos","dsym","dend","wbits16","hTree","et","i0","i1","i2","maxSym","tr","mbt","ln","lft","cst","i2_1","i2_2","i2_3","cli","cln","cls","clen","wfblk","wblk","syms","bs","dlt","mlb","ddt","mdb","lclt","nlc","_d","lcdt","ndc","lcfreq","_e","lct","mlcb","nlcc","flen","ftlen","dtlen","llm","lcts","it","clct","deo","dflt","lvl","plvl","opt","msk_1","bs1_1","bs2_1","hsh","lc_1","hv","imod","pimod","rem","ch_1","dif","maxn","maxd","mmd","lin","din","adler","dopt","dictionary","newDat","mem","wbytes","zlh","lv","zls","zlibSync","unzlibSync","stream","screenLeft","screenTop","innerWidth","clientWidth","screen","innerHeight","clientHeight","availWidth","availHeight","sharedSecret","providerAppId","open","URL","encryptedRequest","iv","subtle","importKey","encrypt","searchParams","origin","closed","_a$data","encryptedResult","decrypt","mwp","errorCode","close","_r$mwp","providerUrl","connectionOpts","smartWalletMode","providerPublicKey","exp","BroadcastChannel","put","del","getKeys","STORAGE_CONNECTION_KEY","_this$_connectionOpts","_connectionOpts","STORAGE_CHAIN_ID_KEY","_this$_connectionOpts2","loadProviderDetails","_providerDetailsLoaded","customConnectUrl","customTransactUrl","custom_connect_url","custom_transact_url","custom_api_url","icon_url","iconUrl","_apiUrl","_providerConnectUrl","_providerTransactUrl","getProviderConnectUrl","getProviderTransactUrl","clearConnection","_sharedSecret","_publicKey","_address","requestConnection","sendRequest","_r$transports$i$chain","_r$transports","_d$accountsChanged","_d$accountsChanged2","_d$connect","_r$transports$i$chain2","_r$transports2","_m$","_m$$chainId","debug","_e$code","web3_clientVersion","web3_sha3","net_listening","net_peerCount","net_version","eth_blobBaseFee","eth_blockNumber","eth_call","eth_chainId","eth_coinbase","eth_estimateGas","eth_feeHistory","eth_gasPrice","eth_getBalance","eth_getBlockByHash","eth_getBlockByNumber","eth_getBlockTransactionCountByHash","eth_getBlockTransactionCountByNumber","eth_getCode","eth_getFilterChanges","eth_getFilterLogs","eth_getLogs","eth_getProof","eth_getStorageAt","eth_getTransactionByBlockHashAndIndex","eth_getTransactionByBlockNumberAndIndex","eth_getTransactionByHash","eth_getTransactionCount","eth_getTransactionReceipt","eth_getUncleByBlockHashAndIndex","eth_getUncleByBlockNumberAndIndex","eth_getUncleCountByBlockHash","eth_getUncleCountByBlockNumber","eth_maxPriorityFeePerGas","eth_newBlockFilter","eth_newFilter","eth_newPendingTransactionFilter","eth_protocolVersion","eth_sendRawTransaction","eth_uninstallFilter","zks_estimateFee","eth_createAccessList","eth_simulateV1","abstractWalletConnector","rkDetails","defaultChain","validChainIds","validChains","chainIndex","findIndex","_removedChains$","removedChains","isWalletConnectModalConnector","_this$onConnect","toPrivyWalletConnector","abstractConnector","_parameters$chainId","_params$chains$find","_params$transports$ch","_params$transports","abstractClient","sendCallsParams","txHash","filteredCapabilities","transformEIP1193Provider","AbstractWalletProvider","wagmiConfig","QueryObserver","_currentQuery","_currentQueryInitialState","_currentResult","_currentResultState","_currentResultOptions","_currentThenable","_selectError","_selectFn","_selectResult","_lastQueryWithDefinedData","_staleTimeoutId","_refetchIntervalId","_currentRefetchInterval","_trackedProps","bindMethods","shouldFetchOnMount","_executeFetch","updateResult","_updateTimers","shouldFetchOn","refetchOnWindowFocus","_clearStaleTimeout","_clearRefetchInterval","prevOptions","prevQuery","_updateQuery","mounted","shouldFetchOptionally","_updateStaleTimeout","nextRefetchInterval","_computeRefetchInterval","_updateRefetchInterval","getOptimisticResult","createResult","optimisticResult","shouldAssignObserverCurrentProperties","trackResult","onPropTracked","Proxy","trackProp","experimental_prefetchInRender","getCurrentQuery","_objectDestructuringEmpty","fetchOptimistic","_fetchOptions$cancelR","prevResult","prevResultState","prevResultOptions","queryInitialState","isPlaceholderData","_optimisticResults","fetchOnMount","fetchOptionally","skipSelect","placeholderData","selectError","isPending","isError","isLoading","nextResult","isSuccess","isInitialLoading","isFetched","isFetchedAfterMount","isRefetching","isLoadingError","isRefetchError","isEnabled","finalizeThenableIfPossible","recreateThenable","prevThenable","_notify","shouldNotifyListeners","notifyOnChangeProps","notifyOnChangePropsValue","includedProps","typedKey","refetchInterval","nextInterval","refetchIntervalInBackground","notifyOptions","retryOnMount","shouldLoadOnMount","refetchOnMount","createValue","isReset","clearReset","QueryErrorResetBoundaryContext","IsRestoringContext","errorResetBoundary","useBaseQuery","Observer","_client$getDefaultOpt","_client$getDefaultOpt2","_client$getDefaultOpt3","_client$getDefaultOpt4","isRestoring","_experimental_beforeQuery","MIN_SUSPENSE_TIME_MS","clamp","originalStaleTime","ensureSuspenseTimers","ensurePreventErrorBoundaryRetry","useClearResetErrorBoundary","isNewCacheEntry","shouldSubscribe","subscribed","onStoreChange","shouldSuspend","getHasError","_experimental_afterQuery","willFetch","_client$getQueryCache","useQuery","deepEqual","previousChains","getChains","CoreError","WagmiProviderNotFoundError","useConfig","_parameters$config","getWalletClient","_parameters$account","getConnectorClient","hashFn","filterQueryOptions","getWalletClientQueryKey","connectorUid","getAccount","addresses","isConnected","isConnecting","isDisconnected","useAccount","trackedKeys","trackedResult","useSyncExternalStoreWithTracked","onChange","aConnector","aRest","bConnector","watchAccount","useWalletClient","_parameters$connector2","_query$enabled","watchChainId","useChainId","activeConnector","_getWalletClientQuery","_queryKey$","scopeKey","_s","getWalletClientQueryOptions","addressRef","previousAddress","tanstack_useQuery","useGlobalWalletSignerClient","_account$addresses","useGlobalWalletSignerAccount","useAbstractClient","prevChains","watchChains","useChains","MutationObserver","_currentMutation","_mutateOptions","_updateResult","mutate","isIdle","useMutation","mutateOptions","mutateAsync","connectMutationOptions","previousConnectors","getConnectors","useConnectors","prevConnectors","watchConnectors","disconnectMutationOptions","_config$state$connect","previousConnections","getConnections","useConnections","watchConnections","useLoginWithAbstract","mutationOptions","_useMutation","previousStatus","connectAsync","useConnect","disconnectAsync","useDisconnect","login","logout","InvalidDecimalNumberError","parseEther","rounded","parseUnits","COINFLIP_ADDRESS","COINFLIP_ABI","choice","setChoice","setAmount","isFlipping","setIsFlipping","lastResult","setLastResult","contractBalance","setContractBalance","fetchContractBalance","_jsx","className","_jsxs","htmlFor","step","amountWei","attempts","maxAttempts","e1","txDetails","e2","decoded","player","won","_Fragment","WalletConnect","setIsLoading","isSigned","setIsSigned","handleGoBack","Coinflip","ReactDOM","getElementById","App"],"sourceRoot":""}